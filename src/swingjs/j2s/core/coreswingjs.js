(function(Clazz,Clazz_array,Clazz_assert,Clazz_clone,Clazz_exceptionOf,Clazz_forName,Clazz_getClass,Clazz_instanceOf,Clazz_load,Clazz_new_,Clazz_newClass,Clazz_newEnumConst,Clazz_newInstance,Clazz_newInterface,Clazz_newMeth,Clazz_newPackage,Clazz_super_){(function(){var P$=Clazz_newPackage("java.applet"),I$=[['java.net.URL','sun.applet.AppletAudioClip','java.util.Locale']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Applet", null, 'java.awt.Panel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
{

C$.prototype.resize = C$.prototype.resize$I$I;
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.stub = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'setStub$java_applet_AppletStub', function (stub) {
this.stub = stub;
});

Clazz_newMeth(C$, 'isActive', function () {
if (this.stub != null ) {
return this.stub.isActive();
} else {
return false;
}});

Clazz_newMeth(C$, 'getDocumentBase', function () {
return this.stub.getDocumentBase();
});

Clazz_newMeth(C$, 'getCodeBase', function () {
return this.stub.getCodeBase();
});

Clazz_newMeth(C$, 'getParameter$S', function (name) {
return this.stub.getParameter$S(name);
});

Clazz_newMeth(C$, 'getAppletContext', function () {
return this.stub.getAppletContext();
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
if (b) this.repaint();
});

Clazz_newMeth(C$, 'resize$I$I', function (width, height) {
if (this.stub == null ) this.resizeOriginal$I$I(width, height);
});

Clazz_newMeth(C$, 'resizeHTML$I$I', function (width, height) {
if (this.appletViewer != null ) this.appletViewer.html5Applet._resizeApplet(Clazz_array(Integer.TYPE, -1, [width, height]));
});

Clazz_newMeth(C$, 'resizeOriginal$I$I', function (width, height) {
var d = this.size();
if ((d.width != width) || (d.height != height) ) {
C$.superclazz.prototype.resize$I$I.apply(this, [width, height]);
if (this.stub != null ) {
this.stub.appletResize$I$I(width, height);
}}});

Clazz_newMeth(C$, 'resize$java_awt_Dimension', function (d) {
this.resize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'showStatus$S', function (msg) {
this.getAppletContext().showStatus$S(msg);
});

Clazz_newMeth(C$, 'getImage$java_net_URL', function (url) {
return this.getAppletContext().getImage$java_net_URL(url);
});

Clazz_newMeth(C$, 'getImage$java_net_URL$S', function (url, name) {
try {
return this.getImage$java_net_URL(Clazz_new_((I$[1]||$incl$(1)).c$$java_net_URL$S,[url, name]));
} catch (e) {
if (Clazz_exceptionOf(e, "java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'newAudioClip$java_net_URL', function (url) {
return Clazz_new_((I$[2]||$incl$(2)).c$$java_net_URL,[url]);
}, 1);

Clazz_newMeth(C$, 'getAudioClip$java_net_URL', function (url) {
return this.getAppletContext().getAudioClip$java_net_URL(url);
});

Clazz_newMeth(C$, 'getAudioClip$java_net_URL$S', function (url, name) {
try {
return this.getAudioClip$java_net_URL(Clazz_new_((I$[1]||$incl$(1)).c$$java_net_URL$S,[url, name]));
} catch (e) {
if (Clazz_exceptionOf(e, "java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getAppletInfo', function () {
return null;
});

Clazz_newMeth(C$, 'getLocale', function () {
var locale = C$.superclazz.prototype.getLocale.apply(this, []);
if (locale == null ) {
return (I$[3]||$incl$(3)).getDefault();
}return locale;
});

Clazz_newMeth(C$, 'getParameterInfo', function () {
return null;
});

Clazz_newMeth(C$, 'init', function () {
});

Clazz_newMeth(C$, 'start', function () {
});

Clazz_newMeth(C$, 'stop', function () {
});

Clazz_newMeth(C$, 'destroy', function () {
});
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.applet"),I$=[];
var C$=Clazz_newInterface(P$, "AppletContext");
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.applet"),I$=[];
var C$=Clazz_newInterface(P$, "AppletStub");
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "ActiveEvent");
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "Adjustable");
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "AWTEvent", null, 'java.util.EventObject');
C$.idnum = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.bdata = null;
this.id = 0;
this.num = 0;
this.consumed = false;
this.focusManagerIsDispatching = false;
this.isPosted = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.consumed = false;
this.focusManagerIsDispatching = false;
}, 1);

Clazz_newMeth(C$, 'getBData', function () {
return this.bdata;
});

Clazz_newMeth(C$, 'setBData$BA', function (bdata) {
this.bdata = bdata;
});

Clazz_newMeth(C$, 'c$$java_awt_Event', function (event) {
C$.c$$O$I.apply(this, [event.target, event.id]);
}, 1);

Clazz_newMeth(C$, 'c$$O$I', function (source, id) {
C$.superclazz.c$.apply(this, [source]);
C$.$init$.apply(this);
this.id = id;
this.num = ++C$.idnum;
switch (id) {
case 1001:
case 701:
case 601:
case 900:
this.consumed = true;
break;
default:
}
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, [null]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setSource$O', function (newSource) {
if (this.source === newSource ) {
return;
}var comp = null;
if (Clazz_instanceOf(newSource, "java.awt.Component")) {
comp = newSource;
while (comp != null  && comp.peer != null   && (Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer")) ){
comp = comp.parent;
}
}this.source = newSource;
});

Clazz_newMeth(C$, 'getID', function () {
return this.id;
});

Clazz_newMeth(C$, 'toString', function () {
var srcName = null;
if (Clazz_instanceOf(this.source, "java.awt.Component")) {
srcName = (this.source).getName();
}return this.getClass().getName() + "[" + this.paramString() + "] on " + (srcName != null  ? srcName : this.source) ;
});

Clazz_newMeth(C$, 'paramString', function () {
return "";
});

Clazz_newMeth(C$, 'consume', function () {
switch (this.id) {
case 401:
case 402:
case 501:
case 502:
case 503:
case 506:
case 504:
case 505:
case 507:
case 1100:
case 1101:
this.consumed = true;
break;
default:
}
});

Clazz_newMeth(C$, 'isConsumed', function () {
return this.consumed;
});

Clazz_newMeth(C$, 'copyPrivateDataInto$java_awt_AWTEvent', function (that) {
that.bdata = this.bdata;
});

Clazz_newMeth(C$, 'dispatched', function () {
});
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "AWTEventMulticaster", null, null, ['java.awt.event.ComponentListener', 'java.awt.event.ContainerListener', 'java.awt.event.FocusListener', 'java.awt.event.KeyListener', 'java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener', 'java.awt.event.WindowListener', 'java.awt.event.WindowFocusListener', 'java.awt.event.WindowStateListener', 'java.awt.event.ActionListener', 'java.awt.event.ItemListener', 'java.awt.event.AdjustmentListener', 'java.awt.event.TextListener', 'java.awt.event.InputMethodListener', 'java.awt.event.HierarchyListener', 'java.awt.event.HierarchyBoundsListener', 'java.awt.event.MouseWheelListener']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.a = null;
this.b = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_EventListener$java_util_EventListener', function (a, b) {
C$.$init$.apply(this);
this.a = a;
this.b = b;
}, 1);

Clazz_newMeth(C$, 'remove$java_util_EventListener', function (oldl) {
if (oldl === this.a ) return this.b;
if (oldl === this.b ) return this.a;
var a2 = C$.removeInternal$java_util_EventListener$java_util_EventListener(this.a, oldl);
var b2 = C$.removeInternal$java_util_EventListener$java_util_EventListener(this.b, oldl);
if (a2 === this.a  && b2 === this.b  ) {
return this;
}return C$.addInternal$java_util_EventListener$java_util_EventListener(a2, b2);
});

Clazz_newMeth(C$, 'componentResized$java_awt_event_ComponentEvent', function (e) {
(this.a).componentResized$java_awt_event_ComponentEvent(e);
(this.b).componentResized$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentMoved$java_awt_event_ComponentEvent', function (e) {
(this.a).componentMoved$java_awt_event_ComponentEvent(e);
(this.b).componentMoved$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentShown$java_awt_event_ComponentEvent', function (e) {
(this.a).componentShown$java_awt_event_ComponentEvent(e);
(this.b).componentShown$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentHidden$java_awt_event_ComponentEvent', function (e) {
(this.a).componentHidden$java_awt_event_ComponentEvent(e);
(this.b).componentHidden$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentAdded$java_awt_event_ContainerEvent', function (e) {
(this.a).componentAdded$java_awt_event_ContainerEvent(e);
(this.b).componentAdded$java_awt_event_ContainerEvent(e);
});

Clazz_newMeth(C$, 'componentRemoved$java_awt_event_ContainerEvent', function (e) {
(this.a).componentRemoved$java_awt_event_ContainerEvent(e);
(this.b).componentRemoved$java_awt_event_ContainerEvent(e);
});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent', function (e) {
(this.a).focusGained$java_awt_event_FocusEvent(e);
(this.b).focusGained$java_awt_event_FocusEvent(e);
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent', function (e) {
(this.a).focusLost$java_awt_event_FocusEvent(e);
(this.b).focusLost$java_awt_event_FocusEvent(e);
});

Clazz_newMeth(C$, 'keyTyped$java_awt_event_KeyEvent', function (e) {
(this.a).keyTyped$java_awt_event_KeyEvent(e);
(this.b).keyTyped$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'keyPressed$java_awt_event_KeyEvent', function (e) {
(this.a).keyPressed$java_awt_event_KeyEvent(e);
(this.b).keyPressed$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'keyReleased$java_awt_event_KeyEvent', function (e) {
(this.a).keyReleased$java_awt_event_KeyEvent(e);
(this.b).keyReleased$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent', function (e) {
(this.a).mouseClicked$java_awt_event_MouseEvent(e);
(this.b).mouseClicked$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent', function (e) {
(this.a).mousePressed$java_awt_event_MouseEvent(e);
(this.b).mousePressed$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent', function (e) {
(this.a).mouseReleased$java_awt_event_MouseEvent(e);
(this.b).mouseReleased$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent', function (e) {
(this.a).mouseEntered$java_awt_event_MouseEvent(e);
(this.b).mouseEntered$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent', function (e) {
(this.a).mouseExited$java_awt_event_MouseEvent(e);
(this.b).mouseExited$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent', function (e) {
(this.a).mouseDragged$java_awt_event_MouseEvent(e);
(this.b).mouseDragged$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent', function (e) {
(this.a).mouseMoved$java_awt_event_MouseEvent(e);
(this.b).mouseMoved$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent', function (e) {
(this.a).windowOpened$java_awt_event_WindowEvent(e);
(this.b).windowOpened$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent', function (e) {
(this.a).windowClosing$java_awt_event_WindowEvent(e);
(this.b).windowClosing$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent', function (e) {
(this.a).windowClosed$java_awt_event_WindowEvent(e);
(this.b).windowClosed$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent', function (e) {
(this.a).windowIconified$java_awt_event_WindowEvent(e);
(this.b).windowIconified$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent', function (e) {
(this.a).windowDeiconified$java_awt_event_WindowEvent(e);
(this.b).windowDeiconified$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent', function (e) {
(this.a).windowActivated$java_awt_event_WindowEvent(e);
(this.b).windowActivated$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent', function (e) {
(this.a).windowDeactivated$java_awt_event_WindowEvent(e);
(this.b).windowDeactivated$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowStateChanged$java_awt_event_WindowEvent', function (e) {
(this.a).windowStateChanged$java_awt_event_WindowEvent(e);
(this.b).windowStateChanged$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowGainedFocus$java_awt_event_WindowEvent', function (e) {
(this.a).windowGainedFocus$java_awt_event_WindowEvent(e);
(this.b).windowGainedFocus$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowLostFocus$java_awt_event_WindowEvent', function (e) {
(this.a).windowLostFocus$java_awt_event_WindowEvent(e);
(this.b).windowLostFocus$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (e) {
(this.a).actionPerformed$java_awt_event_ActionEvent(e);
(this.b).actionPerformed$java_awt_event_ActionEvent(e);
});

Clazz_newMeth(C$, 'itemStateChanged$java_awt_event_ItemEvent', function (e) {
(this.a).itemStateChanged$java_awt_event_ItemEvent(e);
(this.b).itemStateChanged$java_awt_event_ItemEvent(e);
});

Clazz_newMeth(C$, 'adjustmentValueChanged$java_awt_event_AdjustmentEvent', function (e) {
(this.a).adjustmentValueChanged$java_awt_event_AdjustmentEvent(e);
(this.b).adjustmentValueChanged$java_awt_event_AdjustmentEvent(e);
});

Clazz_newMeth(C$, 'textValueChanged$java_awt_event_TextEvent', function (e) {
(this.a).textValueChanged$java_awt_event_TextEvent(e);
(this.b).textValueChanged$java_awt_event_TextEvent(e);
});

Clazz_newMeth(C$, 'inputMethodTextChanged$java_awt_event_InputMethodEvent', function (e) {
(this.a).inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
(this.b).inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
});

Clazz_newMeth(C$, 'caretPositionChanged$java_awt_event_InputMethodEvent', function (e) {
(this.a).caretPositionChanged$java_awt_event_InputMethodEvent(e);
(this.b).caretPositionChanged$java_awt_event_InputMethodEvent(e);
});

Clazz_newMeth(C$, 'hierarchyChanged$java_awt_event_HierarchyEvent', function (e) {
(this.a).hierarchyChanged$java_awt_event_HierarchyEvent(e);
(this.b).hierarchyChanged$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'ancestorMoved$java_awt_event_HierarchyEvent', function (e) {
(this.a).ancestorMoved$java_awt_event_HierarchyEvent(e);
(this.b).ancestorMoved$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'ancestorResized$java_awt_event_HierarchyEvent', function (e) {
(this.a).ancestorResized$java_awt_event_HierarchyEvent(e);
(this.b).ancestorResized$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'mouseWheelMoved$java_awt_event_MouseWheelEvent', function (e) {
(this.a).mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
(this.b).mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
});

Clazz_newMeth(C$, 'add$java_awt_event_ComponentListener$java_awt_event_ComponentListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ContainerListener$java_awt_event_ContainerListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_FocusListener$java_awt_event_FocusListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_KeyListener$java_awt_event_KeyListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseListener$java_awt_event_MouseListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowListener$java_awt_event_WindowListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ActionListener$java_awt_event_ActionListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ItemListener$java_awt_event_ItemListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_AdjustmentListener$java_awt_event_AdjustmentListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_TextListener$java_awt_event_TextListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener', function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ComponentListener$java_awt_event_ComponentListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ContainerListener$java_awt_event_ContainerListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_FocusListener$java_awt_event_FocusListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_KeyListener$java_awt_event_KeyListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseListener$java_awt_event_MouseListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowListener$java_awt_event_WindowListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ActionListener$java_awt_event_ActionListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ItemListener$java_awt_event_ItemListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_AdjustmentListener$java_awt_event_AdjustmentListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_TextListener$java_awt_event_TextListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener', function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'addInternal$java_util_EventListener$java_util_EventListener', function (a, b) {
if (a == null ) return b;
if (b == null ) return a;
return Clazz_new_(C$.c$$java_util_EventListener$java_util_EventListener,[a, b]);
}, 1);

Clazz_newMeth(C$, 'removeInternal$java_util_EventListener$java_util_EventListener', function (l, oldl) {
if (l === oldl  || l == null  ) {
return null;
} else if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
return (l).remove$java_util_EventListener(oldl);
} else {
return l;
}}, 1);

Clazz_newMeth(C$, 'getListenerCount$java_util_EventListener$Class', function (l, listenerType) {
if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
var mc = l;
return C$.getListenerCount$java_util_EventListener$Class(mc.a, listenerType) + C$.getListenerCount$java_util_EventListener$Class(mc.b, listenerType);
} else {
return listenerType.isInstance$O(l) ? 1 : 0;
}}, 1);

Clazz_newMeth(C$, 'populateListenerArray$java_util_EventListenerA$java_util_EventListener$I', function (a, l, index) {
if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
var mc = l;
var lhs = C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(a, mc.a, index);
return C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(a, mc.b, lhs);
} else if (a.getClass().getComponentType().isInstance$O(l)) {
a[index] = l;
return index + 1;
} else {
return index;
}}, 1);

Clazz_newMeth(C$, 'getListeners$java_util_EventListener$Class', function (l, listenerType) {
if (listenerType == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Listener type should not be null"]);
}var n = C$.getListenerCount$java_util_EventListener$Class(l, listenerType);
var result = Clazz_array(listenerType, n);
C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(result, l, 0);
return result;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.Arrays']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BasicStroke", null, null, ['java.awt.Stroke', 'Cloneable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.width = 0;
this.join = 0;
this.cap = 0;
this.miterlimit = 0;
this.dash = null;
this.dash_phase = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$F$I$I$F$FA$F', function (width, cap, join, miterlimit, dash, dash_phase) {
C$.$init$.apply(this);
if (width < 0.0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["negative width"]);
}if (cap != 0 && cap != 1  && cap != 2 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal end cap value"]);
}if (join == 0) {
if (miterlimit < 1.0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["miter limit < 1"]);
}} else if (join != 1 && join != 2 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal line join value"]);
}if (dash != null ) {
if (dash_phase < 0.0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["negative dash phase"]);
}var allzero = true;
for (var i = 0; i < dash.length; i++) {
var d = dash[i];
if (d > 0.0 ) {
allzero = false;
} else if (d < 0.0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["negative dash length"]);
}}
if (allzero) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["dash lengths all zero"]);
}}this.width = width;
this.cap = cap;
this.join = join;
this.miterlimit = miterlimit;
if (dash != null ) {
this.dash = dash.clone();
}this.dash_phase = dash_phase;
}, 1);

Clazz_newMeth(C$, 'c$$F$I$I$F', function (width, cap, join, miterlimit) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, cap, join, miterlimit, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F$I$I', function (width, cap, join) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, cap, join, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F', function (width) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, 2, 0, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$F$I$I$F$FA$F.apply(this, [1.0, 2, 0, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'createStrokedShape$java_awt_Shape', function (s) {
return s;
});

Clazz_newMeth(C$, 'getLineWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getEndCap', function () {
return this.cap;
});

Clazz_newMeth(C$, 'getLineJoin', function () {
return this.join;
});

Clazz_newMeth(C$, 'getMiterLimit', function () {
return this.miterlimit;
});

Clazz_newMeth(C$, 'getDashArray', function () {
if (this.dash == null ) {
return null;
}return this.dash.clone();
});

Clazz_newMeth(C$, 'getDashPhase', function () {
return this.dash_phase;
});

Clazz_newMeth(C$, 'hashCode', function () {
var hash = Float.floatToIntBits(this.width);
hash = hash * 31 + this.join;
hash = hash * 31 + this.cap;
hash = hash * 31 + Float.floatToIntBits(this.miterlimit);
if (this.dash != null ) {
hash = hash * 31 + Float.floatToIntBits(this.dash_phase);
for (var i = 0; i < this.dash.length; i++) {
hash = hash * 31 + Float.floatToIntBits(this.dash[i]);
}
}return hash;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.BasicStroke"))) {
return false;
}var bs = obj;
if (this.width != bs.width ) {
return false;
}if (this.join != bs.join) {
return false;
}if (this.cap != bs.cap) {
return false;
}if (this.miterlimit != bs.miterlimit ) {
return false;
}if (this.dash != null ) {
if (this.dash_phase != bs.dash_phase ) {
return false;
}if (!(I$[1]||$incl$(1)).equals$FA$FA(this.dash, bs.dash)) {
return false;
}} else if (bs.dash != null ) {
return false;
}return true;
});

Clazz_newMeth(C$, 'clone', function () {
return Clazz_new_(C$.c$$F$I$I$F$FA$F,[this.width, this.cap, this.join, this.miterlimit, this.dash, this.dash_phase]);
});
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BorderLayout", null, null, ['java.awt.LayoutManager2', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.hgap = 0;
this.vgap = 0;
this.north = null;
this.west = null;
this.east = null;
this.south = null;
this.center = null;
this.firstLine = null;
this.lastLine = null;
this.firstItem = null;
this.lastItem = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (hgap, vgap) {
C$.$init$.apply(this);
this.hgap = hgap;
this.vgap = vgap;
}, 1);

Clazz_newMeth(C$, 'getHgap', function () {
return this.hgap;
});

Clazz_newMeth(C$, 'setHgap$I', function (hgap) {
this.hgap = hgap;
});

Clazz_newMeth(C$, 'getVgap', function () {
return this.vgap;
});

Clazz_newMeth(C$, 'setVgap$I', function (vgap) {
this.vgap = vgap;
});

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O', function (comp, constraints) {
{
if ((constraints == null ) || (Clazz_instanceOf(constraints, "java.lang.String")) ) {
this.addLayoutComponent$S$java_awt_Component(constraints, comp);
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["cannot add to layout: constraint must be a string (or null)"]);
}}});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component', function (name, comp) {
{
if (name == null ) {
name = "Center";
}if ("Center".equals$O(name)) {
this.center = comp;
} else if ("North".equals$O(name)) {
this.north = comp;
} else if ("South".equals$O(name)) {
this.south = comp;
} else if ("East".equals$O(name)) {
this.east = comp;
} else if ("West".equals$O(name)) {
this.west = comp;
} else if ("First".equals$O(name)) {
this.firstLine = comp;
} else if ("Last".equals$O(name)) {
this.lastLine = comp;
} else if ("Before".equals$O(name)) {
this.firstItem = comp;
} else if ("After".equals$O(name)) {
this.lastItem = comp;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["cannot add to layout: unknown constraint: " + name]);
}}});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component', function (comp) {
{
if (comp === this.center ) {
this.center = null;
} else if (comp === this.north ) {
this.north = null;
} else if (comp === this.south ) {
this.south = null;
} else if (comp === this.east ) {
this.east = null;
} else if (comp === this.west ) {
this.west = null;
}if (comp === this.firstLine ) {
this.firstLine = null;
} else if (comp === this.lastLine ) {
this.lastLine = null;
} else if (comp === this.firstItem ) {
this.firstItem = null;
} else if (comp === this.lastItem ) {
this.lastItem = null;
}}});

Clazz_newMeth(C$, 'getLayoutComponent$O', function (constraints) {
if ("Center".equals$O(constraints)) {
return this.center;
} else if ("North".equals$O(constraints)) {
return this.north;
} else if ("South".equals$O(constraints)) {
return this.south;
} else if ("West".equals$O(constraints)) {
return this.west;
} else if ("East".equals$O(constraints)) {
return this.east;
} else if ("First".equals$O(constraints)) {
return this.firstLine;
} else if ("Last".equals$O(constraints)) {
return this.lastLine;
} else if ("Before".equals$O(constraints)) {
return this.firstItem;
} else if ("After".equals$O(constraints)) {
return this.lastItem;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["cannot get component: unknown constraint: " + constraints]);
}});

Clazz_newMeth(C$, 'getLayoutComponent$java_awt_Container$O', function (target, constraints) {
var ltr = target.getComponentOrientation().isLeftToRight();
var result = null;
if ("North".equals$O(constraints)) {
result = (this.firstLine != null ) ? this.firstLine : this.north;
} else if ("South".equals$O(constraints)) {
result = (this.lastLine != null ) ? this.lastLine : this.south;
} else if ("West".equals$O(constraints)) {
result = ltr ? this.firstItem : this.lastItem;
if (result == null ) {
result = this.west;
}} else if ("East".equals$O(constraints)) {
result = ltr ? this.lastItem : this.firstItem;
if (result == null ) {
result = this.east;
}} else if ("Center".equals$O(constraints)) {
result = this.center;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["cannot get component: invalid constraint: " + constraints]);
}return result;
});

Clazz_newMeth(C$, 'getConstraints$java_awt_Component', function (comp) {
if (comp == null ) {
return null;
}if (comp === this.center ) {
return "Center";
} else if (comp === this.north ) {
return "North";
} else if (comp === this.south ) {
return "South";
} else if (comp === this.west ) {
return "West";
} else if (comp === this.east ) {
return "East";
} else if (comp === this.firstLine ) {
return "First";
} else if (comp === this.lastLine ) {
return "Last";
} else if (comp === this.firstItem ) {
return "Before";
} else if (comp === this.lastItem ) {
return "After";
}return null;
});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container', function (target) {
{
var dim = Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
var ltr = target.getComponentOrientation().isLeftToRight();
var c = null;
if ((c = p$.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
var d = c.getMinimumSize();
dim.width = dim.width+(d.width + this.hgap);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
var d = c.getMinimumSize();
dim.width = dim.width+(d.width + this.hgap);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
var d = c.getMinimumSize();
dim.width = dim.width+(d.width);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
var d = c.getMinimumSize();
dim.width = Math.max(d.width, dim.width);
dim.height = dim.height+(d.height + this.vgap);
}if ((c = p$.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
var d = c.getMinimumSize();
dim.width = Math.max(d.width, dim.width);
dim.height = dim.height+(d.height + this.vgap);
}var insets = target.getInsets();
dim.width = dim.width+(insets.left + insets.right);
dim.height = dim.height+(insets.top + insets.bottom);
return dim;
}});

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container', function (target) {
{
var dim = Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
var ltr = target.getComponentOrientation().isLeftToRight();
var c = null;
if ((c = p$.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
var d = c.getPreferredSize();
dim.width = dim.width+(d.width + this.hgap);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
var d = c.getPreferredSize();
dim.width = dim.width+(d.width + this.hgap);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
var d = c.getPreferredSize();
dim.width = dim.width+(d.width);
dim.height = Math.max(d.height, dim.height);
}if ((c = p$.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
var d = c.getPreferredSize();
dim.width = Math.max(d.width, dim.width);
dim.height = dim.height+(d.height + this.vgap);
}if ((c = p$.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
var d = c.getPreferredSize();
dim.width = Math.max(d.width, dim.width);
dim.height = dim.height+(d.height + this.vgap);
}var insets = target.getInsets();
dim.width = dim.width+(insets.left + insets.right);
dim.height = dim.height+(insets.top + insets.bottom);
return dim;
}});

Clazz_newMeth(C$, 'maximumLayoutSize$java_awt_Container', function (target) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[2147483647, 2147483647]);
});

Clazz_newMeth(C$, 'getLayoutAlignmentX$java_awt_Container', function (parent) {
return 0.5;
});

Clazz_newMeth(C$, 'getLayoutAlignmentY$java_awt_Container', function (parent) {
return 0.5;
});

Clazz_newMeth(C$, 'invalidateLayout$java_awt_Container', function (target) {
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container', function (target) {
{
var insets = target.getInsets();
var top = insets.top;
var bottom = target.height - insets.bottom;
var left = insets.left;
var right = target.width - insets.right;
var ltr = target.getComponentOrientation().isLeftToRight();
var c = null;
if ((c = p$.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
c.setSize$I$I(right - left, c.height);
var d = c.getPreferredSize();
c.setBounds$I$I$I$I(left, top, right - left, d.height);
top = top+(d.height + this.vgap);
}if ((c = p$.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
c.setSize$I$I(right - left, c.height);
var d = c.getPreferredSize();
c.setBounds$I$I$I$I(left, bottom - d.height, right - left, d.height);
bottom = bottom-(d.height + this.vgap);
}if ((c = p$.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
c.setSize$I$I(c.width, bottom - top);
var d = c.getPreferredSize();
c.setBounds$I$I$I$I(right - d.width, top, d.width, bottom - top);
right = right-(d.width + this.hgap);
}if ((c = p$.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
c.setSize$I$I(c.width, bottom - top);
var d = c.getPreferredSize();
c.setBounds$I$I$I$I(left, top, d.width, bottom - top);
left = left+(d.width + this.hgap);
}if ((c = p$.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
c.setBounds$I$I$I$I(left, top, right - left, bottom - top);
}}});

Clazz_newMeth(C$, 'getChild$S$Z', function (key, ltr) {
var result = null;
if (key == "North") {
result = (this.firstLine != null ) ? this.firstLine : this.north;
} else if (key == "South") {
result = (this.lastLine != null ) ? this.lastLine : this.south;
} else if (key == "West") {
result = ltr ? this.firstItem : this.lastItem;
if (result == null ) {
result = this.west;
}} else if (key == "East") {
result = ltr ? this.lastItem : this.firstItem;
if (result == null ) {
result = this.east;
}} else if (key == "Center") {
result = this.center;
}if (result != null  && !result.visible ) {
result = null;
}return result;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[hgap=" + this.hgap + ",vgap=" + this.vgap + "]" ;
});
})();
//Created 2018-05-15 01:01:48
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.ColorPaintContext']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Color", null, null, 'java.awt.Paint');
C$.white = null;
C$.WHITE = null;
C$.lightGray = null;
C$.LIGHT_GRAY = null;
C$.gray = null;
C$.GRAY = null;
C$.darkGray = null;
C$.DARK_GRAY = null;
C$.black = null;
C$.BLACK = null;
C$.red = null;
C$.RED = null;
C$.pink = null;
C$.PINK = null;
C$.orange = null;
C$.ORANGE = null;
C$.yellow = null;
C$.YELLOW = null;
C$.green = null;
C$.GREEN = null;
C$.magenta = null;
C$.MAGENTA = null;
C$.cyan = null;
C$.CYAN = null;
C$.blue = null;
C$.BLUE = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.white = Clazz_new_(C$.c$$I$I$I,[255, 255, 255]);
C$.WHITE = C$.white;
C$.lightGray = Clazz_new_(C$.c$$I$I$I,[192, 192, 192]);
C$.LIGHT_GRAY = C$.lightGray;
C$.gray = Clazz_new_(C$.c$$I$I$I,[128, 128, 128]);
C$.GRAY = C$.gray;
C$.darkGray = Clazz_new_(C$.c$$I$I$I,[64, 64, 64]);
C$.DARK_GRAY = C$.darkGray;
C$.black = Clazz_new_(C$.c$$I$I$I,[0, 0, 0]);
C$.BLACK = C$.black;
C$.red = Clazz_new_(C$.c$$I$I$I,[255, 0, 0]);
C$.RED = C$.red;
C$.pink = Clazz_new_(C$.c$$I$I$I,[255, 175, 175]);
C$.PINK = C$.pink;
C$.orange = Clazz_new_(C$.c$$I$I$I,[255, 200, 0]);
C$.ORANGE = C$.orange;
C$.yellow = Clazz_new_(C$.c$$I$I$I,[255, 255, 0]);
C$.YELLOW = C$.yellow;
C$.green = Clazz_new_(C$.c$$I$I$I,[0, 255, 0]);
C$.GREEN = C$.green;
C$.magenta = Clazz_new_(C$.c$$I$I$I,[255, 0, 255]);
C$.MAGENTA = C$.magenta;
C$.cyan = Clazz_new_(C$.c$$I$I$I,[0, 255, 255]);
C$.CYAN = C$.cyan;
C$.blue = Clazz_new_(C$.c$$I$I$I,[0, 0, 255]);
C$.BLUE = C$.blue;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.value = 0;
this.frgbvalue = null;
this.falpha = 0;
this.context = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.frgbvalue = null;
this.falpha = 0.0;
}, 1);

Clazz_newMeth(C$, 'testColorValueRange$I$I$I$I', function (r, g, b, a) {
var rangeError = false;
var badComponentString = "";
if (a < 0 || a > 255 ) {
rangeError = true;
badComponentString = badComponentString + " Alpha";
}if (r < 0 || r > 255 ) {
rangeError = true;
badComponentString = badComponentString + " Red";
}if (g < 0 || g > 255 ) {
rangeError = true;
badComponentString = badComponentString + " Green";
}if (b < 0 || b > 255 ) {
rangeError = true;
badComponentString = badComponentString + " Blue";
}if (rangeError == true ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Color parameter outside of expected range:" + badComponentString]);
}}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I', function (r, g, b) {
C$.c$$I$I$I$I.apply(this, [r, g, b, 255]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (r, g, b, a) {
C$.$init$.apply(this);
this.value = ((a & 255) << 24) | ((r & 255) << 16) | ((g & 255) << 8) | ((b & 255) << 0) ;
C$.testColorValueRange$I$I$I$I(r, g, b, a);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (rgb) {
C$.$init$.apply(this);
this.value = -16777216 | rgb;
}, 1);

Clazz_newMeth(C$, 'c$$I$Z', function (rgba, hasalpha) {
C$.$init$.apply(this);
if (hasalpha) {
this.value = rgba;
} else {
this.value = -16777216 | rgba;
}}, 1);

Clazz_newMeth(C$, 'c$$F$F$F', function (r, g, b) {
C$.c$$F$F$F$F.apply(this, [r, g, b, 1.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F', function (r, g, b, a) {
C$.c$$I$I$I$I.apply(this, [((r * 255 + 0.5)|0), ((g * 255 + 0.5)|0), ((b * 255 + 0.5)|0), ((a * 255 + 0.5)|0)]);
this.frgbvalue = Clazz_array(Float.TYPE, [3]);
this.frgbvalue[0] = r;
this.frgbvalue[1] = g;
this.frgbvalue[2] = b;
this.falpha = a;
}, 1);

Clazz_newMeth(C$, 'getRed', function () {
return (this.getRGB() >> 16) & 255;
});

Clazz_newMeth(C$, 'getGreen', function () {
return (this.getRGB() >> 8) & 255;
});

Clazz_newMeth(C$, 'getBlue', function () {
return (this.getRGB() >> 0) & 255;
});

Clazz_newMeth(C$, 'getAlpha', function () {
return (this.getRGB() >> 24) & 255;
});

Clazz_newMeth(C$, 'getRGB', function () {
return this.value;
});

Clazz_newMeth(C$, 'brighter', function () {
var r = this.getRed();
var g = this.getGreen();
var b = this.getBlue();
var i = 3;
if (r == 0 && g == 0  && b == 0 ) {
return Clazz_new_(C$.c$$I$I$I,[i, i, i]);
}if (r > 0 && r < i ) r = i;
if (g > 0 && g < i ) g = i;
if (b > 0 && b < i ) b = i;
return Clazz_new_(C$.c$$I$I$I,[Math.min(((r / 0.7)|0), 255), Math.min(((g / 0.7)|0), 255), Math.min(((b / 0.7)|0), 255)]);
});

Clazz_newMeth(C$, 'darker', function () {
return Clazz_new_(C$.c$$I$I$I,[Math.max(((this.getRed() * 0.7)|0), 0), Math.max(((this.getGreen() * 0.7)|0), 0), Math.max(((this.getBlue() * 0.7)|0), 0)]);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.value;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
return Clazz_instanceOf(obj, "java.awt.Color") && (obj).getRGB() == this.getRGB() ;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[r=" + this.getRed() + ",g=" + this.getGreen() + ",b=" + this.getBlue() + "]" ;
});

Clazz_newMeth(C$, 'decode$S', function (nm) {
var intval = Integer.decode(nm);
var i = intval.intValue();
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, i & 255]);
}, 1);

Clazz_newMeth(C$, 'getColor$S', function (nm) {
return C$.getColor$S$java_awt_Color(nm, null);
}, 1);

Clazz_newMeth(C$, 'getColor$S$java_awt_Color', function (nm, v) {
try {
var i = (Integer.decode(nm)).intValue();
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, i & 255]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.NumberFormatException")){
return v;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getColor$S$I', function (nm, v) {
var intval = Integer.getInteger(nm);
var i = (intval != null ) ? intval.intValue() : v;
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, (i >> 0) & 255]);
}, 1);

Clazz_newMeth(C$, 'HSBtoRGB$F$F$F', function (hue, saturation, brightness) {
var r = 0;
var g = 0;
var b = 0;
if (saturation == 0 ) {
r = g = b = ((brightness * 255.0 + 0.5)|0);
} else {
var h = (hue - Math.floor(hue)) * 6.0;
var f = h - java.lang.Math.floor(h);
var p = brightness * (1.0 - saturation);
var q = brightness * (1.0 - saturation * f);
var t = brightness * (1.0 - (saturation * (1.0 - f)));
switch ((h|0)) {
case 0:
r = ((brightness * 255.0 + 0.5)|0);
g = ((t * 255.0 + 0.5)|0);
b = ((p * 255.0 + 0.5)|0);
break;
case 1:
r = ((q * 255.0 + 0.5)|0);
g = ((brightness * 255.0 + 0.5)|0);
b = ((p * 255.0 + 0.5)|0);
break;
case 2:
r = ((p * 255.0 + 0.5)|0);
g = ((brightness * 255.0 + 0.5)|0);
b = ((t * 255.0 + 0.5)|0);
break;
case 3:
r = ((p * 255.0 + 0.5)|0);
g = ((q * 255.0 + 0.5)|0);
b = ((brightness * 255.0 + 0.5)|0);
break;
case 4:
r = ((t * 255.0 + 0.5)|0);
g = ((p * 255.0 + 0.5)|0);
b = ((brightness * 255.0 + 0.5)|0);
break;
case 5:
r = ((brightness * 255.0 + 0.5)|0);
g = ((p * 255.0 + 0.5)|0);
b = ((q * 255.0 + 0.5)|0);
break;
}
}return -16777216 | (r << 16) | (g << 8) | (b << 0) ;
}, 1);

Clazz_newMeth(C$, 'RGBtoHSB$I$I$I$FA', function (r, g, b, hsbvals) {
var hue;
var saturation;
var brightness;
if (hsbvals == null ) {
hsbvals = Clazz_array(Float.TYPE, [3]);
}var cmax = (r > g) ? r : g;
if (b > cmax) cmax = b;
var cmin = (r < g) ? r : g;
if (b < cmin) cmin = b;
brightness = (cmax) / 255.0;
if (cmax != 0) saturation = ((cmax - cmin)) / (cmax);
 else saturation = 0;
if (saturation == 0 ) hue = 0;
 else {
var redc = ((cmax - r)) / ((cmax - cmin));
var greenc = ((cmax - g)) / ((cmax - cmin));
var bluec = ((cmax - b)) / ((cmax - cmin));
if (r == cmax) hue = bluec - greenc;
 else if (g == cmax) hue = 2.0 + redc - bluec;
 else hue = 4.0 + greenc - redc;
hue = hue / 6.0;
if (hue < 0 ) hue = hue + 1.0;
}hsbvals[0] = hue;
hsbvals[1] = saturation;
hsbvals[2] = brightness;
return hsbvals;
}, 1);

Clazz_newMeth(C$, 'getHSBColor$F$F$F', function (h, s, b) {
return Clazz_new_(C$.c$$I,[C$.HSBtoRGB$F$F$F(h, s, b)]);
}, 1);

Clazz_newMeth(C$, 'getRGBComponents$FA', function (compArray) {
var f;
if (compArray == null ) {
f = Clazz_array(Float.TYPE, [4]);
} else {
f = compArray;
}if (this.frgbvalue == null ) {
f[0] = (this.getRed()) / 255.0;
f[1] = (this.getGreen()) / 255.0;
f[2] = (this.getBlue()) / 255.0;
f[3] = (this.getAlpha()) / 255.0;
} else {
f[0] = this.frgbvalue[0];
f[1] = this.frgbvalue[1];
f[2] = this.frgbvalue[2];
f[3] = this.falpha;
}return f;
});

Clazz_newMeth(C$, 'getRGBColorComponents$FA', function (compArray) {
var f;
if (compArray == null ) {
f = Clazz_array(Float.TYPE, [3]);
} else {
f = compArray;
}if (this.frgbvalue == null ) {
f[0] = (this.getRed()) / 255.0;
f[1] = (this.getGreen()) / 255.0;
f[2] = (this.getBlue()) / 255.0;
} else {
f[0] = this.frgbvalue[0];
f[1] = this.frgbvalue[1];
f[2] = this.frgbvalue[2];
}return f;
});

Clazz_newMeth(C$, 'getComponents$FA', function (compArray) {
if (this.frgbvalue == null ) return this.getRGBComponents$FA(compArray);
var f;
var n = this.frgbvalue.length;
if (compArray == null ) {
f = Clazz_array(Float.TYPE, [n + 1]);
} else {
f = compArray;
}for (var i = 0; i < n; i++) {
f[i] = this.frgbvalue[i];
}
f[n] = this.falpha;
return f;
});

Clazz_newMeth(C$, 'createContext$java_awt_image_ColorModel$java_awt_Rectangle$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform$java_awt_RenderingHints', function (cm, r, r2d, xform, hints) {
if (this.context == null  || this.context.getRGB() != this.getRGB() ) {
this.context = Clazz_new_((I$[1]||$incl$(1)).c$$I$java_awt_image_ColorModel,[this.getRGB(), cm]);
}return this.context;
});

Clazz_newMeth(C$, 'getTransparency', function () {
var alpha = this.getAlpha();
if (alpha == 255) {
return 1;
} else if (alpha == 0) {
return 2;
} else {
return 3;
}});
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.HashMap','java.awt.ComponentOrientation','sun.awt.AppContext','swingjs.JSToolkit','java.awt.Toolkit','java.awt.Point','java.awt.event.ComponentEvent','java.util.Locale','java.awt.Dimension','java.awt.Rectangle',['java.awt.Component','.BaselineResizeBehavior'],'java.awt.Cursor','java.awt.event.PaintEvent','java.awt.EventQueue','java.awt.event.MouseWheelEvent','java.awt.AWTEventMulticaster','java.awt.event.ComponentListener','java.awt.event.FocusListener','java.awt.event.HierarchyListener','java.awt.event.HierarchyEvent','java.awt.event.HierarchyBoundsListener','java.awt.event.KeyListener','java.awt.event.MouseListener','java.awt.event.MouseMotionListener','java.awt.event.MouseWheelListener','java.awt.event.InputMethodListener','java.beans.PropertyChangeListener','Boolean','java.beans.PropertyChangeSupport','sun.awt.SunToolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Component", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'java.awt.image.ImageObserver');
C$.isInc = false;
C$.incRate = 0;
var p$=C$.prototype;
C$.coalesceMap = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.coalesceMap = Clazz_new_((I$[1]||$incl$(1)));
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.peer = null;
this.parent = null;
this.appContext = null;
this.x = 0;
this.y = 0;
this.width = 0;
this.height = 0;
this.foreground = null;
this.background = null;
this.font = null;
this.peerFont = null;
this.cursor = null;
this.locale = null;
this.visible = false;
this.enabled = false;
this.valid = false;
this.popups = null;
this.name = null;
this.nameExplicitlySet = false;
this.focusable = false;
this.$isFocusTraversableOverridden = 0;
this.focusTraversalKeysEnabled = false;
this.minSize = null;
this.minSizeSet = false;
this.prefSize = null;
this.prefSizeSet = false;
this.maxSize = null;
this.maxSizeSet = false;
this.componentOrientation = null;
this.newEventsOnly = false;
this.componentListener = null;
this.focusListener = null;
this.hierarchyListener = null;
this.hierarchyBoundsListener = null;
this.keyListener = null;
this.mouseListener = null;
this.mouseMotionListener = null;
this.mouseWheelListener = null;
this.inputMethodListener = null;
this.windowClosingException = null;
this.eventMask = 0;
this.changeSupport = null;
this.changeSupportLock = null;
this.isPacked = false;
this.boundsOp = 0;
this.isAddNotifyComplete = false;
this.backgroundEraseDisabled = false;
this.dropTarget = null;
this.graphicsConfig = null;
this.eventCache = null;
this.coalescingEnabled = false;
this.autoFocusTransferOnDisposal = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.visible = true;
this.enabled = true;
this.valid = false;
this.nameExplicitlySet = false;
this.focusable = true;
this.$isFocusTraversableOverridden = 0;
this.focusTraversalKeysEnabled = false;
this.componentOrientation = (I$[2]||$incl$(2)).UNKNOWN;
this.newEventsOnly = false;
this.windowClosingException = null;
this.eventMask = 4096;
this.changeSupportLock =  Clazz_new_();
this.isPacked = false;
this.boundsOp = 3;
this.isAddNotifyComplete = false;
this.coalescingEnabled = p$.checkCoalescing.apply(this, []);
this.autoFocusTransferOnDisposal = true;
}, 1);

Clazz_newMeth(C$, 'getAppContext', function () {
return this.appContext;
});

Clazz_newMeth(C$, 'getChangeSupportLock', function () {
return this.changeSupportLock;
});

Clazz_newMeth(C$, 'getBoundsOp', function () {
return this.boundsOp;
});

Clazz_newMeth(C$, 'setBoundsOp$I', function (op) {
if (op == 5) {
this.boundsOp = 3;
} else if (this.boundsOp == 3) {
this.boundsOp = op;
}});

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.setAppContext();
}, 1);

Clazz_newMeth(C$, 'setAppContext', function () {
this.appContext = (I$[3]||$incl$(3)).getAppContext();
});

Clazz_newMeth(C$, 'constructComponentName', function () {
return null;
});

Clazz_newMeth(C$, 'getName', function () {
if (this.name == null  && !this.nameExplicitlySet ) {
{
if (this.name == null  && !this.nameExplicitlySet ) this.name = this.constructComponentName();
}}return this.name;
});

Clazz_newMeth(C$, 'setName$S', function (name) {
var oldName;
{
oldName = this.name;
this.name = name;
this.nameExplicitlySet = true;
}this.firePropertyChange$S$O$O("name", oldName, name);
});

Clazz_newMeth(C$, 'getParent', function () {
return this.getParent_NoClientCode();
});

Clazz_newMeth(C$, 'getParent_NoClientCode', function () {
return this.parent;
});

Clazz_newMeth(C$, 'getContainer', function () {
return this.getParent();
});

Clazz_newMeth(C$, 'getPeer', function () {
return this.peer;
});

Clazz_newMeth(C$, 'setDropTarget$java_awt_dnd_DropTarget', function (dt) {
if (dt === this.dropTarget  || (this.dropTarget != null  && this.dropTarget.equals$O(dt) ) ) return;
var old;
if ((old = this.dropTarget) != null ) {
if (this.peer != null ) this.dropTarget.removeNotify$java_awt_peer_ComponentPeer(this.peer);
var t = this.dropTarget;
this.dropTarget = null;
try {
t.setComponent$java_awt_Component(null);
} catch (iae) {
if (Clazz_exceptionOf(iae, "java.lang.IllegalArgumentException")){
} else {
throw iae;
}
}
}if ((this.dropTarget = dt) != null ) {
try {
this.dropTarget.setComponent$java_awt_Component(this);
if (this.peer != null ) this.dropTarget.addNotify$java_awt_peer_ComponentPeer(this.peer);
} catch (iae) {
if (Clazz_exceptionOf(iae, "java.lang.IllegalArgumentException")){
if (old != null ) {
try {
old.setComponent$java_awt_Component(this);
if (this.peer != null ) this.dropTarget.addNotify$java_awt_peer_ComponentPeer(this.peer);
} catch (iae1) {
if (Clazz_exceptionOf(iae1, "java.lang.IllegalArgumentException")){
} else {
throw iae1;
}
}
}} else {
throw iae;
}
}
}});

Clazz_newMeth(C$, 'getDropTarget', function () {
return this.dropTarget;
});

Clazz_newMeth(C$, 'getGraphicsConfiguration', function () {
return (I$[4]||$incl$(4)).getGraphicsConfiguration();
});

Clazz_newMeth(C$, 'resetGC', function () {
});

Clazz_newMeth(C$, 'getToolkit', function () {
return this.getToolkitImpl();
});

Clazz_newMeth(C$, 'getToolkitImpl', function () {
var peer = this.peer;
if ((peer != null ) && !(Clazz_instanceOf(peer, "java.awt.peer.LightweightPeer")) ) {
return peer.getToolkit();
}var parent = this.parent;
if (parent != null ) {
return parent.getToolkitImpl();
}return (I$[5]||$incl$(5)).getDefaultToolkit();
});

Clazz_newMeth(C$, 'isValid', function () {
return this.valid;
});

Clazz_newMeth(C$, 'isDisplayable', function () {
return true;
});

Clazz_newMeth(C$, 'isVisible', function () {
return this.isVisible_NoClientCode();
});

Clazz_newMeth(C$, 'isVisible_NoClientCode', function () {
return this.visible;
});

Clazz_newMeth(C$, 'isRecursivelyVisible', function () {
return this.visible && (this.parent == null  || this.parent.isRecursivelyVisible() ) ;
});

Clazz_newMeth(C$, 'pointRelativeToComponent$java_awt_Point', function (absolute) {
var compCoords = this.getLocationOnScreen();
return Clazz_new_((I$[6]||$incl$(6)).c$$I$I,[absolute.x - compCoords.x, absolute.y - compCoords.y]);
});

Clazz_newMeth(C$, 'getMousePosition', function () {
return null;
});

Clazz_newMeth(C$, 'isSameOrAncestorOf$java_awt_Component$Z', function (comp, allowChildren) {
return comp === this ;
});

Clazz_newMeth(C$, 'isShowing', function () {
if (this.visible) {
var parent = this.parent;
return (parent == null ) || parent.isShowing() ;
}return false;
});

Clazz_newMeth(C$, 'isEnabled', function () {
return this.isEnabledImpl();
});

Clazz_newMeth(C$, 'isEnabledImpl', function () {
return this.enabled;
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
this.enable$Z(b);
});

Clazz_newMeth(C$, 'enable', function () {
if (!this.enabled) {
this.enabled = true;
var peer = this.getOrCreatePeer();
if (peer != null ) {
peer.setEnabled$Z(true);
if (this.visible) {
this.updateCursorImmediately();
}}}});

Clazz_newMeth(C$, 'enable$Z', function (b) {
if (b) {
this.enable();
} else {
this.disable();
}});

Clazz_newMeth(C$, 'disable', function () {
if (this.enabled) {
this.enabled = false;
var peer = this.getOrCreatePeer();
if (peer != null ) {
peer.setEnabled$Z(false);
if (this.visible) {
this.updateCursorImmediately();
}}}});

Clazz_newMeth(C$, 'isDoubleBuffered', function () {
return false;
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
if (b) {
this.show();
} else {
this.hide();
}});

Clazz_newMeth(C$, 'show$Z', function (b) {
this.setVisible$Z(b);
});

Clazz_newMeth(C$, 'show', function () {
if (!this.visible) {
this.visible = true;
this.updatePeerVisibility$Z(true);
if (this.componentListener != null  || (this.eventMask & 1) != 0  || (I$[5]||$incl$(5)).enabledOnToolkit$J(1) ) {
var e = Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_Component$I,[this, 102]);
(I$[5]||$incl$(5)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}}var parent = this.parent;
if (parent != null ) {
parent.invalidate();
}});

Clazz_newMeth(C$, 'updatePeerVisibility$Z', function (isVisible) {
this.updatePeerVisibilityOrig$Z(isVisible);
});

Clazz_newMeth(C$, 'updatePeerVisibilityOrig$Z', function (isVisible) {
this.peer.setVisible$Z(isVisible);
this.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, this, this.parent, 4, (I$[5]||$incl$(5)).enabledOnToolkit$J(32768));
if (Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")) {
this.repaint();
}this.updateCursorImmediately();
});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return this.peer;
});

Clazz_newMeth(C$, 'containsFocus', function () {
return this.isFocusOwner();
});

Clazz_newMeth(C$, 'clearCurrentFocusCycleRootOnHide', function () {
});

Clazz_newMeth(C$, 'hide', function () {
this.isPacked = false;
if (this.visible) {
this.clearCurrentFocusCycleRootOnHide();
this.visible = false;
this.mixOnHiding$Z(this.isLightweight());
this.updatePeerVisibility$Z(false);
if (this.componentListener != null  || (this.eventMask & 1) != 0  || (I$[5]||$incl$(5)).enabledOnToolkit$J(1) ) {
var e = Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_Component$I,[this, 103]);
(I$[5]||$incl$(5)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}}var parent = this.parent;
if (parent != null ) {
parent.invalidate();
}});

Clazz_newMeth(C$, 'getForeground', function () {
var foreground = this.foreground;
if (foreground != null ) {
return foreground;
}var parent = this.parent;
return (parent != null ) ? parent.getForeground() : null;
});

Clazz_newMeth(C$, 'setForeground$java_awt_Color', function (c) {
var oldColor = this.foreground;
var peer = this.getOrCreatePeer();
this.foreground = c;
if (peer != null ) {
c = this.getForeground();
if (c != null ) {
peer.setForeground$java_awt_Color(c);
}}this.firePropertyChange$S$O$O("foreground", oldColor, c);
});

Clazz_newMeth(C$, 'isForegroundSet', function () {
return (this.foreground != null );
});

Clazz_newMeth(C$, 'getBackground', function () {
var background = this.background;
if (background != null ) {
return background;
}var parent = this.parent;
return (parent != null ) ? parent.getBackground() : null;
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color', function (c) {
var oldColor = this.background;
var peer = this.getOrCreatePeer();
this.background = c;
if (peer != null ) {
c = this.getBackground();
if (c != null ) {
peer.setBackground$java_awt_Color(c);
}}this.firePropertyChange$S$O$O("background", oldColor, c);
});

Clazz_newMeth(C$, 'isBackgroundSet', function () {
return (this.background != null );
});

Clazz_newMeth(C$, 'getFont', function () {
return this.getFont_NoClientCode();
});

Clazz_newMeth(C$, 'getFont_NoClientCode', function () {
var font = this.font;
if (font != null ) {
return font;
}var parent = this.parent;
if (parent != null ) return parent.getFont_NoClientCode();
return null;
});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (f) {
var oldFont;
var newFont;
oldFont = this.font;
newFont = this.font = f;
{
{
}var peer = this.getOrCreatePeer();
if (peer != null ) {
f = this.getFont();
if (f != null ) {
peer.setFont$java_awt_Font(f);
this.peerFont = f;
}}}this.firePropertyChange$S$O$O("font", oldFont, newFont);
if (f !== oldFont  && (oldFont == null  || !oldFont.equals$O(f) ) ) {
this.invalidateIfValid();
}});

Clazz_newMeth(C$, 'isFontSet', function () {
return (this.font != null );
});

Clazz_newMeth(C$, 'getLocale', function () {
var locale = this.locale;
if (locale != null ) {
return locale;
}return (I$[8]||$incl$(8)).ENGLISH;
});

Clazz_newMeth(C$, 'setLocale$java_util_Locale', function (l) {
var oldValue = this.locale;
this.locale = l;
this.firePropertyChange$S$O$O("locale", oldValue, l);
this.invalidateIfValid();
});

Clazz_newMeth(C$, 'getLocation', function () {
return this.location();
});

Clazz_newMeth(C$, 'getLocationOnScreen', function () {
return this.getLocationOnScreen_NoTreeLock();
});

Clazz_newMeth(C$, 'getLocationOnScreen_NoTreeLock', function () {
if (this.isShowing()) {
if (this.isLightweight()) {
var host = this.getNativeContainer();
var pt = host.peer.getLocationOnScreen();
for (var c = this; c !== host ; c = c.getParent()) {
pt.x = pt.x+(c.x);
pt.y = pt.y+(c.y);
}
return pt;
} else {
var pt = this.peer.getLocationOnScreen();
return pt;
}} else {
throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["component must be showing on the screen to determine its location"]);
}});

Clazz_newMeth(C$, 'location', function () {
return p$.location_NoClientCode.apply(this, []);
});

Clazz_newMeth(C$, 'location_NoClientCode', function () {
return Clazz_new_((I$[6]||$incl$(6)).c$$I$I,[this.x, this.y]);
});

Clazz_newMeth(C$, 'setLocation$I$I', function (x, y) {
this.setBoundsOp$I(1);
this.setBounds$I$I$I$I(x, y, this.width, this.height);
});

Clazz_newMeth(C$, 'move$I$I', function (x, y) {
this.setLocation$I$I(x, y);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point', function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'getSize', function () {
return this.size();
});

Clazz_newMeth(C$, 'size', function () {
return Clazz_new_((I$[9]||$incl$(9)).c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$I$I', function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, 'resize$I$I', function (width, height) {
this.setBoundsOp$I(2);
this.setBounds$I$I$I$I(this.x, this.y, width, height);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension', function (d) {
this.setSize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I', function (x, y, width, height) {
this.reshape$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle', function (r) {
this.setBounds$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'reshape$I$I$I$I', function (x, y, width, height) {
try {
this.setBoundsOp$I(3);
width = Math.max(0, width);
height = Math.max(0, height);
var resized = (this.width != width) || (this.height != height) ;
var moved = (this.x != x) || (this.y != y) ;
if (!resized && !moved ) {
return;
}var oldX = this.x;
var oldY = this.y;
var oldWidth = this.width;
var oldHeight = this.height;
this.x = x;
this.y = y;
this.width = width;
this.height = height;
if (resized) {
this.isPacked = false;
}var needNotify = true;
this.mixOnReshaping();
if (this.getOrCreatePeer() != null ) {
p$.reshapeNativePeer$I$I$I$I$I.apply(this, [x, y, width, height, this.getBoundsOp()]);
resized = (oldWidth != this.width) || (oldHeight != this.height) ;
moved = (oldX != this.x) || (oldY != this.y) ;
if (Clazz_instanceOf(this, "java.awt.Window")) {
needNotify = false;
}if (resized) {
this.invalidate();
}if (this.parent != null ) {
this.parent.invalidateIfValid();
}}if (needNotify) {
p$.notifyNewBounds$Z$Z.apply(this, [resized, moved]);
}p$.repaintParentIfNeeded$I$I$I$I.apply(this, [oldX, oldY, oldWidth, oldHeight]);
} finally {
this.setBoundsOp$I(5);
}
});

Clazz_newMeth(C$, 'repaintParentIfNeeded$I$I$I$I', function (oldX, oldY, oldWidth, oldHeight) {
if (this.parent != null  && Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")  && this.isShowing() ) {
this.parent.repaint$I$I$I$I(oldX, oldY, oldWidth, oldHeight);
this.repaint();
}});

Clazz_newMeth(C$, 'reshapeNativePeer$I$I$I$I$I', function (x, y, width, height, op) {
var nativeX = x;
var nativeY = y;
for (var c = this.parent; (c != null ) && (Clazz_instanceOf(c.peer, "java.awt.peer.LightweightPeer")) ; c = c.parent) {
nativeX = nativeX+(c.x);
nativeY = nativeY+(c.y);
}
this.peer.setBounds$I$I$I$I$I(nativeX, nativeY, width, height, op);
});

Clazz_newMeth(C$, 'notifyNewBounds$Z$Z', function (resized, moved) {
if (this.componentListener != null  || (this.eventMask & 1) != 0  || (I$[5]||$incl$(5)).enabledOnToolkit$J(1) ) {
if (resized) {
var e = Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_Component$I,[this, 101]);
(I$[5]||$incl$(5)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}if (moved) {
var e = Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_Component$I,[this, 100]);
(I$[5]||$incl$(5)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}} else {
if (Clazz_instanceOf(this, "java.awt.Container") && (this).countComponents() > 0 ) {
var enabledOnToolkit = (I$[5]||$incl$(5)).enabledOnToolkit$J(65536);
if (resized) {
(this).createChildHierarchyEvents$I$J$Z(1402, 0, enabledOnToolkit);
}if (moved) {
(this).createChildHierarchyEvents$I$J$Z(1401, 0, enabledOnToolkit);
}}}});

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.height;
});

Clazz_newMeth(C$, 'getBounds', function () {
return Clazz_new_((I$[10]||$incl$(10)).c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'getBounds$java_awt_Rectangle', function (rv) {
if (rv == null ) return Clazz_new_((I$[10]||$incl$(10)).c$$I$I$I$I,[this.getX(), this.getY(), this.getWidth(), this.getHeight()]);
rv.setBounds$I$I$I$I(this.getX(), this.getY(), this.getWidth(), this.getHeight());
return rv;
});

Clazz_newMeth(C$, 'getSize$java_awt_Dimension', function (rv) {
if (rv == null ) {
return Clazz_new_((I$[9]||$incl$(9)).c$$I$I,[this.getWidth(), this.getHeight()]);
} else {
rv.setSize$I$I(this.getWidth(), this.getHeight());
return rv;
}});

Clazz_newMeth(C$, 'getLocation$java_awt_Point', function (rv) {
if (rv == null ) {
return Clazz_new_((I$[6]||$incl$(6)).c$$I$I,[this.getX(), this.getY()]);
} else {
rv.setLocation$I$I(this.getX(), this.getY());
return rv;
}});

Clazz_newMeth(C$, 'isOpaque', function () {
return true;
});

Clazz_newMeth(C$, 'isLightweight', function () {
return false;
});

Clazz_newMeth(C$, 'setPreferredSize$java_awt_Dimension', function (preferredSize) {
this.setPrefSizeComp$java_awt_Dimension(preferredSize);
});

Clazz_newMeth(C$, 'setPrefSizeComp$java_awt_Dimension', function (preferredSize) {
var old = (this.prefSizeSet ? this.prefSize : null);
this.prefSize = preferredSize;
this.prefSizeSet = (preferredSize != null );
this.firePropertyChange$S$O$O("preferredSize", old, preferredSize);
});

Clazz_newMeth(C$, 'isPreferredSizeSet', function () {
return this.prefSizeSet;
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return this.preferredSize();
});

Clazz_newMeth(C$, 'preferredSize', function () {
return this.prefSizeComp();
});

Clazz_newMeth(C$, 'prefSizeComp', function () {
var dim = this.prefSize;
if (dim == null  || !(this.isPreferredSizeSet() || this.isValid() ) ) {
this.prefSize = this.getMinimumSize();
dim = this.prefSize;
}return Clazz_new_((I$[9]||$incl$(9)).c$$java_awt_Dimension,[dim]);
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension', function (minimumSize) {
var old;
if (this.minSizeSet) {
old = this.minSize;
} else {
old = null;
}this.minSize = minimumSize;
this.minSizeSet = (minimumSize != null );
this.firePropertyChange$S$O$O("minimumSize", old, minimumSize);
});

Clazz_newMeth(C$, 'isMinimumSizeSet', function () {
return this.minSizeSet;
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
return this.minimumSize();
});

Clazz_newMeth(C$, 'minimumSize', function () {
var dim = this.minSize;
if (dim == null  || !(this.isMinimumSizeSet() || this.isValid() ) ) {
this.minSize = this.getSize();
dim = this.minSize;
}return Clazz_new_((I$[9]||$incl$(9)).c$$java_awt_Dimension,[dim]);
});

Clazz_newMeth(C$, 'setMaximumSize$java_awt_Dimension', function (maximumSize) {
var old;
if (this.maxSizeSet) {
old = this.maxSize;
} else {
old = null;
}this.maxSize = maximumSize;
this.maxSizeSet = (maximumSize != null );
this.firePropertyChange$S$O$O("maximumSize", old, maximumSize);
});

Clazz_newMeth(C$, 'isMaximumSizeSet', function () {
return this.maxSizeSet;
});

Clazz_newMeth(C$, 'getMaximumSize', function () {
return this.getMaxSizeComp();
});

Clazz_newMeth(C$, 'getMaxSizeComp', function () {
if (this.isMaximumSizeSet()) {
return Clazz_new_((I$[9]||$incl$(9)).c$$java_awt_Dimension,[this.maxSize]);
}return Clazz_new_((I$[9]||$incl$(9)).c$$I$I,[32767, 32767]);
});

Clazz_newMeth(C$, 'getAlignmentX', function () {
return this.getAlignmentXComp();
});

Clazz_newMeth(C$, 'getAlignmentXComp', function () {
return 0.5;
});

Clazz_newMeth(C$, 'getAlignmentY', function () {
return this.getAlignmentYComp();
});

Clazz_newMeth(C$, 'getAlignmentYComp', function () {
return 0.5;
});

Clazz_newMeth(C$, 'getBaseline$I$I', function (width, height) {
if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior', function () {
return (I$[11]||$incl$(11)).OTHER;
});

Clazz_newMeth(C$, 'doLayout', function () {
this.layout();
});

Clazz_newMeth(C$, 'layout', function () {
});

Clazz_newMeth(C$, 'validate', function () {
this.validateComponent();
});

Clazz_newMeth(C$, 'validateComponent', function () {
{
var peer = this.peer;
var wasValid = this.isValid();
if (!wasValid && peer != null  ) {
var newfont = this.getFont();
var oldfont = this.peerFont;
if (newfont !== oldfont  && (oldfont == null  || !oldfont.equals$O(newfont) ) ) {
peer.setFont$java_awt_Font(newfont);
this.peerFont = newfont;
}peer.layout();
}this.valid = true;
if (!wasValid) {
this.mixOnValidating();
}}});

Clazz_newMeth(C$, 'invalidate', function () {
this.invalidateComp();
});

Clazz_newMeth(C$, 'invalidateComp', function () {
this.valid = false;
if (!this.isPreferredSizeSet()) {
this.prefSize = null;
}if (!this.isMinimumSizeSet()) {
this.minSize = null;
}if (!this.isMaximumSizeSet()) {
this.maxSize = null;
}if (this.parent != null ) {
this.parent.invalidateIfValid();
}});

Clazz_newMeth(C$, 'invalidateIfValid', function () {
if (this.isValid()) {
this.invalidate();
}});

Clazz_newMeth(C$, 'getGraphics', function () {
var g;
if ((g = (this.parent == null  ? null : this.parent.getGraphics())) != null ) g.setFont$java_awt_Font(this.getFont());
return g;
});

Clazz_newMeth(C$, 'getTreeLock', function () {
return this;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return font.getFontMetrics();
});

Clazz_newMeth(C$, 'setCursor$java_awt_Cursor', function (cursor) {
this.cursor = cursor;
this.updateCursorImmediately();
});

Clazz_newMeth(C$, 'updateCursorImmediately', function () {
(I$[4]||$incl$(4)).setCursor$java_awt_Cursor(this.cursor);
});

Clazz_newMeth(C$, 'getCursor', function () {
return this.getCursor_NoClientCode();
});

Clazz_newMeth(C$, 'getCursor_NoClientCode', function () {
var cursor = this.cursor;
if (cursor != null ) {
return cursor;
}var parent = this.parent;
if (parent != null ) {
return parent.getCursor_NoClientCode();
} else {
return (I$[12]||$incl$(12)).getPredefinedCursor$I(0);
}});

Clazz_newMeth(C$, 'isCursorSet', function () {
return (this.cursor != null );
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'update$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintAll$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'lightweightPaint$java_awt_Graphics', function (g) {
this.lwPaintComp$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'lwPaintComp$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintHeavyweightComponents$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'repaint', function () {
this.repaint$J$I$I$I$I(0, 0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'repaint$J', function (tm) {
this.repaint$J$I$I$I$I(tm, 0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'repaint$I$I$I$I', function (x, y, width, height) {
this.repaint$J$I$I$I$I(0, x, y, width, height);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (tm, x, y, width, height) {
if (this.canPaint()) {
if (this.peer != null ) {
if (this.isVisible() && width > 0  && height > 0 ) {
var e = Clazz_new_((I$[13]||$incl$(13)).c$$java_awt_Component$I$java_awt_Rectangle,[this, 801, Clazz_new_((I$[10]||$incl$(10)).c$$I$I$I$I,[x, y, width, height])]);
(I$[5]||$incl$(5)).getEventQueue().postEvent$java_awt_AWTEvent(e);
} else {
this.peer.setVisible$Z(false);
}}} else if (this.parent != null ) {
var px = this.x + ((x < 0) ? 0 : x);
var py = this.y + ((y < 0) ? 0 : y);
var pwidth = (width > this.width) ? this.width : width;
var pheight = (height > this.height) ? this.height : height;
this.parent.repaint$J$I$I$I$I(tm, px, py, pwidth, pheight);
}});

Clazz_newMeth(C$, 'canPaint', function () {
return !(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer"));
});

Clazz_newMeth(C$, 'print$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printAll$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'printHeavyweightComponents$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'imageUpdate$java_awt_Image$I$I$I$I$I', function (img, infoflags, x, y, w, h) {
return false;
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer', function (producer) {
return this.getToolkit().createImage$java_awt_image_ImageProducer(producer);
});

Clazz_newMeth(C$, 'createImage$I$I', function (width, height) {
return (I$[5]||$incl$(5)).getDefaultToolkit().createImage$BA$I$I(null, width, height);
});

Clazz_newMeth(C$, 'createVolatileImage$I$I', function (width, height) {
return null;
});

Clazz_newMeth(C$, 'createVolatileImage$I$I$java_awt_ImageCapabilities', function (width, height, caps) {
return this.createVolatileImage$I$I(width, height);
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$java_awt_image_ImageObserver', function (image, observer) {
return this.prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver(image, -1, -1, observer);
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (image, width, height, observer) {
return false;
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$java_awt_image_ImageObserver', function (image, observer) {
return this.checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver(image, -1, -1, observer);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (image, width, height, observer) {
return 35;
});

Clazz_newMeth(C$, 'setIgnoreRepaint$Z', function (ignoreRepaint) {
});

Clazz_newMeth(C$, 'getIgnoreRepaint', function () {
return false;
});

Clazz_newMeth(C$, 'contains$java_awt_Point', function (p) {
return this.contains$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'contains$I$I', function (x, y) {
return this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'inside$I$I', function (x, y) {
return (x >= 0) && (x < this.width) && (y >= 0) && (y < this.height)  ;
});

Clazz_newMeth(C$, 'getComponentAt$I$I', function (x, y) {
return this.locate$I$I(x, y);
});

Clazz_newMeth(C$, 'locate$I$I', function (x, y) {
return this.contains$I$I(x, y) ? this : null;
});

Clazz_newMeth(C$, 'getComponentAt$java_awt_Point', function (p) {
return this.getComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'deliverEvent$java_awt_Event', function (e) {
this.postEvent$java_awt_Event(e);
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent', function (e) {
this.dispatchEventImpl$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent', function (e) {
this.dispatchEventImplComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'dispatchEventImplComp$java_awt_AWTEvent', function (e) {
var id = e.getID();
(I$[14]||$incl$(14)).setCurrentEventAndMostRecentTime$java_awt_AWTEvent(e);
if (!e.focusManagerIsDispatching) {
if (e.isPosted) {
e.isPosted = true;
}}if (!e.isConsumed()) {
if (Clazz_instanceOf(e, "java.awt.event.KeyEvent")) {
if (e.isConsumed()) {
return;
}}}if (this.areInputMethodsEnabled()) {
if ((Clazz_instanceOf(e, "java.awt.event.InputEvent")) || (Clazz_instanceOf(e, "java.awt.event.FocusEvent")) ) {
}} else {
if (id == 1004) {
}}switch (id) {
case 401:
case 402:
var p = ((Clazz_instanceOf(this, "java.awt.Container")) ? this : this.parent);
if (p != null ) {
p.preProcessKeyEvent$java_awt_event_KeyEvent(e);
}break;
case 201:
break;
default:
break;
}
if (this.newEventsOnly) {
if (this.eventEnabled$java_awt_AWTEvent(e)) {
this.processEvent$java_awt_AWTEvent(e);
}} else if (id == 507) {
this.autoProcessMouseWheel$java_awt_event_MouseWheelEvent(e);
} else if (!(Clazz_instanceOf(e, "java.awt.event.MouseEvent") && !this.postsOldMouseEvents() )) {
}if (id == 201 && !e.isConsumed() ) {
}if (!(Clazz_instanceOf(e, "java.awt.event.KeyEvent"))) {
}});

Clazz_newMeth(C$, 'autoProcessMouseWheel$java_awt_event_MouseWheelEvent', function (e) {
});

Clazz_newMeth(C$, 'dispatchMouseWheelToAncestor$java_awt_event_MouseWheelEvent', function (e) {
var newX;
var newY;
newX = e.getX() + this.getX();
newY = e.getY() + this.getY();
var newMWE;
{
var anc = this.getParent();
while (anc != null  && !anc.eventEnabled$java_awt_AWTEvent(e) ){
newX = newX+(anc.getX());
newY = newY+(anc.getY());
if (!(Clazz_instanceOf(anc, "java.awt.Window"))) {
anc = anc.getParent();
} else {
break;
}}
if (anc != null  && anc.eventEnabled$java_awt_AWTEvent(e) ) {
newMWE = Clazz_new_((I$[15]||$incl$(15)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I,[anc, e.getID(), e.getWhen(), e.getModifiers(), newX, newY, e.getXOnScreen(), e.getYOnScreen(), e.getClickCount(), e.isPopupTrigger(), e.getScrollType(), e.getScrollAmount(), e.getWheelRotation()]);
(e).copyPrivateDataInto$java_awt_AWTEvent(newMWE);
anc.dispatchEventToSelf$java_awt_AWTEvent(newMWE);
}}return true;
});

Clazz_newMeth(C$, 'checkWindowClosingException', function () {
if (this.windowClosingException != null ) {
if (Clazz_instanceOf(this, "java.awt.Dialog")) {
(this).interruptBlocking();
} else {
this.windowClosingException.fillInStackTrace();
this.windowClosingException.printStackTrace();
this.windowClosingException = null;
}return true;
}return false;
});

Clazz_newMeth(C$, 'areInputMethodsEnabled', function () {
return ((this.eventMask & 4096) != 0) && ((this.eventMask & 8) != 0 || this.keyListener != null  ) ;
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent', function (e) {
return this.eventTypeEnabled$I(e.id);
});

Clazz_newMeth(C$, 'eventTypeEnabled$I', function (type) {
switch (type) {
case 100:
case 101:
case 102:
case 103:
if ((this.eventMask & 1) != 0 || this.componentListener != null  ) {
return true;
}break;
case 1004:
case 1005:
if ((this.eventMask & 4) != 0 || this.focusListener != null  ) {
return true;
}break;
case 401:
case 402:
case 400:
if ((this.eventMask & 8) != 0 || this.keyListener != null  ) {
return true;
}break;
case 501:
case 502:
case 504:
case 505:
case 500:
if ((this.eventMask & 16) != 0 || this.mouseListener != null  ) {
return true;
}break;
case 503:
case 506:
if ((this.eventMask & 32) != 0 || this.mouseMotionListener != null  ) {
return true;
}break;
case 507:
if ((this.eventMask & 131072) != 0 || this.mouseWheelListener != null  ) {
return true;
}break;
case 1100:
case 1101:
if ((this.eventMask & 2048) != 0 || this.inputMethodListener != null  ) {
return true;
}break;
case 1400:
if ((this.eventMask & 32768) != 0 || this.hierarchyListener != null  ) {
return true;
}break;
case 1401:
case 1402:
if ((this.eventMask & 65536) != 0 || this.hierarchyBoundsListener != null  ) {
return true;
}break;
case 1001:
if ((this.eventMask & 128) != 0) {
return true;
}break;
case 900:
if ((this.eventMask & 1024) != 0) {
return true;
}break;
case 701:
if ((this.eventMask & 512) != 0) {
return true;
}break;
case 601:
if ((this.eventMask & 256) != 0) {
return true;
}break;
default:
break;
}
if (type > 1999) {
return true;
}return false;
});

Clazz_newMeth(C$, 'postEvent$java_awt_Event', function (e) {
if (this.handleEvent$java_awt_Event(e)) {
e.consume();
return true;
}var parent = this.parent;
var eventx = e.x;
var eventy = e.y;
if (parent != null ) {
e.translate$I$I(this.x, this.y);
if (parent.postEvent$java_awt_Event(e)) {
e.consume();
return true;
}e.x = eventx;
e.y = eventy;
}return false;
});

Clazz_newMeth(C$, 'addComponentListener$java_awt_event_ComponentListener', function (l) {
if (l == null ) {
return;
}this.componentListener = (I$[16]||$incl$(16)).add$java_awt_event_ComponentListener$java_awt_event_ComponentListener(this.componentListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeComponentListener$java_awt_event_ComponentListener', function (l) {
if (l == null ) {
return;
}this.componentListener = (I$[16]||$incl$(16)).remove$java_awt_event_ComponentListener$java_awt_event_ComponentListener(this.componentListener, l);
});

Clazz_newMeth(C$, 'getComponentListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[17]||$incl$(17)),['componentHidden$java_awt_event_ComponentEvent','componentMoved$java_awt_event_ComponentEvent','componentResized$java_awt_event_ComponentEvent','componentShown$java_awt_event_ComponentEvent'])));
});

Clazz_newMeth(C$, 'addFocusListener$java_awt_event_FocusListener', function (l) {
if (l == null ) {
return;
}this.focusListener = (I$[16]||$incl$(16)).add$java_awt_event_FocusListener$java_awt_event_FocusListener(this.focusListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeFocusListener$java_awt_event_FocusListener', function (l) {
if (l == null ) {
return;
}this.focusListener = (I$[16]||$incl$(16)).remove$java_awt_event_FocusListener$java_awt_event_FocusListener(this.focusListener, l);
});

Clazz_newMeth(C$, 'getFocusListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[18]||$incl$(18)),['focusGained$java_awt_event_FocusEvent','focusLost$java_awt_event_FocusEvent'])));
});

Clazz_newMeth(C$, 'addHierarchyListener$java_awt_event_HierarchyListener', function (l) {
});

Clazz_newMeth(C$, 'removeHierarchyListener$java_awt_event_HierarchyListener', function (l) {
});

Clazz_newMeth(C$, 'getHierarchyListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[19]||$incl$(19)),['hierarchyChanged$java_awt_event_HierarchyEvent'])));
});

Clazz_newMeth(C$, 'addHierarchyBoundsListener$java_awt_event_HierarchyBoundsListener', function (l) {
if (l == null ) {
return;
}var notifyAncestors;
{
notifyAncestors = (this.hierarchyBoundsListener == null  && (this.eventMask & 65536) == 0 );
this.hierarchyBoundsListener = (I$[16]||$incl$(16)).add$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener(this.hierarchyBoundsListener, l);
notifyAncestors = (notifyAncestors && this.hierarchyBoundsListener != null  );
this.newEventsOnly = true;
}if (notifyAncestors) {
{
this.adjustListeningChildrenOnParent$J$I(65536, 1);
}}});

Clazz_newMeth(C$, 'removeHierarchyBoundsListener$java_awt_event_HierarchyBoundsListener', function (l) {
if (l == null ) {
return;
}var notifyAncestors;
{
notifyAncestors = (this.hierarchyBoundsListener != null  && (this.eventMask & 65536) == 0 );
this.hierarchyBoundsListener = (I$[16]||$incl$(16)).remove$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener(this.hierarchyBoundsListener, l);
notifyAncestors = (notifyAncestors && this.hierarchyBoundsListener == null  );
}if (notifyAncestors) {
{
this.adjustListeningChildrenOnParent$J$I(65536, -1);
}}});

Clazz_newMeth(C$, 'numListening$J', function (mask) {
return this.numListeningMask$J(mask);
});

Clazz_newMeth(C$, 'numListeningMask$J', function (mask) {
if ((mask == 32768 && (this.hierarchyListener != null  || (this.eventMask & 32768) != 0 ) ) || (mask == 65536 && (this.hierarchyBoundsListener != null  || (this.eventMask & 65536) != 0 ) ) ) {
return 1;
} else {
return 0;
}});

Clazz_newMeth(C$, 'countHierarchyMembers', function () {
return 1;
});

Clazz_newMeth(C$, 'createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z', function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
return this.createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit);
});

Clazz_newMeth(C$, 'createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z', function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
switch (id) {
case 1400:
if (this.hierarchyListener != null  || (this.eventMask & 32768) != 0  || enabledOnToolkit ) {
var e = Clazz_new_((I$[20]||$incl$(20)).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J,[this, id, changed, changedParent, changeFlags]);
this.dispatchEvent$java_awt_AWTEvent(e);
return 1;
}break;
case 1401:
case 1402:
if (this.hierarchyBoundsListener != null  || (this.eventMask & 65536) != 0  || enabledOnToolkit ) {
var e = Clazz_new_((I$[20]||$incl$(20)).c$$java_awt_Component$I$java_awt_Component$java_awt_Container,[this, id, changed, changedParent]);
this.dispatchEvent$java_awt_AWTEvent(e);
return 1;
}break;
default:
break;
}
return 0;
});

Clazz_newMeth(C$, 'getHierarchyBoundsListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[21]||$incl$(21)),['ancestorMoved$java_awt_event_HierarchyEvent','ancestorResized$java_awt_event_HierarchyEvent'])));
});

Clazz_newMeth(C$, 'adjustListeningChildrenOnParent$J$I', function (mask, num) {
if (this.parent != null ) {
this.parent.adjustListeningChildren$J$I(mask, num);
}});

Clazz_newMeth(C$, 'addKeyListener$java_awt_event_KeyListener', function (l) {
if (l == null ) {
return;
}this.keyListener = (I$[16]||$incl$(16)).add$java_awt_event_KeyListener$java_awt_event_KeyListener(this.keyListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeKeyListener$java_awt_event_KeyListener', function (l) {
if (l == null ) {
return;
}this.keyListener = (I$[16]||$incl$(16)).remove$java_awt_event_KeyListener$java_awt_event_KeyListener(this.keyListener, l);
});

Clazz_newMeth(C$, 'getKeyListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[22]||$incl$(22)),['keyPressed$java_awt_event_KeyEvent','keyReleased$java_awt_event_KeyEvent','keyTyped$java_awt_event_KeyEvent'])));
});

Clazz_newMeth(C$, 'addMouseListener$java_awt_event_MouseListener', function (l) {
if (l == null ) {
return;
}this.mouseListener = (I$[16]||$incl$(16)).add$java_awt_event_MouseListener$java_awt_event_MouseListener(this.mouseListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeMouseListener$java_awt_event_MouseListener', function (l) {
if (l == null ) {
return;
}this.mouseListener = (I$[16]||$incl$(16)).remove$java_awt_event_MouseListener$java_awt_event_MouseListener(this.mouseListener, l);
});

Clazz_newMeth(C$, 'getMouseListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[23]||$incl$(23)),['mouseClicked$java_awt_event_MouseEvent','mouseEntered$java_awt_event_MouseEvent','mouseExited$java_awt_event_MouseEvent','mousePressed$java_awt_event_MouseEvent','mouseReleased$java_awt_event_MouseEvent'])));
});

Clazz_newMeth(C$, 'addMouseMotionListener$java_awt_event_MouseMotionListener', function (l) {
if (l == null ) {
return;
}this.mouseMotionListener = (I$[16]||$incl$(16)).add$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener(this.mouseMotionListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeMouseMotionListener$java_awt_event_MouseMotionListener', function (l) {
if (l == null ) {
return;
}this.mouseMotionListener = (I$[16]||$incl$(16)).remove$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener(this.mouseMotionListener, l);
});

Clazz_newMeth(C$, 'getMouseMotionListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[24]||$incl$(24)),['mouseDragged$java_awt_event_MouseEvent','mouseMoved$java_awt_event_MouseEvent'])));
});

Clazz_newMeth(C$, 'addMouseWheelListener$java_awt_event_MouseWheelListener', function (l) {
if (l == null ) {
return;
}this.mouseWheelListener = (I$[16]||$incl$(16)).add$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener(this.mouseWheelListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeMouseWheelListener$java_awt_event_MouseWheelListener', function (l) {
if (l == null ) {
return;
}this.mouseWheelListener = (I$[16]||$incl$(16)).remove$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener(this.mouseWheelListener, l);
});

Clazz_newMeth(C$, 'getMouseWheelListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[25]||$incl$(25)),['mouseWheelMoved$java_awt_event_MouseWheelEvent'])));
});

Clazz_newMeth(C$, 'addInputMethodListener$java_awt_event_InputMethodListener', function (l) {
if (l == null ) {
return;
}this.inputMethodListener = (I$[16]||$incl$(16)).add$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener(this.inputMethodListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeInputMethodListener$java_awt_event_InputMethodListener', function (l) {
if (l == null ) {
return;
}this.inputMethodListener = (I$[16]||$incl$(16)).remove$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener(this.inputMethodListener, l);
});

Clazz_newMeth(C$, 'getInputMethodListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[26]||$incl$(26)),['caretPositionChanged$java_awt_event_InputMethodEvent','inputMethodTextChanged$java_awt_event_InputMethodEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
return this.getListenersComp$Class(listenerType);
});

Clazz_newMeth(C$, 'getListenersComp$Class', function (listenerType) {
var l = null;
if (listenerType === Clazz_getClass((I$[17]||$incl$(17)),['componentHidden$java_awt_event_ComponentEvent','componentMoved$java_awt_event_ComponentEvent','componentResized$java_awt_event_ComponentEvent','componentShown$java_awt_event_ComponentEvent']) ) {
l = this.componentListener;
} else if (listenerType === Clazz_getClass((I$[18]||$incl$(18)),['focusGained$java_awt_event_FocusEvent','focusLost$java_awt_event_FocusEvent']) ) {
l = this.focusListener;
} else if (listenerType === Clazz_getClass((I$[19]||$incl$(19)),['hierarchyChanged$java_awt_event_HierarchyEvent']) ) {
l = this.hierarchyListener;
} else if (listenerType === Clazz_getClass((I$[21]||$incl$(21)),['ancestorMoved$java_awt_event_HierarchyEvent','ancestorResized$java_awt_event_HierarchyEvent']) ) {
l = this.hierarchyBoundsListener;
} else if (listenerType === Clazz_getClass((I$[22]||$incl$(22)),['keyPressed$java_awt_event_KeyEvent','keyReleased$java_awt_event_KeyEvent','keyTyped$java_awt_event_KeyEvent']) ) {
l = this.keyListener;
} else if (listenerType === Clazz_getClass((I$[23]||$incl$(23)),['mouseClicked$java_awt_event_MouseEvent','mouseEntered$java_awt_event_MouseEvent','mouseExited$java_awt_event_MouseEvent','mousePressed$java_awt_event_MouseEvent','mouseReleased$java_awt_event_MouseEvent']) ) {
l = this.mouseListener;
} else if (listenerType === Clazz_getClass((I$[24]||$incl$(24)),['mouseDragged$java_awt_event_MouseEvent','mouseMoved$java_awt_event_MouseEvent']) ) {
l = this.mouseMotionListener;
} else if (listenerType === Clazz_getClass((I$[25]||$incl$(25)),['mouseWheelMoved$java_awt_event_MouseWheelEvent']) ) {
l = this.mouseWheelListener;
} else if (listenerType === Clazz_getClass((I$[26]||$incl$(26)),['caretPositionChanged$java_awt_event_InputMethodEvent','inputMethodTextChanged$java_awt_event_InputMethodEvent']) ) {
l = this.inputMethodListener;
} else if (listenerType === Clazz_getClass((I$[27]||$incl$(27)),['propertyChange$java_beans_PropertyChangeEvent']) ) {
return this.getPropertyChangeListeners();
}return (I$[16]||$incl$(16)).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'enableEvents$J', function (eventsToEnable) {
var notifyAncestors = 0;
{
if ((eventsToEnable & 32768) != 0 && this.hierarchyListener == null   && (this.eventMask & 32768) == 0 ) {
notifyAncestors = notifyAncestors|(32768);
}if ((eventsToEnable & 65536) != 0 && this.hierarchyBoundsListener == null   && (this.eventMask & 65536) == 0 ) {
notifyAncestors = notifyAncestors|(65536);
}this.eventMask = this.eventMask|(eventsToEnable);
this.newEventsOnly = true;
}if (this.parent != null  && Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer") ) {
this.parent.proxyEnableEvents$J(this.eventMask);
}if (notifyAncestors != 0) {
{
this.adjustListeningChildrenOnParent$J$I(notifyAncestors, 1);
}}});

Clazz_newMeth(C$, 'disableEvents$J', function (eventsToDisable) {
var notifyAncestors = 0;
{
if ((eventsToDisable & 32768) != 0 && this.hierarchyListener == null   && (this.eventMask & 32768) != 0 ) {
notifyAncestors = notifyAncestors|(32768);
}if ((eventsToDisable & 65536) != 0 && this.hierarchyBoundsListener == null   && (this.eventMask & 65536) != 0 ) {
notifyAncestors = notifyAncestors|(65536);
}this.eventMask = this.eventMask&(~eventsToDisable);
}if (notifyAncestors != 0) {
{
this.adjustListeningChildrenOnParent$J$I(notifyAncestors, -1);
}}});

Clazz_newMeth(C$, 'checkCoalescing', function () {
if (this.getClass().getClassLoader() == null ) {
return false;
}var clazz = this.getClass();
{
var value = C$.coalesceMap.get$O(clazz);
if (value != null ) {
return value.booleanValue();
}var enabled = (I$[28]||$incl$(28)).$valueOf(p$.checkCoelescence.apply(this, []));
C$.coalesceMap.put$TK$TV(clazz, enabled);
return enabled.booleanValue();
}});

Clazz_newMeth(C$, 'checkCoelescence', function () {
{
return this.coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent.exClazz != C$;
}
});

Clazz_newMeth(C$, 'isCoalescingEnabled', function () {
return this.coalescingEnabled;
});

Clazz_newMeth(C$, 'coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent', function (existingEvent, newEvent) {
return null;
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent', function (e) {
this.processEventComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processEventComp$java_awt_AWTEvent', function (e) {
if (Clazz_instanceOf(e, "java.awt.event.FocusEvent")) {
this.processFocusEvent$java_awt_event_FocusEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.MouseEvent")) {
switch (e.getID()) {
case 501:
case 502:
case 500:
case 504:
case 505:
this.processMouseEvent$java_awt_event_MouseEvent(e);
break;
case 503:
case 506:
this.processMouseMotionEvent$java_awt_event_MouseEvent(e);
break;
case 507:
this.processMouseWheelEvent$java_awt_event_MouseWheelEvent(e);
break;
}
} else if (Clazz_instanceOf(e, "java.awt.event.KeyEvent")) {
this.processKeyEvent$java_awt_event_KeyEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.ComponentEvent")) {
this.processComponentEvent$java_awt_event_ComponentEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.InputMethodEvent")) {
this.processInputMethodEvent$java_awt_event_InputMethodEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.HierarchyEvent")) {
switch (e.getID()) {
case 1400:
this.processHierarchyEvent$java_awt_event_HierarchyEvent(e);
break;
case 1401:
case 1402:
this.processHierarchyBoundsEvent$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processComponentEvent$java_awt_event_ComponentEvent', function (e) {
var listener = this.componentListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 101:
listener.componentResized$java_awt_event_ComponentEvent(e);
break;
case 100:
listener.componentMoved$java_awt_event_ComponentEvent(e);
break;
case 102:
listener.componentShown$java_awt_event_ComponentEvent(e);
break;
case 103:
listener.componentHidden$java_awt_event_ComponentEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processFocusEvent$java_awt_event_FocusEvent', function (e) {
var listener = this.focusListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 1004:
listener.focusGained$java_awt_event_FocusEvent(e);
break;
case 1005:
listener.focusLost$java_awt_event_FocusEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent', function (e) {
var listener = this.keyListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 400:
listener.keyTyped$java_awt_event_KeyEvent(e);
break;
case 401:
listener.keyPressed$java_awt_event_KeyEvent(e);
break;
case 402:
listener.keyReleased$java_awt_event_KeyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent', function (e) {
var listener = this.mouseListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 501:
listener.mousePressed$java_awt_event_MouseEvent(e);
break;
case 502:
listener.mouseReleased$java_awt_event_MouseEvent(e);
break;
case 500:
listener.mouseClicked$java_awt_event_MouseEvent(e);
break;
case 505:
listener.mouseExited$java_awt_event_MouseEvent(e);
break;
case 504:
listener.mouseEntered$java_awt_event_MouseEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseMotionEvent$java_awt_event_MouseEvent', function (e) {
var listener = this.mouseMotionListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 503:
listener.mouseMoved$java_awt_event_MouseEvent(e);
break;
case 506:
listener.mouseDragged$java_awt_event_MouseEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseWheelEvent$java_awt_event_MouseWheelEvent', function (e) {
var listener = this.mouseWheelListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 507:
listener.mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'postsOldMouseEvents', function () {
return false;
});

Clazz_newMeth(C$, 'processInputMethodEvent$java_awt_event_InputMethodEvent', function (e) {
var listener = this.inputMethodListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 1100:
listener.inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
break;
case 1101:
listener.caretPositionChanged$java_awt_event_InputMethodEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processHierarchyEvent$java_awt_event_HierarchyEvent', function (e) {
var listener = this.hierarchyListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 1400:
listener.hierarchyChanged$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processHierarchyBoundsEvent$java_awt_event_HierarchyEvent', function (e) {
var listener = this.hierarchyBoundsListener;
if (listener != null ) {
var id = e.getID();
switch (id) {
case 1401:
listener.ancestorMoved$java_awt_event_HierarchyEvent(e);
break;
case 1402:
listener.ancestorResized$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'handleEvent$java_awt_Event', function (evt) {
switch (evt.id) {
case 504:
return this.mouseEnter$java_awt_Event$I$I(evt, evt.x, evt.y);
case 505:
return this.mouseExit$java_awt_Event$I$I(evt, evt.x, evt.y);
case 503:
return this.mouseMove$java_awt_Event$I$I(evt, evt.x, evt.y);
case 501:
return this.mouseDown$java_awt_Event$I$I(evt, evt.x, evt.y);
case 506:
return this.mouseDrag$java_awt_Event$I$I(evt, evt.x, evt.y);
case 502:
return this.mouseUp$java_awt_Event$I$I(evt, evt.x, evt.y);
case 401:
case 403:
return this.keyDown$java_awt_Event$I(evt, evt.key);
case 402:
case 404:
return this.keyUp$java_awt_Event$I(evt, evt.key);
case 1001:
return this.action$java_awt_Event$O(evt, evt.arg);
case 1004:
return this.gotFocus$java_awt_Event$O(evt, evt.arg);
case 1005:
return this.lostFocus$java_awt_Event$O(evt, evt.arg);
}
return false;
});

Clazz_newMeth(C$, 'mouseDown$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseDrag$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseUp$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseMove$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseEnter$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseExit$java_awt_Event$I$I', function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'keyDown$java_awt_Event$I', function (evt, key) {
return false;
});

Clazz_newMeth(C$, 'keyUp$java_awt_Event$I', function (evt, key) {
return false;
});

Clazz_newMeth(C$, 'action$java_awt_Event$O', function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'addNotify', function () {
this.addNotifyComp();
});

Clazz_newMeth(C$, 'addNotifyComp', function () {
{
var peer = this.getOrCreatePeer();
if (this.parent != null ) {
var mask = 0;
if ((this.mouseListener != null ) || ((this.eventMask & 16) != 0) ) {
mask = mask|(16);
}if ((this.mouseMotionListener != null ) || ((this.eventMask & 32) != 0) ) {
mask = mask|(32);
}if ((this.mouseWheelListener != null ) || ((this.eventMask & 131072) != 0) ) {
mask = mask|(131072);
}if (this.focusListener != null  || (this.eventMask & 4) != 0 ) {
mask = mask|(4);
}if (this.keyListener != null  || (this.eventMask & 8) != 0 ) {
mask = mask|(8);
}if (mask != 0) {
this.parent.proxyEnableEvents$J(mask);
}}this.invalidate();
this.peerFont = this.getFont();
if (this.getContainer() != null  && !this.isAddNotifyComplete ) {
this.getContainer().increaseComponentCount$java_awt_Component(this);
}if (this.parent != null  && this.parent.peer != null  ) {
var parentContPeer = this.parent.peer;
}this.isAddNotifyComplete = true;
if (this.visible && peer != null  ) {
var isDisposed = false;

isDisposed = peer.isDisposed;
if (isDisposed) peer.setVisible$Z(true);
}if (this.hierarchyListener != null  || (this.eventMask & 32768) != 0  || (I$[5]||$incl$(5)).enabledOnToolkit$J(32768) ) {
var e = Clazz_new_((I$[20]||$incl$(20)).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J,[this, 1400, this, this.parent, 2 | ((this.isRecursivelyVisible()) ? 4 : 0)]);
this.dispatchEvent$java_awt_AWTEvent(e);
}}});

Clazz_newMeth(C$, 'getNativeContainer', function () {
var p = this.parent;
while (p != null  && Clazz_instanceOf(p.peer, "java.awt.peer.LightweightPeer") ){
p = p.getParent();
}
return p;
});

Clazz_newMeth(C$, 'removeNotify', function () {
this.removeNotifyComp();
});

Clazz_newMeth(C$, 'removeNotifyComp', function () {
{
if (this.getContainer() != null  && this.isAddNotifyComplete ) {
this.getContainer().decreaseComponentCount$java_awt_Component(this);
}var p = this.getOrCreatePeer();
if (p != null ) {
if (this.visible) {
p.setVisible$Z(false);
}(I$[5]||$incl$(5)).getEventQueue().removeSourceEvents$O$Z(this, false);
p.dispose();
this.isAddNotifyComplete = false;
}if (this.hierarchyListener != null  || (this.eventMask & 32768) != 0  || (I$[5]||$incl$(5)).enabledOnToolkit$J(32768) ) {
var e = Clazz_new_((I$[20]||$incl$(20)).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J,[this, 1400, this, this.parent, 2 | ((this.isRecursivelyVisible()) ? 4 : 0)]);
this.dispatchEvent$java_awt_AWTEvent(e);
}}});

Clazz_newMeth(C$, 'gotFocus$java_awt_Event$O', function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'lostFocus$java_awt_Event$O', function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'isFocusTraversable', function () {
if (this.$isFocusTraversableOverridden == 0) {
this.$isFocusTraversableOverridden = 1;
}return this.focusable;
});

Clazz_newMeth(C$, 'isFocusable', function () {
return this.isFocusTraversable();
});

Clazz_newMeth(C$, 'setFocusable$Z', function (focusable) {
var oldFocusable;
{
oldFocusable = this.focusable;
this.focusable = focusable;
}this.$isFocusTraversableOverridden = 2;
this.firePropertyChange$S$O$O("focusable", (I$[28]||$incl$(28)).$valueOf(oldFocusable), (I$[28]||$incl$(28)).$valueOf(focusable));
});

Clazz_newMeth(C$, 'isFocusTraversableOverridden', function () {
return (this.$isFocusTraversableOverridden != 1);
});

Clazz_newMeth(C$, 'getFocusTraversalKeysEnabled', function () {
return this.focusTraversalKeysEnabled;
});

Clazz_newMeth(C$, 'requestFocus', function () {
(I$[4]||$incl$(4)).requestFocus$java_awt_Component(this);
});

Clazz_newMeth(C$, 'requestFocus$Z', function (temporary) {
return (I$[4]||$incl$(4)).requestFocus$java_awt_Component(this);
});

Clazz_newMeth(C$, 'requestFocusInWindow', function () {
return (I$[4]||$incl$(4)).requestFocus$java_awt_Component(this);
});

Clazz_newMeth(C$, 'requestFocusInWindow$Z', function (temporary) {
return (I$[4]||$incl$(4)).requestFocus$java_awt_Component(this);
});

Clazz_newMeth(C$, 'getFocusCycleRootAncestor', function () {
var rootAncestor = this.parent;
while (rootAncestor != null  && !rootAncestor.isFocusCycleRoot() ){
rootAncestor = rootAncestor.parent;
}
return rootAncestor;
});

Clazz_newMeth(C$, 'isFocusCycleRoot$java_awt_Container', function (container) {
return this.isFocusCycleRootComp$java_awt_Container(container);
});

Clazz_newMeth(C$, 'isFocusCycleRootComp$java_awt_Container', function (container) {
var rootAncestor = this.getFocusCycleRootAncestor();
return (rootAncestor === container );
});

Clazz_newMeth(C$, 'hasFocus', function () {
return (I$[4]||$incl$(4)).hasFocus$java_awt_Component(this);
});

Clazz_newMeth(C$, 'isFocusOwner', function () {
return this.hasFocus();
});

Clazz_newMeth(C$, 'setAutoFocusTransferOnDisposal$Z', function (value) {
this.autoFocusTransferOnDisposal = value;
});

Clazz_newMeth(C$, 'isAutoFocusTransferOnDisposal', function () {
return this.autoFocusTransferOnDisposal;
});

Clazz_newMeth(C$, 'paramString', function () {
return this.paramStringComp();
});

Clazz_newMeth(C$, 'paramStringComp', function () {
var thisName = this.getName();
var str = (thisName != null  ? thisName : "");
if (!this.isValid()) {
str += ",invalid";
}if (!this.visible) {
str += ",hidden";
}if (!this.enabled) {
str += ",disabled";
}str += ",parent:" + (this.parent == null  ? null : this.parent.getName()) + "," + this.x + "," + this.y + "," + this.width + "x" + this.height ;
return str;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[" + this.paramString() + "]" ;
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
this.addPropChangeListenerComp$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'addPropChangeListenerComp$java_beans_PropertyChangeListener', function (listener) {
{
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport = Clazz_new_((I$[29]||$incl$(29)).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
{
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
{
if (this.changeSupport == null ) {
return Clazz_array((I$[27]||$incl$(27)), [0]);
}return this.changeSupport.getPropertyChangeListeners();
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
this.addPropChangeListComp$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'addPropChangeListComp$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
{
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport = Clazz_new_((I$[29]||$incl$(29)).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
{
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S', function (propertyName) {
{
if (this.changeSupport == null ) {
return Clazz_array((I$[27]||$incl$(27)), [0]);
}return this.changeSupport.getPropertyChangeListeners$S(propertyName);
}});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O', function (propertyName, oldValue, newValue) {
var changeSupport;
{
changeSupport = this.changeSupport;
}if (changeSupport == null  || (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
});

Clazz_newMeth(C$, 'firePropertyChange$S$Z$Z', function (propertyName, oldValue, newValue) {
var changeSupport = this.changeSupport;
if (changeSupport == null  || oldValue == newValue  ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, (I$[28]||$incl$(28)).$valueOf(oldValue), (I$[28]||$incl$(28)).$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$I$I', function (propertyName, oldValue, newValue) {
var changeSupport = this.changeSupport;
if (changeSupport == null  || oldValue == newValue ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, Integer.$valueOf(oldValue), Integer.$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$B$B', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Byte.$valueOf(($b$[0] = oldValue, $b$[0])), Byte.$valueOf(($b$[0] = newValue, $b$[0])));
});

Clazz_newMeth(C$, 'firePropertyChange$S$C$C', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Clazz_new_(java.lang.Character,[oldValue]), Clazz_new_(java.lang.Character,[newValue]));
});

Clazz_newMeth(C$, 'firePropertyChange$S$H$H', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Short.$valueOf(oldValue), Short.$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$J$J', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Long.$valueOf(oldValue), Long.$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$F$F', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue  ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Float.$valueOf(oldValue), Float.$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$D$D', function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue  ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Double.$valueOf(oldValue), Double.$valueOf(newValue));
});

Clazz_newMeth(C$, 'setComponentOrientation$java_awt_ComponentOrientation', function (o) {
var oldValue = this.componentOrientation;
this.componentOrientation = o;
this.firePropertyChange$S$O$O("componentOrientation", oldValue, o);
this.invalidateIfValid();
});

Clazz_newMeth(C$, 'getComponentOrientation', function () {
return this.componentOrientation;
});

Clazz_newMeth(C$, 'applyComponentOrientation$java_awt_ComponentOrientation', function (orientation) {
this.applyCompOrientComp$java_awt_ComponentOrientation(orientation);
});

Clazz_newMeth(C$, 'applyCompOrientComp$java_awt_ComponentOrientation', function (orientation) {
if (orientation == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.setComponentOrientation$java_awt_ComponentOrientation(orientation);
});

Clazz_newMeth(C$, 'canBeFocusOwner', function () {
if (this.isEnabled() && this.isDisplayable() && this.isVisible() && this.isFocusable()  ) {
return true;
}return false;
});

Clazz_newMeth(C$, 'canBeFocusOwnerRecursively', function () {
if (!this.canBeFocusOwner()) {
return false;
}if (this.parent != null ) {
return this.parent.canContainFocusOwner$java_awt_Component(this);
}return true;
});

Clazz_newMeth(C$, 'relocateComponent', function () {
});

Clazz_newMeth(C$, 'getContainingWindow', function () {
return (I$[30]||$incl$(30)).getContainingWindow$java_awt_Component(this);
});

Clazz_newMeth(C$, 'isInstanceOf$O$S', function (obj, className) {
if (obj == null ) return false;
if (className == null ) return false;
var cls = obj.getClass();
while (cls != null ){
if (cls.getName().equals$O(className)) {
return true;
}cls = cls.getSuperclass();
}
return false;
}, 1);

Clazz_newMeth(C$, 'areBoundsValid', function () {
var cont = this.getContainer();
return cont == null  || cont.isValid()  || cont.getLayout() == null  ;
});

Clazz_newMeth(C$, 'getLocationOnWindow', function () {
var curLocation = this.getLocation();
for (var parent = this.getContainer(); parent != null  && !(Clazz_instanceOf(parent, "java.awt.Window")) ; parent = parent.getContainer()) {
curLocation.x = curLocation.x+(parent.getX());
curLocation.y = curLocation.y+(parent.getY());
}
return curLocation;
});

Clazz_newMeth(C$, 'getSiblingIndexAbove', function () {
var parent = this.getContainer();
if (parent == null ) {
return -1;
}var nextAbove = parent.getComponentZOrder$java_awt_Component(this) - 1;
return nextAbove < 0 ? -1 : nextAbove;
});

Clazz_newMeth(C$, 'getSiblingIndexBelow', function () {
var parent = this.getContainer();
if (parent == null ) {
return -1;
}var nextBelow = parent.getComponentZOrder$java_awt_Component(this) + 1;
return nextBelow >= parent.getComponentCount() ? -1 : nextBelow;
});

Clazz_newMeth(C$, 'mixOnShowing', function () {
});

Clazz_newMeth(C$, 'mixOnHiding$Z', function (isLightweight) {
});

Clazz_newMeth(C$, 'mixOnReshaping', function () {
(I$[4]||$incl$(4)).taintUI$java_awt_Component(this);
});

Clazz_newMeth(C$, 'mixOnZOrderChanging$I$I', function (oldZorder, newZorder) {
});

Clazz_newMeth(C$, 'mixOnValidating', function () {
});

Clazz_newMeth(C$, 'doesClassImplement$Class$S', function (cls, interfaceName) {
if (cls == null ) return false;
for (var c, $c = 0, $$c = cls.getInterfaces(); $c<$$c.length&&((c=$$c[$c]),1);$c++) {
if (c.getName().equals$O(interfaceName)) {
return true;
}}
return C$.doesClassImplement$Class$S(cls.getSuperclass(), interfaceName);
}, 1);

Clazz_newMeth(C$, 'doesImplement$O$S', function (obj, interfaceName) {
if (obj == null ) return false;
if (interfaceName == null ) return false;
return C$.doesClassImplement$Class$S(obj.getClass(), interfaceName);
}, 1);
var $b$ = new Int8Array(1);
;
(function(){var C$=Clazz_newClass(P$.Component, "BaselineResizeBehavior", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "CONSTANT_ASCENT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "CONSTANT_DESCENT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "CENTER_OFFSET", 2, []);
Clazz_newEnumConst($vals, C$.c$, "OTHER", 3, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()
;
(function(){var C$=Clazz_newClass(P$.Component, "AWTTreeLock", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.Locale']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ComponentOrientation");
C$.LEFT_TO_RIGHT = null;
C$.RIGHT_TO_LEFT = null;
C$.UNKNOWN = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.LEFT_TO_RIGHT = Clazz_new_(C$.c$$I,[6]);
C$.RIGHT_TO_LEFT = Clazz_new_(C$.c$$I,[2]);
C$.UNKNOWN = Clazz_new_(C$.c$$I,[7]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.orientation = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'isHorizontal', function () {
return (this.orientation & 2) != 0;
});

Clazz_newMeth(C$, 'isLeftToRight', function () {
return (this.orientation & 4) != 0;
});

Clazz_newMeth(C$, 'getOrientation$java_util_Locale', function (locale) {
var lang = locale.getLanguage();
if ("iw".equals$O(lang) || "ar".equals$O(lang) || "fa".equals$O(lang) || "ur".equals$O(lang)  ) {
return C$.RIGHT_TO_LEFT;
} else {
return C$.LEFT_TO_RIGHT;
}}, 1);

Clazz_newMeth(C$, 'getOrientation$java_util_ResourceBundle', function (bdl) {
var result = null;
try {
result = bdl.getObject$S("Orientation");
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
if (result == null ) {
result = C$.getOrientation$java_util_Locale(bdl.getLocale());
}if (result == null ) {
result = C$.getOrientation$java_util_Locale((I$[1]||$incl$(1)).getDefault());
}return result;
}, 1);

Clazz_newMeth(C$, 'c$$I', function (value) {
C$.$init$.apply(this);
this.orientation = value;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Component','java.awt.Insets','javajs.util.Lst','java.awt.Toolkit','java.awt.event.ContainerEvent','java.awt.Dimension',['java.awt.GraphicsCallback','.PaintCallback'],['java.awt.GraphicsCallback','.PaintAllCallback'],['java.awt.GraphicsCallback','.PaintHeavyweightComponentsCallback'],'java.awt.AWTEventMulticaster','java.awt.event.ContainerListener',['java.awt.Container','.MouseEventTargetFilter'],'java.awt.LightweightDispatcher','java.awt.event.MouseEvent','java.awt.event.MouseWheelEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Container", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.JSComponent');
C$.EMPTY_ARRAY = null;
C$.NULL_INSETS = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.EMPTY_ARRAY = Clazz_array((I$[1]||$incl$(1)), [0]);
C$.NULL_INSETS = Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[0, 0, 0, 0]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.children = null;
this.layoutMgr = null;
this.dispatcher = null;
this.focusCycleRoot = false;
this.focusTraversalPolicyProvider = false;
this.containerListener = null;
this.listeningChildren = 0;
this.listeningBoundsChildren = 0;
this.descendantsCount = 0;
this.preserveBackgroundColor = null;
this.numOfHWComponents = 0;
this.numOfLWComponents = 0;
this.modalComp = null;
this.modalAppContext = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.focusCycleRoot = false;
this.preserveBackgroundColor = null;
this.numOfHWComponents = 0;
this.numOfLWComponents = 0;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.children = Clazz_new_((I$[3]||$incl$(3)));
}, 1);

Clazz_newMeth(C$, 'initializeFocusTraversalKeys', function () {
});

Clazz_newMeth(C$, 'getComponentCount', function () {
return this.countComponents();
});

Clazz_newMeth(C$, 'countComponents', function () {
return this.children.size();
});

Clazz_newMeth(C$, 'getComponent$I', function (n) {
if ((n < 0) || (n >= this.children.size()) ) {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$S,["No such child: " + n]);
}return this.children.get$I(n);
});

Clazz_newMeth(C$, 'getComponents', function () {
return this.getComponents_NoClientCode();
});

Clazz_newMeth(C$, 'getComponents_NoClientCode', function () {
return this.children.toArray$TTA(C$.EMPTY_ARRAY);
});

Clazz_newMeth(C$, 'getInsets', function () {
var i = (this.peer == null  ? null : (this.peer).getInsets());
return (i == null  ? C$.NULL_INSETS : i);
});

Clazz_newMeth(C$, 'insets', function () {
return this.getInsets();
});

Clazz_newMeth(C$, 'add$java_awt_Component', function (comp) {
return this.addImpl$java_awt_Component$O$I(comp, null, -1);
});

Clazz_newMeth(C$, 'add$S$java_awt_Component', function (name, comp) {
return this.addImpl$java_awt_Component$O$I(comp, name, -1);
});

Clazz_newMeth(C$, 'add$java_awt_Component$I', function (comp, index) {
return this.addImpl$java_awt_Component$O$I(comp, null, index);
});

Clazz_newMeth(C$, 'checkAddToSelf$java_awt_Component', function (comp) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
for (var cn = this; cn != null ; cn = cn.parent) {
if (cn === comp ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["adding container\'s parent to itself"]);
}}
}});

Clazz_newMeth(C$, 'checkNotAWindow$java_awt_Component', function (comp) {
if (Clazz_instanceOf(comp, "java.awt.Window")) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["adding a window to a container"]);
}});

Clazz_newMeth(C$, 'removeDelicately$java_awt_Component$java_awt_Container$I', function (comp, newParent, newIndex) {
var index = this.getComponentZOrder$java_awt_Component(comp);
var needRemoveNotify = C$.isRemoveNotifyNeeded$java_awt_Component$java_awt_Container$java_awt_Container(comp, this, newParent);
if (needRemoveNotify) {
comp.removeNotify();
}if (newParent !== this ) {
if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}this.adjustListeningChildren$J$I(32768, -comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, -comp.numListening$J(65536));
this.adjustDescendants$I(-(comp.countHierarchyMembers()));
comp.parent = null;
this.children.removeItemAt$I(index);
this.invalidateIfValid();
} else {
this.children.removeItemAt$I(index);
this.children.add$I$TE(newIndex, comp);
}if (comp.parent == null ) {
if (this.containerListener != null  || (this.eventMask & 2) != 0  || (I$[4]||$incl$(4)).enabledOnToolkit$J(2) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
if (this.peer != null  && this.layoutMgr == null   && this.isVisible() ) {
this.updateCursorImmediately();
}}return needRemoveNotify;
});

Clazz_newMeth(C$, 'canContainFocusOwner$java_awt_Component', function (focusOwnerCandidate) {
if (!(this.isEnabled() && this.isDisplayable() && this.isVisible() && this.isFocusable()  )) {
return false;
}{
if (this.parent != null ) {
return this.parent.canContainFocusOwner$java_awt_Component(focusOwnerCandidate);
}}return true;
});

Clazz_newMeth(C$, 'hasHeavyweightDescendants', function () {
return this.numOfHWComponents > 0;
});

Clazz_newMeth(C$, 'hasLightweightDescendants', function () {
return this.numOfLWComponents > 0;
});

Clazz_newMeth(C$, 'getHeavyweightContainer', function () {
if (this.peer != null  && !(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")) ) {
return this;
} else {
return this.getNativeContainer();
}});

Clazz_newMeth(C$, 'isRemoveNotifyNeeded$java_awt_Component$java_awt_Container$java_awt_Container', function (comp, oldContainer, newContainer) {
return false;
}, 1);

Clazz_newMeth(C$, 'setComponentZOrder$java_awt_Component$I', function (comp, index) {
{
var curParent = comp.parent;
var oldZindex = this.getComponentZOrder$java_awt_Component(comp);
if (curParent === this  && index == oldZindex ) {
return;
}var peerRecreated = (curParent != null ) ? curParent.removeDelicately$java_awt_Component$java_awt_Container$I(comp, this, index) : false;
p$.addDelicately$java_awt_Component$java_awt_Container$I.apply(this, [comp, curParent, index]);
if (!peerRecreated && oldZindex != -1 ) {
comp.mixOnZOrderChanging$I$I(oldZindex, index);
}}});

Clazz_newMeth(C$, 'reparentTraverse$java_awt_peer_ContainerPeer$java_awt_Container', function (parentPeer, child) {
p$.checkTreeLock.apply(this, []);
for (var i = 0; i < child.getComponentCount(); i++) {
var comp = child.getComponent$I(i);
if (comp.isLightweight()) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
p$.reparentTraverse$java_awt_peer_ContainerPeer$java_awt_Container.apply(this, [parentPeer, comp]);
}} else {
comp.getPeer().reparent$java_awt_peer_ContainerPeer(parentPeer);
}}
});

Clazz_newMeth(C$, 'reparentChild$java_awt_Component', function (comp) {
if (comp == null ) {
return;
}if (comp.isLightweight()) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
p$.reparentTraverse$java_awt_peer_ContainerPeer$java_awt_Container.apply(this, [this.getPeer(), comp]);
}} else {
comp.getPeer().reparent$java_awt_peer_ContainerPeer(this.getPeer());
}});

Clazz_newMeth(C$, 'addDelicately$java_awt_Component$java_awt_Container$I', function (comp, curParent, index) {
p$.checkTreeLock.apply(this, []);
if (curParent !== this ) {
if (index == -1) {
this.children.add$TE(comp);
} else {
this.children.add$I$TE(index, comp);
}comp.parent = this;
this.adjustListeningChildren$J$I(32768, comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, comp.numListening$J(65536));
this.adjustDescendants$I(comp.countHierarchyMembers());
} else {
if (index < this.children.size()) {
this.children.set$I$TE(index, comp);
}}this.invalidateIfValid();
if (this.peer != null ) {
if (comp.peer == null ) {
comp.addNotify();
} else {
var newNativeContainer = this.getHeavyweightContainer();
var oldNativeContainer = curParent.getHeavyweightContainer();
if (oldNativeContainer !== newNativeContainer ) {
newNativeContainer.reparentChild$java_awt_Component(comp);
}if (!comp.isLightweight() && this.isLightweight() ) {
comp.relocateComponent();
}}}if (curParent !== this ) {
if (this.layoutMgr != null ) {
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
(this.layoutMgr).addLayoutComponent$java_awt_Component$O(comp, null);
} else {
this.layoutMgr.addLayoutComponent$S$java_awt_Component(null, comp);
}}if (this.containerListener != null  || (this.eventMask & 2) != 0  || (I$[4]||$incl$(4)).enabledOnToolkit$J(2) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$java_awt_Component,[this, 300, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
} else {
comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1400, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
}if (this.peer != null  && this.layoutMgr == null   && this.isVisible() ) {
this.updateCursorImmediately();
}});

Clazz_newMeth(C$, 'checkTreeLock', function () {
});

Clazz_newMeth(C$, 'getComponentZOrder$java_awt_Component', function (comp) {
if (comp == null ) {
return -1;
}{
if (comp.parent !== this ) {
return -1;
}return this.children.indexOf$O(comp);
}});

Clazz_newMeth(C$, 'add$java_awt_Component$O', function (comp, constraints) {
this.addImpl$java_awt_Component$O$I(comp, constraints, -1);
});

Clazz_newMeth(C$, 'add$java_awt_Component$O$I', function (comp, constraints, index) {
return this.addImpl$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
return this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'addImplCont$java_awt_Component$O$I', function (comp, constraints, index) {
{
if (index > this.children.size() || (index < 0 && index != -1 ) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal component position"]);
}p$.checkAddToSelf$java_awt_Component.apply(this, [comp]);
p$.checkNotAWindow$java_awt_Component.apply(this, [comp]);
if (comp.parent != null ) {
comp.parent.remove$java_awt_Component(comp);
if (index > this.children.size()) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal component position"]);
}}if (index == -1) {
this.children.add$TE(comp);
} else {
this.children.add$I$TE(index, comp);
}comp.parent = this;
this.adjustListeningChildren$J$I(32768, comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, comp.numListening$J(65536));
this.adjustDescendants$I(comp.countHierarchyMembers());
this.invalidateIfValid();
if (this.peer != null ) {
comp.addNotify();
}if (this.layoutMgr != null ) {
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
(this.layoutMgr).addLayoutComponent$java_awt_Component$O(comp, constraints);
} else if (Clazz_instanceOf(constraints, "java.lang.String")) {
this.layoutMgr.addLayoutComponent$S$java_awt_Component(constraints, comp);
}}if (this.containerListener != null  || (this.eventMask & 2) != 0  || (I$[4]||$incl$(4)).enabledOnToolkit$J(2) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$java_awt_Component,[this, 300, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
if (this.peer != null  && this.layoutMgr == null   && this.isVisible() ) {
this.updateCursorImmediately();
}}return comp;
});

Clazz_newMeth(C$, 'checkGD$S', function (stringID) {
});

Clazz_newMeth(C$, 'remove$I', function (index) {
{
if (index < 0 || index >= this.children.size() ) {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[index]);
}var comp = this.children.get$I(index);
if (this.peer != null ) {
comp.removeNotify();
}if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}this.adjustListeningChildren$J$I(32768, -comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, -comp.numListening$J(65536));
this.adjustDescendants$I(-(comp.countHierarchyMembers()));
comp.parent = null;
this.children.removeItemAt$I(index);
this.invalidateIfValid();
if (this.containerListener != null  || (this.eventMask & 2) != 0  || (I$[4]||$incl$(4)).enabledOnToolkit$J(2) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
if (this.peer != null  && this.layoutMgr == null   && this.isVisible() ) {
this.updateCursorImmediately();
}}});

Clazz_newMeth(C$, 'remove$java_awt_Component', function (comp) {
{
if (comp.parent === this ) {
var index = this.children.indexOf$O(comp);
if (index >= 0) {
this.remove$I(index);
}}}});

Clazz_newMeth(C$, 'removeAll', function () {
{
this.adjustListeningChildren$J$I(32768, -this.listeningChildren);
this.adjustListeningChildren$J$I(65536, -this.listeningBoundsChildren);
this.adjustDescendants$I(-this.descendantsCount);
while (!this.children.isEmpty()){
var comp = this.children.removeItemAt$I(this.children.size() - 1);
if (this.peer != null ) {
comp.removeNotify();
}if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}comp.parent = null;
if (this.containerListener != null  || (this.eventMask & 2) != 0  || (I$[4]||$incl$(4)).enabledOnToolkit$J(2) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, (I$[4]||$incl$(4)).enabledOnToolkit$J(32768));
}
if (this.peer != null  && this.layoutMgr == null   && this.isVisible() ) {
this.updateCursorImmediately();
}this.invalidateIfValid();
}});

Clazz_newMeth(C$, 'numListening$J', function (mask) {
var superListening = this.numListeningMask$J(mask);
if (mask == 32768) {
return this.listeningChildren + superListening;
} else if (mask == 65536) {
return this.listeningBoundsChildren + superListening;
} else {
return superListening;
}});

Clazz_newMeth(C$, 'adjustListeningChildren$J$I', function (mask, num) {
if (num == 0) return;
if ((mask & 32768) != 0) {
this.listeningChildren = this.listeningChildren+(num);
}if ((mask & 65536) != 0) {
this.listeningBoundsChildren = this.listeningBoundsChildren+(num);
}this.adjustListeningChildrenOnParent$J$I(mask, num);
});

Clazz_newMeth(C$, 'adjustDescendants$I', function (num) {
if (num == 0) return;
this.descendantsCount = this.descendantsCount+(num);
this.adjustDecendantsOnParent$I(num);
});

Clazz_newMeth(C$, 'adjustDecendantsOnParent$I', function (num) {
if (this.parent != null ) {
this.parent.adjustDescendants$I(num);
}});

Clazz_newMeth(C$, 'countHierarchyMembers', function () {
return this.descendantsCount + 1;
});

Clazz_newMeth(C$, 'getListenersCount$I$Z', function (id, enabledOnToolkit) {
if (enabledOnToolkit) {
return this.descendantsCount;
}switch (id) {
case 1400:
return this.listeningChildren;
case 1401:
case 1402:
return this.listeningBoundsChildren;
default:
return 0;
}
});

Clazz_newMeth(C$, 'createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z', function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
var listeners = p$.getListenersCount$I$Z.apply(this, [id, enabledOnToolkit]);
for (var count = listeners, i = 0; count > 0; i++) {
count = count-(this.children.get$I(i).createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit));
}
return listeners + this.createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit);
});

Clazz_newMeth(C$, 'createChildHierarchyEvents$I$J$Z', function (id, changeFlags, enabledOnToolkit) {
if (this.children.isEmpty()) {
return;
}var listeners = p$.getListenersCount$I$Z.apply(this, [id, enabledOnToolkit]);
for (var count = listeners, i = 0; count > 0; i++) {
count = count-(this.children.get$I(i).createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(id, this, this.parent, changeFlags, enabledOnToolkit));
}
});

Clazz_newMeth(C$, 'getLayout', function () {
return this.layoutMgr;
});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager', function (mgr) {
this.layoutMgr = mgr;
this.invalidateIfValid();
});

Clazz_newMeth(C$, 'doLayout', function () {
this.layout();
});

Clazz_newMeth(C$, 'layout', function () {
if (this.layoutMgr != null  && this.width > 0  && this.height > 0 ) {
this.layoutMgr.layoutContainer$java_awt_Container(this);
}});

Clazz_newMeth(C$, 'invalidate', function () {
var layoutMgr = this.layoutMgr;
if (Clazz_instanceOf(layoutMgr, "java.awt.LayoutManager2")) {
var lm = layoutMgr;
lm.invalidateLayout$java_awt_Container(this);
}this.invalidateComp();
});

Clazz_newMeth(C$, 'validate', function () {
if (!this.isValid()) {
{
if (this.peer == null ) this.peer = this.getToolkit().createComponent$java_awt_Component(this);
var n = this.children.size();
if (!this.isValid() && this.peer != null   && n > 0 ) {
var p = null;
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) p = this.peer;
if (p != null ) p.beginValidate();
this.validateTree();
if (p != null ) {
p.endValidate();
if (this.isVisible()) this.updateCursorImmediately();
}}}}});

Clazz_newMeth(C$, 'repackContainer', function () {
var newSize = this.getPreferredSize();
if (this.peer != null ) {
this.setClientSize$I$I(newSize.width, newSize.height);
}this.validate();
});

Clazz_newMeth(C$, 'setClientSize$I$I', function (w, h) {
{
this.setBoundsOp$I(4);
this.setBounds$I$I$I$I(this.x, this.y, w, h);
}});

Clazz_newMeth(C$, 'validateTree', function () {
if (!this.isValid()) {
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) {
(this.peer).beginLayout();
}this.doLayout();
for (var i = 0; i < this.children.size(); i++) {
var comp = this.children.get$I(i);
if ((Clazz_instanceOf(comp, "java.awt.Container")) && !comp.isValid() ) {
(comp).validateTree();
} else {
comp.validate();
}}
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) {
(this.peer).endLayout();
}}this.validateComponent();
});

Clazz_newMeth(C$, 'invalidateTree', function () {
{
for (var i = 0; i < this.children.size(); i++) {
var comp = this.children.get$I(i);
if (Clazz_instanceOf(comp, "java.awt.Container")) {
(comp).invalidateTree();
} else {
comp.invalidateIfValid();
}}
this.invalidateIfValid();
}});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (f) {
var oldfont = this.getFont();
C$.superclazz.prototype.setFont$java_awt_Font.apply(this, [f]);
var newfont = this.getFont();
if (newfont !== oldfont  && (oldfont == null  || !oldfont.equals$O(newfont) ) ) {
this.invalidateTree();
}});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return this.preferredSize();
});

Clazz_newMeth(C$, 'preferredSize', function () {
var dim = this.prefSize;
if (dim == null  || !(this.isPreferredSizeSet() || this.isValid() ) ) {
{
this.prefSize = (this.layoutMgr != null ) ? this.layoutMgr.preferredLayoutSize$java_awt_Container(this) : this.prefSizeComp();
dim = this.prefSize;
}}return (dim == null  ? null : Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Dimension,[dim]));
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
var dim = this.minSize;
if (dim == null  || !(this.isMinimumSizeSet() || this.isValid() ) ) {
{
this.minSize = (this.layoutMgr != null ) ? this.layoutMgr.minimumLayoutSize$java_awt_Container(this) : this.minimumSize();
dim = this.minSize;
}}if (dim != null ) {
return Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Dimension,[dim]);
} else {
return dim;
}});

Clazz_newMeth(C$, 'getMaximumSize', function () {
var dim = this.maxSize;
if (dim == null  || !(this.isMaximumSizeSet() || this.isValid() ) ) {
{
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
var lm = this.layoutMgr;
this.maxSize = lm.maximumLayoutSize$java_awt_Container(this);
} else {
this.maxSize = this.getMaxSizeComp();
}dim = this.maxSize;
}}if (dim != null ) {
return Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Dimension,[dim]);
} else {
return dim;
}});

Clazz_newMeth(C$, 'getAlignmentX', function () {
var xAlign;
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
{
var lm = this.layoutMgr;
xAlign = lm.getLayoutAlignmentX$java_awt_Container(this);
}} else {
xAlign = this.getAlignmentXComp();
}return xAlign;
});

Clazz_newMeth(C$, 'getAlignmentY', function () {
var yAlign;
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
{
var lm = this.layoutMgr;
yAlign = lm.getLayoutAlignmentY$java_awt_Container(this);
}} else {
yAlign = this.getAlignmentYComp();
}return yAlign;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
(I$[7]||$incl$(7)).getInstance().runComponents$java_awt_ComponentA$java_awt_Graphics$I(this.children.toArray$TTA(C$.EMPTY_ARRAY), g, 2);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics', function (g) {
if (this.isShowing()) {
g.clearRect$I$I$I$I(0, 0, this.width, this.height);
this.paint$java_awt_Graphics(g);
}});

Clazz_newMeth(C$, 'paintComponents$java_awt_Graphics', function (g) {
if (this.isShowing()) {
(I$[8]||$incl$(8)).getInstance().runComponents$java_awt_ComponentA$java_awt_Graphics$I(this.children.toArray$TTA(C$.EMPTY_ARRAY), g, 4);
}});

Clazz_newMeth(C$, 'lightweightPaint$java_awt_Graphics', function (g) {
this.lwPaintComp$java_awt_Graphics(g);
this.paintHeavyweightComponents$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintHeavyweightComponents$java_awt_Graphics', function (g) {
if (this.isShowing()) {
(I$[9]||$incl$(9)).getInstance().runComponents$java_awt_ComponentA$java_awt_Graphics$I(this.children.toArray$TTA(C$.EMPTY_ARRAY), g, 3);
}});

Clazz_newMeth(C$, 'addContainerListener$java_awt_event_ContainerListener', function (l) {
if (l == null ) {
return;
}this.containerListener = (I$[10]||$incl$(10)).add$java_awt_event_ContainerListener$java_awt_event_ContainerListener(this.containerListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeContainerListener$java_awt_event_ContainerListener', function (l) {
if (l == null ) {
return;
}this.containerListener = (I$[10]||$incl$(10)).remove$java_awt_event_ContainerListener$java_awt_event_ContainerListener(this.containerListener, l);
});

Clazz_newMeth(C$, 'getContainerListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[11]||$incl$(11)),['componentAdded$java_awt_event_ContainerEvent','componentRemoved$java_awt_event_ContainerEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
var l = null;
if (listenerType === Clazz_getClass((I$[11]||$incl$(11)),['componentAdded$java_awt_event_ContainerEvent','componentRemoved$java_awt_event_ContainerEvent']) ) {
l = this.containerListener;
} else {
return this.getListenersComp$Class(listenerType);
}return (I$[10]||$incl$(10)).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent', function (e) {
var id = e.getID();
if (id == 300 || id == 301 ) {
if ((this.eventMask & 2) != 0 || this.containerListener != null  ) {
return true;
}return false;
}return this.eventTypeEnabled$I(e.id);
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent', function (e) {
this.processEventCont$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processEventCont$java_awt_AWTEvent', function (e) {
if (Clazz_instanceOf(e, "java.awt.event.ContainerEvent")) {
this.processContainerEvent$java_awt_event_ContainerEvent(e);
return;
}this.processEventComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processContainerEvent$java_awt_event_ContainerEvent', function (e) {
var listener = this.containerListener;
if (listener != null ) {
switch (e.getID()) {
case 300:
listener.componentAdded$java_awt_event_ContainerEvent(e);
break;
case 301:
listener.componentRemoved$java_awt_event_ContainerEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent', function (e) {
if ((this.dispatcher != null ) && this.dispatcher.dispatchEvent$java_awt_AWTEvent(e) ) {
e.consume();
if (this.peer != null ) {
this.peer.handleEvent$java_awt_AWTEvent(e);
}return;
}this.dispatchEventImplComp$java_awt_AWTEvent(e);
{
switch (e.getID()) {
case 101:
break;
case 100:
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'dispatchEventToSelf$java_awt_AWTEvent', function (e) {
this.dispatchEventImplComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'getMouseEventTarget$I$I$Z', function (x, y, includeSelf) {
return p$.getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z.apply(this, [x, y, includeSelf, (I$[12]||$incl$(12)).FILTER, false]);
});

Clazz_newMeth(C$, 'getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z', function (x, y, includeSelf, filter, searchHeavyweights) {
var comp = null;
if (comp == null  || comp === this  ) {
comp = p$.getMouseEventTargetImpl$I$I$Z$java_awt_Container_EventTargetFilter$Z$Z.apply(this, [x, y, includeSelf, filter, false, searchHeavyweights]);
}return comp;
});

Clazz_newMeth(C$, 'getMouseEventTargetImpl$I$I$Z$java_awt_Container_EventTargetFilter$Z$Z', function (x, y, includeSelf, filter, searchHeavyweightChildren, searchHeavyweightDescendants) {
{
for (var i = 0; i < this.children.size(); i++) {
var comp = this.children.get$I(i);
if (comp != null  && comp.visible  && ((!searchHeavyweightChildren && Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer") ) || (searchHeavyweightChildren && !(Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer")) ) )  && comp.contains$I$I(x - comp.x, y - comp.y) ) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var child = comp;
var deeper = child.getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z(x - child.x, y - child.y, includeSelf, filter, searchHeavyweightDescendants);
if (deeper != null ) {
return deeper;
}} else {
if (filter.accept$java_awt_Component(comp)) {
return comp;
}}}}
var isPeerOK;
var isMouseOverMe;
isPeerOK = includeSelf;
isMouseOverMe = this.contains$I$I(x, y);
if (isMouseOverMe && isPeerOK && filter.accept$java_awt_Component(this)  ) {
return this;
}return null;
}});

Clazz_newMeth(C$, 'proxyEnableEvents$J', function (events) {
if (this.parent != null ) {
this.parent.proxyEnableEvents$J(events);
}if (this.dispatcher != null ) {
this.dispatcher.enableEvents$J(events);
}});

Clazz_newMeth(C$, 'deliverEvent$java_awt_Event', function (e) {
var comp = this.getComponentAt$I$I(e.x, e.y);
if ((comp != null ) && (comp !== this ) ) {
e.translate$I$I(-comp.x, -comp.y);
comp.deliverEvent$java_awt_Event(e);
} else {
this.postEvent$java_awt_Event(e);
}});

Clazz_newMeth(C$, 'getComponentAt$I$I', function (x, y) {
return this.locate$I$I(x, y);
});

Clazz_newMeth(C$, 'locate$I$I', function (x, y) {
return this;
});

Clazz_newMeth(C$, 'getComponentAt$java_awt_Point', function (p) {
return this.getComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'getMousePosition$Z', function (allowChildren) {
return null;
});

Clazz_newMeth(C$, 'isSameOrAncestorOf$java_awt_Component$Z', function (comp, allowChildren) {
return this === comp  || (allowChildren && p$.isParentOf$java_awt_Component.apply(this, [comp]) ) ;
});

Clazz_newMeth(C$, 'findComponentAt$I$I', function (x, y) {
{
return this.findComponentAt$I$I$Z(x, y, true);
}});

Clazz_newMeth(C$, 'findComponentAt$I$I$Z', function (x, y, ignoreEnabled) {
return null;
});

Clazz_newMeth(C$, 'findComponentAt$java_awt_Point', function (p) {
return this.findComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'addNotify', function () {
{
this.addNotifyComp();
if (!(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer"))) {
this.setDispatcher();
}for (var i = 0; i < this.children.size(); i++) {
this.children.get$I(i).addNotify();
}
}});

Clazz_newMeth(C$, 'setDispatcher', function () {
this.dispatcher = Clazz_new_((I$[13]||$incl$(13)).c$$java_awt_Container,[this]);
});

Clazz_newMeth(C$, 'removeNotify', function () {
for (var i = this.children.size(); --i >= 0; ) {
var comp = this.children.get$I(i);
if (comp != null ) {
comp.setAutoFocusTransferOnDisposal$Z(false);
comp.removeNotify();
comp.setAutoFocusTransferOnDisposal$Z(true);
}}
if (this.dispatcher != null ) {
this.dispatcher.dispose();
this.dispatcher = null;
}this.removeNotifyComp();
});

Clazz_newMeth(C$, 'isAncestorOf$java_awt_Component', function (c) {
var p;
if (c == null  || ((p = c.getParent()) == null ) ) {
return false;
}while (p != null ){
if (p === this ) {
return true;
}p = p.getParent();
}
return false;
});

Clazz_newMeth(C$, 'paramString', function () {
var str = this.paramStringComp();
var layoutMgr = this.layoutMgr;
if (layoutMgr != null ) {
str += ",layout=" + layoutMgr.getClass().getName();
}return str;
});

Clazz_newMeth(C$, 'setFocusTraversalKeys$I$java_util_Set', function (id, keystrokes) {
});

Clazz_newMeth(C$, 'getFocusTraversalKeys$I', function (id) {
return null;
});

Clazz_newMeth(C$, 'areFocusTraversalKeysSet$I', function (id) {
return false;
});

Clazz_newMeth(C$, 'isFocusCycleRoot$java_awt_Container', function (container) {
if (this.isFocusCycleRoot() && container === this  ) {
return true;
} else {
return this.isFocusCycleRootComp$java_awt_Container(container);
}});

Clazz_newMeth(C$, 'containsFocus', function () {
return false;
});

Clazz_newMeth(C$, 'isParentOf$java_awt_Component', function (comp) {
{
while (comp != null  && comp !== this   && !(Clazz_instanceOf(comp, "java.awt.Window")) ){
comp = comp.getParent();
}
return (comp === this );
}});

Clazz_newMeth(C$, 'clearMostRecentFocusOwnerOnHide', function () {
});

Clazz_newMeth(C$, 'clearCurrentFocusCycleRootOnHide', function () {
});

Clazz_newMeth(C$, 'getTraversalRoot', function () {
return null;
});

Clazz_newMeth(C$, 'isFocusCycleRoot', function () {
return this.focusCycleRoot;
});

Clazz_newMeth(C$, 'setFocusTraversalPolicyProvider$Z', function (provider) {
var oldProvider;
{
oldProvider = this.focusTraversalPolicyProvider;
this.focusTraversalPolicyProvider = provider;
}this.firePropertyChange$S$Z$Z("focusTraversalPolicyProvider", oldProvider, provider);
});

Clazz_newMeth(C$, 'isFocusTraversalPolicyProvider', function () {
return this.focusTraversalPolicyProvider;
});

Clazz_newMeth(C$, 'transferFocusDownCycle', function () {
});

Clazz_newMeth(C$, 'preProcessKeyEvent$java_awt_event_KeyEvent', function (e) {
var parent = this.parent;
if (parent != null ) {
parent.preProcessKeyEvent$java_awt_event_KeyEvent(e);
}});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent', function (e) {
var parent = this.parent;
if (parent != null ) {
parent.postProcessKeyEvent$java_awt_event_KeyEvent(e);
}});

Clazz_newMeth(C$, 'postsOldMouseEvents', function () {
return true;
});

Clazz_newMeth(C$, 'applyComponentOrientation$java_awt_ComponentOrientation', function (o) {
this.applyCompOrientComp$java_awt_ComponentOrientation(o);
{
for (var i = 0; i < this.children.size(); i++) {
var comp = this.children.get$I(i);
comp.applyComponentOrientation$java_awt_ComponentOrientation(o);
}
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
this.addPropChangeListenerComp$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
this.addPropChangeListComp$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'increaseComponentCount$java_awt_Component', function (c) {
if (!c.isDisplayable()) {
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Peer does not exist while invoking the increaseComponentCount() method"]);
}var addHW = 0;
var addLW = 0;
if (Clazz_instanceOf(c, "java.awt.Container")) {
addLW = (c).numOfLWComponents;
addHW = (c).numOfHWComponents;
}if (c.isLightweight()) {
addLW++;
} else {
addHW++;
}for (var cont = this; cont != null ; cont = cont.getContainer()) {
cont.numOfLWComponents = cont.numOfLWComponents+(addLW);
cont.numOfHWComponents = cont.numOfHWComponents+(addHW);
}
});

Clazz_newMeth(C$, 'decreaseComponentCount$java_awt_Component', function (c) {
if (!c.isDisplayable()) {
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Peer does not exist while invoking the decreaseComponentCount() method"]);
}var subHW = 0;
var subLW = 0;
if (Clazz_instanceOf(c, "java.awt.Container")) {
subLW = (c).numOfLWComponents;
subHW = (c).numOfHWComponents;
}if (c.isLightweight()) {
subLW++;
} else {
subHW++;
}for (var cont = this; cont != null ; cont = cont.getContainer()) {
cont.numOfLWComponents = cont.numOfLWComponents-(subLW);
cont.numOfHWComponents = cont.numOfHWComponents-(subHW);
}
});
;
(function(){var C$=Clazz_newInterface(P$.Container, "EventTargetFilter", function(){
});
})()
;
(function(){var C$=Clazz_newClass(P$.Container, "MouseEventTargetFilter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.awt.Container','java.awt.Container.EventTargetFilter']]);
C$.FILTER = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.FILTER = Clazz_new_(C$);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'accept$java_awt_Component', function (comp) {
return (comp.eventMask & 32) != 0 || (comp.eventMask & 16) != 0  || (comp.eventMask & 131072) != 0  || comp.mouseListener != null   || comp.mouseMotionListener != null   || comp.mouseWheelListener != null  ;
});
})()
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "Dimension", null, 'java.awt.geom.Dimension2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.width = 0;
this.height = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dimension', function (d) {
C$.c$$I$I.apply(this, [d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (width, height) {
Clazz_super_(C$, this,1);
this.width = width;
this.height = height;
}, 1);

Clazz_newMeth(C$, 'getWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.height;
});

Clazz_newMeth(C$, 'getSize', function () {
return Clazz_new_(C$.c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension', function (d) {
this.width = d.width;
this.height = d.height;
});

Clazz_newMeth(C$, 'setSize$I$I', function (width, height) {
this.width = width;
this.height = height;
});

Clazz_newMeth(C$, 'setSize$D$D', function (width, height) {
this.width = (Math.ceil(width)|0);
this.height = (Math.ceil(height)|0);
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Dimension")) {
var d = obj;
return (this.width == d.width) && (this.height == d.height) ;
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
var sum = this.width + this.height;
return (sum * (sum + 1)/2|0) + this.width;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[width=" + this.width + ",height=" + this.height + "]" ;
});
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "ActionListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:56
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "AdjustmentListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:56
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "AWTEventListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:56
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newClass(P$, "ComponentEvent", null, 'java.awt.AWTEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I', function (source, id) {
C$.superclazz.c$$O$I.apply(this, [source, id]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getComponent', function () {
return (Clazz_instanceOf(this.source, "java.awt.Component")) ? this.source : null;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
var b = (this.source != null  ? (this.source).getBounds() : null);
switch (this.id) {
case 102:
typeStr = "COMPONENT_SHOWN";
break;
case 103:
typeStr = "COMPONENT_HIDDEN";
break;
case 100:
typeStr = "COMPONENT_MOVED (" + b.x + "," + b.y + " " + b.width + "x" + b.height + ")" ;
break;
case 101:
typeStr = "COMPONENT_RESIZED (" + b.x + "," + b.y + " " + b.width + "x" + b.height + ")" ;
break;
default:
typeStr = "unknown type";
}
return typeStr;
});
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "ComponentListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "ContainerListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "FocusListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "HierarchyBoundsListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "HierarchyListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[['java.lang.StringBuilder','java.awt.Toolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "InputEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.when = 0;
this.modifiers = 0;
this.canAccessSystemClipboard = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I', function (source, id, when, modifiers) {
C$.superclazz.c$$java_awt_Component$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.when = when;
this.modifiers = modifiers;
this.canAccessSystemClipboard = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isShiftDown', function () {
return (this.modifiers & 1) != 0;
});

Clazz_newMeth(C$, 'isControlDown', function () {
return (this.modifiers & 2) != 0;
});

Clazz_newMeth(C$, 'isMetaDown', function () {
return (this.modifiers & 4) != 0;
});

Clazz_newMeth(C$, 'isAltDown', function () {
return (this.modifiers & 8) != 0;
});

Clazz_newMeth(C$, 'isAltGraphDown', function () {
return (this.modifiers & 32) != 0;
});

Clazz_newMeth(C$, 'getWhen', function () {
return this.when;
});

Clazz_newMeth(C$, 'getModifiers', function () {
return this.modifiers & -16321;
});

Clazz_newMeth(C$, 'getModifiersEx', function () {
return this.modifiers & -64;
});

Clazz_newMeth(C$, 'consume', function () {
{
if (this.bdata && this.bdata.jqevent) { this.bdata.jqevent.stopPropagation();
this.bdata.jqevent.preventDefault();
}
}
this.consumed = true;
});

Clazz_newMeth(C$, 'isConsumed', function () {
return this.consumed;
});

Clazz_newMeth(C$, 'getModifiersExText$I', function (modifiers) {
var buf = Clazz_new_((I$[1]||$incl$(1)));
if ((modifiers & 256) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.meta", "Meta"));
buf.append$S("+");
}if ((modifiers & 128) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.control", "Ctrl"));
buf.append$S("+");
}if ((modifiers & 512) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.alt", "Alt"));
buf.append$S("+");
}if ((modifiers & 64) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.shift", "Shift"));
buf.append$S("+");
}if ((modifiers & 8192) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.altGraph", "Alt Graph"));
buf.append$S("+");
}if ((modifiers & 1024) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.button1", "Button1"));
buf.append$S("+");
}if ((modifiers & 2048) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.button2", "Button2"));
buf.append$S("+");
}if ((modifiers & 4096) != 0) {
buf.append$S((I$[2]||$incl$(2)).getProperty$S$S("AWT.button3", "Button3"));
buf.append$S("+");
}if (buf.length$() > 0) {
buf.setLength$I(buf.length$() - 1);
}return buf.toString();
}, 1);
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "InputMethodListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newClass(P$, "InvocationEvent", null, 'java.awt.AWTEvent', 'java.awt.ActiveEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.runnable = null;
this.notifier = null;
this.catchExceptions = false;
this.exception = null;
this.throwable = null;
this.when = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.exception = null;
this.throwable = null;
}, 1);

Clazz_newMeth(C$, 'c$$O$Runnable', function (source, runnable) {
C$.c$$O$I$Runnable$O$Z.apply(this, [source, 1200, runnable, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$O$Runnable$O$Z', function (source, runnable, notifier, catchThrowables) {
C$.c$$O$I$Runnable$O$Z.apply(this, [source, 1200, runnable, notifier, catchThrowables]);
}, 1);

Clazz_newMeth(C$, 'c$$O$I$Runnable$O$Z', function (source, id, runnable, notifier, catchThrowables) {
C$.superclazz.c$$O$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.runnable = runnable;
this.notifier = notifier;
this.catchExceptions = catchThrowables;
this.when = System.currentTimeMillis();
}, 1);

Clazz_newMeth(C$, 'dispatch', function () {
if (this.catchExceptions) {
try {
this.runnable.run();
} catch (t) {
if (Clazz_instanceOf(t, "java.lang.Exception")) {
this.exception = t;
}this.throwable = t;
}
} else {
this.runnable.run();
}if (this.notifier != null ) {
{
this.notifier.notifyAll();
}}});

Clazz_newMeth(C$, 'getException', function () {
return (this.catchExceptions) ? this.exception : null;
});

Clazz_newMeth(C$, 'getThrowable', function () {
return (this.catchExceptions) ? this.throwable : null;
});

Clazz_newMeth(C$, 'getWhen', function () {
return this.when;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
switch (this.id) {
case 1200:
typeStr = "INVOCATION_DEFAULT";
break;
default:
typeStr = "unknown type";
}
return typeStr + ",runnable=" + this.runnable + ",notifier=" + this.notifier + ",catchExceptions=" + this.catchExceptions + ",when=" + this.when ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "ItemListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "KeyListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[['java.awt.Point','java.lang.StringBuilder','java.awt.Toolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "MouseEvent", null, 'java.awt.event.InputEvent');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
this.xAbs = 0;
this.yAbs = 0;
this.clickCount = 0;
this.button = 0;
this.popupTrigger = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.popupTrigger = false;
}, 1);

Clazz_newMeth(C$, 'getLocationOnScreen', function () {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[this.xAbs, this.yAbs]);
});

Clazz_newMeth(C$, 'getXOnScreen', function () {
return this.xAbs;
});

Clazz_newMeth(C$, 'getYOnScreen', function () {
return this.yAbs;
});

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$Z$I', function (source, id, when, modifiers, x, y, clickCount, popupTrigger, button) {
C$.c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I.apply(this, [source, id, when, modifiers, x, y, 0, 0, clickCount, popupTrigger, button]);
var eventLocationOnScreen = Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
try {
eventLocationOnScreen = source.getLocationOnScreen();
this.xAbs = eventLocationOnScreen.x + x;
this.yAbs = eventLocationOnScreen.y + y;
} catch (e) {
if (Clazz_exceptionOf(e, "java.awt.IllegalComponentStateException")){
this.xAbs = 0;
this.yAbs = 0;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$Z', function (source, id, when, modifiers, x, y, clickCount, popupTrigger) {
C$.c$$java_awt_Component$I$J$I$I$I$I$Z$I.apply(this, [source, id, when, modifiers, x, y, clickCount, popupTrigger, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I', function (source, id, when, modifiers, x, y, xAbs, yAbs, clickCount, popupTrigger, button) {
C$.superclazz.c$$java_awt_Component$I$J$I.apply(this, [source, id, when, modifiers]);
C$.$init$.apply(this);
this.x = x;
this.y = y;
this.xAbs = xAbs;
this.yAbs = yAbs;
this.clickCount = clickCount;
this.popupTrigger = popupTrigger;
if (button < 0 || button > 3 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Invalid button value"]);
}this.button = button;
if ((this.getModifiers() != 0) && (this.getModifiersEx() == 0) ) {
p$.setNewModifiers.apply(this, []);
} else if ((this.getModifiers() == 0) && (this.getModifiersEx() != 0 || button != 0 ) ) {
p$.setOldModifiers.apply(this, []);
}}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getPoint', function () {
var x;
var y;
{
x = this.x;
y = this.y;
}return Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[x, y]);
});

Clazz_newMeth(C$, 'translatePoint$I$I', function (x, y) {
this.x = this.x+(x);
this.y = this.y+(y);
});

Clazz_newMeth(C$, 'getClickCount', function () {
return this.clickCount;
});

Clazz_newMeth(C$, 'getButton', function () {
return this.button;
});

Clazz_newMeth(C$, 'isPopupTrigger', function () {
return this.popupTrigger;
});

Clazz_newMeth(C$, 'getMouseModifiersText$I', function (modifiers) {
var buf = Clazz_new_((I$[2]||$incl$(2)));
if ((modifiers & 8) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.alt", "Alt"));
buf.append$S("+");
}if ((modifiers & 4) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.meta", "Meta"));
buf.append$S("+");
}if ((modifiers & 2) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.control", "Ctrl"));
buf.append$S("+");
}if ((modifiers & 1) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.shift", "Shift"));
buf.append$S("+");
}if ((modifiers & 32) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.altGraph", "Alt Graph"));
buf.append$S("+");
}if ((modifiers & 16) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.button1", "Button1"));
buf.append$S("+");
}if ((modifiers & 8) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.button2", "Button2"));
buf.append$S("+");
}if ((modifiers & 4) != 0) {
buf.append$S((I$[3]||$incl$(3)).getProperty$S$S("AWT.button3", "Button3"));
buf.append$S("+");
}if (buf.length$() > 0) {
buf.setLength$I(buf.length$() - 1);
}return buf.toString();
}, 1);

Clazz_newMeth(C$, 'paramString', function () {
var str = Clazz_new_((I$[2]||$incl$(2)).c$$I,[80]);
str.append$S(C$.getIdString$I(this.id));
str.append$S(",(" + this.x).append$S("," + this.y).append$S("," + this.when).append$S(")");
str.append$S(",absolute(").append$S("" + this.xAbs).append$S(",").append$S("" + this.yAbs).append$S(")");
str.append$S(",button=").append$S("" + this.getButton());
if (this.getModifiers() != 0) {
str.append$S(",modifiers=").append$S(C$.getMouseModifiersText$I(this.modifiers));
}if (this.getModifiersEx() != 0) {
str.append$S(",extModifiers=").append$S(P$.InputEvent.getModifiersExText$I(this.modifiers));
}str.append$S(",clickCount=").append$S("" + this.clickCount);
return str.toString();
});

Clazz_newMeth(C$, 'getIdString$I', function (id) {
switch (id) {
case 501:
return "MOUSE_PRESSED";
case 502:
return "MOUSE_RELEASED";
case 500:
return "MOUSE_CLICKED";
case 504:
return "MOUSE_ENTERED";
case 505:
return "MOUSE_EXITED";
case 503:
return "MOUSE_MOVED";
case 506:
return "MOUSE_DRAGGED";
case 507:
return "MOUSE_WHEEL";
default:
return "unknown type";
}
}, 1);

Clazz_newMeth(C$, 'setNewModifiers', function () {
if ((this.modifiers & 16) != 0) {
this.modifiers = this.modifiers|(1024);
}if ((this.modifiers & 8) != 0) {
this.modifiers = this.modifiers|(2048);
}if ((this.modifiers & 4) != 0) {
this.modifiers = this.modifiers|(4096);
}if (this.id == 501 || this.id == 502  || this.id == 500 ) {
if ((this.modifiers & 16) != 0) {
this.button = 1;
this.modifiers = this.modifiers&(-13);
if (this.id != 501) {
this.modifiers = this.modifiers&(-1025);
}} else if ((this.modifiers & 8) != 0) {
this.button = 2;
this.modifiers = this.modifiers&(-21);
if (this.id != 501) {
this.modifiers = this.modifiers&(-2049);
}} else if ((this.modifiers & 4) != 0) {
this.button = 3;
this.modifiers = this.modifiers&(-25);
if (this.id != 501) {
this.modifiers = this.modifiers&(-4097);
}}}if ((this.modifiers & 8) != 0) {
this.modifiers = this.modifiers|(512);
}if ((this.modifiers & 4) != 0) {
this.modifiers = this.modifiers|(256);
}if ((this.modifiers & 1) != 0) {
this.modifiers = this.modifiers|(64);
}if ((this.modifiers & 2) != 0) {
this.modifiers = this.modifiers|(128);
}if ((this.modifiers & 32) != 0) {
this.modifiers = this.modifiers|(8192);
}});

Clazz_newMeth(C$, 'setOldModifiers', function () {
if (this.id == 501 || this.id == 502  || this.id == 500 ) {
switch (this.button) {
case 1:
this.modifiers = this.modifiers|(16);
break;
case 2:
this.modifiers = this.modifiers|(8);
break;
case 3:
this.modifiers = this.modifiers|(4);
break;
}
} else {
if ((this.modifiers & 1024) != 0) {
this.modifiers = this.modifiers|(16);
}if ((this.modifiers & 2048) != 0) {
this.modifiers = this.modifiers|(8);
}if ((this.modifiers & 4096) != 0) {
this.modifiers = this.modifiers|(4);
}}if ((this.modifiers & 512) != 0) {
this.modifiers = this.modifiers|(8);
}if ((this.modifiers & 256) != 0) {
this.modifiers = this.modifiers|(4);
}if ((this.modifiers & 64) != 0) {
this.modifiers = this.modifiers|(1);
}if ((this.modifiers & 128) != 0) {
this.modifiers = this.modifiers|(2);
}if ((this.modifiers & 8192) != 0) {
this.modifiers = this.modifiers|(32);
}});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "MouseListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "MouseMotionListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "MouseWheelListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "TextListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "WindowFocusListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "WindowListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newInterface(P$, "WindowStateListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Component',['java.awt.EventFilter','.FilterAction'],'sun.awt.SunToolkit','javajs.util.Lst','java.awt.EventDispatchThread$1','swingjs.JSToolkit',['java.awt.EventDispatchThread','.StopDispatchEvent'],'Thread',['java.awt.EventDispatchThread','.HierarchyEventFilter'],'sun.awt.AWTAutoShutdown']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "EventDispatchThread", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javajs.util.JSThread');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.theQueue = null;
this.eventFilters = null;
this.modalFiltersCount = 0;
this.filter = null;
this.cond = null;
this.id = 0;
this.doDispatch = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.eventFilters = Clazz_new_((I$[4]||$incl$(4)));
this.modalFiltersCount = 0;
this.doDispatch = true;
}, 1);

Clazz_newMeth(C$, 'myInit', function () {
this.addEventFilter$java_awt_EventFilter(this.filter);
return true;
});

Clazz_newMeth(C$, 'isLooping', function () {
return (this.doDispatch && (this.cond == null  || this.cond.evaluate() ) && !this.isInterrupted()   || (this.doDispatch = false) );
});

Clazz_newMeth(C$, 'myLoop', function () {
var myid = this.id;
var r = ((
(function(){var C$=Clazz_newClass(P$, "EventDispatchThread$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
this.b$['java.awt.EventDispatchThread'].pumpOneEventForFilters$I(this.$finals.myid);
});
})()
), Clazz_new_((I$[5]||$incl$(5)).$init$, [this, {myid: myid}]));
var f = null;
var me = this;
var mode = 1;
{
f = function() {r.run();me.run1$I(mode)};
}
(I$[6]||$incl$(6)).dispatch$O$I$I(f, 0, 0);
return (this.doDispatch = false);
});

Clazz_newMeth(C$, 'getDelayMillis', function () {
return 0;
});

Clazz_newMeth(C$, 'whenDone', function () {
});

Clazz_newMeth(C$, 'doFinally', function () {
if (!this.doDispatch) p$.finish.apply(this, []);
});

Clazz_newMeth(C$, 'onException$Exception', function (e) {
});

Clazz_newMeth(C$, 'c$$ThreadGroup$S$java_awt_EventQueue', function (group, name, queue) {
C$.superclazz.c$$ThreadGroup$S.apply(this, [group, name]);
C$.$init$.apply(this);
this.theQueue = queue;
}, 1);

Clazz_newMeth(C$, 'stopDispatchingImpl$Z', function (wait) {
var stopEvent = Clazz_new_((I$[7]||$incl$(7)), [this, null]);
if ((I$[8]||$incl$(8)).currentThread() !== this ) {
this.theQueue.postEventPrivate$java_awt_AWTEvent(stopEvent);
if (wait) {
try {
this.join();
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.InterruptedException")){
} else {
throw e;
}
}
}} else {
stopEvent.dispatch();
}{
if (this.theQueue.getDispatchThread() === this ) {
this.theQueue.detachDispatchThread();
}}});

Clazz_newMeth(C$, 'stopDispatching', function () {
this.stopDispatchingImpl$Z(true);
});

Clazz_newMeth(C$, 'stopDispatchingLater', function () {
this.stopDispatchingImpl$Z(false);
});

Clazz_newMeth(C$, 'start', function () {
C$.superclazz.prototype.start.apply(this, []);
});

Clazz_newMeth(C$, 'run', function () {
this.pumpEvents$I$java_awt_Conditional(-1, null);
});

Clazz_newMeth(C$, 'pumpEvents$I$java_awt_Conditional', function (id, cond) {
this.pumpEventsForHierarchy$I$java_awt_Conditional$java_awt_Component(id, cond, null);
});

Clazz_newMeth(C$, 'pumpEventsForHierarchy$I$java_awt_Conditional$java_awt_Component', function (id, cond, modalComponent) {
this.pumpEventsForFilter$I$java_awt_Conditional$java_awt_EventFilter(id, cond, Clazz_new_((I$[9]||$incl$(9)).c$$java_awt_Component,[modalComponent]));
});

Clazz_newMeth(C$, 'pumpEventsForFilter$I$java_awt_Conditional$java_awt_EventFilter', function (id, cond, filter) {
this.filter = filter;
this.cond = cond;
this.id = id;
this.run1$I(0);
});

Clazz_newMeth(C$, 'dispatchAndReturn$Runnable$I', function (r, mode) {
var f = null;
var me = this;
{
f = function() {r.run();me.run1$I(mode) };
}
(I$[6]||$incl$(6)).dispatch$O$I$I(f, 0, 0);
});

Clazz_newMeth(C$, 'finish', function () {
this.doDispatch = false;
this.removeEventFilter$java_awt_EventFilter(this.filter);
{
if (this.theQueue.getDispatchThread() === this ) {
this.theQueue.detachDispatchThread();
}if (this.theQueue.peekEvent() != null  || !(I$[3]||$incl$(3)).isPostEventQueueEmpty() ) {
this.theQueue.initDispatchThread();
}(I$[10]||$incl$(10)).getInstance().notifyThreadFree$Thread(this);
}});

Clazz_newMeth(C$, 'addEventFilter$java_awt_EventFilter', function (filter) {
{
if (!this.eventFilters.contains$O(filter)) {
if (Clazz_instanceOf(filter, "java.awt.ModalEventFilter")) {
var newFilter = filter;
var k = 0;
for (k = 0; k < this.eventFilters.size(); k++) {
var f = this.eventFilters.get$I(k);
if (Clazz_instanceOf(f, "java.awt.ModalEventFilter")) {
var cf = f;
if (cf.compareTo$java_awt_ModalEventFilter(newFilter) > 0) {
break;
}}}
this.eventFilters.add$I$TE(k, filter);
this.modalFiltersCount++;
} else {
this.eventFilters.addLast$TV(filter);
}}}});

Clazz_newMeth(C$, 'removeEventFilter$java_awt_EventFilter', function (filter) {
{
if (this.eventFilters.contains$O(filter)) {
if (Clazz_instanceOf(filter, "java.awt.ModalEventFilter")) {
this.modalFiltersCount--;
}this.eventFilters.removeObj$O(filter);
}}});

Clazz_newMeth(C$, 'pumpOneEventForFilters$I', function (id) {
try {
var event;
var eventOK;
do {
event = (id == -1) ? this.theQueue.getNextEvent() : this.theQueue.getNextEventForID$I(id);
if (event == null ) return (this.doDispatch = false);
eventOK = true;
{
for (var i = this.eventFilters.size() - 1; i >= 0; i--) {
var f = this.eventFilters.get$I(i);
var accept = f.acceptEvent$java_awt_AWTEvent(event);
if (accept === (I$[2]||$incl$(2)).REJECT ) {
eventOK = false;
break;
} else if (accept === (I$[2]||$incl$(2)).ACCEPT_IMMEDIATELY ) {
break;
}}
}if (!eventOK) {
event.consume();
}} while (eventOK == false );
this.theQueue.dispatchEvent$java_awt_AWTEvent(event);
return this.doDispatch = true;
} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.lang.ThreadDeath")){
var death = e$$;
{
return this.doDispatch = false;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.InterruptedException")){
var interruptedException = e$$;
{
return this.doDispatch = false;
}
} else {
var e = e$$;
{
p$.processException$Throwable$Z.apply(this, [e, this.modalFiltersCount > 0]);
}
}
}
return this.doDispatch = true;
});

Clazz_newMeth(C$, 'processException$Throwable$Z', function (e, isModal) {
if (!p$.handleException$Throwable.apply(this, [e])) {
if (isModal) {
System.err.println$S("Exception occurred during event dispatching:");
e.printStackTrace();
} else if (Clazz_instanceOf(e, "java.lang.RuntimeException")) {
throw e;
} else if (Clazz_instanceOf(e, "java.lang.Error")) {
throw e;
}}});

Clazz_newMeth(C$, 'handleException$Throwable', function (thrown) {
return false;
});

Clazz_newMeth(C$, 'isDispatching$java_awt_EventQueue', function (eq) {
return this.theQueue.equals$O(eq);
});

Clazz_newMeth(C$, 'getEventQueue', function () {
return this.theQueue;
});
;
(function(){var C$=Clazz_newClass(P$.EventDispatchThread, "StopDispatchEvent", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.awt.AWTEvent', 'java.awt.ActiveEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$$O$I.apply(this, [this.this$0, 0]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'dispatch', function () {
this.this$0.doDispatch = false;
});
})()
;
(function(){var C$=Clazz_newClass(P$.EventDispatchThread, "HierarchyEventFilter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.awt.EventFilter');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.modalComponent = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component', function (modalComponent) {
C$.$init$.apply(this);
this.modalComponent = modalComponent;
}, 1);

Clazz_newMeth(C$, 'acceptEvent$java_awt_AWTEvent', function (event) {
if (this.modalComponent != null ) {
var eventID = event.getID();
var mouseEvent = (eventID >= 500) && (eventID <= 507) ;
var actionEvent = (eventID >= 1001) && (eventID <= 1001) ;
var windowClosingEvent = (eventID == 201);
if ((I$[1]||$incl$(1)).isInstanceOf$O$S(this.modalComponent, "javax.swing.JInternalFrame")) {
return windowClosingEvent ? (I$[2]||$incl$(2)).REJECT : (I$[2]||$incl$(2)).ACCEPT;
}if (mouseEvent || actionEvent || windowClosingEvent  ) {
var o = event.getSource();
if (Clazz_instanceOf(o, "sun.awt.ModalExclude")) {
return (I$[2]||$incl$(2)).ACCEPT;
} else if (Clazz_instanceOf(o, "java.awt.Component")) {
var c = o;
var modalExcluded = false;
if (Clazz_instanceOf(this.modalComponent, "java.awt.Container")) {
while (c !== this.modalComponent  && c != null  ){
if ((Clazz_instanceOf(c, "java.awt.Window")) && ((I$[3]||$incl$(3)).isModalExcluded$java_awt_Window(c)) ) {
modalExcluded = true;
break;
}c = c.getParent();
}
}if (!modalExcluded && (c !== this.modalComponent ) ) {
return (I$[2]||$incl$(2)).REJECT;
}}}}return (I$[2]||$incl$(2)).ACCEPT;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "EventFilter");
;
(function(){var C$=Clazz_newClass(P$.EventFilter, "FilterAction", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "ACCEPT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "REJECT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "ACCEPT_IMMEDIATELY", 2, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Queue','Thread','sun.awt.SunToolkit','sun.awt.AWTAutoShutdown','java.awt.EventQueueItem','swingjs.JSToolkit','java.awt.Toolkit','sun.awt.AppContext','java.awt.EventDispatchThread','java.awt.event.InvocationEvent','java.lang.Error']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "EventQueue");
C$.threadInitNumber = 0;
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.queues = null;
this.nextQueue = null;
this.previousQueue = null;
this.dispatchThread = null;
this.threadGroup = null;
this.mostRecentEventTime = 0;
this.currentEvent = null;
this.waitForID = 0;
this.name = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.queues = Clazz_array((I$[1]||$incl$(1)), [4]);
this.threadGroup = (I$[2]||$incl$(2)).currentThread().getThreadGroup();
this.mostRecentEventTime = System.currentTimeMillis();
this.name = "AWT-EventQueue-" + C$.nextThreadNum();
}, 1);

Clazz_newMeth(C$, 'nextThreadNum', function () {
return C$.threadInitNumber++;
}, 1);

Clazz_newMeth(C$, 'noEvents$java_awt_EventQueue', function (eventQueue) {
return eventQueue.noEvents();
}, 1);

Clazz_newMeth(C$, 'getNextQueue$java_awt_EventQueue', function (eventQueue) {
return eventQueue.nextQueue;
}, 1);

Clazz_newMeth(C$, 'removeSourceEvents$java_awt_EventQueue$O$Z', function (eventQueue, source, removeAllEvents) {
eventQueue.removeSourceEvents$O$Z(source, removeAllEvents);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
for (var i = 0; i < 4; i++) {
this.queues[i] = Clazz_new_((I$[1]||$incl$(1)));
}
}, 1);

Clazz_newMeth(C$, 'postEvent$java_awt_AWTEvent', function (event) {
(I$[3]||$incl$(3)).flushPendingEvents();
this.postEventPrivate$java_awt_AWTEvent(event);
});

Clazz_newMeth(C$, 'postEventPrivate$java_awt_AWTEvent', function (theEvent) {
theEvent.isPosted = true;
{
if (this.dispatchThread == null  && this.nextQueue == null  ) {
if (theEvent.getSource() === (I$[4]||$incl$(4)).getInstance() ) {
return;
} else {
this.initDispatchThread();
}}if (this.nextQueue != null ) {
this.nextQueue.postEventPrivate$java_awt_AWTEvent(theEvent);
return;
}p$.postEventNow$java_awt_AWTEvent$I.apply(this, [theEvent, C$.getPriority$java_awt_AWTEvent(theEvent)]);
}});

Clazz_newMeth(C$, 'getPriority$java_awt_AWTEvent', function (theEvent) {
if (Clazz_instanceOf(theEvent, "sun.awt.PeerEvent")) {
var flags = (theEvent).getFlags();
if ((flags & 2) != 0) return 3;
if ((flags & 1) != 0) return 2;
if ((flags & 4) != 0) return 0;
}switch (theEvent.getID()) {
case 1201:
case 800:
case 801:
return 0;
default:
return 1;
}
}, 1);

Clazz_newMeth(C$, 'postEventNow$java_awt_AWTEvent$I', function (theEvent, priority) {
if (p$.coalesceEvent$java_awt_AWTEvent$I.apply(this, [theEvent, priority])) {
return;
}var newItem = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_AWTEvent,[theEvent]);
p$.cacheEQItem$java_awt_EventQueueItem.apply(this, [newItem]);
if (this.queues[priority].head == null ) {
var shouldNotify = p$.noEvents.apply(this, []);
this.queues[priority].head = this.queues[priority].tail = newItem;
if (shouldNotify) {
if (theEvent.getSource() !== (I$[4]||$incl$(4)).getInstance() ) {
(I$[4]||$incl$(4)).getInstance().notifyThreadBusy$Thread(this.dispatchThread);
}}} else {
this.queues[priority].tail.next = newItem;
this.queues[priority].tail = newItem;
}});

Clazz_newMeth(C$, 'coalescePaintEvent$java_awt_event_PaintEvent', function (e) {
var sourcePeer = (e.getSource()).peer;
if (sourcePeer != null ) {
sourcePeer.coalescePaintEvent$java_awt_event_PaintEvent(e);
}var cache = (e.getSource()).eventCache;
if (cache == null ) {
return false;
}var index = C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
var merged = p$.mergePaintEvents$java_awt_event_PaintEvent$java_awt_event_PaintEvent.apply(this, [e, cache[index].event]);
if (merged != null ) {
cache[index].event = merged;
return true;
}}return false;
});

Clazz_newMeth(C$, 'mergePaintEvents$java_awt_event_PaintEvent$java_awt_event_PaintEvent', function (a, b) {
var aRect = a.getUpdateRect();
var bRect = b.getUpdateRect();
if (bRect.contains$java_awt_Rectangle(aRect)) {
return b;
}if (aRect.contains$java_awt_Rectangle(bRect)) {
return a;
}return null;
});

Clazz_newMeth(C$, 'coalesceMouseEvent$java_awt_event_MouseEvent', function (e) {
var cache = (e.getSource()).eventCache;
if (cache == null ) {
return false;
}var index = C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
cache[index].event = e;
return true;
}return false;
});

Clazz_newMeth(C$, 'coalescePeerEvent$sun_awt_PeerEvent', function (e) {
var cache = (e.getSource()).eventCache;
if (cache == null ) {
return false;
}var index = C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
e = e.coalesceEvents$sun_awt_PeerEvent(cache[index].event);
if (e != null ) {
cache[index].event = e;
return true;
} else {
cache[index] = null;
}}return false;
});

Clazz_newMeth(C$, 'coalesceOtherEvent$java_awt_AWTEvent$I', function (e, priority) {
var id = e.getID();
var source = e.getSource();
for (var entry = this.queues[priority].head; entry != null ; entry = entry.next) {
if (entry.event.getSource() === source  && entry.id == id ) {
var coalescedEvent = source.coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent(entry.event, e);
if (coalescedEvent != null ) {
entry.event = coalescedEvent;
return true;
}}}
return false;
});

Clazz_newMeth(C$, 'coalesceEvent$java_awt_AWTEvent$I', function (e, priority) {
if (!(Clazz_instanceOf(e.getSource(), "java.awt.Component"))) {
return false;
}if (Clazz_instanceOf(e, "sun.awt.PeerEvent")) {
return p$.coalescePeerEvent$sun_awt_PeerEvent.apply(this, [e]);
}if ((e.getSource()).isCoalescingEnabled() && p$.coalesceOtherEvent$java_awt_AWTEvent$I.apply(this, [e, priority]) ) {
return true;
}if (Clazz_instanceOf(e, "java.awt.event.PaintEvent")) {
return p$.coalescePaintEvent$java_awt_event_PaintEvent.apply(this, [e]);
}if (Clazz_instanceOf(e, "java.awt.event.MouseEvent")) {
return p$.coalesceMouseEvent$java_awt_event_MouseEvent.apply(this, [e]);
}return false;
});

Clazz_newMeth(C$, 'cacheEQItem$java_awt_EventQueueItem', function (entry) {
var index = C$.eventToCacheIndex$java_awt_AWTEvent(entry.event);
if (index != -1 && Clazz_instanceOf(entry.event.getSource(), "java.awt.Component") ) {
var source = entry.event.getSource();
if (source.eventCache == null ) {
source.eventCache = Clazz_array((I$[5]||$incl$(5)), [5]);
}source.eventCache[index] = entry;
}});

Clazz_newMeth(C$, 'uncacheEQItem$java_awt_EventQueueItem', function (entry) {
var index = C$.eventToCacheIndex$java_awt_AWTEvent(entry.event);
if (index != -1 && Clazz_instanceOf(entry.event.getSource(), "java.awt.Component") ) {
var source = entry.event.getSource();
if (source.eventCache == null ) {
return;
}source.eventCache[index] = null;
}});

Clazz_newMeth(C$, 'eventToCacheIndex$java_awt_AWTEvent', function (e) {
switch (e.getID()) {
case 800:
return 0;
case 801:
return 1;
case 503:
return 2;
case 506:
return 3;
default:
return -1;
}
}, 1);

Clazz_newMeth(C$, 'noEvents', function () {
for (var i = 0; i < 4; i++) {
if (this.queues[i].head != null ) {
return false;
}}
return true;
});

Clazz_newMeth(C$, 'getNextEvent', function () {
(I$[3]||$incl$(3)).flushPendingEvents();
{
for (var i = 3; i >= 0; i--) {
if (this.queues[i].head != null ) {
var entry = this.queues[i].head;
this.queues[i].head = entry.next;
if (entry.next == null ) {
this.queues[i].tail = null;
}p$.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
return entry.event;
}}
(I$[4]||$incl$(4)).getInstance().notifyThreadFree$Thread(this.dispatchThread);
}return null;
});

Clazz_newMeth(C$, 'getNextEventForID$I', function (id) {
(I$[3]||$incl$(3)).flushPendingEvents();
{
for (var i = 0; i < 4; i++) {
for (var entry = this.queues[i].head, prev = null; entry != null ; prev = entry, entry = entry.next) {
if (entry.id == id) {
if (prev == null ) {
this.queues[i].head = entry.next;
} else {
prev.next = entry.next;
}if (this.queues[i].tail === entry ) {
this.queues[i].tail = prev;
}p$.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
return entry.event;
}}
}
this.waitForID = id;
this.waitForID = 0;
}return null;
});

Clazz_newMeth(C$, 'peekEvent', function () {
for (var i = 3; i >= 0; i--) {
if (this.queues[i].head != null ) {
return this.queues[i].head.event;
}}
return null;
});

Clazz_newMeth(C$, 'peekEvent$I', function (id) {
for (var i = 3; i >= 0; i--) {
var q = this.queues[i].head;
for (; q != null ; q = q.next) {
if (q.id == id) {
return q.event;
}}
}
return null;
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent', function (event) {
var src = event.getSource();
p$.dispatchEventImpl$java_awt_AWTEvent$O$Z.apply(this, [event, src, false]);
});

Clazz_newMeth(C$, 'dispatchEventAndWait$java_awt_AWTEvent$O', function (event, src) {
p$.dispatchEventImpl$java_awt_AWTEvent$O$Z.apply(this, [event, src, true]);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent$O$Z', function (event, src, andWait) {
event.isPosted = true;
if (Clazz_instanceOf(event, "java.awt.ActiveEvent")) {
p$.setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent.apply(this, [event]);
(I$[6]||$incl$(6)).dispatchEvent$java_awt_AWTEvent$O$Z(event, null, andWait);
} else if (Clazz_instanceOf(src, "java.awt.Component")) {
(I$[6]||$incl$(6)).dispatchEvent$java_awt_AWTEvent$O$Z(event, src, andWait);
event.dispatched();
} else if (Clazz_instanceOf(src, "sun.awt.AWTAutoShutdown")) {
if (p$.noEvents.apply(this, [])) {
this.dispatchThread.stopDispatching();
}} else {
System.err.println$S("unable to dispatch event: " + event);
}});

Clazz_newMeth(C$, 'getMostRecentEventTime', function () {
return 0;
}, 1);

Clazz_newMeth(C$, 'getMostRecentEventTimeEx', function () {
return this.mostRecentEventTime;
});

Clazz_newMeth(C$, 'getCurrentEvent', function () {
return (I$[7]||$incl$(7)).getEventQueue().getCurrentEventImpl();
}, 1);

Clazz_newMeth(C$, 'getCurrentEventImpl', function () {
return ((I$[6]||$incl$(6)).isDispatchThread() ? (this.currentEvent) : null);
});

Clazz_newMeth(C$, 'push$java_awt_EventQueue', function (newEventQueue) {
if (this.nextQueue != null ) {
this.nextQueue.push$java_awt_EventQueue(newEventQueue);
return;
}{
while (this.peekEvent() != null ){
try {
newEventQueue.postEventPrivate$java_awt_AWTEvent(this.getNextEvent());
} catch (ie) {
if (Clazz_exceptionOf(ie, "java.lang.InterruptedException")){
} else {
throw ie;
}
}
}
newEventQueue.previousQueue = this;
}if (this.dispatchThread != null ) {
this.dispatchThread.stopDispatchingLater();
}this.nextQueue = newEventQueue;
var appContext = (I$[8]||$incl$(8)).getAppContext();
if (appContext.get$O((I$[8]||$incl$(8)).EVENT_QUEUE_KEY) === this ) {
appContext.put$O$O((I$[8]||$incl$(8)).EVENT_QUEUE_KEY, newEventQueue);
}});

Clazz_newMeth(C$, 'pop', function () {
var prev = this.previousQueue;
{
{
if (this.nextQueue != null ) {
this.nextQueue.pop();
return;
}if (this.previousQueue == null ) {
throw Clazz_new_(Clazz_load('java.util.EmptyStackException'));
}this.previousQueue.nextQueue = null;
while (this.peekEvent() != null ){
try {
this.previousQueue.postEventPrivate$java_awt_AWTEvent(this.getNextEvent());
} catch (ie) {
if (Clazz_exceptionOf(ie, "java.lang.InterruptedException")){
} else {
throw ie;
}
}
}
var appContext = (I$[8]||$incl$(8)).getAppContext();
if (appContext.get$O((I$[8]||$incl$(8)).EVENT_QUEUE_KEY) === this ) {
appContext.put$O$O((I$[8]||$incl$(8)).EVENT_QUEUE_KEY, this.previousQueue);
}this.previousQueue = null;
}}var dt = this.dispatchThread;
if (dt != null ) {
dt.stopDispatching();
}});

Clazz_newMeth(C$, 'isDispatchThread', function () {
return (I$[6]||$incl$(6)).isDispatchThread();
}, 1);

Clazz_newMeth(C$, 'initDispatchThread', function () {
{
if (this.dispatchThread == null ) {
var t = Clazz_new_((I$[9]||$incl$(9)).c$$ThreadGroup$S$java_awt_EventQueue,[this.threadGroup, this.name, this]);
(I$[4]||$incl$(4)).getInstance().notifyThreadBusy$Thread(t);
this.dispatchThread = t;
this.dispatchThread.start();
}}});

Clazz_newMeth(C$, 'detachDispatchThread', function () {
this.dispatchThread = null;
});

Clazz_newMeth(C$, 'getDispatchThread', function () {
return this.dispatchThread;
});

Clazz_newMeth(C$, 'removeSourceEvents$O$Z', function (source, removeAllEvents) {
(I$[3]||$incl$(3)).flushPendingEvents();
{
for (var i = 0; i < 4; i++) {
var entry = this.queues[i].head;
var prev = null;
while (entry != null ){
if ((entry.event.getSource() === source ) && (removeAllEvents || !(Clazz_instanceOf(entry.event, "java.awt.SequencedEvent") || Clazz_instanceOf(entry.event, "java.awt.SentEvent") || Clazz_instanceOf(entry.event, "java.awt.event.FocusEvent") || Clazz_instanceOf(entry.event, "java.awt.event.WindowEvent") || Clazz_instanceOf(entry.event, "java.awt.event.KeyEvent") || Clazz_instanceOf(entry.event, "java.awt.event.InputMethodEvent")  ) ) ) {
if (Clazz_instanceOf(entry.event, "java.awt.SequencedEvent")) {
(entry.event).dispose();
}if (Clazz_instanceOf(entry.event, "java.awt.SentEvent")) {
(entry.event).dispose();
}if (prev == null ) {
this.queues[i].head = entry.next;
} else {
prev.next = entry.next;
}p$.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
} else {
prev = entry;
}entry = entry.next;
}
this.queues[i].tail = prev;
}
}});

Clazz_newMeth(C$, 'setCurrentEventAndMostRecentTime$java_awt_AWTEvent', function (e) {
(I$[7]||$incl$(7)).getEventQueue().setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent(e);
}, 1);

Clazz_newMeth(C$, 'setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent', function (e) {
if ((I$[6]||$incl$(6)).isDispatchThread()) {
return;
}this.currentEvent = e;
var mostRecentEventTime2 = -9223372036854775808;
if (Clazz_instanceOf(e, "java.awt.event.InputEvent")) {
var ie = e;
mostRecentEventTime2 = ie.getWhen();
} else if (Clazz_instanceOf(e, "java.awt.event.InputMethodEvent")) {
var ime = e;
mostRecentEventTime2 = ime.getWhen();
} else if (Clazz_instanceOf(e, "java.awt.event.ActionEvent")) {
var ae = e;
mostRecentEventTime2 = ae.getWhen();
} else if (Clazz_instanceOf(e, "java.awt.event.InvocationEvent")) {
var ie = e;
mostRecentEventTime2 = ie.getWhen();
}this.mostRecentEventTime = Math.max(this.mostRecentEventTime, mostRecentEventTime2);
});

Clazz_newMeth(C$, 'invokeLater$Runnable', function (runnable) {
(I$[7]||$incl$(7)).getEventQueue().postEvent$java_awt_AWTEvent(Clazz_new_((I$[10]||$incl$(10)).c$$O$I$Runnable$O$Z,[(I$[7]||$incl$(7)).getDefaultToolkit(), 1200, runnable, null, false]));
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$Runnable', function (runnable) {
C$.invokeAndWaitStatic$O$Runnable((I$[7]||$incl$(7)).getDefaultToolkit(), runnable);
}, 1);

Clazz_newMeth(C$, 'invokeAndWaitStatic$O$Runnable', function (source, runnable) {
if (C$.isDispatchThread()) {
throw Clazz_new_((I$[11]||$incl$(11)).c$$S,["Cannot call invokeAndWait from the event dispatcher thread"]);
}var event = Clazz_new_((I$[10]||$incl$(10)).c$$O$I$Runnable$O$Z,[source, 1200, runnable, null, true]);
(I$[6]||$incl$(6)).dispatchEvent$java_awt_AWTEvent$O$Z(event, null, true);
var eventThrowable = event.getThrowable();
if (eventThrowable != null ) {
throw Clazz_new_(Clazz_load('java.lang.reflect.InvocationTargetException').c$$Throwable,[eventThrowable]);
}}, 1);

Clazz_newMeth(C$, 'wakeup$Z', function (isShutdown) {
{
if (this.nextQueue != null ) {
this.nextQueue.wakeup$Z(isShutdown);
} else if (this.dispatchThread != null ) {
try {
this.dispatchThread.start();
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IllegalThreadStateException")){
this.dispatchThread.run();
} else {
throw e;
}
}
} else if (!isShutdown) {
this.initDispatchThread();
}}});
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "EventQueueItem");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.event = null;
this.id = 0;
this.next = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent', function (evt) {
C$.$init$.apply(this);
this.event = evt;
this.id = evt.getID();
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "FlowLayout", null, null, ['java.awt.LayoutManager', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.align = 0;
this.newAlign = 0;
this.hgap = 0;
this.vgap = 0;
this.alignOnBaseline = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I$I.apply(this, [1, 5, 5]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (align) {
C$.c$$I$I$I.apply(this, [align, 5, 5]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I', function (align, hgap, vgap) {
C$.$init$.apply(this);
this.hgap = hgap;
this.vgap = vgap;
this.setAlignment$I(align);
}, 1);

Clazz_newMeth(C$, 'getAlignment', function () {
return this.newAlign;
});

Clazz_newMeth(C$, 'setAlignment$I', function (align) {
this.newAlign = align;
switch (align) {
case 3:
this.align = 0;
break;
case 4:
this.align = 2;
break;
default:
this.align = align;
break;
}
});

Clazz_newMeth(C$, 'getHgap', function () {
return this.hgap;
});

Clazz_newMeth(C$, 'setHgap$I', function (hgap) {
this.hgap = hgap;
});

Clazz_newMeth(C$, 'getVgap', function () {
return this.vgap;
});

Clazz_newMeth(C$, 'setVgap$I', function (vgap) {
this.vgap = vgap;
});

Clazz_newMeth(C$, 'setAlignOnBaseline$Z', function (alignOnBaseline) {
this.alignOnBaseline = alignOnBaseline;
});

Clazz_newMeth(C$, 'getAlignOnBaseline', function () {
return this.alignOnBaseline;
});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component', function (name, comp) {
});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component', function (comp) {
});

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container', function (target) {
{
var dim = Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
var nmembers = target.getComponentCount();
var firstVisibleComponent = true;
var useBaseline = this.getAlignOnBaseline();
var maxAscent = 0;
var maxDescent = 0;
for (var i = 0; i < nmembers; i++) {
var m = target.getComponent$I(i);
if (m.isVisible()) {
var d = m.getPreferredSize();
dim.height = Math.max(dim.height, d.height);
if (firstVisibleComponent) {
firstVisibleComponent = false;
} else {
dim.width = dim.width+(this.hgap);
}dim.width = dim.width+(d.width);
if (useBaseline) {
var baseline = m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
maxAscent = Math.max(maxAscent, baseline);
maxDescent = Math.max(maxDescent, d.height - baseline);
}}}}
if (useBaseline) {
dim.height = Math.max(maxAscent + maxDescent, dim.height);
}var insets = target.getInsets();
dim.width = dim.width+(insets.left + insets.right + this.hgap * 2 );
dim.height = dim.height+(insets.top + insets.bottom + this.vgap * 2 );
return dim;
}});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container', function (target) {
{
var useBaseline = this.getAlignOnBaseline();
var dim = Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
var nmembers = target.getComponentCount();
var maxAscent = 0;
var maxDescent = 0;
var firstVisibleComponent = true;
for (var i = 0; i < nmembers; i++) {
var m = target.getComponent$I(i);
if (m.visible) {
var d = m.getMinimumSize();
dim.height = Math.max(dim.height, d.height);
if (firstVisibleComponent) {
firstVisibleComponent = false;
} else {
dim.width = dim.width+(this.hgap);
}dim.width = dim.width+(d.width);
if (useBaseline) {
var baseline = m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
maxAscent = Math.max(maxAscent, baseline);
maxDescent = Math.max(maxDescent, dim.height - baseline);
}}}}
if (useBaseline) {
dim.height = Math.max(maxAscent + maxDescent, dim.height);
}var insets = target.getInsets();
dim.width = dim.width+(insets.left + insets.right + this.hgap * 2 );
dim.height = dim.height+(insets.top + insets.bottom + this.vgap * 2 );
return dim;
}});

Clazz_newMeth(C$, 'moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA', function (target, x, y, width, height, rowStart, rowEnd, ltr, useBaseline, ascent, descent) {
switch (this.newAlign) {
case 0:
x = x+(ltr ? 0 : width);
break;
case 1:
x = x+((width/2|0));
break;
case 2:
x = x+(ltr ? width : 0);
break;
case 3:
break;
case 4:
x = x+(width);
break;
}
var maxAscent = 0;
var nonbaselineHeight = 0;
var baselineOffset = 0;
if (useBaseline) {
var maxDescent = 0;
for (var i = rowStart; i < rowEnd; i++) {
var m = target.getComponent$I(i);
if (m.visible) {
if (ascent[i] >= 0) {
maxAscent = Math.max(maxAscent, ascent[i]);
maxDescent = Math.max(maxDescent, descent[i]);
} else {
nonbaselineHeight = Math.max(m.getHeight(), nonbaselineHeight);
}}}
height = Math.max(maxAscent + maxDescent, nonbaselineHeight);
baselineOffset = ((height - maxAscent - maxDescent )/2|0);
}for (var i = rowStart; i < rowEnd; i++) {
var m = target.getComponent$I(i);
if (m.isVisible()) {
var cy;
if (useBaseline && ascent[i] >= 0 ) {
cy = y + baselineOffset + maxAscent  - ascent[i];
} else {
cy = y + ((height - m.height)/2|0);
}if (ltr) {
m.setLocation$I$I(x, cy);
} else {
m.setLocation$I$I(target.width - x - m.width , cy);
}x = x+(m.width + this.hgap);
}}
return height;
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container', function (target) {
{
var insets = target.getInsets();
var maxwidth = target.width - (insets.left + insets.right + this.hgap * 2 );
var nmembers = target.getComponentCount();
var x = 0;
var y = insets.top + this.vgap;
var rowh = 0;
var start = 0;
var ltr = target.getComponentOrientation().isLeftToRight();
var useBaseline = this.getAlignOnBaseline();
var ascent = null;
var descent = null;
if (useBaseline) {
ascent = Clazz_array(Integer.TYPE, [nmembers]);
descent = Clazz_array(Integer.TYPE, [nmembers]);
}for (var i = 0; i < nmembers; i++) {
var m = target.getComponent$I(i);
if (m.isVisible()) {
var d = m.getPreferredSize();
m.setSize$I$I(d.width, d.height);
if (useBaseline) {
var baseline = m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
ascent[i] = baseline;
descent[i] = d.height - baseline;
} else {
ascent[i] = -1;
}}if ((x == 0) || ((x + d.width) <= maxwidth) ) {
if (x > 0) {
x = x+(this.hgap);
}x = x+(d.width);
rowh = Math.max(rowh, d.height);
} else {
rowh = p$.moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA.apply(this, [target, insets.left + this.hgap, y, maxwidth - x, rowh, start, i, ltr, useBaseline, ascent, descent]);
x = d.width;
y = y+(this.vgap + rowh);
rowh = d.height;
start = i;
}}}
p$.moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA.apply(this, [target, insets.left + this.hgap, y, maxwidth - x, rowh, start, nmembers, ltr, useBaseline, ascent, descent]);
}});

Clazz_newMeth(C$, 'toString', function () {
var str = "";
switch (this.align) {
case 0:
str = ",align=left";
break;
case 1:
str = ",align=center";
break;
case 2:
str = ",align=right";
break;
case 3:
str = ",align=leading";
break;
case 4:
str = ",align=trailing";
break;
}
return this.getClass().getName() + "[hgap=" + this.hgap + ",vgap=" + this.vgap + str + "]" ;
});
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['swingjs.JSFontMetrics','java.awt.geom.AffineTransform','swingjs.JSToolkit',['java.text.AttributedCharacterIterator','.Attribute'],'java.awt.font.TextAttribute','javajs.util.SB',['java.awt.geom.Rectangle2D','.Float']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Font");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.fm = null;
this.family = null;
this.name = null;
this.style = 0;
this.size = 0;
this.pointSize = 0;
this.$hasLayoutAttributes = false;
this.nonIdentityTx = false;
this.hash = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getFontMetrics', function () {
if (this.fm == null ) ((this.fm = Clazz_new_((I$[1]||$incl$(1))))).setFont$java_awt_Font(this);
return this.fm;
});

Clazz_newMeth(C$, 'setFontMetrics$java_awt_FontMetrics', function (fm) {
this.fm = fm;
});

Clazz_newMeth(C$, 'c$$S$I$I', function (name, style, size) {
C$.$init$.apply(this);
this.name = (name != null ) ? name : "Default";
this.style = (style & -4) == 0 ? style : 0;
this.size = size;
this.pointSize = size;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font', function (font) {
C$.$init$.apply(this);
this.name = font.name;
this.style = font.style;
this.size = font.size;
this.pointSize = font.pointSize;
}, 1);

Clazz_newMeth(C$, 'getTransform', function () {
return Clazz_new_((I$[2]||$incl$(2)));
});

Clazz_newMeth(C$, 'getFamily', function () {
return (this.family == null  ? this.family = (I$[3]||$incl$(3)).getFontFamily$java_awt_Font(this) : this.family);
});

Clazz_newMeth(C$, 'getName', function () {
return this.name;
});

Clazz_newMeth(C$, 'getFontName', function () {
return this.name;
});

Clazz_newMeth(C$, 'getStyle', function () {
return this.style;
});

Clazz_newMeth(C$, 'getSize', function () {
return this.size;
});

Clazz_newMeth(C$, 'getSize2D', function () {
return this.pointSize;
});

Clazz_newMeth(C$, 'isPlain', function () {
return this.style == 0;
});

Clazz_newMeth(C$, 'isBold', function () {
return (this.style & 1) != 0;
});

Clazz_newMeth(C$, 'isItalic', function () {
return (this.style & 2) != 0;
});

Clazz_newMeth(C$, 'isTransformed', function () {
return this.nonIdentityTx;
});

Clazz_newMeth(C$, 'hasLayoutAttributes', function () {
return this.$hasLayoutAttributes;
});

Clazz_newMeth(C$, 'getFont$S', function (nm) {
return C$.getFont$S$java_awt_Font(nm, null);
}, 1);

Clazz_newMeth(C$, 'decode$S', function (str) {
var fontName = str;
var styleName = "";
var fontSize = 12;
var fontStyle = 0;
if (str == null ) {
return Clazz_new_(C$.c$$S$I$I,["Dialog", fontStyle, fontSize]);
}var lastHyphen = str.lastIndexOf("-");
var lastSpace = str.lastIndexOf(" ");
var sepChar = (lastHyphen > lastSpace) ? "-" : " ";
var sizeIndex = str.lastIndexOf(sepChar);
var styleIndex = str.lastIndexOf(sepChar, sizeIndex - 1);
var strlen = str.length$();
if (sizeIndex > 0 && sizeIndex + 1 < strlen ) {
try {
fontSize = Integer.$valueOf(str.substring(sizeIndex + 1)).intValue();
if (fontSize <= 0) {
fontSize = 12;
}} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.NumberFormatException")){
styleIndex = sizeIndex;
sizeIndex = strlen;
if (str.charAt(sizeIndex - 1) == sepChar) {
sizeIndex--;
}} else {
throw e;
}
}
}if (styleIndex >= 0 && styleIndex + 1 < strlen ) {
styleName = str.substring(styleIndex + 1, sizeIndex);
styleName = styleName.toLowerCase();
if (styleName.equals$O("bolditalic")) {
fontStyle = 3;
} else if (styleName.equals$O("italic")) {
fontStyle = 2;
} else if (styleName.equals$O("bold")) {
fontStyle = 1;
} else if (styleName.equals$O("plain")) {
fontStyle = 0;
} else {
styleIndex = sizeIndex;
if (str.charAt(styleIndex - 1) == sepChar) {
styleIndex--;
}}fontName = str.substring(0, styleIndex);
} else {
var fontEnd = strlen;
if (styleIndex > 0) {
fontEnd = styleIndex;
} else if (sizeIndex > 0) {
fontEnd = sizeIndex;
}if (fontEnd > 0 && str.charAt(fontEnd - 1) == sepChar ) {
fontEnd--;
}fontName = str.substring(0, fontEnd);
}return Clazz_new_(C$.c$$S$I$I,[fontName, fontStyle, fontSize]);
}, 1);

Clazz_newMeth(C$, 'getFont$S$java_awt_Font', function (nm, font) {
var str = null;
try {
str = System.getProperty(nm);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.SecurityException")){
} else {
throw e;
}
}
if (str == null ) {
return font;
}return C$.decode$S(str);
}, 1);

Clazz_newMeth(C$, 'hashCode', function () {
if (this.hash == 0) {
this.hash = this.name.hashCode() ^ this.style ^ this.size ;
}return this.hash;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (obj === this ) {
return true;
}if (obj != null ) {
try {
var font = obj;
if (this.size == font.size && this.style == font.style  && this.nonIdentityTx == font.nonIdentityTx   && this.$hasLayoutAttributes == font.$hasLayoutAttributes   && this.pointSize == font.pointSize   && this.name.equals$O(font.name) ) {
return true;
}} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.ClassCastException")){
} else {
throw e;
}
}
}return false;
});

Clazz_newMeth(C$, 'toString', function () {
var strStyle;
if (this.isBold()) {
strStyle = this.isItalic() ? "bolditalic" : "bold";
} else {
strStyle = this.isItalic() ? "italic" : "plain";
}return this.getClass().getName() + "[family=" + this.getFamily() + ",name=" + this.name + ",style=" + strStyle + ",size=" + this.size + "]" ;
});

Clazz_newMeth(C$, 'getAvailableAttributes', function () {
var attributes = Clazz_array((I$[4]||$incl$(4)), -1, [(I$[5]||$incl$(5)).FAMILY, (I$[5]||$incl$(5)).WEIGHT, (I$[5]||$incl$(5)).WIDTH, (I$[5]||$incl$(5)).SIZE, (I$[5]||$incl$(5)).UNDERLINE, (I$[5]||$incl$(5)).STRIKETHROUGH]);
return attributes;
});

Clazz_newMeth(C$, 'deriveFont$I$F', function (style, sizePts) {
var f = Clazz_new_(C$.c$$S$I$I,[this.name, style, ((sizePts + 0.5)|0)]);
f.pointSize = sizePts;
return f;
});

Clazz_newMeth(C$, 'deriveFont$F', function (sizePts) {
var f = Clazz_new_(C$.c$$S$I$I,[this.name, this.style, ((sizePts + 0.5)|0)]);
f.pointSize = sizePts;
return f;
});

Clazz_newMeth(C$, 'deriveFont$I', function (style) {
return Clazz_new_(C$.c$$S$I$I,[this.name, style, this.size]);
});

Clazz_newMeth(C$, 'hasUniformLineMetrics', function () {
return false;
});

Clazz_newMeth(C$, 'getStringBounds$S$java_awt_font_FontRenderContext', function (str, frc) {
return this.getStringBoundsStr$S$I$I(str, 0, -1);
});

Clazz_newMeth(C$, 'getStringBounds$S$I$I$java_awt_font_FontRenderContext', function (str, beginIndex, limit, frc) {
return this.getStringBoundsStr$S$I$I(str, beginIndex, limit);
});

Clazz_newMeth(C$, 'getStringBounds$CA$I$I$java_awt_font_FontRenderContext', function (chars, beginIndex, limit, frc) {
var sb = Clazz_new_((I$[6]||$incl$(6)));
sb.appendCB$CA$I$I(chars, beginIndex, limit);
return this.getStringBoundsStr$S$I$I(sb.toString(), 0, -1);
});

Clazz_newMeth(C$, 'getStringBoundsStr$S$I$I', function (s, i, j) {
if (j >= i) s = s.substring(i, j);
var fm = this.getFontMetrics();
var dec = fm.getDescent();
var asc = fm.getAscent();
var width = fm.stringWidth$S(s);
return Clazz_new_((I$[7]||$incl$(7)).c$$F$F$F$F,[0, -dec, width, asc + dec]);
});

Clazz_newMeth(C$, 'finalize', function () {
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt.font"),I$=[['java.awt.geom.AffineTransform','java.awt.RenderingHints']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "FontRenderContext");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.tx = null;
this.aaHintValue = null;
this.fmHintValue = null;
this.defaulting = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.defaulting = true;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform$Z$Z', function (tx, isAntiAliased, usesFractionalMetrics) {
C$.$init$.apply(this);
if (tx != null  && !tx.isIdentity() ) {
this.tx = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_geom_AffineTransform,[tx]);
}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform$O$O', function (tx, aaHint, fmHint) {
C$.$init$.apply(this);
if (tx != null  && !tx.isIdentity() ) {
this.tx = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_geom_AffineTransform,[tx]);
}this.aaHintValue = aaHint;
this.fmHintValue = fmHint;
}, 1);

Clazz_newMeth(C$, 'isTransformed', function () {
if (!this.defaulting) {
return this.tx != null ;
} else {
return !this.getTransform().isIdentity();
}});

Clazz_newMeth(C$, 'getTransformType', function () {
if (!this.defaulting) {
if (this.tx == null ) {
return 0;
} else {
return this.tx.getType();
}} else {
return this.getTransform().getType();
}});

Clazz_newMeth(C$, 'getTransform', function () {
return (this.tx == null ) ? Clazz_new_((I$[1]||$incl$(1))) : Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_geom_AffineTransform,[this.tx]);
});

Clazz_newMeth(C$, 'isAntiAliased', function () {
return !(this.aaHintValue === (I$[2]||$incl$(2)).VALUE_TEXT_ANTIALIAS_OFF  || this.aaHintValue === (I$[2]||$incl$(2)).VALUE_TEXT_ANTIALIAS_DEFAULT  );
});

Clazz_newMeth(C$, 'usesFractionalMetrics', function () {
return !(this.fmHintValue === (I$[2]||$incl$(2)).VALUE_FRACTIONALMETRICS_OFF  || this.fmHintValue === (I$[2]||$incl$(2)).VALUE_FRACTIONALMETRICS_DEFAULT  );
});

Clazz_newMeth(C$, 'getAntiAliasingHint', function () {
if (this.defaulting) {
if (this.isAntiAliased()) {
return (I$[2]||$incl$(2)).VALUE_TEXT_ANTIALIAS_ON;
} else {
return (I$[2]||$incl$(2)).VALUE_TEXT_ANTIALIAS_OFF;
}}return this.aaHintValue;
});

Clazz_newMeth(C$, 'getFractionalMetricsHint', function () {
if (this.defaulting) {
if (this.usesFractionalMetrics()) {
return (I$[2]||$incl$(2)).VALUE_FRACTIONALMETRICS_ON;
} else {
return (I$[2]||$incl$(2)).VALUE_FRACTIONALMETRICS_OFF;
}}return this.fmHintValue;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
try {
return this.equals$java_awt_font_FontRenderContext(obj);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.ClassCastException")){
return false;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'equals$java_awt_font_FontRenderContext', function (rhs) {
if (this === rhs ) {
return true;
}if (rhs == null ) {
return false;
}if (!rhs.defaulting && !this.defaulting ) {
if (rhs.aaHintValue === this.aaHintValue  && rhs.fmHintValue === this.fmHintValue  ) {
return this.tx == null  ? rhs.tx == null  : this.tx.equals$O(rhs.tx);
}return false;
} else {
return rhs.getAntiAliasingHint() === this.getAntiAliasingHint()  && rhs.getFractionalMetricsHint() === this.getFractionalMetricsHint()   && rhs.getTransform().equals$O(this.getTransform()) ;
}});

Clazz_newMeth(C$, 'hashCode', function () {
var hash = this.tx == null  ? 0 : this.tx.hashCode();
if (this.defaulting) {
hash = hash+(this.getAntiAliasingHint().hashCode());
hash = hash+(this.getFractionalMetricsHint().hashCode());
} else {
hash = hash+(this.aaHintValue.hashCode());
hash = hash+(this.fmHintValue.hashCode());
}return hash;
});
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.font.FontRenderContext']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "FontMetrics");
C$.DEFAULT_FRC = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.DEFAULT_FRC = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_geom_AffineTransform$Z$Z,[null, false, false]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.font = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font', function (font) {
C$.$init$.apply(this);
this.font = font;
}, 1);

Clazz_newMeth(C$, 'getFont', function () {
return this.font;
});

Clazz_newMeth(C$, 'getFontRenderContext', function () {
return C$.DEFAULT_FRC;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.getLeading() + this.getAscent() + this.getDescent() ;
});

Clazz_newMeth(C$, 'getMaxAscent', function () {
return this.getAscent();
});

Clazz_newMeth(C$, 'getMaxDescent', function () {
return this.getDescent();
});

Clazz_newMeth(C$, 'getMaxDecent', function () {
return this.getMaxDescent();
});

Clazz_newMeth(C$, 'getMaxAdvance', function () {
return this.charWidth$C("M");
});

Clazz_newMeth(C$, 'charsWidth$CA$I$I', function (data, off, len) {
return this.stringWidth$S( String.instantialize(data, off, len));
});

Clazz_newMeth(C$, 'bytesWidth$BA$I$I', function (data, off, len) {
return this.stringWidth$S( String.instantialize(data, 0, off, len));
});

Clazz_newMeth(C$, 'getStringBounds$S$java_awt_Graphics', function (str, context) {
return this.font.getStringBounds$S$java_awt_font_FontRenderContext(str, p$.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getStringBounds$S$I$I$java_awt_Graphics', function (str, beginIndex, limit, context) {
return this.font.getStringBounds$S$I$I$java_awt_font_FontRenderContext(str, beginIndex, limit, p$.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getStringBounds$CA$I$I$java_awt_Graphics', function (chars, beginIndex, limit, context) {
return this.font.getStringBounds$CA$I$I$java_awt_font_FontRenderContext(chars, beginIndex, limit, p$.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'myFRC$java_awt_Graphics', function (context) {
return null;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[font=" + this.getFont() + "ascent=" + this.getAscent() + ", descent=" + this.getDescent() + ", height=" + this.getHeight() + "]" ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[['java.lang.InternalError',['java.awt.geom.Point2D','.Double'],['java.awt.geom.Point2D','.Float'],'javajs.util.AU',['java.awt.geom.Path2D','.Double']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AffineTransform", null, null, ['Cloneable', 'java.io.Serializable']);
var p$=C$.prototype;
C$.rot90conversion = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.rot90conversion = Clazz_array(Integer.TYPE, -1, [4, 5, 4, 5, 2, 3, 6, 7]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.m00 = 0;
this.m10 = 0;
this.m01 = 0;
this.m11 = 0;
this.m02 = 0;
this.m12 = 0;
this.state = 0;
this.type = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D$D$D$I', function (m00, m10, m01, m11, m02, m12, state) {
C$.$init$.apply(this);
this.m00 = m00;
this.m10 = m10;
this.m01 = m01;
this.m11 = m11;
this.m02 = m02;
this.m12 = m12;
this.state = state;
this.type = -1;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.m00 = this.m11 = 1.0;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform', function (Tx) {
C$.$init$.apply(this);
this.m00 = Tx.m00;
this.m10 = Tx.m10;
this.m01 = Tx.m01;
this.m11 = Tx.m11;
this.m02 = Tx.m02;
this.m12 = Tx.m12;
this.state = Tx.state;
this.type = Tx.type;
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F$F$F', function (m00, m10, m01, m11, m02, m12) {
C$.$init$.apply(this);
this.m00 = m00;
this.m10 = m10;
this.m01 = m01;
this.m11 = m11;
this.m02 = m02;
this.m12 = m12;
this.updateState();
}, 1);

Clazz_newMeth(C$, 'c$$FA', function (flatmatrix) {
C$.$init$.apply(this);
this.m00 = flatmatrix[0];
this.m10 = flatmatrix[1];
this.m01 = flatmatrix[2];
this.m11 = flatmatrix[3];
if (flatmatrix.length > 5) {
this.m02 = flatmatrix[4];
this.m12 = flatmatrix[5];
}this.updateState();
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D$D$D', function (m00, m10, m01, m11, m02, m12) {
C$.$init$.apply(this);
this.m00 = m00;
this.m10 = m10;
this.m01 = m01;
this.m11 = m11;
this.m02 = m02;
this.m12 = m12;
this.updateState();
}, 1);

Clazz_newMeth(C$, 'c$$DA', function (flatmatrix) {
C$.$init$.apply(this);
this.m00 = flatmatrix[0];
this.m10 = flatmatrix[1];
this.m01 = flatmatrix[2];
this.m11 = flatmatrix[3];
if (flatmatrix.length > 5) {
this.m02 = flatmatrix[4];
this.m12 = flatmatrix[5];
}this.updateState();
}, 1);

Clazz_newMeth(C$, 'getTranslateInstance$D$D', function (tx, ty) {
var Tx = Clazz_new_(C$);
Tx.setToTranslation$D$D(tx, ty);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D', function (theta) {
var Tx = Clazz_new_(C$);
Tx.setToRotationTheta$D(theta);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D$D', function (theta, anchorx, anchory) {
var Tx = Clazz_new_(C$);
Tx.setToRotationThetaXY$D$D$D(theta, anchorx, anchory);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D', function (vecx, vecy) {
var Tx = Clazz_new_(C$);
Tx.setToRotationXY$D$D(vecx, vecy);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D$D$D', function (vecx, vecy, anchorx, anchory) {
var Tx = Clazz_new_(C$);
Tx.setToRotationV2XY$D$D$D$D(vecx, vecy, anchorx, anchory);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getQuadrantRotateInstance$I', function (numquadrants) {
var Tx = Clazz_new_(C$);
Tx.setToQuadrantRotation$I(numquadrants);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getQuadrantRotateInstance$I$D$D', function (numquadrants, anchorx, anchory) {
var Tx = Clazz_new_(C$);
Tx.setToQuadrantRotation$I$D$D(numquadrants, anchorx, anchory);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getScaleInstance$D$D', function (sx, sy) {
var Tx = Clazz_new_(C$);
Tx.setToScale$D$D(sx, sy);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getShearInstance$D$D', function (shx, shy) {
var Tx = Clazz_new_(C$);
Tx.setToShear$D$D(shx, shy);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getType', function () {
if (this.type == -1) {
p$.calculateType.apply(this, []);
}return this.type;
});

Clazz_newMeth(C$, 'calculateType', function () {
var ret = 0;
var sgn0;
var sgn1;
var M0;
var M1;
var M2;
var M3;
this.updateState();
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
ret = 1;
case (6):
if ((M0 = this.m00) * (M2 = this.m01) + (M3 = this.m10) * (M1 = this.m11) != 0 ) {
this.type = 32;
return;
}sgn0 = (M0 >= 0.0 );
sgn1 = (M1 >= 0.0 );
if (sgn0 == sgn1 ) {
if (M0 != M1  || M2 != -M3  ) {
ret = ret|(20);
} else if (M0 * M1 - M2 * M3 != 1.0 ) {
ret = ret|(18);
} else {
ret = ret|(16);
}} else {
if (M0 != -M1  || M2 != M3  ) {
ret = ret|(84);
} else if (M0 * M1 - M2 * M3 != 1.0 ) {
ret = ret|(82);
} else {
ret = ret|(80);
}}break;
case (5):
ret = 1;
case (4):
sgn0 = ((M0 = this.m01) >= 0.0 );
sgn1 = ((M1 = this.m10) >= 0.0 );
if (sgn0 != sgn1 ) {
if (M0 != -M1 ) {
ret = ret|(12);
} else if (M0 != 1.0  && M0 != -1.0  ) {
ret = ret|(10);
} else {
ret = ret|(8);
}} else {
if (M0 == M1 ) {
ret = ret|(74);
} else {
ret = ret|(76);
}}break;
case (3):
ret = 1;
case (2):
sgn0 = ((M0 = this.m00) >= 0.0 );
sgn1 = ((M1 = this.m11) >= 0.0 );
if (sgn0 == sgn1 ) {
if (sgn0) {
if (M0 == M1 ) {
ret = ret|(2);
} else {
ret = ret|(4);
}} else {
if (M0 != M1 ) {
ret = ret|(12);
} else if (M0 != -1.0 ) {
ret = ret|(10);
} else {
ret = ret|(8);
}}} else {
if (M0 == -M1 ) {
if (M0 == 1.0  || M0 == -1.0  ) {
ret = ret|(64);
} else {
ret = ret|(66);
}} else {
ret = ret|(68);
}}break;
case (1):
ret = 1;
break;
case (0):
break;
}
this.type = ret;
});

Clazz_newMeth(C$, 'getDeterminant', function () {
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
case (6):
return this.m00 * this.m11 - this.m01 * this.m10;
case (5):
case (4):
return -(this.m01 * this.m10);
case (3):
case (2):
return this.m00 * this.m11;
case (1):
case (0):
return 1.0;
}
});

Clazz_newMeth(C$, 'updateState', function () {
if (this.m01 == 0.0  && this.m10 == 0.0  ) {
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 0;
this.type = 0;
} else {
this.state = 1;
this.type = 1;
}} else {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 2;
this.type = -1;
} else {
this.state = 3;
this.type = -1;
}}} else {
if (this.m00 == 0.0  && this.m11 == 0.0  ) {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 4;
this.type = -1;
} else {
this.state = 5;
this.type = -1;
}} else {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 6;
this.type = -1;
} else {
this.state = 7;
this.type = -1;
}}}});

Clazz_newMeth(C$, 'stateError', function () {
throw Clazz_new_((I$[1]||$incl$(1)).c$$S,["missing case in transform state switch"]);
});

Clazz_newMeth(C$, 'getMatrix$DA', function (flatmatrix) {
flatmatrix[0] = this.m00;
flatmatrix[1] = this.m10;
flatmatrix[2] = this.m01;
flatmatrix[3] = this.m11;
if (flatmatrix.length > 5) {
flatmatrix[4] = this.m02;
flatmatrix[5] = this.m12;
}});

Clazz_newMeth(C$, 'getScaleX', function () {
return this.m00;
});

Clazz_newMeth(C$, 'getScaleY', function () {
return this.m11;
});

Clazz_newMeth(C$, 'getShearX', function () {
return this.m01;
});

Clazz_newMeth(C$, 'getShearY', function () {
return this.m10;
});

Clazz_newMeth(C$, 'getTranslateX', function () {
return this.m02;
});

Clazz_newMeth(C$, 'getTranslateY', function () {
return this.m12;
});

Clazz_newMeth(C$, 'translate$D$D', function (tx, ty) {
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
this.m02 = tx * this.m00 + ty * this.m01 + this.m02;
this.m12 = tx * this.m10 + ty * this.m11 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 6;
if (this.type != -1) {
this.type = this.type-(1);
}}return;
case (6):
this.m02 = tx * this.m00 + ty * this.m01;
this.m12 = tx * this.m10 + ty * this.m11;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state = 7;
this.type = this.type|(1);
}return;
case (5):
this.m02 = ty * this.m01 + this.m02;
this.m12 = tx * this.m10 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 4;
if (this.type != -1) {
this.type = this.type-(1);
}}return;
case (4):
this.m02 = ty * this.m01;
this.m12 = tx * this.m10;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state = 5;
this.type = this.type|(1);
}return;
case (3):
this.m02 = tx * this.m00 + this.m02;
this.m12 = ty * this.m11 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 2;
if (this.type != -1) {
this.type = this.type-(1);
}}return;
case (2):
this.m02 = tx * this.m00;
this.m12 = ty * this.m11;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state = 3;
this.type = this.type|(1);
}return;
case (1):
this.m02 = tx + this.m02;
this.m12 = ty + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 0;
this.type = 0;
}return;
case (0):
this.m02 = tx;
this.m12 = ty;
if (tx != 0.0  || ty != 0.0  ) {
this.state = 1;
this.type = 1;
}return;
}
});

Clazz_newMeth(C$, 'rotate90', function () {
var M0 = this.m00;
this.m00 = this.m01;
this.m01 = -M0;
M0 = this.m10;
this.m10 = this.m11;
this.m11 = -M0;
var state = C$.rot90conversion[this.state];
if ((state & 6) == 2 && this.m00 == 1.0   && this.m11 == 1.0  ) {
state = state-(2);
}this.state = state;
this.type = -1;
});

Clazz_newMeth(C$, 'rotate180', function () {
this.m00 = -this.m00;
this.m11 = -this.m11;
var state = this.state;
if ((state & 4) != 0) {
this.m01 = -this.m01;
this.m10 = -this.m10;
} else {
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.state = state & -3;
} else {
this.state = state | 2;
}}this.type = -1;
});

Clazz_newMeth(C$, 'rotate270', function () {
var M0 = this.m00;
this.m00 = -this.m01;
this.m01 = M0;
M0 = this.m10;
this.m10 = -this.m11;
this.m11 = M0;
var state = C$.rot90conversion[this.state];
if ((state & 6) == 2 && this.m00 == 1.0   && this.m11 == 1.0  ) {
state = state-(2);
}this.state = state;
this.type = -1;
});

Clazz_newMeth(C$, 'rotate$D', function (theta) {
var sin = Math.sin(theta);
if (sin == 1.0 ) {
p$.rotate90.apply(this, []);
} else if (sin == -1.0 ) {
p$.rotate270.apply(this, []);
} else {
var cos = Math.cos(theta);
if (cos == -1.0 ) {
p$.rotate180.apply(this, []);
} else if (cos != 1.0 ) {
var M0;
var M1;
M0 = this.m00;
M1 = this.m01;
this.m00 = cos * M0 + sin * M1;
this.m01 = -sin * M0 + cos * M1;
M0 = this.m10;
M1 = this.m11;
this.m10 = cos * M0 + sin * M1;
this.m11 = -sin * M0 + cos * M1;
this.updateState();
}}});

Clazz_newMeth(C$, 'rotate$D$D$D', function (theta, anchorx, anchory) {
this.translate$D$D(anchorx, anchory);
this.rotate$D(theta);
this.translate$D$D(-anchorx, -anchory);
});

Clazz_newMeth(C$, 'rotate$D$D', function (vecx, vecy) {
if (vecy == 0.0 ) {
if (vecx < 0.0 ) {
p$.rotate180.apply(this, []);
}} else if (vecx == 0.0 ) {
if (vecy > 0.0 ) {
p$.rotate90.apply(this, []);
} else {
p$.rotate270.apply(this, []);
}} else {
var len = Math.sqrt(vecx * vecx + vecy * vecy);
var sin = vecy / len;
var cos = vecx / len;
var M0;
var M1;
M0 = this.m00;
M1 = this.m01;
this.m00 = cos * M0 + sin * M1;
this.m01 = -sin * M0 + cos * M1;
M0 = this.m10;
M1 = this.m11;
this.m10 = cos * M0 + sin * M1;
this.m11 = -sin * M0 + cos * M1;
this.updateState();
}});

Clazz_newMeth(C$, 'rotate$D$D$D$D', function (vecx, vecy, anchorx, anchory) {
this.translate$D$D(anchorx, anchory);
this.rotate$D$D(vecx, vecy);
this.translate$D$D(-anchorx, -anchory);
});

Clazz_newMeth(C$, 'quadrantRotate$I', function (numquadrants) {
switch (numquadrants & 3) {
case 0:
break;
case 1:
p$.rotate90.apply(this, []);
break;
case 2:
p$.rotate180.apply(this, []);
break;
case 3:
p$.rotate270.apply(this, []);
break;
}
});

Clazz_newMeth(C$, 'quadrantRotate$I$D$D', function (numquadrants, anchorx, anchory) {
switch (numquadrants & 3) {
case 0:
return;
case 1:
this.m02 += anchorx * (this.m00 - this.m01) + anchory * (this.m01 + this.m00);
this.m12 += anchorx * (this.m10 - this.m11) + anchory * (this.m11 + this.m10);
p$.rotate90.apply(this, []);
break;
case 2:
this.m02 += anchorx * (this.m00 + this.m00) + anchory * (this.m01 + this.m01);
this.m12 += anchorx * (this.m10 + this.m10) + anchory * (this.m11 + this.m11);
p$.rotate180.apply(this, []);
break;
case 3:
this.m02 += anchorx * (this.m00 + this.m01) + anchory * (this.m01 - this.m00);
this.m12 += anchorx * (this.m10 + this.m11) + anchory * (this.m11 - this.m10);
p$.rotate270.apply(this, []);
break;
}
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = this.state&(-2);
} else {
this.state = this.state|(1);
}});

Clazz_newMeth(C$, 'scale$D$D', function (sx, sy) {
var state = this.state;
switch (state) {
default:
p$.stateError.apply(this, []);
case (7):
case (6):
this.m00 *= sx;
this.m11 *= sy;
case (5):
case (4):
this.m01 *= sy;
this.m10 *= sx;
if (this.m01 == 0  && this.m10 == 0  ) {
state = state&(1);
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.type = (state == 0 ? 0 : 1);
} else {
state = state|(2);
this.type = -1;
}this.state = state;
}return;
case (3):
case (2):
this.m00 *= sx;
this.m11 *= sy;
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.state = (state = state&(1));
this.type = (state == 0 ? 0 : 1);
} else {
this.type = -1;
}return;
case (1):
case (0):
this.m00 = sx;
this.m11 = sy;
if (sx != 1.0  || sy != 1.0  ) {
this.state = state | 2;
this.type = -1;
}return;
}
});

Clazz_newMeth(C$, 'shear$D$D', function (shx, shy) {
var state = this.state;
switch (state) {
default:
p$.stateError.apply(this, []);
case (7):
case (6):
var M0;
var M1;
M0 = this.m00;
M1 = this.m01;
this.m00 = M0 + M1 * shy;
this.m01 = M0 * shx + M1;
M0 = this.m10;
M1 = this.m11;
this.m10 = M0 + M1 * shy;
this.m11 = M0 * shx + M1;
this.updateState();
return;
case (5):
case (4):
this.m00 = this.m01 * shy;
this.m11 = this.m10 * shx;
if (this.m00 != 0.0  || this.m11 != 0.0  ) {
this.state = state | 2;
}this.type = -1;
return;
case (3):
case (2):
this.m01 = this.m00 * shx;
this.m10 = this.m11 * shy;
if (this.m01 != 0.0  || this.m10 != 0.0  ) {
this.state = state | 4;
}this.type = -1;
return;
case (1):
case (0):
this.m01 = shx;
this.m10 = shy;
if (this.m01 != 0.0  || this.m10 != 0.0  ) {
this.state = state | 2 | 4 ;
this.type = -1;
}return;
}
});

Clazz_newMeth(C$, 'setToIdentity', function () {
this.m00 = this.m11 = 1.0;
this.m10 = this.m01 = this.m02 = this.m12 = 0.0;
this.state = 0;
this.type = 0;
});

Clazz_newMeth(C$, 'setToTranslation$D$D', function (tx, ty) {
this.m00 = 1.0;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = 1.0;
this.m02 = tx;
this.m12 = ty;
if (tx != 0.0  || ty != 0.0  ) {
this.state = 1;
this.type = 1;
} else {
this.state = 0;
this.type = 0;
}});

Clazz_newMeth(C$, 'setToRotation$D', function (theta) {
p$.setToRotationTheta$D.apply(this, [theta]);
});

Clazz_newMeth(C$, 'setToRotationTheta$D', function (theta) {
var sin = Math.sin(theta);
var cos;
if (sin == 1.0  || sin == -1.0  ) {
cos = 0.0;
this.state = 4;
this.type = 8;
} else {
cos = Math.cos(theta);
if (cos == -1.0 ) {
sin = 0.0;
this.state = 2;
this.type = 8;
} else if (cos == 1.0 ) {
sin = 0.0;
this.state = 0;
this.type = 0;
} else {
this.state = 6;
this.type = 16;
}}this.m00 = cos;
this.m10 = sin;
this.m01 = -sin;
this.m11 = cos;
this.m02 = 0.0;
this.m12 = 0.0;
});

Clazz_newMeth(C$, 'setToRotation$D$D$D', function (theta, anchorx, anchory) {
p$.setToRotationThetaXY$D$D$D.apply(this, [theta, anchorx, anchory]);
});

Clazz_newMeth(C$, 'setToRotationThetaXY$D$D$D', function (theta, anchorx, anchory) {
p$.setToRotationTheta$D.apply(this, [theta]);
var sin = this.m10;
var oneMinusCos = 1.0 - this.m00;
this.m02 = anchorx * oneMinusCos + anchory * sin;
this.m12 = anchory * oneMinusCos - anchorx * sin;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state = this.state|(1);
this.type = this.type|(1);
}});

Clazz_newMeth(C$, 'setToRotation$D$D', function (vecx, vecy) {
p$.setToRotationXY$D$D.apply(this, [vecx, vecy]);
});

Clazz_newMeth(C$, 'setToRotationXY$D$D', function (vecx, vecy) {
var sin;
var cos;
if (vecy == 0 ) {
sin = 0.0;
if (vecx < 0.0 ) {
cos = -1.0;
this.state = 2;
this.type = 8;
} else {
cos = 1.0;
this.state = 0;
this.type = 0;
}} else if (vecx == 0 ) {
cos = 0.0;
sin = (vecy > 0.0 ) ? 1.0 : -1.0;
this.state = 4;
this.type = 8;
} else {
var len = Math.sqrt(vecx * vecx + vecy * vecy);
cos = vecx / len;
sin = vecy / len;
this.state = 6;
this.type = 16;
}this.m00 = cos;
this.m10 = sin;
this.m01 = -sin;
this.m11 = cos;
this.m02 = 0.0;
this.m12 = 0.0;
});

Clazz_newMeth(C$, 'setToRotation$D$D$D$D', function (vecx, vecy, anchorx, anchory) {
p$.setToRotationV2XY$D$D$D$D.apply(this, [vecx, vecy, anchorx, anchory]);
});

Clazz_newMeth(C$, 'setToRotationV2XY$D$D$D$D', function (vecx, vecy, anchorx, anchory) {
p$.setToRotationXY$D$D.apply(this, [vecx, vecy]);
var sin = this.m10;
var oneMinusCos = 1.0 - this.m00;
this.m02 = anchorx * oneMinusCos + anchory * sin;
this.m12 = anchory * oneMinusCos - anchorx * sin;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state = this.state|(1);
this.type = this.type|(1);
}});

Clazz_newMeth(C$, 'setToQuadrantRotation$I', function (numquadrants) {
switch (numquadrants & 3) {
case 0:
this.m00 = 1.0;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = 1.0;
this.m02 = 0.0;
this.m12 = 0.0;
this.state = 0;
this.type = 0;
break;
case 1:
this.m00 = 0.0;
this.m10 = 1.0;
this.m01 = -1.0;
this.m11 = 0.0;
this.m02 = 0.0;
this.m12 = 0.0;
this.state = 4;
this.type = 8;
break;
case 2:
this.m00 = -1.0;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = -1.0;
this.m02 = 0.0;
this.m12 = 0.0;
this.state = 2;
this.type = 8;
break;
case 3:
this.m00 = 0.0;
this.m10 = -1.0;
this.m01 = 1.0;
this.m11 = 0.0;
this.m02 = 0.0;
this.m12 = 0.0;
this.state = 4;
this.type = 8;
break;
}
});

Clazz_newMeth(C$, 'setToQuadrantRotation$I$D$D', function (numquadrants, anchorx, anchory) {
switch (numquadrants & 3) {
case 0:
this.m00 = 1.0;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = 1.0;
this.m02 = 0.0;
this.m12 = 0.0;
this.state = 0;
this.type = 0;
break;
case 1:
this.m00 = 0.0;
this.m10 = 1.0;
this.m01 = -1.0;
this.m11 = 0.0;
this.m02 = anchorx + anchory;
this.m12 = anchory - anchorx;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 4;
this.type = 8;
} else {
this.state = 5;
this.type = 9;
}break;
case 2:
this.m00 = -1.0;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = -1.0;
this.m02 = anchorx + anchorx;
this.m12 = anchory + anchory;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 2;
this.type = 8;
} else {
this.state = 3;
this.type = 9;
}break;
case 3:
this.m00 = 0.0;
this.m10 = -1.0;
this.m01 = 1.0;
this.m11 = 0.0;
this.m02 = anchorx - anchory;
this.m12 = anchory + anchorx;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state = 4;
this.type = 8;
} else {
this.state = 5;
this.type = 9;
}break;
}
});

Clazz_newMeth(C$, 'setToScale$D$D', function (sx, sy) {
this.m00 = sx;
this.m10 = 0.0;
this.m01 = 0.0;
this.m11 = sy;
this.m02 = 0.0;
this.m12 = 0.0;
if (sx != 1.0  || sy != 1.0  ) {
this.state = 2;
this.type = -1;
} else {
this.state = 0;
this.type = 0;
}});

Clazz_newMeth(C$, 'setToShear$D$D', function (shx, shy) {
this.m00 = 1.0;
this.m01 = shx;
this.m10 = shy;
this.m11 = 1.0;
this.m02 = 0.0;
this.m12 = 0.0;
if (shx != 0.0  || shy != 0.0  ) {
this.state = 6;
this.type = -1;
} else {
this.state = 0;
this.type = 0;
}});

Clazz_newMeth(C$, 'setTransform$java_awt_geom_AffineTransform', function (t) {
this.m00 = t.m00;
this.m10 = t.m10;
this.m01 = t.m01;
this.m11 = t.m11;
this.m02 = t.m02;
this.m12 = t.m12;
this.state = t.state;
this.type = t.type;
});

Clazz_newMeth(C$, 'setTransform$D$D$D$D$D$D', function (m00, m10, m01, m11, m02, m12) {
this.m00 = m00;
this.m10 = m10;
this.m01 = m01;
this.m11 = m11;
this.m02 = m02;
this.m12 = m12;
this.updateState();
});

Clazz_newMeth(C$, 'concatenate$java_awt_geom_AffineTransform', function (Tx) {
var M0;
var M1;
var T00;
var T01;
var T10;
var T11;
var T02;
var T12;
var mystate = this.state;
var txstate = Tx.state;
switch ((txstate << 3) | mystate) {
case (0):
case (1):
case (2):
case (3):
case (4):
case (5):
case (6):
case (7):
return;
case (56):
this.m01 = Tx.m01;
this.m10 = Tx.m10;
case (24):
this.m00 = Tx.m00;
this.m11 = Tx.m11;
case (8):
this.m02 = Tx.m02;
this.m12 = Tx.m12;
this.state = txstate;
this.type = Tx.type;
return;
case (48):
this.m01 = Tx.m01;
this.m10 = Tx.m10;
case (16):
this.m00 = Tx.m00;
this.m11 = Tx.m11;
this.state = txstate;
this.type = Tx.type;
return;
case (40):
this.m02 = Tx.m02;
this.m12 = Tx.m12;
case (32):
this.m01 = Tx.m01;
this.m10 = Tx.m10;
this.m00 = this.m11 = 0.0;
this.state = txstate;
this.type = Tx.type;
return;
case (15):
case (14):
case (13):
case (12):
case (11):
case (10):
case (9):
this.translate$D$D(Tx.m02, Tx.m12);
return;
case (23):
case (22):
case (21):
case (20):
case (19):
case (18):
case (17):
this.scale$D$D(Tx.m00, Tx.m11);
return;
case (39):
case (38):
T01 = Tx.m01;
T10 = Tx.m10;
M0 = this.m00;
this.m00 = this.m01 * T10;
this.m01 = M0 * T01;
M0 = this.m10;
this.m10 = this.m11 * T10;
this.m11 = M0 * T01;
this.type = -1;
return;
case (37):
case (36):
this.m00 = this.m01 * Tx.m10;
this.m01 = 0.0;
this.m11 = this.m10 * Tx.m01;
this.m10 = 0.0;
this.state = mystate ^ 6;
this.type = -1;
return;
case (35):
case (34):
this.m01 = this.m00 * Tx.m01;
this.m00 = 0.0;
this.m10 = this.m11 * Tx.m10;
this.m11 = 0.0;
this.state = mystate ^ 6;
this.type = -1;
return;
case (33):
this.m00 = 0.0;
this.m01 = Tx.m01;
this.m10 = Tx.m10;
this.m11 = 0.0;
this.state = 5;
this.type = -1;
return;
}
T00 = Tx.m00;
T01 = Tx.m01;
T02 = Tx.m02;
T10 = Tx.m10;
T11 = Tx.m11;
T12 = Tx.m12;
switch (mystate) {
default:
p$.stateError.apply(this, []);
case (6):
this.state = mystate | txstate;
case (7):
M0 = this.m00;
M1 = this.m01;
this.m00 = T00 * M0 + T10 * M1;
this.m01 = T01 * M0 + T11 * M1;
this.m02 += T02 * M0 + T12 * M1;
M0 = this.m10;
M1 = this.m11;
this.m10 = T00 * M0 + T10 * M1;
this.m11 = T01 * M0 + T11 * M1;
this.m12 += T02 * M0 + T12 * M1;
this.type = -1;
return;
case (5):
case (4):
M0 = this.m01;
this.m00 = T10 * M0;
this.m01 = T11 * M0;
this.m02 += T12 * M0;
M0 = this.m10;
this.m10 = T00 * M0;
this.m11 = T01 * M0;
this.m12 += T02 * M0;
break;
case (3):
case (2):
M0 = this.m00;
this.m00 = T00 * M0;
this.m01 = T01 * M0;
this.m02 += T02 * M0;
M0 = this.m11;
this.m10 = T10 * M0;
this.m11 = T11 * M0;
this.m12 += T12 * M0;
break;
case (1):
this.m00 = T00;
this.m01 = T01;
this.m02 += T02;
this.m10 = T10;
this.m11 = T11;
this.m12 += T12;
this.state = txstate | 1;
this.type = -1;
return;
}
this.updateState();
});

Clazz_newMeth(C$, 'preConcatenate$java_awt_geom_AffineTransform', function (Tx) {
var M0;
var M1;
var T00;
var T01;
var T10;
var T11;
var T02;
var T12;
var mystate = this.state;
var txstate = Tx.state;
switch ((txstate << 3) | mystate) {
case (0):
case (1):
case (2):
case (3):
case (4):
case (5):
case (6):
case (7):
return;
case (8):
case (10):
case (12):
case (14):
this.m02 = Tx.m02;
this.m12 = Tx.m12;
this.state = mystate | 1;
this.type = this.type|(1);
return;
case (9):
case (11):
case (13):
case (15):
this.m02 = this.m02 + Tx.m02;
this.m12 = this.m12 + Tx.m12;
return;
case (17):
case (16):
this.state = mystate | 2;
case (23):
case (22):
case (21):
case (20):
case (19):
case (18):
T00 = Tx.m00;
T11 = Tx.m11;
if ((mystate & 4) != 0) {
this.m01 = this.m01 * T00;
this.m10 = this.m10 * T11;
if ((mystate & 2) != 0) {
this.m00 = this.m00 * T00;
this.m11 = this.m11 * T11;
}} else {
this.m00 = this.m00 * T00;
this.m11 = this.m11 * T11;
}if ((mystate & 1) != 0) {
this.m02 = this.m02 * T00;
this.m12 = this.m12 * T11;
}this.type = -1;
return;
case (37):
case (36):
mystate = mystate | 2;
case (33):
case (32):
case (35):
case (34):
this.state = mystate ^ 4;
case (39):
case (38):
T01 = Tx.m01;
T10 = Tx.m10;
M0 = this.m00;
this.m00 = this.m10 * T01;
this.m10 = M0 * T10;
M0 = this.m01;
this.m01 = this.m11 * T01;
this.m11 = M0 * T10;
M0 = this.m02;
this.m02 = this.m12 * T01;
this.m12 = M0 * T10;
this.type = -1;
return;
}
T00 = Tx.m00;
T01 = Tx.m01;
T02 = Tx.m02;
T10 = Tx.m10;
T11 = Tx.m11;
T12 = Tx.m12;
switch (mystate) {
default:
p$.stateError.apply(this, []);
case (7):
M0 = this.m02;
M1 = this.m12;
T02 += M0 * T00 + M1 * T01;
T12 += M0 * T10 + M1 * T11;
case (6):
this.m02 = T02;
this.m12 = T12;
M0 = this.m00;
M1 = this.m10;
this.m00 = M0 * T00 + M1 * T01;
this.m10 = M0 * T10 + M1 * T11;
M0 = this.m01;
M1 = this.m11;
this.m01 = M0 * T00 + M1 * T01;
this.m11 = M0 * T10 + M1 * T11;
break;
case (5):
M0 = this.m02;
M1 = this.m12;
T02 += M0 * T00 + M1 * T01;
T12 += M0 * T10 + M1 * T11;
case (4):
this.m02 = T02;
this.m12 = T12;
M0 = this.m10;
this.m00 = M0 * T01;
this.m10 = M0 * T11;
M0 = this.m01;
this.m01 = M0 * T00;
this.m11 = M0 * T10;
break;
case (3):
M0 = this.m02;
M1 = this.m12;
T02 += M0 * T00 + M1 * T01;
T12 += M0 * T10 + M1 * T11;
case (2):
this.m02 = T02;
this.m12 = T12;
M0 = this.m00;
this.m00 = M0 * T00;
this.m10 = M0 * T10;
M0 = this.m11;
this.m01 = M0 * T01;
this.m11 = M0 * T11;
break;
case (1):
M0 = this.m02;
M1 = this.m12;
T02 += M0 * T00 + M1 * T01;
T12 += M0 * T10 + M1 * T11;
case (0):
this.m02 = T02;
this.m12 = T12;
this.m00 = T00;
this.m10 = T10;
this.m01 = T01;
this.m11 = T11;
this.state = mystate | txstate;
this.type = -1;
return;
}
this.updateState();
});

Clazz_newMeth(C$, 'createInverse', function () {
var det;
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
det = this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[this.m11 / det, -this.m10 / det, -this.m01 / det, this.m00 / det, (this.m01 * this.m12 - this.m11 * this.m02) / det, (this.m10 * this.m02 - this.m00 * this.m12) / det, 7]);
case (6):
det = this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[this.m11 / det, -this.m10 / det, -this.m01 / det, this.m00 / det, 0.0, 0.0, 6]);
case (5):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[0.0, 1.0 / this.m01, 1.0 / this.m10, 0.0, -this.m12 / this.m10, -this.m02 / this.m01, 5]);
case (4):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[0.0, 1.0 / this.m01, 1.0 / this.m10, 0.0, 0.0, 0.0, 4]);
case (3):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0 / this.m00, 0.0, 0.0, 1.0 / this.m11, -this.m02 / this.m00, -this.m12 / this.m11, 3]);
case (2):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0 / this.m00, 0.0, 0.0, 1.0 / this.m11, 0.0, 0.0, 2]);
case (1):
return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0, 0.0, 0.0, 1.0, -this.m02, -this.m12, 1]);
case (0):
return Clazz_new_(C$);
}
});

Clazz_newMeth(C$, 'invert', function () {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
var det;
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
det = M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}this.m00 = M11 / det;
this.m10 = -M10 / det;
this.m01 = -M01 / det;
this.m11 = M00 / det;
this.m02 = (M01 * M12 - M11 * M02) / det;
this.m12 = (M10 * M02 - M00 * M12) / det;
break;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
det = M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}this.m00 = M11 / det;
this.m10 = -M10 / det;
this.m01 = -M01 / det;
this.m11 = M00 / det;
break;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m10 = 1.0 / M01;
this.m01 = 1.0 / M10;
this.m02 = -M12 / M10;
this.m12 = -M02 / M01;
break;
case (4):
M01 = this.m01;
M10 = this.m10;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m10 = 1.0 / M01;
this.m01 = 1.0 / M10;
break;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m00 = 1.0 / M00;
this.m11 = 1.0 / M11;
this.m02 = -M02 / M00;
this.m12 = -M12 / M11;
break;
case (2):
M00 = this.m00;
M11 = this.m11;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m00 = 1.0 / M00;
this.m11 = 1.0 / M11;
break;
case (1):
this.m02 = -this.m02;
this.m12 = -this.m12;
break;
case (0):
break;
}
});

Clazz_newMeth(C$, 'transform$java_awt_geom_Point2D$java_awt_geom_Point2D', function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst = Clazz_new_((I$[2]||$incl$(2)));
} else {
ptDst = Clazz_new_((I$[3]||$incl$(3)));
}}var x = ptSrc.getX();
var y = ptSrc.getY();
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01 + this.m02, x * this.m10 + y * this.m11 + this.m12);
return ptDst;
case (6):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
return ptDst;
case (5):
ptDst.setLocation$D$D(y * this.m01 + this.m02, x * this.m10 + this.m12);
return ptDst;
case (4):
ptDst.setLocation$D$D(y * this.m01, x * this.m10);
return ptDst;
case (3):
ptDst.setLocation$D$D(x * this.m00 + this.m02, y * this.m11 + this.m12);
return ptDst;
case (2):
ptDst.setLocation$D$D(x * this.m00, y * this.m11);
return ptDst;
case (1):
ptDst.setLocation$D$D(x + this.m02, y + this.m12);
return ptDst;
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'transform$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I', function (ptSrc, srcOff, ptDst, dstOff, numPts) {
p$.transformPts$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I.apply(this, [ptSrc, srcOff, ptDst, dstOff, numPts]);
});

Clazz_newMeth(C$, 'transformPts$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I', function (ptSrc, srcOff, ptDst, dstOff, numPts) {
var state = this.state;
while (--numPts >= 0){
var src = ptSrc[srcOff++];
var x = src.getX();
var y = src.getY();
var dst = ptDst[dstOff++];
if (dst == null ) {
if (Clazz_instanceOf(src, "java.awt.geom.Point2D.Double")) {
dst = Clazz_new_((I$[2]||$incl$(2)));
} else {
dst = Clazz_new_((I$[3]||$incl$(3)));
}ptDst[dstOff - 1] = dst;
}switch (state) {
default:
p$.stateError.apply(this, []);
case (7):
dst.setLocation$D$D(x * this.m00 + y * this.m01 + this.m02, x * this.m10 + y * this.m11 + this.m12);
break;
case (6):
dst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
break;
case (5):
dst.setLocation$D$D(y * this.m01 + this.m02, x * this.m10 + this.m12);
break;
case (4):
dst.setLocation$D$D(y * this.m01, x * this.m10);
break;
case (3):
dst.setLocation$D$D(x * this.m00 + this.m02, y * this.m11 + this.m12);
break;
case (2):
dst.setLocation$D$D(x * this.m00, y * this.m11);
break;
case (1):
dst.setLocation$D$D(x + this.m02, y + this.m12);
break;
case (0):
dst.setLocation$D$D(x, y);
break;
}
}
});

Clazz_newMeth(C$, 'transform$FA$I$FA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff = dstOff;
}switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = (M00 * x + M01 * y + M02);
dstPts[dstOff++] = (M10 * x + M11 * y + M12);
}
return;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = (M00 * x + M01 * y);
dstPts[dstOff++] = (M10 * x + M11 * y);
}
return;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = (M01 * srcPts[srcOff++] + M02);
dstPts[dstOff++] = (M10 * x + M12);
}
return;
case (4):
M01 = this.m01;
M10 = this.m10;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = (M01 * srcPts[srcOff++]);
dstPts[dstOff++] = (M10 * x);
}
return;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = (M00 * srcPts[srcOff++] + M02);
dstPts[dstOff++] = (M11 * srcPts[srcOff++] + M12);
}
return;
case (2):
M00 = this.m00;
M11 = this.m11;
while (--numPts >= 0){
dstPts[dstOff++] = (M00 * srcPts[srcOff++]);
dstPts[dstOff++] = (M11 * srcPts[srcOff++]);
}
return;
case (1):
M02 = this.m02;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = (srcPts[srcOff++] + M02);
dstPts[dstOff++] = (srcPts[srcOff++] + M12);
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'transform$DA$I$DA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
if (numPts == 0) return;
if (!(I$[4]||$incl$(4)).isAD$O(srcPts)) {
var src = srcPts;
var dst = dstPts;
this.transform$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I(src, srcOff, dst, dstOff, numPts);
return;
}var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff = dstOff;
}switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = M00 * x + M01 * y + M02;
dstPts[dstOff++] = M10 * x + M11 * y + M12;
}
return;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = M00 * x + M01 * y;
dstPts[dstOff++] = M10 * x + M11 * y;
}
return;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = M01 * srcPts[srcOff++] + M02;
dstPts[dstOff++] = M10 * x + M12;
}
return;
case (4):
M01 = this.m01;
M10 = this.m10;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = M01 * srcPts[srcOff++];
dstPts[dstOff++] = M10 * x;
}
return;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = M00 * srcPts[srcOff++] + M02;
dstPts[dstOff++] = M11 * srcPts[srcOff++] + M12;
}
return;
case (2):
M00 = this.m00;
M11 = this.m11;
while (--numPts >= 0){
dstPts[dstOff++] = M00 * srcPts[srcOff++];
dstPts[dstOff++] = M11 * srcPts[srcOff++];
}
return;
case (1):
M02 = this.m02;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++] + M02;
dstPts[dstOff++] = srcPts[srcOff++] + M12;
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'transform$FA$I$DA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = M00 * x + M01 * y + M02;
dstPts[dstOff++] = M10 * x + M11 * y + M12;
}
return;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = M00 * x + M01 * y;
dstPts[dstOff++] = M10 * x + M11 * y;
}
return;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = M01 * srcPts[srcOff++] + M02;
dstPts[dstOff++] = M10 * x + M12;
}
return;
case (4):
M01 = this.m01;
M10 = this.m10;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = M01 * srcPts[srcOff++];
dstPts[dstOff++] = M10 * x;
}
return;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = M00 * srcPts[srcOff++] + M02;
dstPts[dstOff++] = M11 * srcPts[srcOff++] + M12;
}
return;
case (2):
M00 = this.m00;
M11 = this.m11;
while (--numPts >= 0){
dstPts[dstOff++] = M00 * srcPts[srcOff++];
dstPts[dstOff++] = M11 * srcPts[srcOff++];
}
return;
case (1):
M02 = this.m02;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++] + M02;
dstPts[dstOff++] = srcPts[srcOff++] + M12;
}
return;
case (0):
while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++];
dstPts[dstOff++] = srcPts[srcOff++];
}
return;
}
});

Clazz_newMeth(C$, 'transform$DA$I$FA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = (M00 * x + M01 * y + M02);
dstPts[dstOff++] = (M10 * x + M11 * y + M12);
}
return;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = (M00 * x + M01 * y);
dstPts[dstOff++] = (M10 * x + M11 * y);
}
return;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = (M01 * srcPts[srcOff++] + M02);
dstPts[dstOff++] = (M10 * x + M12);
}
return;
case (4):
M01 = this.m01;
M10 = this.m10;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = (M01 * srcPts[srcOff++]);
dstPts[dstOff++] = (M10 * x);
}
return;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = (M00 * srcPts[srcOff++] + M02);
dstPts[dstOff++] = (M11 * srcPts[srcOff++] + M12);
}
return;
case (2):
M00 = this.m00;
M11 = this.m11;
while (--numPts >= 0){
dstPts[dstOff++] = (M00 * srcPts[srcOff++]);
dstPts[dstOff++] = (M11 * srcPts[srcOff++]);
}
return;
case (1):
M02 = this.m02;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = (srcPts[srcOff++] + M02);
dstPts[dstOff++] = (srcPts[srcOff++] + M12);
}
return;
case (0):
while (--numPts >= 0){
dstPts[dstOff++] = (srcPts[srcOff++]);
dstPts[dstOff++] = (srcPts[srcOff++]);
}
return;
}
});

Clazz_newMeth(C$, 'inverseTransform$java_awt_geom_Point2D$java_awt_geom_Point2D', function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst = Clazz_new_((I$[2]||$incl$(2)));
} else {
ptDst = Clazz_new_((I$[3]||$incl$(3)));
}}var x = ptSrc.getX();
var y = ptSrc.getY();
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
x -= this.m02;
y -= this.m12;
case (6):
var det = this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}ptDst.setLocation$D$D((x * this.m11 - y * this.m01) / det, (y * this.m00 - x * this.m10) / det);
return ptDst;
case (5):
x -= this.m02;
y -= this.m12;
case (4):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}ptDst.setLocation$D$D(y / this.m10, x / this.m01);
return ptDst;
case (3):
x -= this.m02;
y -= this.m12;
case (2):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}ptDst.setLocation$D$D(x / this.m00, y / this.m11);
return ptDst;
case (1):
ptDst.setLocation$D$D(x - this.m02, y - this.m12);
return ptDst;
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'inverseTransform$DA$I$DA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
var det;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff = dstOff;
}switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
M00 = this.m00;
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M11 = this.m11;
M12 = this.m12;
det = M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}while (--numPts >= 0){
var x = srcPts[srcOff++] - M02;
var y = srcPts[srcOff++] - M12;
dstPts[dstOff++] = (x * M11 - y * M01) / det;
dstPts[dstOff++] = (y * M00 - x * M10) / det;
}
return;
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
det = M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = (x * M11 - y * M01) / det;
dstPts[dstOff++] = (y * M00 - x * M10) / det;
}
return;
case (5):
M01 = this.m01;
M02 = this.m02;
M10 = this.m10;
M12 = this.m12;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
var x = srcPts[srcOff++] - M02;
dstPts[dstOff++] = (srcPts[srcOff++] - M12) / M10;
dstPts[dstOff++] = x / M01;
}
return;
case (4):
M01 = this.m01;
M10 = this.m10;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = srcPts[srcOff++] / M10;
dstPts[dstOff++] = x / M01;
}
return;
case (3):
M00 = this.m00;
M02 = this.m02;
M11 = this.m11;
M12 = this.m12;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
dstPts[dstOff++] = (srcPts[srcOff++] - M02) / M00;
dstPts[dstOff++] = (srcPts[srcOff++] - M12) / M11;
}
return;
case (2):
M00 = this.m00;
M11 = this.m11;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++] / M00;
dstPts[dstOff++] = srcPts[srcOff++] / M11;
}
return;
case (1):
M02 = this.m02;
M12 = this.m12;
while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++] - M02;
dstPts[dstOff++] = srcPts[srcOff++] - M12;
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D', function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst = Clazz_new_((I$[2]||$incl$(2)));
} else {
ptDst = Clazz_new_((I$[3]||$incl$(3)));
}}var x = ptSrc.getX();
var y = ptSrc.getY();
switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
case (6):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
return ptDst;
case (5):
case (4):
ptDst.setLocation$D$D(y * this.m01, x * this.m10);
return ptDst;
case (3):
case (2):
ptDst.setLocation$D$D(x * this.m00, y * this.m11);
return ptDst;
case (1):
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'deltaTransform$DA$I$DA$I$I', function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M10;
var M11;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff = dstOff;
}switch (this.state) {
default:
p$.stateError.apply(this, []);
case (7):
case (6):
M00 = this.m00;
M01 = this.m01;
M10 = this.m10;
M11 = this.m11;
while (--numPts >= 0){
var x = srcPts[srcOff++];
var y = srcPts[srcOff++];
dstPts[dstOff++] = x * M00 + y * M01;
dstPts[dstOff++] = x * M10 + y * M11;
}
return;
case (5):
case (4):
M01 = this.m01;
M10 = this.m10;
while (--numPts >= 0){
var x = srcPts[srcOff++];
dstPts[dstOff++] = srcPts[srcOff++] * M01;
dstPts[dstOff++] = x * M10;
}
return;
case (3):
case (2):
M00 = this.m00;
M11 = this.m11;
while (--numPts >= 0){
dstPts[dstOff++] = srcPts[srcOff++] * M00;
dstPts[dstOff++] = srcPts[srcOff++] * M11;
}
return;
case (1):
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'createTransformedShape$java_awt_Shape', function (pSrc) {
if (pSrc == null ) {
return null;
}return Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Shape$java_awt_geom_AffineTransform,[pSrc, this]);
});

Clazz_newMeth(C$, '_matround$D', function (matval) {
return Math.rint(matval * 1.0E15) / 1.0E15;
}, 1);

Clazz_newMeth(C$, 'toString', function () {
return ("AffineTransform[[" + new Double(C$._matround$D(this.m00)).toString() + ", " + new Double(C$._matround$D(this.m01)).toString() + ", " + new Double(C$._matround$D(this.m02)).toString() + "], [" + new Double(C$._matround$D(this.m10)).toString() + ", " + new Double(C$._matround$D(this.m11)).toString() + ", " + new Double(C$._matround$D(this.m12)).toString() + "]]" );
});

Clazz_newMeth(C$, 'isIdentity', function () {
return (this.state == 0 || (this.getType() == 0) );
});

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[1]||$incl$(1)));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'hashCode', function () {
var bits = Double.doubleToLongBits(this.m00);
bits = bits * 31 + Double.doubleToLongBits(this.m01);
bits = bits * 31 + Double.doubleToLongBits(this.m02);
bits = bits * 31 + Double.doubleToLongBits(this.m10);
bits = bits * 31 + Double.doubleToLongBits(this.m11);
bits = bits * 31 + Double.doubleToLongBits(this.m12);
return (((bits|0)) ^ (((bits >> 32)|0)));
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.geom.AffineTransform"))) {
return false;
}var a = obj;
return ((this.m00 == a.m00 ) && (this.m01 == a.m01 ) && (this.m02 == a.m02 ) && (this.m10 == a.m10 ) && (this.m11 == a.m11 ) && (this.m12 == a.m12 )  );
});
})();
//Created 2018-05-15 01:01:59
(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[['java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Dimension2D", null, null, 'Cloneable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setSize$java_awt_geom_Dimension2D', function (d) {
this.setSize$D$D(d.getWidth(), d.getHeight());
});

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[1]||$incl$(1)));
} else {
throw e;
}
}
});
})();
//Created 2018-05-15 01:01:59
(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[['java.awt.geom.Rectangle2D','.Double'],'java.awt.geom.Rectangle2D','java.awt.geom.RectIterator']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Rectangle2D", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.geom.RectangularShape');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.iterator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D', function (r) {
this.setRect$D$D$D$D(r.getX(), r.getY(), r.getWidth(), r.getHeight());
});

Clazz_newMeth(C$, 'intersectsLine$D$D$D$D', function (x1, y1, x2, y2) {
var out1;
var out2;
if ((out2 = this.outcode$D$D(x2, y2)) == 0) {
return true;
}while ((out1 = this.outcode$D$D(x1, y1)) != 0){
if ((out1 & out2) != 0) {
return false;
}if ((out1 & 5) != 0) {
var x = this.getX();
if ((out1 & 4) != 0) {
x += this.getWidth();
}y1 = y1 + (x - x1) * (y2 - y1) / (x2 - x1);
x1 = x;
} else {
var y = this.getY();
if ((out1 & 8) != 0) {
y += this.getHeight();
}x1 = x1 + (y - y1) * (x2 - x1) / (y2 - y1);
y1 = y;
}}
return true;
});

Clazz_newMeth(C$, 'intersectsLine$java_awt_geom_Line2D', function (l) {
return this.intersectsLine$D$D$D$D(l.getX1(), l.getY1(), l.getX2(), l.getY2());
});

Clazz_newMeth(C$, 'outcode$java_awt_geom_Point2D', function (p) {
return this.outcode$D$D(p.getX(), p.getY());
});

Clazz_newMeth(C$, 'setFrame$D$D$D$D', function (x, y, w, h) {
this.setRect$D$D$D$D(x, y, w, h);
});

Clazz_newMeth(C$, 'contains$D$D', function (x, y) {
var x0 = this.getX();
var y0 = this.getY();
return (x >= x0  && y >= y0   && x < x0 + this.getWidth()   && y < y0 + this.getHeight()  );
});

Clazz_newMeth(C$, 'intersects$D$D$D$D', function (x, y, w, h) {
if (this.isEmpty() || w <= 0   || h <= 0  ) {
return false;
}var x0 = this.getX();
var y0 = this.getY();
return (x + w > x0  && y + h > y0   && x < x0 + this.getWidth()   && y < y0 + this.getHeight()  );
});

Clazz_newMeth(C$, 'contains$D$D$D$D', function (x, y, w, h) {
if (this.isEmpty() || w <= 0   || h <= 0  ) {
return false;
}var x0 = this.getX();
var y0 = this.getY();
return (x >= x0  && y >= y0   && (x + w) <= x0 + this.getWidth()   && (y + h) <= y0 + this.getHeight()  );
});

Clazz_newMeth(C$, 'intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D', function (src1, src2, dest) {
var x1 = Math.max(src1.getMinX(), src2.getMinX());
var y1 = Math.max(src1.getMinY(), src2.getMinY());
var x2 = Math.min(src1.getMaxX(), src2.getMaxX());
var y2 = Math.min(src1.getMaxY(), src2.getMaxY());
dest.setFrame$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
}, 1);

Clazz_newMeth(C$, 'union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D', function (src1, src2, dest) {
var x1 = Math.min(src1.getMinX(), src2.getMinX());
var y1 = Math.min(src1.getMinY(), src2.getMinY());
var x2 = Math.max(src1.getMaxX(), src2.getMaxX());
var y2 = Math.max(src1.getMaxY(), src2.getMaxY());
dest.setFrameFromDiagonal$D$D$D$D(x1, y1, x2, y2);
}, 1);

Clazz_newMeth(C$, 'add$D$D', function (newx, newy) {
var x1 = Math.min(this.getMinX(), newx);
var x2 = Math.max(this.getMaxX(), newx);
var y1 = Math.min(this.getMinY(), newy);
var y2 = Math.max(this.getMaxY(), newy);
this.setRect$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'add$java_awt_geom_Point2D', function (pt) {
this.add$D$D(pt.getX(), pt.getY());
});

Clazz_newMeth(C$, 'add$java_awt_geom_Rectangle2D', function (r) {
var x1 = Math.min(this.getMinX(), r.getMinX());
var x2 = Math.max(this.getMaxX(), r.getMaxX());
var y1 = Math.min(this.getMinY(), r.getMinY());
var y2 = Math.max(this.getMaxY(), r.getMaxY());
this.setRect$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform', function (at) {
return (this.iterator == null  ? this.iterator = Clazz_new_((I$[3]||$incl$(3))) : this.iterator).set$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform(this, at);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform$D', function (at, flatness) {
return (this.iterator == null  ? this.iterator = Clazz_new_((I$[3]||$incl$(3))) : this.iterator).set$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform(this, at);
});

Clazz_newMeth(C$, 'hashCode', function () {
var bits = java.lang.Double.doubleToLongBits(this.getX());
bits = bits+(java.lang.Double.doubleToLongBits(this.getY()) * 37);
bits = bits+(java.lang.Double.doubleToLongBits(this.getWidth()) * 43);
bits = bits+(java.lang.Double.doubleToLongBits(this.getHeight()) * 47);
return (((bits|0)) ^ (((bits >> 32)|0)));
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (obj === this ) {
return true;
}if (Clazz_instanceOf(obj, "java.awt.geom.Rectangle2D")) {
var r2d = obj;
return ((this.getX() == r2d.getX() ) && (this.getY() == r2d.getY() ) && (this.getWidth() == r2d.getWidth() ) && (this.getHeight() == r2d.getHeight() )  );
}return false;
});
;
(function(){var C$=Clazz_newClass(P$.Rectangle2D, "Float", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Rectangle2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
this.width = 0;
this.height = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F', function (x, y, w, h) {
Clazz_super_(C$, this,1);
this.setRect$F$F$F$F(x, y, w, h);
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.height;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return (this.width <= 0.0 ) || (this.height <= 0.0 ) ;
});

Clazz_newMeth(C$, 'setRect$F$F$F$F', function (x, y, w, h) {
this.x = x;
this.y = y;
this.width = w;
this.height = h;
});

Clazz_newMeth(C$, 'setRect$D$D$D$D', function (x, y, w, h) {
this.x = x;
this.y = y;
this.width = w;
this.height = h;
});

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D', function (r) {
this.x = r.getX();
this.y = r.getY();
this.width = r.getWidth();
this.height = r.getHeight();
});

Clazz_newMeth(C$, 'outcode$D$D', function (x, y) {
var out = 0;
if (this.width <= 0 ) {
out = out|(5);
} else if (x < this.x ) {
out = out|(1);
} else if (x > this.x + this.width ) {
out = out|(4);
}if (this.height <= 0 ) {
out = out|(10);
} else if (y < this.y ) {
out = out|(2);
} else if (y > this.y + this.height ) {
out = out|(8);
}return out;
});

Clazz_newMeth(C$, 'getBounds2D', function () {
return Clazz_new_(C$.c$$F$F$F$F,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D', function (r) {
var dest;
if (Clazz_instanceOf(r, "java.awt.geom.Rectangle2D.Float")) {
dest = Clazz_new_(C$);
} else {
dest = Clazz_new_((I$[1]||$incl$(1)));
}(I$[2]||$incl$(2)).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D', function (r) {
var dest;
if (Clazz_instanceOf(r, "java.awt.geom.Rectangle2D.Float")) {
dest = Clazz_new_(C$);
} else {
dest = Clazz_new_((I$[1]||$incl$(1)));
}(I$[2]||$incl$(2)).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[x=" + new Float(this.x).toString() + ",y=" + new Float(this.y).toString() + ",w=" + new Float(this.width).toString() + ",h=" + new Float(this.height).toString() + "]" ;
});
})()
;
(function(){var C$=Clazz_newClass(P$.Rectangle2D, "Double", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Rectangle2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
this.width = 0;
this.height = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D', function (x, y, w, h) {
Clazz_super_(C$, this,1);
this.setRect$D$D$D$D(x, y, w, h);
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.height;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return (this.width <= 0.0 ) || (this.height <= 0.0 ) ;
});

Clazz_newMeth(C$, 'setRect$D$D$D$D', function (x, y, w, h) {
this.x = x;
this.y = y;
this.width = w;
this.height = h;
});

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D', function (r) {
this.x = r.getX();
this.y = r.getY();
this.width = r.getWidth();
this.height = r.getHeight();
});

Clazz_newMeth(C$, 'outcode$D$D', function (x, y) {
var out = 0;
if (this.width <= 0 ) {
out = out|(5);
} else if (x < this.x ) {
out = out|(1);
} else if (x > this.x + this.width ) {
out = out|(4);
}if (this.height <= 0 ) {
out = out|(10);
} else if (y < this.y ) {
out = out|(2);
} else if (y > this.y + this.height ) {
out = out|(8);
}return out;
});

Clazz_newMeth(C$, 'getBounds2D', function () {
return Clazz_new_(C$.c$$D$D$D$D,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D', function (r) {
var dest = Clazz_new_(C$);
(I$[2]||$incl$(2)).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D', function (r) {
var dest = Clazz_new_(C$);
(I$[2]||$incl$(2)).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[x=" + new Double(this.x).toString() + ",y=" + new Double(this.y).toString() + ",w=" + new Double(this.width).toString() + ",h=" + new Double(this.height).toString() + "]" ;
});
})()
})();
//Created 2018-05-15 01:02:00
(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[['java.awt.geom.Rectangle2D','.Double'],'java.awt.Rectangle','java.awt.geom.FlatteningPathIterator','java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "RectangularShape", null, null, ['java.awt.Shape', 'Cloneable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getMinX', function () {
return this.getX();
});

Clazz_newMeth(C$, 'getMinY', function () {
return this.getY();
});

Clazz_newMeth(C$, 'getMaxX', function () {
return this.getX() + this.getWidth();
});

Clazz_newMeth(C$, 'getMaxY', function () {
return this.getY() + this.getHeight();
});

Clazz_newMeth(C$, 'getCenterX', function () {
return this.getX() + this.getWidth() / 2.0;
});

Clazz_newMeth(C$, 'getCenterY', function () {
return this.getY() + this.getHeight() / 2.0;
});

Clazz_newMeth(C$, 'getFrame', function () {
return Clazz_new_((I$[1]||$incl$(1)).c$$D$D$D$D,[this.getX(), this.getY(), this.getWidth(), this.getHeight()]);
});

Clazz_newMeth(C$, 'setFrame$java_awt_geom_Point2D$java_awt_geom_Dimension2D', function (loc, size) {
this.setFrame$D$D$D$D(loc.getX(), loc.getY(), size.getWidth(), size.getHeight());
});

Clazz_newMeth(C$, 'setFrame$java_awt_geom_Rectangle2D', function (r) {
this.setFrame$D$D$D$D(r.getX(), r.getY(), r.getWidth(), r.getHeight());
});

Clazz_newMeth(C$, 'setFrameFromDiagonal$D$D$D$D', function (x1, y1, x2, y2) {
if (x2 < x1 ) {
var t = x1;
x1 = x2;
x2 = t;
}if (y2 < y1 ) {
var t = y1;
y1 = y2;
y2 = t;
}this.setFrame$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'setFrameFromDiagonal$java_awt_geom_Point2D$java_awt_geom_Point2D', function (p1, p2) {
this.setFrameFromDiagonal$D$D$D$D(p1.getX(), p1.getY(), p2.getX(), p2.getY());
});

Clazz_newMeth(C$, 'setFrameFromCenter$D$D$D$D', function (centerX, centerY, cornerX, cornerY) {
var halfW = Math.abs(cornerX - centerX);
var halfH = Math.abs(cornerY - centerY);
this.setFrame$D$D$D$D(centerX - halfW, centerY - halfH, halfW * 2.0, halfH * 2.0);
});

Clazz_newMeth(C$, 'setFrameFromCenter$java_awt_geom_Point2D$java_awt_geom_Point2D', function (center, corner) {
this.setFrameFromCenter$D$D$D$D(center.getX(), center.getY(), corner.getX(), corner.getY());
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Point2D', function (p) {
return this.contains$D$D(p.getX(), p.getY());
});

Clazz_newMeth(C$, 'intersects$java_awt_geom_Rectangle2D', function (r) {
return this.intersects$D$D$D$D(r.getX(), r.getY(), r.getWidth(), r.getHeight());
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Rectangle2D', function (r) {
return this.contains$D$D$D$D(r.getX(), r.getY(), r.getWidth(), r.getHeight());
});

Clazz_newMeth(C$, 'getBounds', function () {
var width = this.getWidth();
var height = this.getHeight();
if (width < 0  || height < 0  ) {
return Clazz_new_((I$[2]||$incl$(2)));
}var x = this.getX();
var y = this.getY();
var x1 = Math.floor(x);
var y1 = Math.floor(y);
var x2 = Math.ceil(x + width);
var y2 = Math.ceil(y + height);
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[(x1|0), (y1|0), ((x2 - x1)|0), ((y2 - y1)|0)]);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform$D', function (at, flatness) {
return Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_geom_PathIterator$D,[this.getPathIterator$java_awt_geom_AffineTransform(at), flatness]);
});

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[4]||$incl$(4)));
} else {
throw e;
}
}
});
})();
//Created 2018-05-15 01:02:00
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['swingjs.api.Interface','java.awt.image.ColorModel','java.awt.image.WritableRaster','java.lang.Boolean','java.util.Hashtable']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "GraphicsConfiguration");

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createCompatibleImage$I$I$I', function (width, height, transparency) {
if (this.getColorModel().getTransparency() == transparency) {
return this.createCompatibleImage$I$I(width, height);
}var cm = this.getColorModel$I(transparency);
if (cm == null ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Unknown transparency: " + transparency]);
}var wr = cm.createCompatibleWritableRaster$I$I(width, height);
return this.newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable(cm, wr, cm.isAlphaPremultiplied(), null);
});

Clazz_newMeth(C$, 'newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable', function (cm, wr, alphaPremultiplied, properties) {
return (I$[1]||$incl$(1)).getInstanceWithParams$S$ClassA$OA("java.awt.image.BufferedImage", Clazz_array(java.lang.Class, -1, [Clazz_getClass((I$[2]||$incl$(2))), Clazz_getClass((I$[3]||$incl$(3))), Clazz_getClass((I$[4]||$incl$(4))), Clazz_getClass((I$[5]||$incl$(5)))]), Clazz_array(java.lang.Object, -1, [cm, wr, alphaPremultiplied ? (I$[4]||$incl$(4)).TRUE : (I$[4]||$incl$(4)).FALSE, properties]));
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I', function (width, height) {
var vi = null;
try {
vi = this.createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I(width, height, null, 1);
} catch (e) {
if (Clazz_exceptionOf(e, "java.awt.AWTException")){
Clazz_assert(C$, this, function(){return false});
} else {
throw e;
}
}
return vi;
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I$I', function (width, height, transparency) {
var vi = null;
try {
vi = this.createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I(width, height, null, transparency);
} catch (e) {
if (Clazz_exceptionOf(e, "java.awt.AWTException")){
Clazz_assert(C$, this, function(){return false});
} else {
throw e;
}
}
return vi;
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I', function (width, height, caps, transparency) {
var vi = (I$[1]||$incl$(1)).getInstanceWithParams$S$ClassA$OA("sun.awt.image.SunVolatileImage", Clazz_array(java.lang.Class, -1, [Clazz_getClass(C$), Clazz_getClass(java.lang.Integer), Clazz_getClass(java.lang.Integer), Clazz_getClass((I$[4]||$incl$(4))), Clazz_getClass(java.lang.Object), Clazz_getClass(java.lang.Integer)]), Clazz_array(java.lang.Object, -1, [this, Integer.$valueOf(width), Integer.$valueOf(height), caps, Integer.$valueOf(transparency)]));
if (caps != null  && caps.isAccelerated()  && !vi.getCapabilities().isAccelerated() ) {
throw Clazz_new_(Clazz_load('java.awt.AWTException').c$$S,["Supplied image capabilities could not be met by this graphics configuration."]);
}return vi;
});

Clazz_newMeth(C$, 'isTranslucencyCapable', function () {
return false;
});
C$.$_ASSERT_ENABLED_ = ClassLoader.$getClassAssertionStatus(C$);
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.DisplayMode',['java.awt.GraphicsDevice','.WindowTranslucency']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "GraphicsDevice");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.fullScreenWindow = null;
this.windowedModeBounds = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getBestConfiguration$O', function (gct) {
return this.getDefaultConfiguration();
});

Clazz_newMeth(C$, 'isFullScreenSupported', function () {
return false;
});

Clazz_newMeth(C$, 'setFullScreenWindow$java_awt_Window', function (w) {
});

Clazz_newMeth(C$, 'getFullScreenWindow', function () {
return null;
});

Clazz_newMeth(C$, 'isDisplayChangeSupported', function () {
return false;
});

Clazz_newMeth(C$, 'setDisplayMode$O', function (dm) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException').c$$S,["Cannot change display mode"]);
});

Clazz_newMeth(C$, 'getDisplayMode', function () {
var gc = this.getDefaultConfiguration();
var r = gc.getBounds();
var cm = gc.getColorModel();
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[r.width, r.height, cm.getPixelSize(), 0]);
});

Clazz_newMeth(C$, 'getDisplayModes', function () {
return Clazz_array((I$[1]||$incl$(1)), -1, [this.getDisplayMode()]);
});

Clazz_newMeth(C$, 'getAvailableAcceleratedMemory', function () {
return -1;
});

Clazz_newMeth(C$, 'isWindowTranslucencySupported$java_awt_GraphicsDevice_WindowTranslucency', function (translucencyKind) {
switch (translucencyKind) {
case (I$[2]||$incl$(2)).PERPIXEL_TRANSPARENT:
return C$.isWindowShapingSupported();
case (I$[2]||$incl$(2)).TRANSLUCENT:
return C$.isWindowOpacitySupported();
case (I$[2]||$incl$(2)).PERPIXEL_TRANSLUCENT:
return this.isWindowPerpixelTranslucencySupported();
}
return false;
});

Clazz_newMeth(C$, 'isWindowShapingSupported', function () {
return false;
}, 1);

Clazz_newMeth(C$, 'isWindowOpacitySupported', function () {
return false;
}, 1);

Clazz_newMeth(C$, 'isWindowPerpixelTranslucencySupported', function () {
return true;
});

Clazz_newMeth(C$, 'getTranslucencyCapableGC', function () {
var defaultGC = this.getDefaultConfiguration();
if (defaultGC.isTranslucencyCapable()) {
return defaultGC;
}var configs = this.getConfigurations();
for (var j = 0; j < configs.length; j++) {
if (configs[j].isTranslucencyCapable()) {
return configs[j];
}}
return null;
});
;
(function(){var C$=Clazz_newClass(P$.GraphicsDevice, "WindowTranslucency", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "PERPIXEL_TRANSPARENT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "TRANSLUCENT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "PERPIXEL_TRANSLUCENT", 2, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['swingjs.JSUtil']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "GraphicsEnvironment");
C$.localEnv = null;
var p$=C$.prototype;

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getLocalGraphicsEnvironment', function () {
if (C$.localEnv == null ) {
C$.localEnv = (I$[1]||$incl$(1)).getInstance$S("swingjs.JSGraphicsEnvironment");
}return C$.localEnv;
}, 1);

Clazz_newMeth(C$, 'isHeadless', function () {
return false;
}, 1);

Clazz_newMeth(C$, 'getHeadlessProperty', function () {
return false;
}, 1);

Clazz_newMeth(C$, 'checkHeadless', function () {
}, 1);

Clazz_newMeth(C$, 'isHeadlessInstance', function () {
return C$.getHeadlessProperty();
});

Clazz_newMeth(C$, 'registerFont$java_awt_Font', function (font) {
return true;
});

Clazz_newMeth(C$, 'preferLocaleFonts', function () {
});

Clazz_newMeth(C$, 'preferProportionalFonts', function () {
});

Clazz_newMeth(C$, 'getCenterPoint', function () {
return null;
});
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[];
var C$=Clazz_newInterface(P$, "ImageObserver");
})();
//Created 2018-05-15 01:02:01
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Insets", null, null, ['Cloneable', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.top = 0;
this.left = 0;
this.bottom = 0;
this.right = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (top, left, bottom, right) {
C$.$init$.apply(this);
this.top = top;
this.left = left;
this.bottom = bottom;
this.right = right;
}, 1);

Clazz_newMeth(C$, 'set$I$I$I$I', function (top, left, bottom, right) {
this.top = top;
this.left = left;
this.bottom = bottom;
this.right = right;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Insets")) {
var insets = obj;
return ((this.top == insets.top) && (this.left == insets.left) && (this.bottom == insets.bottom) && (this.right == insets.right)  );
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
var sum1 = this.left + this.bottom;
var sum2 = this.right + this.top;
var val1 = (sum1 * (sum1 + 1)/2|0) + this.left;
var val2 = (sum2 * (sum2 + 1)/2|0) + this.top;
var sum3 = val1 + val2;
return (sum3 * (sum3 + 1)/2|0) + val2;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[top=" + this.top + ",left=" + this.left + ",bottom=" + this.bottom + ",right=" + this.right + "]" ;
});

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[1]||$incl$(1)));
} else {
throw e;
}
}
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:52
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "ItemSelectable");
})();
//Created 2018-05-15 01:01:52
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['Thread','swingjs.JSFrameViewer','java.lang.Boolean','javax.swing.UIManager']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSComponent", null, 'java.awt.Component');
C$.incr = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.isAppletFrame = false;
this.isFramedApplet = false;
this.htmlName = null;
this.num = 0;
this.isRootPane = false;
this.isContentPane = false;
this.canvas = null;
this.appletViewer = null;
this.frameViewer = null;
this.topFrameViewer = null;
this.ui = null;
this.uiClassID = null;
this.peerVis = null;
this.isBackgroundPainted = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.appletViewer = ((I$[1]||$incl$(1)).currentThread()).appletViewer;
this.uiClassID = "ComponentUI";
}, 1);

Clazz_newMeth(C$, 'resizeOriginal$I$I', function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, 'ensurePropertyChangeListener$java_awt_Component$java_awt_Component', function (c, listener) {
if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListener")) {
c.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
c.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
} else if (listener != null ) {
System.err.println$S("JSComponent: " + listener + " is not a PropertyChangeListener -- modal dialog will fail." );
}}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.num = ++C$.incr;
}, 1);

Clazz_newMeth(C$, 'getGraphics', function () {
if (this.width == 0 || this.height == 0  || !this.isVisible() ) return null;
if (this.frameViewer != null ) return this.frameViewer.getGraphics$I$I(0, 0).create();
if (this.parent == null ) {
return null;
}var g = this.parent.getGraphics();
if (g == null ) return null;
g.translate$I$I(this.x, (this.isContentPane ? 0 : this.y));
g.setClip$I$I$I$I(0, 0, this.width, this.height);
g.setFont$java_awt_Font(this.getFont());
return g;
});

Clazz_newMeth(C$, 'setFrameViewer$swingjs_JSFrameViewer', function (viewer) {
return this.frameViewer = (viewer == null  ? viewer = Clazz_new_((I$[2]||$incl$(2))).setForWindow$java_awt_Container(this) : viewer);
});

Clazz_newMeth(C$, 'getFrameViewer', function () {
var parent = null;
return (this.topFrameViewer != null  ? this.topFrameViewer : this.frameViewer != null  ? this.topFrameViewer = this.frameViewer : (parent = this.getParent()) == null  ? null : (this.topFrameViewer = parent.getFrameViewer()));
});

Clazz_newMeth(C$, 'getHTMLName$S', function (uid) {
return (this.htmlName == null  ? this.htmlName = this.appContext.getThreadGroup().getName() + "_" + uid + "_" + this.num  : this.htmlName);
});

Clazz_newMeth(C$, 'getUIClassID', function () {
return this.uiClassID;
});

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_ComponentUI', function (ui) {
this.ui = ui;
if (ui != null ) {
ui.installJS();
}});

Clazz_newMeth(C$, 'getUI', function () {
return this.ui;
});

Clazz_newMeth(C$, 'updatePeerVisibility$Z', function (isVisible) {
if (this.getOrCreatePeer() == null ) this.peerVis = (isVisible ? (I$[3]||$incl$(3)).TRUE : (I$[3]||$incl$(3)).FALSE);
 else this.updatePeerVisibilityOrig$Z(isVisible);
});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return (this.ui == null  ? null : this.ui == null  ? null : this.peer == null  ? (this.peer = this.getToolkit().createComponent$java_awt_Component(this)) : this.peer);
});

Clazz_newMeth(C$, 'updateUI', function () {
if (this.ui == null ) this.setUI$javax_swing_plaf_ComponentUI((I$[4]||$incl$(4)).getUI$java_awt_Component(this));
});

Clazz_newMeth(C$, 'getJSGraphic2D$java_awt_Graphics', function (g) {
{
return (g.mark ? g : null);
}
});

Clazz_newMeth(C$, 'checkBackgroundPainted$swingjs_JSGraphics2D', function (jsg) {
if (jsg == null ) {
this.isBackgroundPainted = false;
return;
}this.isBackgroundPainted = jsg.isBackgroundPainted();
if (this.isBackgroundPainted) {
this.ui.setBackgroundPainted();
(this).getRootPane().getUI().setBackgroundPainted();
}});

Clazz_newMeth(C$, 'selfOrParentBackgroundPainted', function () {
var c = this;
while (c != null ){
if (c.isBackgroundPainted) return true;
c = c.getParent();
}
return false;
});

Clazz_newMeth(C$, 'isBackgroundSet', function () {
return this.background != null ;
});
})();
//Created 2018-05-15 01:01:52
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "LayoutManager");
})();
//Created 2018-05-15 01:01:52
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "LayoutManager2", null, null, 'java.awt.LayoutManager');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:52
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Component','java.awt.Insets','javajs.util.Lst','java.awt.Toolkit','java.awt.event.ContainerEvent','java.awt.Dimension',['java.awt.GraphicsCallback','.PaintCallback'],['java.awt.GraphicsCallback','.PaintAllCallback'],['java.awt.GraphicsCallback','.PaintHeavyweightComponentsCallback'],'java.awt.AWTEventMulticaster','java.awt.event.ContainerListener',['java.awt.Container','.MouseEventTargetFilter'],'java.awt.LightweightDispatcher','java.awt.event.MouseEvent','java.awt.event.MouseWheelEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "LightweightDispatcher", null, null, 'java.awt.event.AWTEventListener');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.nativeContainer = null;
this.mouseEventTarget = null;
this.targetLastEntered = null;
this.isMouseInNativeContainer = false;
this.eventMask = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.isMouseInNativeContainer = false;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Container', function (nativeContainer) {
C$.$init$.apply(this);
this.nativeContainer = nativeContainer;
this.mouseEventTarget = null;
this.eventMask = 0;
}, 1);

Clazz_newMeth(C$, 'dispose', function () {
p$.stopListeningForOtherDrags.apply(this, []);
this.mouseEventTarget = null;
});

Clazz_newMeth(C$, 'enableEvents$J', function (events) {
this.eventMask = this.eventMask|(events);
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent', function (e) {
var ret = false;
if (Clazz_instanceOf(e, "java.awt.event.MouseEvent") && (this.eventMask & 131120) != 0 ) {
var me = e;
ret = p$.processMouseEvent$java_awt_event_MouseEvent.apply(this, [me]);
}return ret;
});

Clazz_newMeth(C$, 'isMouseGrab$java_awt_event_MouseEvent', function (e) {
var modifiers = e.getModifiersEx();
if (e.getID() == 501 || e.getID() == 502 ) {
switch (e.getButton()) {
case 1:
modifiers = modifiers^(1024);
break;
case 2:
modifiers = modifiers^(2048);
break;
case 3:
modifiers = modifiers^(4096);
break;
}
}return ((modifiers & 7168) != 0);
});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent', function (e) {
var id = e.getID();
var mouseOver = null;
{
mouseOver = e.bdata.jqevent && e.bdata.jqevent.target["data-component"];
}
if (mouseOver == null ) mouseOver = this.nativeContainer.getMouseEventTarget$I$I$Z(e.getX(), e.getY(), true);
p$.trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent.apply(this, [mouseOver, e]);
if (!p$.isMouseGrab$java_awt_event_MouseEvent.apply(this, [e]) && id != 500 ) {
this.mouseEventTarget = (mouseOver !== this.nativeContainer ) ? mouseOver : null;
}if (this.mouseEventTarget != null ) {
switch (id) {
case 504:
case 505:
break;
case 501:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 502:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 500:
if (mouseOver === this.mouseEventTarget ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(mouseOver, id, e);
}break;
case 503:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 506:
if (p$.isMouseGrab$java_awt_event_MouseEvent.apply(this, [e])) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
}break;
case 507:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(mouseOver, id, e);
break;
}
e.consume();
}return e.isConsumed();
});

Clazz_newMeth(C$, 'trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent', function (targetOver, e) {
var targetEnter = null;
var id = e.getID();
if (id != 505 && id != 506  && id != 1500  && this.isMouseInNativeContainer == false  ) {
this.isMouseInNativeContainer = true;
p$.startListeningForOtherDrags.apply(this, []);
} else if (id == 505) {
this.isMouseInNativeContainer = false;
p$.stopListeningForOtherDrags.apply(this, []);
}if (this.isMouseInNativeContainer) {
targetEnter = targetOver;
}if (this.targetLastEntered === targetEnter ) {
return;
}if (this.targetLastEntered != null ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.targetLastEntered, 505, e);
}if (id == 505) {
e.consume();
}if (targetEnter != null ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(targetEnter, 504, e);
}if (id == 504) {
e.consume();
}this.targetLastEntered = targetEnter;
});

Clazz_newMeth(C$, 'startListeningForOtherDrags', function () {
});

Clazz_newMeth(C$, 'stopListeningForOtherDrags', function () {
});

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent', function (e) {
var isForeignDrag = (Clazz_instanceOf(e, "java.awt.event.MouseEvent")) && (e.id == 506) && (e.getSource() !== this.nativeContainer )  ;
if (!isForeignDrag) {
return;
}var srcEvent = e;
var me;
{
var srcComponent = srcEvent.getComponent();
if (!srcComponent.isShowing()) {
return;
}var c = this.nativeContainer;
while ((c != null ) && !(Clazz_instanceOf(c, "java.awt.Window")) ){
c = c.getParent_NoClientCode();
}
if ((c == null ) || (c).isModalBlocked() ) {
return;
}me = Clazz_new_((I$[14]||$incl$(14)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I,[this.nativeContainer, 1500, srcEvent.getWhen(), srcEvent.getModifiersEx() | srcEvent.getModifiers(), srcEvent.getX(), srcEvent.getY(), srcEvent.getXOnScreen(), srcEvent.getYOnScreen(), srcEvent.getClickCount(), srcEvent.isPopupTrigger(), srcEvent.getButton()]);
(srcEvent).copyPrivateDataInto$java_awt_AWTEvent(me);
}var targetOver = this.nativeContainer.getMouseEventTarget$I$I$Z(me.getX(), me.getY(), true);
p$.trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent.apply(this, [targetOver, me]);
});

Clazz_newMeth(C$, 'retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent', function (target, id, e) {
if (target == null ) {
return;
}var x = e.getX();
var y = e.getY();
var component;
for (component = target; component != null  && component !== this.nativeContainer  ; component = component.getParent()) {
x = x-(component.x);
y = y-(component.y);
if ((component).uiClassID == "PopupMenuUI") break;
}
var retargeted;
if (component != null ) {
if (id == 507) {
retargeted = Clazz_new_((I$[15]||$incl$(15)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I,[target, id, e.getWhen(), e.getModifiersEx() | e.getModifiers(), x, y, e.getXOnScreen(), e.getYOnScreen(), e.getClickCount(), e.isPopupTrigger(), (e).getScrollType(), (e).getScrollAmount(), (e).getWheelRotation()]);
} else {
retargeted = Clazz_new_((I$[14]||$incl$(14)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I,[target, id, e.getWhen(), e.getModifiersEx() | e.getModifiers(), x, y, e.getXOnScreen(), e.getYOnScreen(), e.getClickCount(), e.isPopupTrigger(), e.getButton()]);
}(e).copyPrivateDataInto$java_awt_AWTEvent(retargeted);
if (target === this.nativeContainer ) {
(target).dispatchEventToSelf$java_awt_AWTEvent(retargeted);
} else {
if (this.nativeContainer.modalComp != null ) {
if ((this.nativeContainer.modalComp).isAncestorOf$java_awt_Component(target)) {
target.dispatchEvent$java_awt_AWTEvent(retargeted);
} else {
e.consume();
}} else {
target.dispatchEvent$java_awt_AWTEvent(retargeted);
}}}});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "Paint", null, null, 'java.awt.Transparency');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:01:53
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.FlowLayout']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Panel", null, 'java.awt.Container');
C$.nameCounter = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.nameCounter = 0;
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$java_awt_LayoutManager.apply(this, [Clazz_new_((I$[1]||$incl$(1)))]);
}, 1);

Clazz_newMeth(C$, 'canPaint', function () {
return this.isContentPane;
});

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager', function (layout) {
Clazz_super_(C$, this,1);
this.setAppContext();
this.setLayout$java_awt_LayoutManager(layout);
}, 1);

Clazz_newMeth(C$, 'constructComponentName', function () {
{
return "panel" + C$.nameCounter++;
}});

Clazz_newMeth(C$, 'addNotify', function () {
this.getOrCreatePeer();
C$.superclazz.prototype.addNotify.apply(this, []);
});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer = this.getToolkit().createPanel$java_awt_Panel(this)) : this.peer);
});
})();
//Created 2018-05-15 01:01:53
(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
var C$=Clazz_newInterface(P$, "ComponentPeer");
})();
//Created 2018-05-15 01:02:02
(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
var C$=Clazz_newInterface(P$, "ContainerPeer", null, null, 'java.awt.peer.ComponentPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:02
(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
var C$=Clazz_newInterface(P$, "LightweightPeer", null, null, 'java.awt.peer.ContainerPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:02
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "Queue");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.head = null;
this.tail = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Point','java.awt.Dimension',['java.awt.geom.Rectangle2D','.Double'],'java.awt.geom.Rectangle2D']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Rectangle", null, 'java.awt.geom.Rectangle2D', 'java.awt.Shape');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
this.width = 0;
this.height = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I$I$I.apply(this, [0, 0, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Rectangle', function (r) {
C$.c$$I$I$I$I.apply(this, [r.x, r.y, r.width, r.height]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (x, y, width, height) {
Clazz_super_(C$, this,1);
this.x = x;
this.y = y;
this.width = width;
this.height = height;
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (width, height) {
C$.c$$I$I$I$I.apply(this, [0, 0, width, height]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point$java_awt_Dimension', function (p, d) {
C$.c$$I$I$I$I.apply(this, [p.x, p.y, d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point', function (p) {
C$.c$$I$I$I$I.apply(this, [p.x, p.y, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dimension', function (d) {
C$.c$$I$I$I$I.apply(this, [0, 0, d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth', function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.height;
});

Clazz_newMeth(C$, 'getBounds', function () {
return Clazz_new_(C$.c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'getBounds2D', function () {
return Clazz_new_(C$.c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle', function (r) {
this.reshape$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I', function (x, y, width, height) {
this.reshape$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'setRect$D$D$D$D', function (x, y, width, height) {
var newx;
var newy;
var neww;
var newh;
if (x > 4.294967294E9 ) {
newx = 2147483647;
neww = -1;
} else {
newx = C$.clip$D$Z(x, false);
if (width >= 0 ) width += x - newx;
neww = C$.clip$D$Z(width, width >= 0 );
}if (y > 4.294967294E9 ) {
newy = 2147483647;
newh = -1;
} else {
newy = C$.clip$D$Z(y, false);
if (height >= 0 ) height += y - newy;
newh = C$.clip$D$Z(height, height >= 0 );
}this.reshape$I$I$I$I(newx, newy, neww, newh);
});

Clazz_newMeth(C$, 'clip$D$Z', function (v, doceil) {
if (v <= -2147483648 ) {
return -2147483648;
}if (v >= 2147483647 ) {
return 2147483647;
}return ((doceil ? Math.ceil(v) : Math.floor(v))|0);
}, 1);

Clazz_newMeth(C$, 'reshape$I$I$I$I', function (x, y, width, height) {
this.x = x;
this.y = y;
this.width = width;
this.height = height;
});

Clazz_newMeth(C$, 'getLocation', function () {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[this.x, this.y]);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point', function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'setLocation$I$I', function (x, y) {
this.move$I$I(x, y);
});

Clazz_newMeth(C$, 'move$I$I', function (x, y) {
this.x = x;
this.y = y;
});

Clazz_newMeth(C$, 'translate$I$I', function (dx, dy) {
var oldv = this.x;
var newv = oldv + dx;
if (dx < 0) {
if (newv > oldv) {
if (this.width >= 0) {
this.width = this.width+(newv - -2147483648);
}newv = -2147483648;
}} else {
if (newv < oldv) {
if (this.width >= 0) {
this.width = this.width+(newv - 2147483647);
if (this.width < 0) this.width = 2147483647;
}newv = 2147483647;
}}this.x = newv;
oldv = this.y;
newv = oldv + dy;
if (dy < 0) {
if (newv > oldv) {
if (this.height >= 0) {
this.height = this.height+(newv - -2147483648);
}newv = -2147483648;
}} else {
if (newv < oldv) {
if (this.height >= 0) {
this.height = this.height+(newv - 2147483647);
if (this.height < 0) this.height = 2147483647;
}newv = 2147483647;
}}this.y = newv;
});

Clazz_newMeth(C$, 'getSize', function () {
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension', function (d) {
this.setSize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'setSize$I$I', function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, 'resize$I$I', function (width, height) {
this.width = width;
this.height = height;
});

Clazz_newMeth(C$, 'contains$java_awt_Point', function (p) {
return this.contains$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'contains$I$I', function (x, y) {
return this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'contains$java_awt_Rectangle', function (r) {
return this.contains$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'contains$I$I$I$I', function (X, Y, W, H) {
var w = this.width;
var h = this.height;
if ((w | h | W | H ) < 0) {
return false;
}var x = this.x;
var y = this.y;
if (X < x || Y < y ) {
return false;
}w = w+(x);
W = W+(X);
if (W <= X) {
if (w >= x || W > w ) return false;
} else {
if (w >= x && W > w ) return false;
}h = h+(y);
H = H+(Y);
if (H <= Y) {
if (h >= y || H > h ) return false;
} else {
if (h >= y && H > h ) return false;
}return true;
});

Clazz_newMeth(C$, 'inside$I$I', function (X, Y) {
var w = this.width;
var h = this.height;
if ((w | h) < 0) {
return false;
}var x = this.x;
var y = this.y;
if (X < x || Y < y ) {
return false;
}w = w+(x);
h = h+(y);
return ((w < x || w > X ) && (h < y || h > Y ) );
});

Clazz_newMeth(C$, 'intersects$java_awt_Rectangle', function (r) {
var tw = this.width;
var th = this.height;
var rw = r.width;
var rh = r.height;
if (rw <= 0 || rh <= 0  || tw <= 0  || th <= 0 ) {
return false;
}var tx = this.x;
var ty = this.y;
var rx = r.x;
var ry = r.y;
rw = rw+(rx);
rh = rh+(ry);
tw = tw+(tx);
th = th+(ty);
return ((rw < rx || rw > tx ) && (rh < ry || rh > ty ) && (tw < tx || tw > rx ) && (th < ty || th > ry )  );
});

Clazz_newMeth(C$, 'intersection$java_awt_Rectangle', function (r) {
var tx1 = this.x;
var ty1 = this.y;
var rx1 = r.x;
var ry1 = r.y;
var tx2 = tx1;
tx2 = tx2+(this.width);
var ty2 = ty1;
ty2 = ty2+(this.height);
var rx2 = rx1;
rx2 = rx2+(r.width);
var ry2 = ry1;
ry2 = ry2+(r.height);
if (tx1 < rx1) tx1 = rx1;
if (ty1 < ry1) ty1 = ry1;
if (tx2 > rx2) tx2 = rx2;
if (ty2 > ry2) ty2 = ry2;
tx2 = tx2-(tx1);
ty2 = ty2-(ty1);
if (tx2 < -2147483648) tx2 = -2147483648;
if (ty2 < -2147483648) ty2 = -2147483648;
return Clazz_new_(C$.c$$I$I$I$I,[tx1, ty1, (tx2|0), (ty2|0)]);
});

Clazz_newMeth(C$, 'union$java_awt_Rectangle', function (r) {
var tx2 = this.width;
var ty2 = this.height;
if ((tx2 | ty2) < 0) {
return Clazz_new_(C$.c$$java_awt_Rectangle,[r]);
}var rx2 = r.width;
var ry2 = r.height;
if ((rx2 | ry2) < 0) {
return Clazz_new_(C$.c$$java_awt_Rectangle,[this]);
}var tx1 = this.x;
var ty1 = this.y;
tx2 = tx2+(tx1);
ty2 = ty2+(ty1);
var rx1 = r.x;
var ry1 = r.y;
rx2 = rx2+(rx1);
ry2 = ry2+(ry1);
if (tx1 > rx1) tx1 = rx1;
if (ty1 > ry1) ty1 = ry1;
if (tx2 < rx2) tx2 = rx2;
if (ty2 < ry2) ty2 = ry2;
tx2 = tx2-(tx1);
ty2 = ty2-(ty1);
if (tx2 > 2147483647) tx2 = 2147483647;
if (ty2 > 2147483647) ty2 = 2147483647;
return Clazz_new_(C$.c$$I$I$I$I,[tx1, ty1, (tx2|0), (ty2|0)]);
});

Clazz_newMeth(C$, 'add$I$I', function (newx, newy) {
if ((this.width | this.height) < 0) {
this.x = newx;
this.y = newy;
this.width = this.height = 0;
return;
}var x1 = this.x;
var y1 = this.y;
var x2 = this.width;
var y2 = this.height;
x2 = x2+(x1);
y2 = y2+(y1);
if (x1 > newx) x1 = newx;
if (y1 > newy) y1 = newy;
if (x2 < newx) x2 = newx;
if (y2 < newy) y2 = newy;
x2 = x2-(x1);
y2 = y2-(y1);
if (x2 > 2147483647) x2 = 2147483647;
if (y2 > 2147483647) y2 = 2147483647;
this.reshape$I$I$I$I(x1, y1, (x2|0), (y2|0));
});

Clazz_newMeth(C$, 'add$java_awt_Point', function (pt) {
this.add$I$I(pt.x, pt.y);
});

Clazz_newMeth(C$, 'add$java_awt_Rectangle', function (r) {
var tx2 = this.width;
var ty2 = this.height;
if ((tx2 | ty2) < 0) {
this.reshape$I$I$I$I(r.x, r.y, r.width, r.height);
}var rx2 = r.width;
var ry2 = r.height;
if ((rx2 | ry2) < 0) {
return;
}var tx1 = this.x;
var ty1 = this.y;
tx2 = tx2+(tx1);
ty2 = ty2+(ty1);
var rx1 = r.x;
var ry1 = r.y;
rx2 = rx2+(rx1);
ry2 = ry2+(ry1);
if (tx1 > rx1) tx1 = rx1;
if (ty1 > ry1) ty1 = ry1;
if (tx2 < rx2) tx2 = rx2;
if (ty2 < ry2) ty2 = ry2;
tx2 = tx2-(tx1);
ty2 = ty2-(ty1);
if (tx2 > 2147483647) tx2 = 2147483647;
if (ty2 > 2147483647) ty2 = 2147483647;
this.reshape$I$I$I$I(tx1, ty1, (tx2|0), (ty2|0));
});

Clazz_newMeth(C$, 'grow$I$I', function (h, v) {
var x0 = this.x;
var y0 = this.y;
var x1 = this.width;
var y1 = this.height;
x1 = x1+(x0);
y1 = y1+(y0);
x0 = x0-(h);
y0 = y0-(v);
x1 = x1+(h);
y1 = y1+(v);
if (x1 < x0) {
x1 = x1-(x0);
if (x1 < -2147483648) x1 = -2147483648;
if (x0 < -2147483648) x0 = -2147483648;
 else if (x0 > 2147483647) x0 = 2147483647;
} else {
if (x0 < -2147483648) x0 = -2147483648;
 else if (x0 > 2147483647) x0 = 2147483647;
x1 = x1-(x0);
if (x1 < -2147483648) x1 = -2147483648;
 else if (x1 > 2147483647) x1 = 2147483647;
}if (y1 < y0) {
y1 = y1-(y0);
if (y1 < -2147483648) y1 = -2147483648;
if (y0 < -2147483648) y0 = -2147483648;
 else if (y0 > 2147483647) y0 = 2147483647;
} else {
if (y0 < -2147483648) y0 = -2147483648;
 else if (y0 > 2147483647) y0 = 2147483647;
y1 = y1-(y0);
if (y1 < -2147483648) y1 = -2147483648;
 else if (y1 > 2147483647) y1 = 2147483647;
}this.reshape$I$I$I$I((x0|0), (y0|0), (x1|0), (y1|0));
});

Clazz_newMeth(C$, 'isEmpty', function () {
return (this.width <= 0) || (this.height <= 0) ;
});

Clazz_newMeth(C$, 'outcode$D$D', function (x, y) {
var out = 0;
if (this.width <= 0) {
out = out|(5);
} else if (x < this.x ) {
out = out|(1);
} else if (x > this.x + this.width ) {
out = out|(4);
}if (this.height <= 0) {
out = out|(10);
} else if (y < this.y ) {
out = out|(2);
} else if (y > this.y + this.height ) {
out = out|(8);
}return out;
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D', function (r) {
if (Clazz_instanceOf(r, "java.awt.Rectangle")) {
return this.intersection$java_awt_Rectangle(r);
}var dest = Clazz_new_((I$[3]||$incl$(3)));
(I$[4]||$incl$(4)).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D', function (r) {
if (Clazz_instanceOf(r, "java.awt.Rectangle")) {
return this.union$java_awt_Rectangle(r);
}var dest = Clazz_new_((I$[3]||$incl$(3)));
(I$[4]||$incl$(4)).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Rectangle")) {
var r = obj;
return ((this.x == r.x) && (this.y == r.y) && (this.width == r.width) && (this.height == r.height)  );
}return C$.superclazz.prototype.equals$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[x=" + this.x + ",y=" + this.y + ",width=" + this.width + ",height=" + this.height + "]" ;
});
})();
//Created 2018-05-15 01:01:53
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.HashMap','java.lang.InternalError',['java.awt.RenderingHints','.SunKey'],['java.awt.RenderingHints','.Value'],['java.awt.RenderingHints','.LCDContrastKey'],'java.util.Collections']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "RenderingHints", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.util.Map', 'Cloneable']);
C$.KEY_RENDERING = null;
C$.VALUE_RENDER_SPEED = null;
C$.VALUE_RENDER_QUALITY = null;
C$.VALUE_RENDER_DEFAULT = null;
C$.KEY_ANTIALIASING = null;
C$.VALUE_ANTIALIAS_ON = null;
C$.VALUE_ANTIALIAS_OFF = null;
C$.VALUE_ANTIALIAS_DEFAULT = null;
C$.KEY_FRACTIONALMETRICS = null;
C$.VALUE_FRACTIONALMETRICS_ON = null;
C$.VALUE_FRACTIONALMETRICS_OFF = null;
C$.VALUE_FRACTIONALMETRICS_DEFAULT = null;
C$.KEY_DITHERING = null;
C$.VALUE_DITHER_ENABLE = null;
C$.VALUE_DITHER_DISABLE = null;
C$.VALUE_DITHER_DEFAULT = null;
C$.KEY_INTERPOLATION = null;
C$.VALUE_INTERPOLATION_NEAREST_NEIGHBOR = null;
C$.VALUE_INTERPOLATION_BILINEAR = null;
C$.VALUE_INTERPOLATION_BICUBIC = null;
C$.KEY_ALPHA_INTERPOLATION = null;
C$.VALUE_ALPHA_INTERPOLATION_SPEED = null;
C$.VALUE_ALPHA_INTERPOLATION_QUALITY = null;
C$.VALUE_ALPHA_INTERPOLATION_DEFAULT = null;
C$.KEY_COLOR_RENDERING = null;
C$.VALUE_COLOR_RENDER_SPEED = null;
C$.VALUE_COLOR_RENDER_QUALITY = null;
C$.VALUE_COLOR_RENDER_DEFAULT = null;
C$.KEY_STROKE_CONTROL = null;
C$.VALUE_STROKE_DEFAULT = null;
C$.VALUE_STROKE_NORMALIZE = null;
C$.VALUE_STROKE_PURE = null;
C$.KEY_TEXT_ANTIALIASING = null;
C$.VALUE_TEXT_ANTIALIAS_ON = null;
C$.VALUE_TEXT_ANTIALIAS_OFF = null;
C$.VALUE_TEXT_ANTIALIAS_DEFAULT = null;
C$.VALUE_TEXT_ANTIALIAS_GASP = null;
C$.VALUE_TEXT_ANTIALIAS_LCD_HRGB = null;
C$.VALUE_TEXT_ANTIALIAS_LCD_HBGR = null;
C$.VALUE_TEXT_ANTIALIAS_LCD_VRGB = null;
C$.VALUE_TEXT_ANTIALIAS_LCD_VBGR = null;
C$.KEY_TEXT_ANTIALIAS_LCD_CONTRAST = null;
C$.KEY_TEXT_LCD_CONTRAST = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.KEY_RENDERING = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[0, "Global rendering quality key"]);
C$.VALUE_RENDER_SPEED = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 1, "Fastest rendering methods"]);
C$.VALUE_RENDER_QUALITY = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 2, "Highest quality rendering methods"]);
C$.VALUE_RENDER_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 0, "Default rendering methods"]);
C$.KEY_ANTIALIASING = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[1, "Global antialiasing enable key"]);
C$.VALUE_ANTIALIAS_ON = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 2, "Antialiased rendering mode"]);
C$.VALUE_ANTIALIAS_OFF = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 1, "Nonantialiased rendering mode"]);
C$.VALUE_ANTIALIAS_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 0, "Default antialiasing rendering mode"]);
C$.KEY_FRACTIONALMETRICS = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[3, "Fractional metrics enable key"]);
C$.VALUE_FRACTIONALMETRICS_ON = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 2, "Fractional text metrics mode"]);
C$.VALUE_FRACTIONALMETRICS_OFF = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 1, "Integer text metrics mode"]);
C$.VALUE_FRACTIONALMETRICS_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 0, "Default fractional text metrics mode"]);
C$.KEY_DITHERING = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[4, "Dithering quality key"]);
C$.VALUE_DITHER_ENABLE = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 2, "Dithered rendering mode"]);
C$.VALUE_DITHER_DISABLE = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 1, "Nondithered rendering mode"]);
C$.VALUE_DITHER_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 0, "Default dithering mode"]);
C$.KEY_INTERPOLATION = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[5, "Image interpolation method key"]);
C$.VALUE_INTERPOLATION_NEAREST_NEIGHBOR = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 0, "Nearest Neighbor image interpolation mode"]);
C$.VALUE_INTERPOLATION_BILINEAR = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 1, "Bilinear image interpolation mode"]);
C$.VALUE_INTERPOLATION_BICUBIC = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 2, "Bicubic image interpolation mode"]);
C$.KEY_ALPHA_INTERPOLATION = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[6, "Alpha blending interpolation method key"]);
C$.VALUE_ALPHA_INTERPOLATION_SPEED = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 1, "Fastest alpha blending methods"]);
C$.VALUE_ALPHA_INTERPOLATION_QUALITY = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 2, "Highest quality alpha blending methods"]);
C$.VALUE_ALPHA_INTERPOLATION_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 0, "Default alpha blending methods"]);
C$.KEY_COLOR_RENDERING = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[7, "Color rendering quality key"]);
C$.VALUE_COLOR_RENDER_SPEED = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 1, "Fastest color rendering mode"]);
C$.VALUE_COLOR_RENDER_QUALITY = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 2, "Highest quality color rendering mode"]);
C$.VALUE_COLOR_RENDER_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 0, "Default color rendering mode"]);
C$.KEY_STROKE_CONTROL = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[8, "Stroke normalization control key"]);
C$.VALUE_STROKE_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 0, "Default stroke normalization"]);
C$.VALUE_STROKE_NORMALIZE = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 1, "Normalize strokes for consistent rendering"]);
C$.VALUE_STROKE_PURE = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 2, "Pure stroke conversion for accurate paths"]);
C$.KEY_TEXT_ANTIALIASING = Clazz_new_((I$[3]||$incl$(3)).c$$I$S,[2, "Text-specific antialiasing enable key"]);
C$.VALUE_TEXT_ANTIALIAS_ON = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 2, "Antialiased text mode"]);
C$.VALUE_TEXT_ANTIALIAS_OFF = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 1, "Nonantialiased text mode"]);
C$.VALUE_TEXT_ANTIALIAS_DEFAULT = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 0, "Default antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_GASP = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 3, "gasp antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_HRGB = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 4, "LCD HRGB antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_HBGR = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 5, "LCD HBGR antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_VRGB = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 6, "LCD VRGB antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_VBGR = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 7, "LCD VBGR antialiasing text mode"]);
C$.KEY_TEXT_ANTIALIAS_LCD_CONTRAST = Clazz_new_((I$[5]||$incl$(5)).c$$I$S,[100, "Text-specific LCD contrast key"]);
C$.KEY_TEXT_LCD_CONTRAST = C$.KEY_TEXT_ANTIALIAS_LCD_CONTRAST;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.hintmap = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.hintmap = Clazz_new_((I$[1]||$incl$(1)).c$$I,[7]);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map', function (init) {
C$.$init$.apply(this);
if (init != null ) {
this.hintmap.putAll$java_util_Map(init);
}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_RenderingHints_Key$O', function (key, value) {
C$.$init$.apply(this);
if (key != null ) this.hintmap.put$TK$TV(key, value);
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.hintmap.size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.hintmap.isEmpty();
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.hintmap.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return this.hintmap.containsValue$O(value);
});

Clazz_newMeth(C$, 'get$O', function (key) {
return this.hintmap.get$O(key);
});

Clazz_newMeth(C$, ['put$O$O','put$TK$TV'], function (key, value) {
if (!(key).isCompatibleValue$O(value)) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[value + " incompatible with " + key ]);
}return this.hintmap.put$TK$TV(key, value);
});

Clazz_newMeth(C$, 'add$java_awt_RenderingHints', function (hints) {
this.hintmap.putAll$java_util_Map(hints.hintmap);
});

Clazz_newMeth(C$, 'clear', function () {
this.hintmap.clear();
});

Clazz_newMeth(C$, 'remove$O', function (key) {
return this.hintmap.remove$O(key);
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (m) {
if (Clazz_getClass(C$).isInstance$O(m)) {
for (var entry, $entry = m.entrySet().iterator(); $entry.hasNext()&&((entry=$entry.next()),1);) this.hintmap.put$TK$TV(entry.getKey(), entry.getValue());

} else {
for (var entry, $entry = m.entrySet().iterator(); $entry.hasNext()&&((entry=$entry.next()),1);) this.put$O$O(entry.getKey(), entry.getValue());

}});

Clazz_newMeth(C$, 'keySet', function () {
return this.hintmap.keySet();
});

Clazz_newMeth(C$, 'values', function () {
return this.hintmap.values();
});

Clazz_newMeth(C$, 'entrySet', function () {
return (I$[6]||$incl$(6)).unmodifiableMap$java_util_Map(this.hintmap).entrySet();
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (Clazz_instanceOf(o, "java.awt.RenderingHints")) {
return this.hintmap.equals$O((o).hintmap);
} else if (Clazz_instanceOf(o, "java.util.Map")) {
return this.hintmap.equals$O(o);
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.hintmap.hashCode();
});

Clazz_newMeth(C$, 'clone', function () {
var rh;
try {
rh = Clazz_clone(this);
if (this.hintmap != null ) {
rh.hintmap = this.hintmap.clone();
}} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[2]||$incl$(2)));
} else {
throw e;
}
}
return rh;
});

Clazz_newMeth(C$, 'toString', function () {
if (this.hintmap == null ) {
return this.getClass().getName() + "@" + Integer.toHexString(this.hashCode()) + " (0 hints)" ;
}return this.hintmap.toString();
});
;
(function(){var C$=Clazz_newClass(P$.RenderingHints, "Key", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});
C$.identitymap = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.identitymap = Clazz_new_((I$[1]||$incl$(1)).c$$I,[17]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.privatekey = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getIdentity', function () {
return this.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(this.getClass())) + ":" + Integer.toHexString(this.privatekey) ;
});

Clazz_newMeth(C$, 'recordIdentity$java_awt_RenderingHints_Key', function (k) {
var identity = k.getIdentity();
var otherref = C$.identitymap.get$O(identity);
if (otherref != null ) {
var otherkey = otherref;
if (otherkey != null  && otherkey.getClass() === k.getClass()  ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[identity + " already registered"]);
}}C$.identitymap.put$TK$TV(identity, k);
});

Clazz_newMeth(C$, 'c$$I', function (privatekey) {
C$.$init$.apply(this);
this.privatekey = privatekey;
p$.recordIdentity$java_awt_RenderingHints_Key.apply(this, [this]);
}, 1);

Clazz_newMeth(C$, 'intKey', function () {
return this.privatekey;
});

Clazz_newMeth(C$, 'hashCode', function () {
return C$.superclazz.prototype.hashCode.apply(this, []);
});

Clazz_newMeth(C$, 'equals$O', function (o) {
return this === o ;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.RenderingHints, "SunKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.awt.RenderingHints','java.awt.RenderingHints.Key']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.description = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$S', function (privatekey, description) {
C$.superclazz.c$$I.apply(this, [privatekey]);
C$.$init$.apply(this);
this.description = description;
}, 1);

Clazz_newMeth(C$, 'getIndex', function () {
return this.privatekey;
});

Clazz_newMeth(C$, 'toString', function () {
return this.description;
});

Clazz_newMeth(C$, 'isCompatibleValue$O', function (val) {
if (Clazz_instanceOf(val, "java.awt.RenderingHints.Value")) {
return (val).isCompatibleKey$java_awt_RenderingHints_SunKey(this);
}return false;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.RenderingHints, "Value", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});
C$.ValueObjects = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.ValueObjects = Clazz_array(C$, [9, 8]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.myKey = null;
this.index = 0;
this.description = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'register$java_awt_RenderingHints_SunKey$java_awt_RenderingHints_Value', function (key, value) {
var kindex = key.getIndex();
var vindex = value.getIndex();
if (C$.ValueObjects[kindex][vindex] != null ) {
throw Clazz_new_((I$[2]||$incl$(2)).c$$S,["duplicate index: " + vindex]);
}C$.ValueObjects[kindex][vindex] = value;
}, 1);

Clazz_newMeth(C$, 'get$I$I', function (keyindex, valueindex) {
return C$.ValueObjects[keyindex][valueindex];
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_RenderingHints_SunKey$I$S', function (key, index, description) {
C$.$init$.apply(this);
this.myKey = key;
this.index = index;
this.description = description;
C$.register$java_awt_RenderingHints_SunKey$java_awt_RenderingHints_Value(key, this);
}, 1);

Clazz_newMeth(C$, 'getIndex', function () {
return this.index;
});

Clazz_newMeth(C$, 'toString', function () {
return this.description;
});

Clazz_newMeth(C$, 'isCompatibleKey$java_awt_RenderingHints_SunKey', function (k) {
return this.myKey === k ;
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.description.hashCode();
});

Clazz_newMeth(C$, 'equals$O', function (o) {
return this === o ;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.RenderingHints, "LCDContrastKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.awt.RenderingHints','java.awt.RenderingHints.SunKey']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$S', function (privatekey, description) {
C$.superclazz.c$$I$S.apply(this, [privatekey, description]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isCompatibleValue$O', function (val) {
if (Clazz_instanceOf(val, "java.lang.Integer")) {
var ival = (val).intValue();
return ival >= 100 && ival <= 250 ;
}return false;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:53
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "Shape");
})();
//Created 2018-05-15 01:01:54
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "Stroke");
})();
//Created 2018-05-15 01:01:54
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.HashMap','sun.awt.NullComponentPeer','java.awt.Insets','swingjs.JSToolkit','java.awt.GraphicsEnvironment','java.awt.Cursor',['java.awt.Toolkit','.SelectiveAWTEventListener'],['java.awt.Toolkit','.ToolkitEventMulticaster'],'java.awt.AWTEventMulticaster','java.awt.event.AWTEventListener','java.awt.event.AWTEventListenerProxy','java.util.ArrayList','java.beans.PropertyChangeSupport']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Toolkit", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.lightweightMarker = null;
C$.toolkit = null;
C$.resources = null;
C$.enabledOnToolkitMask = 0;
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.desktopProperties = null;
this.desktopPropsSupport = null;
this.calls = null;
this.eventListener = null;
this.listener2SelectiveListener = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.desktopProperties = Clazz_new_((I$[1]||$incl$(1)));
this.desktopPropsSupport = C$.createPropertyChangeSupport$java_awt_Toolkit(this);
this.calls = Clazz_array(Integer.TYPE, [32]);
this.eventListener = null;
this.listener2SelectiveListener = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'createComponent$java_awt_Component', function (target) {
if (C$.lightweightMarker == null ) {
C$.lightweightMarker = Clazz_new_((I$[2]||$incl$(2)));
}return C$.lightweightMarker;
});

Clazz_newMeth(C$, 'loadSystemColors$IA', function (systemColors) {
});

Clazz_newMeth(C$, 'setDynamicLayout$Z', function (dynamic) {
});

Clazz_newMeth(C$, 'isDynamicLayoutSet', function () {
if (this !== C$.getDefaultToolkit() ) {
return C$.getDefaultToolkit().isDynamicLayoutSet();
} else {
return false;
}});

Clazz_newMeth(C$, 'isDynamicLayoutActive', function () {
if (this !== C$.getDefaultToolkit() ) {
return C$.getDefaultToolkit().isDynamicLayoutActive();
} else {
return false;
}});

Clazz_newMeth(C$, 'getScreenInsets$java_awt_GraphicsConfiguration', function (gc) {
if (this !== C$.getDefaultToolkit() ) {
return C$.getDefaultToolkit().getScreenInsets$java_awt_GraphicsConfiguration(gc);
} else {
return Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$I,[0, 0, 0, 0]);
}});

Clazz_newMeth(C$, 'getDefaultToolkit', function () {
return (C$.toolkit == null  ? C$.toolkit = Clazz_new_((I$[4]||$incl$(4))) : C$.toolkit);
}, 1);

Clazz_newMeth(C$, 'createImage$BA', function (imagedata) {
return this.createImage$BA$I$I(imagedata, 0, imagedata.length);
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes', function (frame, jobtitle, jobAttributes, pageAttributes) {
if (this !== C$.getDefaultToolkit() ) {
return C$.getDefaultToolkit().getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes(frame, jobtitle, jobAttributes, pageAttributes);
} else {
return this.getPrintJob$java_awt_Frame$S$java_util_Properties(frame, jobtitle, null);
}});

Clazz_newMeth(C$, 'getSystemSelection', function () {
if (this !== C$.getDefaultToolkit() ) {
return C$.getDefaultToolkit().getSystemSelection();
} else {
(I$[5]||$incl$(5)).checkHeadless();
return null;
}});

Clazz_newMeth(C$, 'getMenuShortcutKeyMask', function () {
return 2;
});

Clazz_newMeth(C$, 'getNativeContainer$java_awt_Component', function (c) {
return null;
}, 1);

Clazz_newMeth(C$, 'createCustomCursor$java_awt_Image$java_awt_Point$S', function (cursor, hotSpot, name) {
return Clazz_new_((I$[6]||$incl$(6)).c$$I,[0]);
});

Clazz_newMeth(C$, 'isFrameStateSupported$I', function (state) {
return (state == 0);
});

Clazz_newMeth(C$, 'getProperty$S$S', function (key, defaultValue) {
if (C$.resources != null ) {
try {
return C$.resources.getString$S(key);
} catch (e) {
if (Clazz_exceptionOf(e, "java.util.MissingResourceException")){
} else {
throw e;
}
}
}return defaultValue;
}, 1);

Clazz_newMeth(C$, 'getSystemEventQueue', function () {
return this.getSystemEventQueueImpl();
});

Clazz_newMeth(C$, 'getEventQueue', function () {
return C$.getDefaultToolkit().getSystemEventQueueImpl();
}, 1);

Clazz_newMeth(C$, 'createDragGestureRecognizer$Class$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener', function (abstractRecognizerClass, ds, c, srcActions, dgl) {
return null;
});

Clazz_newMeth(C$, 'getDesktopProperty$S', function (propertyName) {
if (this.desktopProperties.isEmpty()) {
this.initializeDesktopProperties();
}var value;
if (propertyName.equals$O("awt.dynamicLayoutSupported")) {
value = this.lazilyLoadDesktopProperty$S(propertyName);
return value;
}value = this.desktopProperties.get$O(propertyName);
if (value == null ) {
value = this.lazilyLoadDesktopProperty$S(propertyName);
if (value != null ) {
this.setDesktopProperty$S$O(propertyName, value);
}}if (Clazz_instanceOf(value, "java.awt.RenderingHints")) {
value = (value).clone();
}return value;
});

Clazz_newMeth(C$, 'setDesktopProperty$S$O', function (name, newValue) {
var oldValue;
{
oldValue = this.desktopProperties.get$O(name);
this.desktopProperties.put$TK$TV(name, newValue);
}this.desktopPropsSupport.firePropertyChange$S$O$O(name, oldValue, newValue);
});

Clazz_newMeth(C$, 'lazilyLoadDesktopProperty$S', function (name) {
return null;
});

Clazz_newMeth(C$, 'initializeDesktopProperties', function () {
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (name, pcl) {
this.desktopPropsSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(name, pcl);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener', function (name, pcl) {
this.desktopPropsSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(name, pcl);
});

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
return this.desktopPropsSupport.getPropertyChangeListeners();
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S', function (propertyName) {
return this.desktopPropsSupport.getPropertyChangeListeners$S(propertyName);
});

Clazz_newMeth(C$, 'isAlwaysOnTopSupported', function () {
return true;
});

Clazz_newMeth(C$, 'deProxyAWTEventListener$java_awt_event_AWTEventListener', function (l) {
var localL = l;
if (localL == null ) {
return null;
}if (Clazz_instanceOf(l, "java.awt.event.AWTEventListenerProxy")) {
localL = (l).getListener();
}return localL;
}, 1);

Clazz_newMeth(C$, 'addAWTEventListener$java_awt_event_AWTEventListener$J', function (listener, eventMask) {
var localL = C$.deProxyAWTEventListener$java_awt_event_AWTEventListener(listener);
if (localL == null ) {
return;
}{
var selectiveListener = this.listener2SelectiveListener.get$O(localL);
if (selectiveListener == null ) {
selectiveListener = Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_event_AWTEventListener$J, [this, null, localL, eventMask]);
this.listener2SelectiveListener.put$TK$TV(localL, selectiveListener);
this.eventListener = (I$[8]||$incl$(8)).add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener(this.eventListener, selectiveListener);
}selectiveListener.orEventMasks$J(eventMask);
C$.enabledOnToolkitMask = C$.enabledOnToolkitMask|(eventMask);
var mask = eventMask;
for (var i = 0; i < 32; i++) {
if (mask == 0) {
break;
}if ((mask & 1) != 0) {
this.calls[i]++;
}mask = mask>>>(1);
}
}});

Clazz_newMeth(C$, 'removeAWTEventListener$java_awt_event_AWTEventListener', function (listener) {
var localL = C$.deProxyAWTEventListener$java_awt_event_AWTEventListener(listener);
if (listener == null ) {
return;
}{
var selectiveListener = this.listener2SelectiveListener.get$O(localL);
if (selectiveListener != null ) {
this.listener2SelectiveListener.remove$O(localL);
var listenerCalls = selectiveListener.getCalls();
for (var i = 0; i < 32; i++) {
this.calls[i] = this.calls[i]-(listenerCalls[i]);
if (this.calls[i] == 0) {
C$.enabledOnToolkitMask = C$.enabledOnToolkitMask&(~(1 << i));
}}
}this.eventListener = (I$[8]||$incl$(8)).remove$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener(this.eventListener, (selectiveListener == null ) ? localL : selectiveListener);
}});

Clazz_newMeth(C$, 'enabledOnToolkit$J', function (eventMask) {
return (C$.enabledOnToolkitMask & eventMask) != 0;
}, 1);

Clazz_newMeth(C$, 'countAWTEventListeners$J', function (eventMask) {
var ci = 0;
for (; eventMask != 0; eventMask = eventMask>>>(1), ci++) {
}
ci--;
return this.calls[ci];
});

Clazz_newMeth(C$, 'getAWTEventListeners', function () {
{
var la = (I$[9]||$incl$(9)).getListeners$java_util_EventListener$Class(this.eventListener, Clazz_getClass((I$[10]||$incl$(10)),['eventDispatched$java_awt_AWTEvent']));
var ret = Clazz_array((I$[10]||$incl$(10)), [la.length]);
for (var i = 0; i < la.length; i++) {
var sael = la[i];
var tempL = sael.getListener();
ret[i] = Clazz_new_((I$[11]||$incl$(11)).c$$J$java_awt_event_AWTEventListener,[sael.getEventMask(), tempL]);
}
return ret;
}});

Clazz_newMeth(C$, 'getAWTEventListeners$J', function (eventMask) {
{
var la = (I$[9]||$incl$(9)).getListeners$java_util_EventListener$Class(this.eventListener, Clazz_getClass((I$[10]||$incl$(10)),['eventDispatched$java_awt_AWTEvent']));
var list = Clazz_new_((I$[12]||$incl$(12)).c$$I,[la.length]);
for (var i = 0; i < la.length; i++) {
var sael = la[i];
if ((sael.getEventMask() & eventMask) == eventMask) {
list.add$TE(Clazz_new_((I$[11]||$incl$(11)).c$$J$java_awt_event_AWTEventListener,[sael.getEventMask(), sael.getListener()]));
}}
return list.toArray$TTA(Clazz_array((I$[10]||$incl$(10)), [0]));
}});

Clazz_newMeth(C$, 'notifyAWTEventListeners$java_awt_AWTEvent', function (theEvent) {
var eventListener = this.eventListener;
if (eventListener != null ) {
eventListener.eventDispatched$java_awt_AWTEvent(theEvent);
}});

Clazz_newMeth(C$, 'createPropertyChangeSupport$java_awt_Toolkit', function (toolkit) {
return Clazz_new_((I$[13]||$incl$(13)).c$$O,[toolkit]);
}, 1);
;
(function(){var C$=Clazz_newClass(P$.Toolkit, "ToolkitEventMulticaster", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.AWTEventMulticaster', 'java.awt.event.AWTEventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener', function (a, b) {
C$.superclazz.c$$java_util_EventListener$java_util_EventListener.apply(this, [a, b]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener', function (a, b) {
if (a == null ) return b;
if (b == null ) return a;
return Clazz_new_(C$.c$$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener,[a, b]);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener', function (l, oldl) {
return P$.AWTEventMulticaster.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_util_EventListener', function (oldl) {
if (oldl === this.a ) return this.b;
if (oldl === this.b ) return this.a;
var a2 = P$.AWTEventMulticaster.removeInternal$java_util_EventListener$java_util_EventListener(this.a, oldl);
var b2 = P$.AWTEventMulticaster.removeInternal$java_util_EventListener$java_util_EventListener(this.b, oldl);
if (a2 === this.a  && b2 === this.b  ) {
return this;
}return C$.add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener(a2, b2);
});

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent', function (event) {
(this.a).eventDispatched$java_awt_AWTEvent(event);
(this.b).eventDispatched$java_awt_AWTEvent(event);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Toolkit, "SelectiveAWTEventListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.awt.event.AWTEventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.listener = null;
this.eventMask = 0;
this.calls = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.calls = Clazz_array(Integer.TYPE, [32]);
}, 1);

Clazz_newMeth(C$, 'getListener', function () {
return this.listener;
});

Clazz_newMeth(C$, 'getEventMask', function () {
return this.eventMask;
});

Clazz_newMeth(C$, 'getCalls', function () {
return this.calls;
});

Clazz_newMeth(C$, 'orEventMasks$J', function (mask) {
this.eventMask = this.eventMask|(mask);
for (var i = 0; i < 32; i++) {
if (mask == 0) {
break;
}if ((mask & 1) != 0) {
this.calls[i]++;
}mask = mask>>>(1);
}
});

Clazz_newMeth(C$, 'c$$java_awt_event_AWTEventListener$J', function (l, mask) {
C$.$init$.apply(this);
this.listener = l;
this.eventMask = mask;
}, 1);

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent', function (event) {
var eventBit = 0;
if (((eventBit = this.eventMask & 1) != 0 && event.id >= 100  && event.id <= 103 ) || ((eventBit = this.eventMask & 2) != 0 && event.id >= 300  && event.id <= 301 ) || ((eventBit = this.eventMask & 4) != 0 && event.id >= 1004  && event.id <= 1005 ) || ((eventBit = this.eventMask & 8) != 0 && event.id >= 400  && event.id <= 402 ) || ((eventBit = this.eventMask & 131072) != 0 && event.id == 507 ) || ((eventBit = this.eventMask & 32) != 0 && (event.id == 503 || event.id == 506 ) ) || ((eventBit = this.eventMask & 16) != 0 && event.id != 503  && event.id != 506  && event.id != 507  && event.id >= 500  && event.id <= 507 ) || ((eventBit = this.eventMask & 64) != 0 && (event.id >= 200 && event.id <= 209 ) ) || ((eventBit = this.eventMask & 128) != 0 && event.id >= 1001  && event.id <= 1001 ) || ((eventBit = this.eventMask & 256) != 0 && event.id >= 601  && event.id <= 601 ) || ((eventBit = this.eventMask & 512) != 0 && event.id >= 701  && event.id <= 701 ) || ((eventBit = this.eventMask & 1024) != 0 && event.id >= 900  && event.id <= 900 ) || ((eventBit = this.eventMask & 2048) != 0 && event.id >= 1100  && event.id <= 1101 ) || ((eventBit = this.eventMask & 8192) != 0 && event.id >= 800  && event.id <= 801 ) || ((eventBit = this.eventMask & 16384) != 0 && event.id >= 1200  && event.id <= 1201 ) || ((eventBit = this.eventMask & 32768) != 0 && event.id == 1400 ) || ((eventBit = this.eventMask & 65536) != 0 && (event.id == 1401 || event.id == 1402 ) ) || ((eventBit = this.eventMask & 262144) != 0 && event.id == 209 ) || ((eventBit = this.eventMask & 524288) != 0 && (event.id == 207 || event.id == 208 ) )  ) {
var ci = 0;
for (var eMask = eventBit; eMask != 0; eMask = eMask>>>(1), ci++) {
}
ci--;
for (var i = 0; i < this.calls[ci]; i++) {
this.listener.eventDispatched$java_awt_AWTEvent(event);
}
}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:54
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newInterface(P$, "Transparency");
})();
//Created 2018-05-15 01:01:54
(function(){var P$=Clazz_newPackage("java.beans"),I$=[['java.util.HashMap','java.util.ArrayList','java.util.Collections']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ChangeListenerMap");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.map = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'add$S$TL', function (name, listener) {
if (this.map == null ) {
this.map = Clazz_new_((I$[1]||$incl$(1)));
}var array = this.map.get$O(name);
var size = (array != null ) ? array.length : 0;
var clone = this.newArray$I(size + 1);
clone[size] = listener;
if (array != null ) {
System.arraycopy(array, 0, clone, 0, size);
}this.map.put$TK$TV(name, clone);
});

Clazz_newMeth(C$, 'remove$S$TL', function (name, listener) {
if (this.map != null ) {
var array = this.map.get$O(name);
if (array != null ) {
for (var i = 0; i < array.length; i++) {
if (listener.equals$O(array[i])) {
var size = array.length - 1;
if (size > 0) {
var clone = this.newArray$I(size);
System.arraycopy(array, 0, clone, 0, i);
System.arraycopy(array, i + 1, clone, i, size - i);
this.map.put$TK$TV(name, clone);
} else {
this.map.remove$O(name);
if (this.map.isEmpty()) {
this.map = null;
}}break;
}}
}}});

Clazz_newMeth(C$, 'get$S', function (name) {
return (this.map != null ) ? this.map.get$O(name) : null;
});

Clazz_newMeth(C$, 'set$S$TLA', function (name, listeners) {
if (listeners != null ) {
if (this.map == null ) {
this.map = Clazz_new_((I$[1]||$incl$(1)));
}this.map.put$TK$TV(name, listeners);
} else if (this.map != null ) {
this.map.remove$O(name);
if (this.map.isEmpty()) {
this.map = null;
}}});

Clazz_newMeth(C$, 'getListeners', function () {
if (this.map == null ) {
return this.newArray$I(0);
}var list = Clazz_new_((I$[2]||$incl$(2)));
var listeners = this.map.get$O(null);
if (listeners != null ) {
for (var listener, $listener = 0, $$listener = listeners; $listener<$$listener.length&&((listener=$$listener[$listener]),1);$listener++) {
list.add$TE(listener);
}
}for (var entry, $entry = this.map.entrySet().iterator(); $entry.hasNext()&&((entry=$entry.next()),1);) {
var name = entry.getKey();
if (name != null ) {
for (var listener, $listener = 0, $$listener = entry.getValue(); $listener<$$listener.length&&((listener=$$listener[$listener]),1);$listener++) {
list.add$TE(this.newProxy$S$TL(name, listener));
}
}}
return list.toArray$TTA(this.newArray$I(list.size()));
});

Clazz_newMeth(C$, 'getListeners$S', function (name) {
if (name != null ) {
var listeners = this.get$S(name);
if (listeners != null ) {
return listeners.clone();
}}return this.newArray$I(0);
});

Clazz_newMeth(C$, 'hasListeners$S', function (name) {
if (this.map == null ) {
return false;
}var array = this.map.get$O(null);
return (array != null ) || ((name != null ) && (null != this.map.get$O(name) ) ) ;
});

Clazz_newMeth(C$, 'getEntries', function () {
return (this.map != null ) ? this.map.entrySet() : (I$[3]||$incl$(3)).emptySet();
});

Clazz_newMeth(C$, 'extract$TL', function (listener) {
while (Clazz_instanceOf(listener, "java.util.EventListenerProxy")){
var proxy = listener;
listener = proxy.getListener();
}
return listener;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:03
(function(){var P$=Clazz_newPackage("java.beans"),I$=[];
var C$=Clazz_newClass(P$, "PropertyChangeEvent", null, 'java.util.EventObject');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.propertyName = null;
this.newValue = null;
this.oldValue = null;
this.propagationId = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$O$S$O$O', function (source, propertyName, oldValue, newValue) {
C$.superclazz.c$.apply(this, [source]);
C$.$init$.apply(this);
this.propertyName = propertyName;
this.newValue = newValue;
this.oldValue = oldValue;
}, 1);

Clazz_newMeth(C$, 'getPropertyName', function () {
return this.propertyName;
});

Clazz_newMeth(C$, 'getNewValue', function () {
return this.newValue;
});

Clazz_newMeth(C$, 'getOldValue', function () {
return this.oldValue;
});

Clazz_newMeth(C$, 'setPropagationId$O', function (propagationId) {
this.propagationId = propagationId;
});

Clazz_newMeth(C$, 'getPropagationId', function () {
return this.propagationId;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:03
(function(){var P$=Clazz_newPackage("java.beans"),I$=[];
var C$=Clazz_newInterface(P$, "PropertyChangeListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:03
(function(){var P$=Clazz_newPackage("java.beans"),I$=[['java.beans.PropertyChangeListener','java.beans.PropertyChangeListenerProxy',['java.beans.PropertyChangeSupport','.PropertyChangeListenerMap'],'java.beans.PropertyChangeEvent','Boolean','java.beans.IndexedPropertyChangeEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "PropertyChangeSupport", function(){
Clazz_newInstance(this, arguments,0,C$);
});
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.map = null;
this.source = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.map = Clazz_new_((I$[3]||$incl$(3)));
}, 1);

Clazz_newMeth(C$, 'c$$O', function (sourceBean) {
C$.$init$.apply(this);
if (sourceBean == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.source = sourceBean;
}, 1);

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
if (listener == null ) {
return;
}if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListenerProxy")) {
var proxy = listener;
this.addPropertyChangeListener$S$java_beans_PropertyChangeListener(proxy.getPropertyName(), proxy.getListener());
} else {
this.map.add$S$TL(null, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
if (listener == null ) {
return;
}if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListenerProxy")) {
var proxy = listener;
this.removePropertyChangeListener$S$java_beans_PropertyChangeListener(proxy.getPropertyName(), proxy.getListener());
} else {
this.map.remove$S$TL(null, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
return this.map.getListeners();
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
if (listener == null  || propertyName == null  ) {
return;
}listener = this.map.extract$TL(listener);
if (listener != null ) {
this.map.add$S$TL(propertyName, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
if (listener == null  || propertyName == null  ) {
return;
}listener = this.map.extract$TL(listener);
if (listener != null ) {
this.map.remove$S$TL(propertyName, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S', function (propertyName) {
return this.map.getListeners$S(propertyName);
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O', function (propertyName, oldValue, newValue) {
if (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) {
return;
}this.firePropertyChange$java_beans_PropertyChangeEvent(Clazz_new_((I$[4]||$incl$(4)).c$$O$S$O$O,[this.source, propertyName, oldValue, newValue]));
});

Clazz_newMeth(C$, 'firePropertyChange$S$I$I', function (propertyName, oldValue, newValue) {
if (oldValue == newValue) {
return;
}this.firePropertyChange$S$O$O(propertyName, Integer.$valueOf(oldValue), Integer.$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$Z$Z', function (propertyName, oldValue, newValue) {
if (oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, (I$[5]||$incl$(5)).$valueOf(oldValue), (I$[5]||$incl$(5)).$valueOf(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$java_beans_PropertyChangeEvent', function (evt) {
var oldValue = evt.getOldValue();
var newValue = evt.getNewValue();
var propertyName = evt.getPropertyName();
if (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) {
return;
}var common = this.map.get$S(null);
var named = (propertyName != null ) ? this.map.get$S(propertyName) : null;
p$.fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent.apply(this, [common, evt]);
p$.fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent.apply(this, [named, evt]);
});

Clazz_newMeth(C$, 'fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent', function (listeners, event) {
if (listeners != null ) {
for (var listener, $listener = 0, $$listener = listeners; $listener<$$listener.length&&((listener=$$listener[$listener]),1);$listener++) {
listener.propertyChange$java_beans_PropertyChangeEvent(event);
}
}});

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$O$O', function (propertyName, index, oldValue, newValue) {
this.firePropertyChange$java_beans_PropertyChangeEvent(Clazz_new_((I$[6]||$incl$(6)).c$$O$S$O$O$I,[this.source, propertyName, oldValue, newValue, index]));
});

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$I$I', function (propertyName, index, oldValue, newValue) {
if (oldValue == newValue) {
return;
}this.fireIndexedPropertyChange$S$I$O$O(propertyName, index, Integer.$valueOf(oldValue), Integer.$valueOf(newValue));
});

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$Z$Z', function (propertyName, index, oldValue, newValue) {
if (oldValue == newValue ) {
return;
}this.fireIndexedPropertyChange$S$I$O$O(propertyName, index, (I$[5]||$incl$(5)).$valueOf(oldValue), (I$[5]||$incl$(5)).$valueOf(newValue));
});

Clazz_newMeth(C$, 'hasListeners$S', function (propertyName) {
return this.map.hasListeners$S(propertyName);
});
;
(function(){var C$=Clazz_newClass(P$.PropertyChangeSupport, "PropertyChangeListenerMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.beans.ChangeListenerMap');
C$.EMPTY = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.EMPTY = Clazz_array((I$[1]||$incl$(1)), -1, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'newArray$I', function (length) {
return (0 < length) ? Clazz_array((I$[1]||$incl$(1)), [length]) : C$.EMPTY;
});

Clazz_newMeth(C$, ['newProxy$S$java_beans_PropertyChangeListener','newProxy$S$TL'], function (name, listener) {
return Clazz_new_((I$[2]||$incl$(2)).c$$S$java_beans_PropertyChangeListener,[name, listener]);
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:03
(function(){var P$=java.lang,I$=[['org.apache.harmony.luni.util.Msg']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(java.lang, "AbstractStringBuilder");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.value = null;
this.count = 0;
this.shared = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, 'shareValue', function () {
this.shared = true;
return this.value;
});

Clazz_newMeth(C$, 'set$CA$I', function (val, len) {
if (val == null ) val = Clazz_array(Character.TYPE, [0]);
if (val.length < len) throw Clazz_new_(Clazz_load('java.io.InvalidObjectException').c$$S,[(I$[1]||$incl$(1)).getString$S("K0199")]);
this.shared = false;
this.value = val;
this.count = len;
});

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.value = Clazz_array(Character.TYPE, [16]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (capacity) {
C$.$init$.apply(this);
if (capacity < 0) throw Clazz_new_(Clazz_load('java.lang.NegativeArraySizeException'));
this.value = Clazz_array(Character.TYPE, [capacity]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (string) {
C$.$init$.apply(this);
if (string == null ) throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
this.count = string.length$();
this.shared = false;
this.value = Clazz_array(Character.TYPE, [this.count + 16]);
string.getChars$I$I$CA$I(0, this.count, this.value, 0);
}, 1);

Clazz_newMeth(C$, 'enlargeBuffer$I', function (min) {
var twice = (this.value.length << 1) + 2;
var newData = Clazz_array(Character.TYPE, [min > twice ? min : twice]);
System.arraycopy(this.value, 0, newData, 0, this.count);
this.value = newData;
this.shared = false;
});

Clazz_newMeth(C$, 'appendNull', function () {
var newSize = this.count + 4;
if (newSize > this.value.length) {
p$.enlargeBuffer$I.apply(this, [newSize]);
} else if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}this.value[this.count++] = "n";
this.value[this.count++] = "u";
this.value[this.count++] = "l";
this.value[this.count++] = "l";
});

Clazz_newMeth(C$, 'append0$CA', function (chars) {
var newSize = this.count + chars.length;
if (newSize > this.value.length) {
p$.enlargeBuffer$I.apply(this, [newSize]);
} else if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}System.arraycopy(chars, 0, this.value, this.count, chars.length);
this.count = newSize;
});

Clazz_newMeth(C$, 'append0$CA$I$I', function (chars, start, length) {
if (chars == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (start >= 0 && 0 <= length  && length <= chars.length - start ) {
var newSize = this.count + length;
if (newSize > this.value.length) {
p$.enlargeBuffer$I.apply(this, [newSize]);
} else if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}System.arraycopy(chars, start, this.value, this.count, length);
this.count = newSize;
} else {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException'));
}});

Clazz_newMeth(C$, 'append0$C', function (ch) {
if (this.count == this.value.length) {
p$.enlargeBuffer$I.apply(this, [this.count + 1]);
}if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}this.value[this.count++] = ch;
});

Clazz_newMeth(C$, 'append0$S', function (string) {
if (string == null ) {
this.appendNull();
return;
}var adding = string.length$();
var newSize = this.count + adding;
if (newSize > this.value.length) {
p$.enlargeBuffer$I.apply(this, [newSize]);
} else if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}string.getChars$I$I$CA$I(0, adding, this.value, this.count);
this.count = newSize;
});

Clazz_newMeth(C$, 'append0$CharSequence$I$I', function (s, start, end) {
if (s == null ) s = "null";
if (start < 0 || end < 0  || start > end  || end > s.length$() ) throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
this.append0$S(s.subSequence$I$I(start, end).toString());
});

Clazz_newMeth(C$, 'capacity', function () {
return this.value.length;
});

Clazz_newMeth(C$, 'charAt$I', function (index) {
if (index < 0 || index >= this.count ) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
return this.value[index];
});

Clazz_newMeth(C$, 'delete0$I$I', function (start, end) {
if (start >= 0) {
if (end > this.count) {
end = this.count;
}if (end == start) {
return;
}if (end > start) {
var length = this.count - end;
if (length > 0) {
if (!this.shared) {
System.arraycopy(this.value, end, this.value, start, length);
} else {
var newData = Clazz_array(Character.TYPE, [this.value.length]);
System.arraycopy(this.value, 0, newData, 0, start);
System.arraycopy(this.value, end, newData, start, length);
this.value = newData;
this.shared = false;
}}this.count = this.count-(end - start);
return;
}}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'deleteCharAt0$I', function (location) {
if (0 > location || location >= this.count ) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[location]);
var length = this.count - location - 1 ;
if (length > 0) {
if (!this.shared) {
System.arraycopy(this.value, location + 1, this.value, location, length);
} else {
var newData = Clazz_array(Character.TYPE, [this.value.length]);
System.arraycopy(this.value, 0, newData, 0, location);
System.arraycopy(this.value, location + 1, newData, location, length);
this.value = newData;
this.shared = false;
}}this.count--;
});

Clazz_newMeth(C$, 'ensureCapacity$I', function (min) {
if (min > this.value.length) {
p$.enlargeBuffer$I.apply(this, [min]);
}});

Clazz_newMeth(C$, 'getChars$I$I$CA$I', function (start, end, dest, destStart) {
if (start > this.count || end > this.count  || start > end ) {
throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException'));
}System.arraycopy(this.value, start, dest, destStart, end - start);
});

Clazz_newMeth(C$, 'insert0$I$CA', function (index, chars) {
if (0 > index || index > this.count ) {
throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
}if (chars.length != 0) {
p$.move$I$I.apply(this, [chars.length, index]);
System.arraycopy(chars, 0, this.value, index, chars.length);
this.count = this.count+(chars.length);
}});

Clazz_newMeth(C$, 'insert0$I$CA$I$I', function (index, chars, start, length) {
if (0 <= index && index <= this.count ) {
if (start >= 0 && 0 <= length  && length <= chars.length - start ) {
if (length != 0) {
p$.move$I$I.apply(this, [length, index]);
System.arraycopy(chars, start, this.value, index, length);
this.count = this.count+(length);
}return;
}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$S,["offset " + start + ", len " + length + ", array.length " + chars.length ]);
}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
});

Clazz_newMeth(C$, 'insert0$I$C', function (index, ch) {
if (0 > index || index > this.count ) {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[index]);
}p$.move$I$I.apply(this, [1, index]);
this.value[index] = ch;
this.count++;
});

Clazz_newMeth(C$, 'insert0$I$S', function (index, string) {
if (0 <= index && index <= this.count ) {
if (string == null ) string = "null";
var min = string.length$();
if (min != 0) {
p$.move$I$I.apply(this, [min, index]);
string.getChars$I$I$CA$I(0, min, this.value, index);
this.count = this.count+(min);
}} else {
throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
}});

Clazz_newMeth(C$, 'insert0$I$CharSequence$I$I', function (index, s, start, end) {
if (s == null ) s = "null";
if (index < 0 || index > this.count  || start < 0  || end < 0  || start > end  || end > s.length$() ) throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
this.insert0$I$S(index, s.subSequence$I$I(start, end).toString());
});

Clazz_newMeth(C$, 'length$', function () {
return this.count;
});

Clazz_newMeth(C$, 'move$I$I', function (size, index) {
var newSize;
if (this.value.length - this.count >= size) {
if (!this.shared) {
System.arraycopy(this.value, index, this.value, index + size, this.count - index);
return;
}newSize = this.value.length;
} else {
var a = this.count + size;
var b = (this.value.length << 1) + 2;
newSize = a > b ? a : b;
}var newData = Clazz_array(Character.TYPE, [newSize]);
System.arraycopy(this.value, 0, newData, 0, index);
System.arraycopy(this.value, index, newData, index + size, this.count - index);
this.value = newData;
this.shared = false;
});

Clazz_newMeth(C$, 'replace0$I$I$S', function (start, end, string) {
if (start >= 0) {
if (end > this.count) end = this.count;
if (end > start) {
var stringLength = string.length$();
var diff = end - start - stringLength ;
if (diff > 0) {
if (!this.shared) {
System.arraycopy(this.value, end, this.value, start + stringLength, this.count - end);
} else {
var newData = Clazz_array(Character.TYPE, [this.value.length]);
System.arraycopy(this.value, 0, newData, 0, start);
System.arraycopy(this.value, end, newData, start + stringLength, this.count - end);
this.value = newData;
this.shared = false;
}} else if (diff < 0) {
p$.move$I$I.apply(this, [-diff, end]);
} else if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}string.getChars$I$I$CA$I(0, stringLength, this.value, start);
this.count = this.count-(diff);
return;
}if (start == end) {
if (string == null ) throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
this.insert0$I$S(start, string);
return;
}}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'reverse0', function () {
if (this.count < 2) {
return;
}if (!this.shared) {
for (var i = 0, end = this.count, mid = (this.count/2|0); i < mid; i++) {
var temp = this.value[--end];
this.value[end] = this.value[i];
this.value[i] = temp;
}
} else {
var newData = Clazz_array(Character.TYPE, [this.value.length]);
for (var i = 0, end = this.count; i < this.count; i++) {
newData[--end] = this.value[i];
}
this.value = newData;
this.shared = false;
}});

Clazz_newMeth(C$, 'setCharAt$I$C', function (index, ch) {
if (0 > index || index >= this.count ) {
throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
}if (this.shared) {
this.value = this.value.clone();
this.shared = false;
}this.value[index] = ch;
});

Clazz_newMeth(C$, 'setLength$I', function (length) {
if (length < 0) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[length]);
if (this.count < length) {
if (length > this.value.length) {
p$.enlargeBuffer$I.apply(this, [length]);
} else {
if (this.shared) {
var newData = Clazz_array(Character.TYPE, [this.value.length]);
System.arraycopy(this.value, 0, newData, 0, this.count);
this.value = newData;
this.shared = false;
} else {
for (var i = this.count; i < length; i++) {
this.value[i] = String.fromCharCode(0);
}
}}}this.count = length;
});

Clazz_newMeth(C$, 'substring$I', function (start) {
if (0 <= start && start <= this.count ) {
if (start == this.count) return "";
this.shared = true;
return  String.instantialize(this.value, start, this.count - start);
}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[start]);
});

Clazz_newMeth(C$, 'substring$I$I', function (start, end) {
if (0 <= start && start <= end  && end <= this.count ) {
if (start == end) return "";
this.shared = true;
return  String.instantialize(this.value, start, end - start);
}throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'toString', function () {
if (this.count == 0) return "";
if (this.count >= 256 && this.count <= (this.value.length >> 1) ) return  String.instantialize(this.value, 0, this.count);
this.shared = true;
return  String.instantialize(this.value, 0, this.count);
});

Clazz_newMeth(C$, 'subSequence$I$I', function (start, end) {
return this.substring$I$I(start, end);
});

Clazz_newMeth(C$, 'indexOf$S', function (string) {
return this.indexOf$S$I(string, 0);
});

Clazz_newMeth(C$, 'indexOf$S$I', function (subString, start) {
if (start < 0) start = 0;
var subCount = subString.length$();
if (subCount > 0) {
if (subCount + start > this.count) return -1;
var firstChar = subString.charAt(0);
while (true){
var i = start;
var found = false;
for (; i < this.count; i++) if (this.value[i] == firstChar) {
found = true;
break;
}
if (!found || subCount + i > this.count ) return -1;
var o1 = i;
var o2 = 0;
while (++o2 < subCount && this.value[++o1] == subString.charAt(o2) ){
}
if (o2 == subCount) return i;
start = i + 1;
}
}return (start < this.count || start == 0 ) ? start : this.count;
});

Clazz_newMeth(C$, 'lastIndexOf$S', function (string) {
return this.lastIndexOf$S$I(string, this.count);
});

Clazz_newMeth(C$, 'lastIndexOf$S$I', function (subString, start) {
var subCount = subString.length$();
if (subCount <= this.count && start >= 0 ) {
if (subCount > 0) {
if (start > this.count - subCount) start = this.count - subCount;
var firstChar = subString.charAt(0);
while (true){
var i = start;
var found = false;
for (; i >= 0; --i) if (this.value[i] == firstChar) {
found = true;
break;
}
if (!found) return -1;
var o1 = i;
var o2 = 0;
while (++o2 < subCount && this.value[++o1] == subString.charAt(o2) ){
}
if (o2 == subCount) return i;
start = i - 1;
}
}return start < this.count ? start : this.count;
}return -1;
});

Clazz_newMeth(C$, 'trimToSize', function () {
if (this.count < this.value.length) {
var newValue = Clazz_array(Character.TYPE, [this.count]);
System.arraycopy(this.value, 0, newValue, 0, this.count);
this.value = newValue;
this.shared = false;
}});

Clazz_newMeth(C$, 'codePointAt$I', function (index) {
if (index < 0 || index >= this.count ) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
return Character.codePointAt(this.value, index, this.count);
});

Clazz_newMeth(C$, 'codePointBefore$I', function (index) {
if (index < 1 || index > this.count ) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException').c$$I,[index]);
return Character.codePointBefore(this.value, index);
});

Clazz_newMeth(C$, 'codePointCount$I$I', function (beginIndex, endIndex) {
if (beginIndex < 0 || endIndex > this.count  || beginIndex > endIndex ) throw Clazz_new_(Clazz_load('java.lang.StringIndexOutOfBoundsException'));
return Character.codePointCount(this.value, beginIndex, endIndex - beginIndex);
});

Clazz_newMeth(C$, 'offsetByCodePoints$I$I', function (index, codePointOffset) {
return Character.offsetByCodePoints(this.value, 0, this.count, index, codePointOffset);
});
})();
//Created 2018-05-15 01:02:06
(function(){var P$=java.lang,I$=[['java.lang.reflect.Method','java.util.Arrays','java.lang.reflect.TypeVariable','java.lang.Boolean','java.lang.Void','java.lang.Enum','java.util.HashMap']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(java.lang, "Class", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.io.Serializable', 'java.lang.reflect.GenericDeclaration']);
var p$=C$.prototype;
C$.initted = false;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.initted = false;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$clazz$ = null;
this.$methodList$ = null;
this.name = null;
this.classRedefinedCount = 0;
this.lastRedefinedCount = 0;
this.enumConstants = null;
this.$enumConstantDirectory = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.classRedefinedCount = 0;
this.lastRedefinedCount = 0;
this.enumConstants = null;
this.$enumConstantDirectory = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'toString', function () {
return (this.isInterface() ? "interface " : (this.isPrimitive() ? "" : "class ")) + this.getName();
});

Clazz_newMeth(C$, 'forName$S', function (className) {
return Class.forName0$S$Z$ClassLoader(className, true, null);
}, 1);

Clazz_newMeth(C$, 'forName$S$Z$ClassLoader', function (name, initialize, loader) {
return Class.forName0$S$Z$ClassLoader(name, initialize, loader);
}, 1);

Clazz_newMeth(C$, 'forName0$S$Z$ClassLoader', function (name, initialize, loader) {
{
return Clazz_forName(name, initialize, loader);
}
}, 1);

Clazz_newMeth(C$, 'newInstance', function () {
{
return new this.$clazz$;
}
});

Clazz_newMeth(C$, 'isInstance$O', function (obj) {
{
return Clazz_instanceOf(obj, this.$clazz$);
}
});

Clazz_newMeth(C$, 'isAssignableFrom$Class', function (cls) {
{
return(Clazz_instanceOf(cls.$clazz$, this.$clazz$));
}
});

Clazz_newMeth(C$, 'isInterface', function () {
{
return !this.$clazz$.$init$;
}
});

Clazz_newMeth(C$, 'isArray', function () {
{
return !!this.$clazz$.__ARRAYTYPE;
}
});

Clazz_newMeth(C$, 'isPrimitive', function () {
{
return !!this.__PRIMITIVE;
}
});

Clazz_newMeth(C$, 'isAnnotation', function () {
return (this.getModifiers() & 8192) != 0;
});

Clazz_newMeth(C$, 'isSynthetic', function () {
return (this.getModifiers() & 4096) != 0;
});

Clazz_newMeth(C$, 'getName', function () {
if (this.name == null ) this.name = p$.getName0.apply(this, []);
return this.name;
});

Clazz_newMeth(C$, 'getName0', function () {
{
return this.$clazz$.__CLASS_NAME$__ || this.$clazz$.__CLASS_NAME__;
}
});

Clazz_newMeth(C$, 'getClassLoader', function () {
return this.getClassLoader0();
});

Clazz_newMeth(C$, 'getClassLoader0', function () {
var loader = null;
{
var baseFolder = Clazz._Loader.getJ2SLibBase();
loader = Clazz._Loader.requireLoaderByBase(baseFolder);
var me = this;
loader.getResourceAsStream$S = function(s) { return me.getResourceAsStream$S(s.indexOf("/") == 0 ? s : "/" + s) };
loader.getResource$S = function(s) { return me.getResource$S(s.indexOf("/") == 0 ? s : "/" + s) };
}
return loader;
});

Clazz_newMeth(C$, 'getTypeParameters', function () {
return Clazz_array((I$[3]||$incl$(3)), [0]);
});

Clazz_newMeth(C$, 'getSuperclass', function () {
{
if (this.$clazz$ == java.lang.Object) return null;
return Clazz_getClass(this.$clazz$.superclazz || java.lang.Object);
}
});

Clazz_newMeth(C$, 'getInterfaces', function () {
alert('native method must be replaced! Ljava/lang/Class;.getInterfaces()[Ljava/lang/Class<*>;');
}
);

Clazz_newMeth(C$, 'getComponentType', function () {
return null;
});

Clazz_newMeth(C$, 'getModifiers', function () {
return 1;
});

Clazz_newMeth(C$, 'getSigners', function () {
alert('native method must be replaced! Ljava/lang/Class;.getSigners()[Ljava/lang/Object;');
}
);

Clazz_newMeth(C$, 'setSigners$OA', function (signers) {
alert('native method must be replaced! Ljava/lang/Class;.setSigners([Ljava/lang/Object;)V');
}
);

Clazz_newMeth(C$, 'getDeclaringClass', function () {
alert('native method must be replaced! Ljava/lang/Class;.getDeclaringClass()Ljava/lang/Class<*>;');
}
);

Clazz_newMeth(C$, 'getSimpleName', function () {
if (this.isArray()) return this.getComponentType().getSimpleName() + "[]";
var name = "";
{
name = (this.$clazz$.__ANON ? "" : this.$clazz$.__CLASS_NAME__);
}
return name.substring(name.lastIndexOf(".") + 1);
});

Clazz_newMeth(C$, 'getCanonicalName', function () {
if (this.isArray()) {
var canonicalName = this.getComponentType().getCanonicalName();
if (canonicalName != null ) return canonicalName + "[]";
 else return null;
}if (p$.isLocalOrAnonymousClass.apply(this, [])) return null;
var name = null;

name = this.$clazz$.__CLASS_NAME__ || null;
return name;
});

Clazz_newMeth(C$, 'isAnonymousClass', function () {
return "".equals$O(this.getSimpleName());
});

Clazz_newMeth(C$, 'isLocalClass', function () {
{
return !!this.$clazz$.__LOCAL;
}
});

Clazz_newMeth(C$, 'isLocalOrAnonymousClass', function () {
{
return !!this.$clazz$.__ISANON || !!this.$clazz$.__LOCAL;
}
});

Clazz_newMeth(C$, 'getClasses', function () {
return null;
});

Clazz_newMeth(C$, 'getFields', function () {
return null;
});

Clazz_newMeth(C$, 'getMethods', function () {
return (p$.privateGetPublicMethods.apply(this, []));
});

Clazz_newMeth(C$, 'getConstructors', function () {
return null;
});

Clazz_newMeth(C$, 'getField$S', function (name) {
{
return null;
}});

Clazz_newMeth(C$, 'getMethod$S$ClassA', function (name, paramTypes) {
{
return Clazz_new_(java.lang.reflect.Method.c$$Class$S$ClassA$Class$ClassA$I, [this, name, paramTypes, java.lang.Void, [], 0]);
}
});

Clazz_newMeth(C$, 'getConstructor$ClassA', function (parameterTypes) {
{
return Clazz_new_(java.lang.reflect.Constructor.c$$Class$ClassA$ClassA$I, [this, parameterTypes || [], [], java.lang.reflect.Modifier.PUBLIC]);
}
});

Clazz_newMeth(C$, 'getDeclaredClasses', function () {
return this.getClasses();
});

Clazz_newMeth(C$, 'getDeclaredFields', function () {
return this.getFields();
});

Clazz_newMeth(C$, 'getDeclaredMethods', function () {
return this.getMethods();
});

Clazz_newMeth(C$, 'getDeclaredConstructors', function () {
return this.getConstructors();
});

Clazz_newMeth(C$, 'getDeclaredField$S', function (name) {
return this.getField$S(name);
});

Clazz_newMeth(C$, 'getDeclaredMethod$S$ClassA', function (name, parameterTypes) {
return this.getMethod$S$ClassA(name, parameterTypes);
});

Clazz_newMeth(C$, 'getDeclaredConstructor$ClassA', function (parameterTypes) {
return this.getConstructor$ClassA(parameterTypes);
});

Clazz_newMeth(C$, 'getResourceAsStream$S', function (name) {
var clazzName = this.$clazz$.__CLASS_NAME__;
{
if (!name) return null;
name = name.replace (/\\/g, '/');
var baseFolder = null;
var fname = name;
if (arguments.length == 2 && name.indexOf ('/') != 0) { // additional argument
name = "/" + name;
} if (name.indexOf ('/') == 0) { if (arguments.length == 2)  // additional argument
baseFolder = arguments[1];
if (!baseFolder) baseFolder = Clazz._Loader.getJ2SLibBase();
if (baseFolder.charAt(baseFolder.length - 1) != '/') baseFolder += "/";
fname = baseFolder + name.substring (1);
} else { baseFolder = Clazz._Loader.getJ2SLibBase(); // getClass().getClassLoader() uses full path
fname = baseFolder;
if (this.$_$base == null) { // getClass().getResource() will be here
var pkgs = clazzName.split(".");
var fname = baseFolder;
if (fname.charAt(fname.length - 1) != '/') fname += "/";
var map = Clazz._allPackage;
for (var i = 0; i < pkgs.length - 1; i++) { if (!(map = map[pkgs[i]])) break;
fname += pkgs[i] + "/";
} } fname += name;
} var url = null;
var javapath = fname;
try { if (fname.indexOf(":/") < 0) { var d = document.location.href.split("?")[0].split("/");
d[d.length - 1] = fname;
fname = d.join("/");
} Clazz_load("java.net.URL");
url = Clazz_new_(java.net.URL.c$$S,[fname]);
} catch (e) { return null;
} var fileCache = J2S._getSetJavaFileCache(null);
var data = fileCache && fileCache.get$O(javapath);
if (!data) data = J2S._getFileData(fname.toString(),null,1,1);
if (data == null || data == "error" || data.indexOf && data.indexOf("[Exception") == 0) return null;
var bytes = (data.__BYTESIZE == 1 ? data : J2S._strToBytes(data));
Clazz_load("java.io.BufferedInputStream");
Clazz_load("java.io.ByteArrayInputStream");
var is = Clazz_new_(java.io.BufferedInputStream.c$$java_io_InputStream, [Clazz_new_(java.io.ByteArrayInputStream.c$$BA, [bytes])]);
is.url = url;
url._streamData = is;
return is;
}
});

Clazz_newMeth(C$, 'getResource$S', function (name) {
{
var stream = this.getResourceAsStream$S(name);
return(stream ? stream.url : null);
}
});

Clazz_newMeth(C$, 'getPrimitiveClass$S', function (name) {
switch (name) {
case "boolean":
return (I$[4]||$incl$(4)).TYPE;
case "byte":
return Byte.TYPE;
case "char":
return Character.TYPE;
case "short":
return Short.TYPE;
case "int":
return Integer.TYPE;
case "long":
return Long.TYPE;
case "float":
return Float.TYPE;
case "double":
return Double.TYPE;
default:
return null;
}
}, 1);

Clazz_newMeth(C$, 'privateGetPublicMethods', function () {
var ms;
if (this.$methodList$ != null ) {
ms = Clazz_array((I$[1]||$incl$(1)), [this.$methodList$.length]);
for (var i = ms.length; --i >= 0; ) {
ms[i] = Clazz_new_((I$[1]||$incl$(1)).c$$Class$S$ClassA$Class$ClassA$I,[this, this.$methodList$[i], null, Clazz_getClass((I$[5]||$incl$(5))), null, 1]);
}
return ms;
}ms = Clazz_array((I$[1]||$incl$(1)), [0]);
{
var p = this.$clazz$.prototype;
for (var attr in p) { if (typeof p[attr] == "function" && !p[attr].__CLASS_NAME__ && p[attr] != this.$clazz$[attr] && p[attr].exClazz == this.$clazz$) { // there are polynormical methods.
ms.push(Clazz_new_(Clazz_load('java.lang.reflect.Method').c$$Class$S$ClassA$Class$ClassA$I,  [this, attr, [], java.lang.Void, [], 1]));
} } p = this.$clazz$;
for (var attr in p) { if (typeof p[attr] == "function" && !p[attr].__CLASS_NAME__  && p[attr].exClazz == this.$clazz$) { ms.push(Clazz_new_(Clazz_load('java.lang.reflect.Method').c$$Class$S$ClassA$Class$ClassA$I,  [this, attr, [], java.lang.Void, [], 1 | 8]));
} }
}
return ms;
});

Clazz_newMeth(C$, 'arrayContentsEq$OA$OA', function (a1, a2) {
if (a1 == null ) {
return a2 == null  || a2.length == 0 ;
}if (a2 == null ) {
return a1.length == 0;
}if (a1.length != a2.length) {
return false;
}for (var i = 0; i < a1.length; i++) {
if (a1[i] !== a2[i] ) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'isEnum', function () {
return (this.getModifiers() & 16384) != 0 && this.getSuperclass() === Clazz_getClass((I$[6]||$incl$(6)))  ;
});

Clazz_newMeth(C$, 'getEnumConstants', function () {
var values = this.getEnumConstantsShared();
return (values != null ) ? values.clone() : null;
});

Clazz_newMeth(C$, 'getEnumConstantsShared', function () {
if (this.enumConstants == null ) {
if (!this.isEnum()) return null;
try {
var values = this.getMethod$S$ClassA("values", []);
this.enumConstants = values.invoke$O$OA(null, null);
} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.lang.reflect.InvocationTargetException")){
var ex = e$$;
{
return null;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.NoSuchMethodException")){
var ex = e$$;
{
return null;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.IllegalAccessException")){
var ex = e$$;
{
return null;
}
} else {
throw e$$;
}
}
}return this.enumConstants;
});

Clazz_newMeth(C$, 'enumConstantDirectory', function () {
if (this.$enumConstantDirectory == null ) {
var universe = this.getEnumConstantsShared();
if (universe == null ) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[this.getName() + " is not an enum type"]);
var m = Clazz_new_((I$[7]||$incl$(7)).c$$I,[2 * universe.length]);
for (var constant, $constant = 0, $$constant = universe; $constant<$$constant.length&&((constant=$$constant[$constant]),1);$constant++) m.put$TK$TV((constant).name(), constant);

this.$enumConstantDirectory = m;
}return this.$enumConstantDirectory;
});

Clazz_newMeth(C$, 'cast$O', function (obj) {
if (obj != null  && !this.isInstance$O(obj) ) throw Clazz_new_(Clazz_load('java.lang.ClassCastException').c$$S,[p$.cannotCastMsg$O.apply(this, [obj])]);
return obj;
});

Clazz_newMeth(C$, 'cannotCastMsg$O', function (obj) {
return "Cannot cast " + obj.getClass().getName() + " to " + this.getName() ;
});

Clazz_newMeth(C$, 'hashCode', function () {
var name = null;

name = this.$clazz$.__CLASS_NAME__ || this.$clazz$.toString();
return name.hashCode();
});

Clazz_newMeth(C$, 'equals$O', function (o) {

return o.__CLASS_NAME__ == "java.lang.Class" && o.$clazz$ == this.$clazz$;
return false;
});
;
(function(){var C$=Clazz_newClass(Class, "JSClass", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.__CLASS_NAME__ = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(Class, "MethodArray", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.methods = null;
this.$length = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.methods = Clazz_array((I$[1]||$incl$(1)), [20]);
this.$length = 0;
}, 1);

Clazz_newMeth(C$, 'add$reflect_Method', function (m) {
if (this.$length == this.methods.length) {
this.methods = (I$[2]||$incl$(2)).copyOf$TTA$I(this.methods, 2 * this.methods.length);
}this.methods[this.$length++] = m;
});

Clazz_newMeth(C$, 'addAll$reflect_MethodA', function (ma) {
for (var i = 0; i < ma.length; i++) {
this.add$reflect_Method(ma[i]);
}
});

Clazz_newMeth(C$, 'addAll$Class_MethodArray', function (ma) {
for (var i = 0; i < ma.length$(); i++) {
this.add$reflect_Method(ma.get$I(i));
}
});

Clazz_newMeth(C$, 'addIfNotPresent$reflect_Method', function (newMethod) {
for (var i = 0; i < this.$length; i++) {
var m = this.methods[i];
if (m === newMethod  || (m != null  && m.equals$O(newMethod) ) ) {
return;
}}
this.add$reflect_Method(newMethod);
});

Clazz_newMeth(C$, 'addAllIfNotPresent$Class_MethodArray', function (newMethods) {
for (var i = 0; i < newMethods.length$(); i++) {
var m = newMethods.get$I(i);
if (m != null ) {
this.addIfNotPresent$reflect_Method(m);
}}
});

Clazz_newMeth(C$, 'length$', function () {
return this.$length;
});

Clazz_newMeth(C$, 'get$I', function (i) {
return this.methods[i];
});

Clazz_newMeth(C$, 'removeByNameAndSignature$reflect_Method', function (toRemove) {
for (var i = 0; i < this.$length; i++) {
var m = this.methods[i];
if (m != null  && m.getReturnType() === toRemove.getReturnType()   && m.getName() == toRemove.getName()  && Class.arrayContentsEq$OA$OA(m.getParameterTypes(), toRemove.getParameterTypes()) ) {
this.methods[i] = null;
}}
});

Clazz_newMeth(C$, 'compactAndTrim', function () {
var newPos = 0;
for (var pos = 0; pos < this.$length; pos++) {
var m = this.methods[pos];
if (m != null ) {
if (pos != newPos) {
this.methods[newPos] = m;
}newPos++;
}}
if (newPos != this.methods.length) {
this.methods = (I$[2]||$incl$(2)).copyOf$TTA$I(this.methods, newPos);
}});

Clazz_newMeth(C$, 'getArray', function () {
return this.methods;
});
})()
})();
//Created 2018-05-15 01:02:06
(function(){var P$=java.lang,I$=[['java.lang.Enum']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(java.lang, "Enum", null, null, ['Comparable', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$name = null;
this.$ordinal = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'name', function () {
return this.$name;
});

Clazz_newMeth(C$, 'ordinal', function () {
return this.$ordinal;
});

Clazz_newMeth(C$, 'c$$S$I', function (name, ordinal) {
C$.$init$.apply(this);
this.$name = name;
this.$ordinal = ordinal;
}, 1);

Clazz_newMeth(C$, 'toString', function () {
return this.$name;
});

Clazz_newMeth(C$, 'equals$O', function (other) {
return this === other ;
});

Clazz_newMeth(C$, 'hashCode', function () {
return C$.superclazz.prototype.hashCode.apply(this, []);
});

Clazz_newMeth(C$, 'clone', function () {
throw Clazz_new_(Clazz_load('java.lang.CloneNotSupportedException'));
});

Clazz_newMeth(C$, ['compareTo$TE','compareTo$TT'], function (o) {
var other = o;
var self = this;
if (self.getClass() !== other.getClass()  && self.getDeclaringClass() !== other.getDeclaringClass()  ) throw Clazz_new_(Clazz_load('java.lang.ClassCastException'));
return self.$ordinal - other.$ordinal;
});

Clazz_newMeth(C$, 'getDeclaringClass', function () {
var clazz = this.getClass();
var zuper = clazz.getSuperclass();
return ((zuper === Clazz_getClass((I$[1]||$incl$(1))) ) ? clazz : zuper);
});

Clazz_newMeth(C$, '$valueOf$Class$S', function (enumType, name) {
var result = null;
{
result = enumType.$clazz$[name];
}
if (result != null ) return result;
if (name == null ) throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Name is null"]);
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["No enum const " + enumType + "." + name ]);
}, 1);

Clazz_newMeth(C$, 'finalize', function () {
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:07
(function(){var P$=java.lang,I$=[];
var C$=Clazz_newClass(java.lang, "StringBuffer", null, 'AbstractStringBuilder', ['Appendable', 'java.io.Serializable', 'CharSequence']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (capacity) {
C$.superclazz.c$$I.apply(this, [capacity]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (string) {
C$.superclazz.c$$S.apply(this, [string]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$CharSequence', function (cs) {
C$.superclazz.c$$S.apply(this, [cs == null  ? null : cs.toString()]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'append$Z', function (b) {
return this.append$S(b ? "true" : "false");
});

Clazz_newMeth(C$, 'append$C', function (ch) {
this.append0$C(ch);
return this;
});

Clazz_newMeth(C$, 'append$D', function (d) {
return this.append$S(Double.toString(d));
});

Clazz_newMeth(C$, 'append$F', function (f) {
return this.append$S(Float.toString(f));
});

Clazz_newMeth(C$, 'append$I', function (i) {
return this.append$S(Integer.toString(i));
});

Clazz_newMeth(C$, 'append$J', function (l) {
return this.append$S(Long.toString(l));
});

Clazz_newMeth(C$, 'append$O', function (obj) {
if (obj == null ) {
this.appendNull();
} else {
this.append0$S(obj.toString());
}return this;
});

Clazz_newMeth(C$, 'append$S', function (string) {
this.append0$S(string);
return this;
});

Clazz_newMeth(C$, 'append$StringBuffer', function (sb) {
if (sb == null ) {
this.appendNull();
} else {
{
this.append0$CA$I$I(sb.getValue(), 0, sb.length$());
}}return this;
});

Clazz_newMeth(C$, 'append$CA', function (chars) {
this.append0$CA(chars);
return this;
});

Clazz_newMeth(C$, 'append$CA$I$I', function (chars, start, length) {
this.append0$CA$I$I(chars, start, length);
return this;
});

Clazz_newMeth(C$, 'append$CharSequence', function (s) {
if (s == null ) {
this.appendNull();
} else {
this.append0$S(s.toString());
}return this;
});

Clazz_newMeth(C$, 'append$CharSequence$I$I', function (s, start, end) {
this.append0$CharSequence$I$I(s, start, end);
return this;
});

Clazz_newMeth(C$, 'appendCodePoint$I', function (codePoint) {
return this.append$CA(Character.toChars(codePoint));
});

Clazz_newMeth(C$, 'charAt$I', function (index) {
return C$.superclazz.prototype.charAt$I.apply(this, [index]);
});

Clazz_newMeth(C$, 'codePointAt$I', function (index) {
return C$.superclazz.prototype.codePointAt$I.apply(this, [index]);
});

Clazz_newMeth(C$, 'codePointBefore$I', function (index) {
return C$.superclazz.prototype.codePointBefore$I.apply(this, [index]);
});

Clazz_newMeth(C$, 'codePointCount$I$I', function (beginIndex, endIndex) {
return C$.superclazz.prototype.codePointCount$I$I.apply(this, [beginIndex, endIndex]);
});

Clazz_newMeth(C$, '$delete$I$I', function (start, end) {
this.delete0$I$I(start, end);
return this;
});

Clazz_newMeth(C$, 'deleteCharAt$I', function (location) {
this.deleteCharAt0$I(location);
return this;
});

Clazz_newMeth(C$, 'ensureCapacity$I', function (min) {
C$.superclazz.prototype.ensureCapacity$I.apply(this, [min]);
});

Clazz_newMeth(C$, 'getChars$I$I$CA$I', function (start, end, buffer, idx) {
C$.superclazz.prototype.getChars$I$I$CA$I.apply(this, [start, end, buffer, idx]);
});

Clazz_newMeth(C$, 'indexOf$S$I', function (subString, start) {
return C$.superclazz.prototype.indexOf$S$I.apply(this, [subString, start]);
});

Clazz_newMeth(C$, 'insert$I$C', function (index, ch) {
this.insert0$I$C(index, ch);
return this;
});

Clazz_newMeth(C$, 'insert$I$Z', function (index, b) {
return this.insert$I$S(index, b ? "true" : "false");
});

Clazz_newMeth(C$, 'insert$I$I', function (index, i) {
return this.insert$I$S(index, Integer.toString(i));
});

Clazz_newMeth(C$, 'insert$I$J', function (index, l) {
return this.insert$I$S(index, Long.toString(l));
});

Clazz_newMeth(C$, 'insert$I$D', function (index, d) {
return this.insert$I$S(index, Double.toString(d));
});

Clazz_newMeth(C$, 'insert$I$F', function (index, f) {
return this.insert$I$S(index, Float.toString(f));
});

Clazz_newMeth(C$, 'insert$I$O', function (index, obj) {
return this.insert$I$S(index, obj == null  ? "null" : obj.toString());
});

Clazz_newMeth(C$, 'insert$I$S', function (index, string) {
this.insert0$I$S(index, string);
return this;
});

Clazz_newMeth(C$, 'insert$I$CA', function (index, chars) {
this.insert0$I$CA(index, chars);
return this;
});

Clazz_newMeth(C$, 'insert$I$CA$I$I', function (index, chars, start, length) {
this.insert0$I$CA$I$I(index, chars, start, length);
return this;
});

Clazz_newMeth(C$, 'insert$I$CharSequence', function (index, s) {
this.insert0$I$S(index, s == null  ? "null" : s.toString());
return this;
});

Clazz_newMeth(C$, 'insert$I$CharSequence$I$I', function (index, s, start, end) {
this.insert0$I$CharSequence$I$I(index, s, start, end);
return this;
});

Clazz_newMeth(C$, 'lastIndexOf$S$I', function (subString, start) {
return C$.superclazz.prototype.lastIndexOf$S$I.apply(this, [subString, start]);
});

Clazz_newMeth(C$, 'offsetByCodePoints$I$I', function (index, codePointOffset) {
return C$.superclazz.prototype.offsetByCodePoints$I$I.apply(this, [index, codePointOffset]);
});

Clazz_newMeth(C$, 'replace$I$I$S', function (start, end, string) {
this.replace0$I$I$S(start, end, string);
return this;
});

Clazz_newMeth(C$, 'reverse', function () {
this.reverse0();
return this;
});

Clazz_newMeth(C$, 'setCharAt$I$C', function (index, ch) {
C$.superclazz.prototype.setCharAt$I$C.apply(this, [index, ch]);
});

Clazz_newMeth(C$, 'setLength$I', function (length) {
C$.superclazz.prototype.setLength$I.apply(this, [length]);
});

Clazz_newMeth(C$, 'subSequence$I$I', function (start, end) {
return C$.superclazz.prototype.substring$I$I.apply(this, [start, end]);
});

Clazz_newMeth(C$, 'substring$I', function (start) {
return C$.superclazz.prototype.substring$I.apply(this, [start]);
});

Clazz_newMeth(C$, 'substring$I$I', function (start, end) {
return C$.superclazz.prototype.substring$I$I.apply(this, [start, end]);
});

Clazz_newMeth(C$, 'toString', function () {
return C$.superclazz.prototype.toString.apply(this, []);
});

Clazz_newMeth(C$, 'trimToSize', function () {
C$.superclazz.prototype.trimToSize.apply(this, []);
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (out) {
var fields = out.putFields();
fields.put$S$I("count", this.length$());
fields.put$S$Z("shared", false);
fields.put$S$O("value", this.getValue());
out.writeFields();
});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function ($in) {
var fields = $in.readFields();
var count = fields.get$S$I("count", 0);
var value = fields.get$S$O("value", null);
this.set$CA$I(value, count);
});
})();
//Created 2018-05-15 01:02:08
(function(){var P$=java.lang,I$=[['java.lang.ThreadGroup','swingjs.JSToolkit','java.lang.ThreadDeath','java.lang.NoSuchMethodError','swingjs.JSUtil','java.util.HashMap',['java.lang.Thread','.State']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(java.lang, "Thread", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'Runnable');
C$.threadInitNumber = 0;
var p$=C$.prototype;
C$.threadSeqNumber = 0;
C$.thisThread = null;
C$.defaultUncaughtExceptionHandler = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.name = null;
this.priority = 0;
this.daemon = false;
this.target = null;
this.group = null;
this.tid = 0;
this.threadStatus = 0;
this.parkBlocker = null;
this.stopBeforeStart = false;
this.throwableFromStop = null;
this.me = null;
this.started = false;
this.uncaughtExceptionHandler = null;
this.$interrupted = false;
this.stopped = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.priority = 5;
this.daemon = false;
this.threadStatus = 0;
}, 1);

Clazz_newMeth(C$, 'nextThreadNum', function () {
return Thread.threadInitNumber++;
}, 1);

Clazz_newMeth(C$, 'nextThreadID', function () {
return ++Thread.threadSeqNumber;
}, 1);

Clazz_newMeth(C$, 'currentThread', function () {
{
if (java.lang.Thread.thisThread === "working") return null;
}
if (Thread.thisThread == null ) {
{
java.lang.Thread.thisThread = "working";
java.lang.Thread.thisThread = Clazz_new_(java.lang.Thread.c$$S, ["master"]);
var name = J2S._applets["master"]._id; var g = Clazz_new_(Clazz_load('swingjs.JSThreadGroup').c$$ThreadGroup$S, [null, name]); java.lang.Thread.thisThread = Clazz_new_(Clazz_load("javajs.util.JSThread").c$$ThreadGroup$S, [g, name]);
}
Thread.thisThread.setPriority$I(5);
}return Thread.thisThread;
}, 1);

Clazz_newMeth(C$, 'yield', function () {
}, 1);

Clazz_newMeth(C$, 'sleep$J', function (millis) {
}, 1);

Clazz_newMeth(C$, 'sleep$J$I', function (millis, nanos) {
if (millis < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["timeout value is negative"]);
}if (nanos < 0 || nanos > 999999 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["nanosecond timeout value out of range"]);
}if (nanos >= 500000 || (nanos != 0 && millis == 0 ) ) {
millis++;
}Thread.sleep$J(millis);
}, 1);

Clazz_newMeth(C$, 'init$ThreadGroup$Runnable$S$J', function (g, target, name, stackSize) {
p$.init$ThreadGroup$Runnable$S$J$O.apply(this, [g, target, name, stackSize, null]);
});

Clazz_newMeth(C$, 'init$ThreadGroup$Runnable$S$J$O', function (g, target, name, stackSize, acc) {
var parent = (Thread.thisThread == null  ? null : Thread.thisThread);
if (g == null ) {
if (g == null  && parent != null   && !parent.equals$O("working") ) {
g = parent.getThreadGroup();
}}if (g == null ) {
g = this.newThreadGroup$ThreadGroup$S(null, name);
parent = this;
}g.checkAccess();
g.addUnstarted();
this.group = g;
this.priority = parent.getPriority();
this.name = name;
this.target = target;
this.setPriority$I(this.priority);
this.tid = Thread.nextThreadID();
this.me = this;
});

Clazz_newMeth(C$, 'newThreadGroup$ThreadGroup$S', function (group, name) {
return Clazz_new_((I$[1]||$incl$(1)).c$$ThreadGroup$S,[group, name]);
});

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [null, null, "Thread-" + Thread.nextThreadNum(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$Runnable', function (target) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [null, target, "Thread-" + Thread.nextThreadNum(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable', function (group, target) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, "Thread-" + Thread.nextThreadNum(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [null, null, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S', function (group, name) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [group, null, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$Runnable$S', function (target, name) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [null, target, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable$S', function (group, target, name) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable$S$J', function (group, target, name, stackSize) {
C$.$init$.apply(this);
p$.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, name, stackSize]);
}, 1);

Clazz_newMeth(C$, 'start', function () {
if (this.threadStatus != 0 || this !== this.me  ) throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
this.group.add$Thread(this);
p$.start0.apply(this, []);
if (this.stopBeforeStart) {
p$.stop0$O.apply(this, [this.throwableFromStop]);
}});

Clazz_newMeth(C$, 'start0', function () {
this.started = true;
(I$[2]||$incl$(2)).dispatch$O$I$I(this, 0, 0);
});

Clazz_newMeth(C$, 'run', function () {
if (this.target != null ) {
this.target.run();
}});

Clazz_newMeth(C$, 'stop', function () {
if ((this.threadStatus != 0) && !this.isAlive() ) {
return;
}p$.stop1$Throwable.apply(this, [Clazz_new_((I$[3]||$incl$(3)))]);
});

Clazz_newMeth(C$, 'stop$Throwable', function (obj) {
p$.stop1$Throwable.apply(this, [obj]);
});

Clazz_newMeth(C$, 'stop1$Throwable', function (th) {
if (this.threadStatus != 0) {
this.resume();
p$.stop0$O.apply(this, [th]);
} else {
if (th == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.stopBeforeStart = true;
this.throwableFromStop = th;
}});

Clazz_newMeth(C$, 'interrupt', function () {
p$.interrupt0.apply(this, []);
});

Clazz_newMeth(C$, 'interrupted', function () {
return Thread.currentThread().isInterruptedB$Z(true);
}, 1);

Clazz_newMeth(C$, 'isInterrupted', function () {
return p$.isInterruptedB$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'isInterruptedB$Z', function (clearInterrupted) {
var wasInt = this.$interrupted;
if (clearInterrupted) this.$interrupted = false;
return wasInt;
});

Clazz_newMeth(C$, 'destroy', function () {
throw Clazz_new_((I$[4]||$incl$(4)));
});

Clazz_newMeth(C$, 'isAlive', function () {
return this.started && !this.stopped ;
});

Clazz_newMeth(C$, 'suspend', function () {
this.checkAccess();
p$.suspend0.apply(this, []);
});

Clazz_newMeth(C$, 'resume', function () {
this.checkAccess();
p$.resume0.apply(this, []);
});

Clazz_newMeth(C$, 'setPriority$I', function (newPriority) {
var g;
this.checkAccess();
if (newPriority > 10 || newPriority < 1 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
}if ((g = this.getThreadGroup()) != null ) {
if (newPriority > g.getMaxPriority()) {
newPriority = g.getMaxPriority();
}p$.setPriority0$I.apply(this, [this.priority = newPriority]);
}});

Clazz_newMeth(C$, 'getPriority', function () {
return this.priority;
});

Clazz_newMeth(C$, 'setName$S', function (name) {
this.checkAccess();
this.name = name;
});

Clazz_newMeth(C$, 'getName', function () {
return this.name;
});

Clazz_newMeth(C$, 'getThreadGroup', function () {
return this.group;
});

Clazz_newMeth(C$, 'activeCount', function () {
return Thread.currentThread().getThreadGroup().activeCount();
}, 1);

Clazz_newMeth(C$, 'enumerate$ThreadA', function (tarray) {
return Thread.currentThread().getThreadGroup().enumerate$ThreadA(tarray);
}, 1);

Clazz_newMeth(C$, 'countStackFrames', function () {
return 0;
});

Clazz_newMeth(C$, 'join$J', function (millis) {
var base = System.currentTimeMillis();
var now = 0;
if (millis < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["timeout value is negative"]);
}(I$[5]||$incl$(5)).warn$S("Cannot wait in Thread");
if (millis == 0) {
while (this.isAlive()){
this.wait$J(0);
}
} else {
while (this.isAlive()){
var delay = millis - now;
if (delay <= 0) {
break;
}this.wait$J(delay);
now = System.currentTimeMillis() - base;
}
}});

Clazz_newMeth(C$, 'join$J$I', function (millis, nanos) {
if (millis < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["timeout value is negative"]);
}if (nanos < 0 || nanos > 999999 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["nanosecond timeout value out of range"]);
}if (nanos >= 500000 || (nanos != 0 && millis == 0 ) ) {
millis++;
}this.join$J(millis);
});

Clazz_newMeth(C$, 'join', function () {
this.join$J(0);
});

Clazz_newMeth(C$, 'dumpStack', function () {
Clazz_new_(Clazz_load('java.lang.Exception').c$$S,["Stack trace"]).printStackTrace();
}, 1);

Clazz_newMeth(C$, 'setDaemon$Z', function (on) {
this.checkAccess();
if (this.isAlive()) {
throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
}this.daemon = on;
});

Clazz_newMeth(C$, 'isDaemon', function () {
return this.daemon;
});

Clazz_newMeth(C$, 'checkAccess', function () {
});

Clazz_newMeth(C$, 'toString', function () {
var group = this.getThreadGroup();
if (group != null ) {
return "Thread[" + this.getName() + "," + this.getPriority() + "," + group.getName() + "]" ;
} else {
return "Thread[" + this.getName() + "," + this.getPriority() + "," + "" + "]" ;
}});

Clazz_newMeth(C$, 'getContextClassLoader', function () {
return Clazz_getClass((I$[5]||$incl$(5))).getClassLoader();
});

Clazz_newMeth(C$, 'setContextClassLoader$ClassLoader', function (cl) {
});

Clazz_newMeth(C$, 'holdsLock$O', function (obj) {
return false;
}, 1);

Clazz_newMeth(C$, 'getStackTrace', function () {
return (Clazz_new_(Clazz_load('java.lang.Exception'))).getStackTrace();
});

Clazz_newMeth(C$, 'getAllStackTraces', function () {
var threads = Thread.getThreads();
var traces = Thread.dumpThreads$ThreadA(threads);
var m = Clazz_new_((I$[6]||$incl$(6)).c$$I,[threads.length]);
for (var i = 0; i < threads.length; i++) {
var stackTrace = traces[i];
if (stackTrace != null ) {
m.put$TK$TV(threads[i], stackTrace);
}}
return m;
}, 1);

Clazz_newMeth(C$, 'dumpThreads$ThreadA', function (threads) {
return null;
}, 1);

Clazz_newMeth(C$, 'getThreads', function () {
return null;
}, 1);

Clazz_newMeth(C$, 'getId', function () {
return this.tid;
});

Clazz_newMeth(C$, 'getState', function () {
switch (this.threadStatus) {
case 0:
return (I$[7]||$incl$(7)).NEW;
case 1:
return (I$[7]||$incl$(7)).RUNNABLE;
case 2:
default:
return (I$[7]||$incl$(7)).TERMINATED;
case 3:
return (I$[7]||$incl$(7)).TIMED_WAITING;
case 4:
return (I$[7]||$incl$(7)).WAITING;
}
});

Clazz_newMeth(C$, 'setDefaultUncaughtExceptionHandler$Thread_UncaughtExceptionHandler', function (eh) {
Thread.defaultUncaughtExceptionHandler = eh;
}, 1);

Clazz_newMeth(C$, 'getDefaultUncaughtExceptionHandler', function () {
return Thread.defaultUncaughtExceptionHandler;
}, 1);

Clazz_newMeth(C$, 'getUncaughtExceptionHandler', function () {
return this.uncaughtExceptionHandler != null  ? this.uncaughtExceptionHandler : this.group;
});

Clazz_newMeth(C$, 'setUncaughtExceptionHandler$Thread_UncaughtExceptionHandler', function (eh) {
this.checkAccess();
this.uncaughtExceptionHandler = eh;
});

Clazz_newMeth(C$, 'setPriority0$I', function (newPriority) {
});

Clazz_newMeth(C$, 'stop0$O', function (o) {
this.stopped = true;
});

Clazz_newMeth(C$, 'suspend0', function () {
});

Clazz_newMeth(C$, 'resume0', function () {
});

Clazz_newMeth(C$, 'interrupt0', function () {
this.$interrupted = true;
});
;
(function(){var C$=Clazz_newClass(Thread, "State", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "NEW", 0, []);
Clazz_newEnumConst($vals, C$.c$, "RUNNABLE", 1, []);
Clazz_newEnumConst($vals, C$.c$, "BLOCKED", 2, []);
Clazz_newEnumConst($vals, C$.c$, "WAITING", 3, []);
Clazz_newEnumConst($vals, C$.c$, "TIMED_WAITING", 4, []);
Clazz_newEnumConst($vals, C$.c$, "TERMINATED", 5, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()
;
(function(){var C$=Clazz_newInterface(Thread, "UncaughtExceptionHandler", function(){
});
})()
})();
//Created 2018-05-15 01:02:08
(function(){var P$=java.lang,I$=[['Thread','java.util.Arrays','java.lang.ThreadGroup','java.lang.Thread']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(java.lang, "ThreadGroup", null, null, [['Thread','Thread.UncaughtExceptionHandler']]);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.parent = null;
this.name = null;
this.maxPriority = 0;
this.destroyed = false;
this.daemon = false;
this.vmAllowSuspension = false;
this.nUnstartedThreads = 0;
this.nthreads = 0;
this.threads = null;
this.ngroups = 0;
this.groups = null;
this.html5Applet = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.maxPriority = 10;
this.nUnstartedThreads = 0;
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.c$$ThreadGroup$S.apply(this, [(I$[1]||$incl$(1)).currentThread().getThreadGroup(), name]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S', function (parent, name) {
C$.$init$.apply(this);
this.name = name;
this.parent = parent;
if (parent != null ) {
this.maxPriority = parent.maxPriority;
this.daemon = parent.daemon;
this.vmAllowSuspension = parent.vmAllowSuspension;
parent.add$ThreadGroup(this);
}}, 1);

Clazz_newMeth(C$, 'getName', function () {
return this.name;
});

Clazz_newMeth(C$, 'getParent', function () {
if (this.parent != null ) this.parent.checkAccess();
return this.parent;
});

Clazz_newMeth(C$, 'getMaxPriority', function () {
return this.maxPriority;
});

Clazz_newMeth(C$, 'isDaemon', function () {
return this.daemon;
});

Clazz_newMeth(C$, 'isDestroyed', function () {
return this.destroyed;
});

Clazz_newMeth(C$, 'setDaemon$Z', function (daemon) {
this.checkAccess();
this.daemon = daemon;
});

Clazz_newMeth(C$, 'setMaxPriority$I', function (pri) {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess();
if (pri < 1 || pri > 10 ) {
return;
}this.maxPriority = (this.parent != null ) ? Math.min(pri, this.parent.maxPriority) : pri;
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}for (var i = 0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].setMaxPriority$I(pri);
}
});

Clazz_newMeth(C$, 'parentOf$ThreadGroup', function (g) {
for (; g != null ; g = g.parent) {
if (g === this ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'checkAccess', function () {
});

Clazz_newMeth(C$, 'activeCount', function () {
var result;
var ngroupsSnapshot;
var groupsSnapshot;
{
if (this.destroyed) {
return 0;
}result = this.nthreads;
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}for (var i = 0; i < ngroupsSnapshot; i++) {
result = result+(groupsSnapshot[i].activeCount());
}
return result;
});

Clazz_newMeth(C$, 'enumerate$ThreadA', function (list) {
this.checkAccess();
return p$.enumerate$ThreadA$I$Z.apply(this, [list, 0, true]);
});

Clazz_newMeth(C$, 'enumerate$ThreadA$Z', function (list, recurse) {
this.checkAccess();
return p$.enumerate$ThreadA$I$Z.apply(this, [list, 0, recurse]);
});

Clazz_newMeth(C$, 'enumerate$ThreadA$I$Z', function (list, n, recurse) {
var ngroupsSnapshot = 0;
var groupsSnapshot = null;
{
if (this.destroyed) {
return 0;
}var nt = this.nthreads;
if (nt > list.length - n) {
nt = list.length - n;
}for (var i = 0; i < nt; i++) {
if (this.threads[i].isAlive()) {
list[n++] = this.threads[i];
}}
if (recurse) {
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}}if (recurse) {
for (var i = 0; i < ngroupsSnapshot; i++) {
n = groupsSnapshot[i].enumerate$ThreadA$I$Z(list, n, true);
}
}return n;
});

Clazz_newMeth(C$, 'activeGroupCount', function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
if (this.destroyed) {
return 0;
}ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}var n = ngroupsSnapshot;
for (var i = 0; i < ngroupsSnapshot; i++) {
n = n+(groupsSnapshot[i].activeGroupCount());
}
return n;
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA', function (list) {
this.checkAccess();
return p$.enumerate$ThreadGroupA$I$Z.apply(this, [list, 0, true]);
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA$Z', function (list, recurse) {
this.checkAccess();
return p$.enumerate$ThreadGroupA$I$Z.apply(this, [list, 0, recurse]);
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA$I$Z', function (list, n, recurse) {
var ngroupsSnapshot = 0;
var groupsSnapshot = null;
{
if (this.destroyed) {
return 0;
}var ng = this.ngroups;
if (ng > list.length - n) {
ng = list.length - n;
}if (ng > 0) {
System.arraycopy(this.groups, 0, list, n, ng);
n = n+(ng);
}if (recurse) {
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}}if (recurse) {
for (var i = 0; i < ngroupsSnapshot; i++) {
n = groupsSnapshot[i].enumerate$ThreadGroupA$I$Z(list, n, true);
}
}return n;
});

Clazz_newMeth(C$, 'stop', function () {
if (p$.stopOrSuspend$Z.apply(this, [false])) (I$[1]||$incl$(1)).currentThread().stop();
});

Clazz_newMeth(C$, 'interrupt', function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess();
for (var i = 0; i < this.nthreads; i++) {
this.threads[i].interrupt();
}
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}for (var i = 0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].interrupt();
}
});

Clazz_newMeth(C$, 'suspend', function () {
if (p$.stopOrSuspend$Z.apply(this, [true])) (I$[1]||$incl$(1)).currentThread().suspend();
});

Clazz_newMeth(C$, 'stopOrSuspend$Z', function (suspend) {
var suicide = false;
var us = (I$[1]||$incl$(1)).currentThread();
var ngroupsSnapshot;
var groupsSnapshot = null;
{
this.checkAccess();
for (var i = 0; i < this.nthreads; i++) {
if (this.threads[i] === us ) suicide = true;
 else if (suspend) this.threads[i].suspend();
 else this.threads[i].stop();
}
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
}}for (var i = 0; i < ngroupsSnapshot; i++) suicide = groupsSnapshot[i].stopOrSuspend$Z(suspend) || suicide ;

return suicide;
});

Clazz_newMeth(C$, 'resume', function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess();
for (var i = 0; i < this.nthreads; i++) {
this.threads[i].resume();
}
ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}}for (var i = 0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].resume();
}
});

Clazz_newMeth(C$, 'destroy', function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess();
if (this.destroyed || (this.nthreads > 0) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
}ngroupsSnapshot = this.ngroups;
if (this.groups != null ) {
groupsSnapshot = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot = null;
}if (this.parent != null ) {
this.destroyed = true;
this.ngroups = 0;
this.groups = null;
this.nthreads = 0;
this.threads = null;
}}for (var i = 0; i < ngroupsSnapshot; i = i+(1)) {
groupsSnapshot[i].destroy();
}
if (this.parent != null ) {
this.parent.remove$ThreadGroup(this);
}});

Clazz_newMeth(C$, 'add$ThreadGroup', function (g) {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
}if (this.groups == null ) {
this.groups = Clazz_array((I$[3]||$incl$(3)), [4]);
} else if (this.ngroups == this.groups.length) {
this.groups = (I$[2]||$incl$(2)).copyOf$TTA$I(this.groups, this.ngroups * 2);
}this.groups[this.ngroups] = g;
this.ngroups++;
}});

Clazz_newMeth(C$, 'remove$ThreadGroup', function (g) {
{
if (this.destroyed) {
return;
}for (var i = 0; i < this.ngroups; i++) {
if (this.groups[i] === g ) {
this.ngroups = this.ngroups-(1);
System.arraycopy(this.groups, i + 1, this.groups, i, this.ngroups - i);
this.groups[this.ngroups] = null;
break;
}}
if (this.nthreads == 0) {
this.notifyAll();
}if (this.daemon && (this.nthreads == 0) && (this.nUnstartedThreads == 0) && (this.ngroups == 0)  ) {
this.destroy();
}}});

Clazz_newMeth(C$, 'addUnstarted', function () {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
}this.nUnstartedThreads++;
}});

Clazz_newMeth(C$, 'add$Thread', function (t) {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('java.lang.IllegalThreadStateException'));
}if (this.threads == null ) {
this.threads = Clazz_array((I$[4]||$incl$(4)), [4]);
} else if (this.nthreads == this.threads.length) {
this.threads = (I$[2]||$incl$(2)).copyOf$TTA$I(this.threads, this.nthreads * 2);
}this.threads[this.nthreads] = t;
this.nthreads++;
this.nUnstartedThreads--;
}});

Clazz_newMeth(C$, 'remove$Thread', function (t) {
{
if (this.destroyed) {
return;
}for (var i = 0; i < this.nthreads; i++) {
if (this.threads[i] === t ) {
System.arraycopy(this.threads, i + 1, this.threads, i, --this.nthreads - i);
this.threads[this.nthreads] = null;
break;
}}
if (this.nthreads == 0) {
this.notifyAll();
}if (this.daemon && (this.nthreads == 0) && (this.nUnstartedThreads == 0) && (this.ngroups == 0)  ) {
this.destroy();
}}});

Clazz_newMeth(C$, 'uncaughtException$Thread$Throwable', function (t, e) {
if (this.parent != null ) {
this.parent.uncaughtException$Thread$Throwable(t, e);
} else {
var ueh = (I$[1]||$incl$(1)).getDefaultUncaughtExceptionHandler();
if (ueh != null ) {
ueh.uncaughtException$Thread$Throwable(t, e);
} else if (!(Clazz_instanceOf(e, "java.lang.ThreadDeath"))) {
System.err.print$S("Exception in thread \"" + t.getName() + "\" " );
e.printStackTrace$java_io_PrintStream(System.err);
}}});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[name=" + this.getName() + ",maxpri=" + this.maxPriority + ",html5Applet=" + this.html5Applet + "]" ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:08
(function(){var P$=Clazz_newPackage("java.net"),I$=[['java.util.Hashtable','java.net.Parts','javajs.util.AjaxURLConnection','java.lang.Error']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "URL");
var p$=C$.prototype;
C$.factory = null;
C$.handlers = null;
C$.streamHandlerLock = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.handlers = Clazz_new_((I$[1]||$incl$(1)));
C$.streamHandlerLock =  Clazz_new_();
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.protocol = null;
this.host = null;
this.port = 0;
this.file = null;
this.query = null;
this.authority = null;
this.path = null;
this.userInfo = null;
this.ref = null;
this.handler = null;
this.$hashCode = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.port = -1;
this.$hashCode = -1;
}, 1);

Clazz_newMeth(C$, 'c$$S$S$I$S', function (protocol, host, port, file) {
C$.c$$S$S$I$S$java_net_URLStreamHandler.apply(this, [protocol, host, port, file, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S', function (protocol, host, file) {
C$.c$$S$S$I$S.apply(this, [protocol, host, -1, file]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$I$S$java_net_URLStreamHandler', function (protocol, host, port, file, handler) {
C$.$init$.apply(this);
protocol = protocol.toLowerCase();
this.protocol = protocol;
if (host != null ) {
if (host.indexOf(":") >= 0 && !host.startsWith$S("[") ) {
host = "[" + host + "]" ;
}this.host = host;
if (port < -1) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["Invalid port number :" + port]);
}this.port = port;
this.authority = (port == -1) ? host : host + ":" + port ;
}var parts = Clazz_new_((I$[2]||$incl$(2)).c$$S,[file]);
this.path = parts.getPath();
this.query = parts.getQuery();
if (this.query != null ) {
this.file = this.path + "?" + this.query ;
} else {
this.file = this.path;
}this.ref = parts.getRef();
if (handler == null  && (handler = C$.getURLStreamHandler$S(protocol)) == null  ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["unknown protocol: " + protocol]);
}this.handler = handler;
}, 1);

Clazz_newMeth(C$, 'c$$S', function (spec) {
C$.c$$java_net_URL$S$java_net_URLStreamHandler.apply(this, [null, spec, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_net_URL$S', function (context, spec) {
C$.c$$java_net_URL$S$java_net_URLStreamHandler.apply(this, [context, spec, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_net_URL$S$java_net_URLStreamHandler', function (context, spec, handler) {
C$.$init$.apply(this);
var original = spec;
var i;
var limit;
var c;
var start = 0;
var newProtocol = null;
var aRef = false;
var isRelative = false;
try {
limit = spec.length$();
while ((limit > 0) && (spec.charAt(limit - 1) <= " ") ){
limit--;
}
while ((start < limit) && (spec.charAt(start) <= " ") ){
start++;
}
if (spec.regionMatches$Z$I$S$I$I(true, start, "url:", 0, 4)) {
start = start+(4);
}if (start < spec.length$() && spec.charAt(start) == "#" ) {
aRef = true;
}for (i = start; !aRef && (i < limit) && ((c = spec.charAt(i).$c()) != 47 )  ; i++) {
if (c == 58 ) {
var s = spec.substring(start, i).toLowerCase();
if (p$.isValidProtocol$S.apply(this, [s])) {
newProtocol = s;
start = i + 1;
}break;
}}
this.protocol = newProtocol;
if ((context != null ) && ((newProtocol == null ) || newProtocol.equalsIgnoreCase$S(context.protocol) ) ) {
if (handler == null ) {
handler = context.handler;
}if (context.path != null  && context.path.startsWith$S("/") ) newProtocol = null;
if (newProtocol == null ) {
this.protocol = context.protocol;
this.authority = context.authority;
this.userInfo = context.userInfo;
this.host = context.host;
this.port = context.port;
this.file = context.file;
this.path = context.path;
isRelative = true;
}}if (this.protocol == null ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["no protocol: " + original]);
}if (handler == null  && (handler = C$.getURLStreamHandler$S(this.protocol)) == null  ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["unknown protocol: " + this.protocol]);
}this.handler = handler;
i = spec.indexOf("#", start);
if (i >= 0) {
this.ref = spec.substring(i + 1, limit);
limit = i;
}if (isRelative && start == limit ) {
this.query = context.query;
if (this.ref == null ) {
this.ref = context.ref;
}}handler.parseURL$java_net_URL$S$I$I(this, spec, start, limit);
} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.net.MalformedURLException")){
var e = e$$;
{
throw e;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.Exception")){
var e = e$$;
{
var exception = Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,[e.getMessage()]);
exception.initCause$Throwable(e);
throw exception;
}
} else {
throw e$$;
}
}
}, 1);

Clazz_newMeth(C$, 'isValidProtocol$S', function (protocol) {
var len = protocol.length$();
if (len < 1) return false;
var c = protocol.charAt(0);
if (!Character.isLetter(c)) return false;
for (var i = 1; i < len; i++) {
c = protocol.charAt(i);
if (!Character.isLetterOrDigit(c) && c != "."  && c != "+"  && c != "-" ) {
return false;
}}
return true;
});

Clazz_newMeth(C$, 'set5$S$S$I$S$S', function (protocol, host, port, file, ref) {
{
this.protocol = protocol;
this.host = host;
this.authority = port == -1 ? host : host + ":" + port ;
this.port = port;
this.file = file;
this.ref = ref;
this.$hashCode = -1;
var q = file.lastIndexOf("?");
if (q != -1) {
this.query = file.substring(q + 1);
this.path = file.substring(0, q);
} else this.path = file;
}});

Clazz_newMeth(C$, 'set$S$S$I$S$S$S$S$S', function (protocol, host, port, authority, userInfo, path, query, ref) {
{
this.protocol = protocol;
this.host = host;
this.port = port;
this.file = query == null  ? path : path + "?" + query ;
this.userInfo = userInfo;
this.path = path;
this.ref = ref;
this.$hashCode = -1;
this.query = query;
this.authority = authority;
}});

Clazz_newMeth(C$, 'getQuery', function () {
return this.query;
});

Clazz_newMeth(C$, 'getPath', function () {
return this.path;
});

Clazz_newMeth(C$, 'getUserInfo', function () {
return this.userInfo;
});

Clazz_newMeth(C$, 'getAuthority', function () {
return this.authority;
});

Clazz_newMeth(C$, 'getPort', function () {
return this.port;
});

Clazz_newMeth(C$, 'getDefaultPort', function () {
return this.handler.getDefaultPort();
});

Clazz_newMeth(C$, 'getProtocol', function () {
return this.protocol;
});

Clazz_newMeth(C$, 'getHost', function () {
return this.host;
});

Clazz_newMeth(C$, 'getFile', function () {
return this.file;
});

Clazz_newMeth(C$, 'getRef', function () {
return this.ref;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (!(Clazz_instanceOf(obj, "java.net.URL"))) return false;
var u2 = obj;
return this.handler.equals2$java_net_URL$java_net_URL(this, u2);
});

Clazz_newMeth(C$, 'hashCode', function () {
if (this.$hashCode != -1) return this.$hashCode;
this.$hashCode = this.handler.hashCode$java_net_URL(this);
return this.$hashCode;
});

Clazz_newMeth(C$, 'sameFile$java_net_URL', function (other) {
return this.handler.sameFile$java_net_URL$java_net_URL(this, other);
});

Clazz_newMeth(C$, 'toString', function () {
return this.toExternalForm();
});

Clazz_newMeth(C$, 'toExternalForm', function () {
return this.handler.toExternalForm$java_net_URL(this);
});

Clazz_newMeth(C$, 'openConnection', function () {
return this.handler.openConnection$java_net_URL(this);
});

Clazz_newMeth(C$, 'openStream', function () {
return this.openConnection().getInputStream();
});

Clazz_newMeth(C$, 'getContent', function () {
var bis = (I$[3]||$incl$(3)).getAttachedStreamData$java_net_URL$Z(this, false);
return (bis == null  ? this.openConnection().getInputStream() : bis);
});

Clazz_newMeth(C$, 'setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory', function (fac) {
{
if (C$.factory != null ) {
throw Clazz_new_((I$[4]||$incl$(4)).c$$S,["factory already defined"]);
}var security = System.getSecurityManager();
if (security != null ) {
security.checkSetFactory();
}C$.handlers.clear();
C$.factory = fac;
}}, 1);

Clazz_newMeth(C$, 'getURLStreamHandler$S', function (protocol) {
var handler = C$.handlers.get$O(protocol);
if (handler == null ) {
if (C$.factory == null ) {
try {
C$.setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory(Clazz_forName("javajs.util.AjaxURLStreamHandlerFactory").newInstance());
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
}if (C$.factory != null ) {
handler = C$.factory.createURLStreamHandler$S(protocol);
}}return handler;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:09
(function(){var P$=Clazz_newPackage("java.net"),I$=[];
var C$=Clazz_newInterface(P$, "URLStreamHandlerFactory");
})();
//Created 2018-05-15 01:02:10
(function(){var P$=java.util,I$=[['java.lang.reflect.Array','java.lang.StringBuilder']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractCollection", null, null, 'java.util.Collection');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
var result = false;
var it = collection.iterator();
while (it.hasNext()){
if (this.add$TE(it.next())) {
result = true;
}}
return result;
});

Clazz_newMeth(C$, 'clear', function () {
var it = this.iterator();
while (it.hasNext()){
it.next();
it.remove();
}
});

Clazz_newMeth(C$, 'contains$O', function (object) {
var it = this.iterator();
if (object != null ) {
while (it.hasNext()){
if (object.equals$O(it.next())) {
return true;
}}
} else {
while (it.hasNext()){
if (it.next() == null ) {
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (collection) {
var it = collection.iterator();
while (it.hasNext()){
if (!this.contains$O(it.next())) {
return false;
}}
return true;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.size() == 0;
});

Clazz_newMeth(C$, 'remove$O', function (object) {
var it = this.iterator();
if (object != null ) {
while (it.hasNext()){
if (object.equals$O(it.next())) {
it.remove();
return true;
}}
} else {
while (it.hasNext()){
if (it.next() == null ) {
it.remove();
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (collection) {
var result = false;
var it = this.iterator();
while (it.hasNext()){
if (collection.contains$O(it.next())) {
it.remove();
result = true;
}}
return result;
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (collection) {
var result = false;
var it = this.iterator();
while (it.hasNext()){
if (!collection.contains$O(it.next())) {
it.remove();
result = true;
}}
return result;
});

Clazz_newMeth(C$, 'toArray', function () {
var size = this.size();
var index = 0;
var it = this.iterator();
var array = Clazz_array(java.lang.Object, [size]);
while (index < size){
array[index++] = it.next();
}
return array;
});

Clazz_newMeth(C$, 'toArray$TTA', function (contents) {
var size = this.size();
var index = 0;
if (size > contents.length) {
var ct = contents.getClass().getComponentType();
contents = Clazz_array(ct, size);
}for (var entry, $entry = this.iterator(); $entry.hasNext()&&((entry=$entry.next()),1);) {
contents[index++] = entry;
}
if (index < contents.length) {
contents[index] = null;
}return contents;
});

Clazz_newMeth(C$, 'toString', function () {
if (this.isEmpty()) {
return "[]";
}var buffer = Clazz_new_((I$[2]||$incl$(2)).c$$I,[this.size() * 16]);
buffer.append$C("[");
var it = this.iterator();
while (it.hasNext()){
var next = it.next();
if (next !== this ) {
buffer.append$O(next);
} else {
buffer.append$S("(this Collection)");
}if (it.hasNext()) {
buffer.append$S(", ");
}}
buffer.append$C("]");
return buffer.toString();
});
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[[['java.util.AbstractList','.SubAbstractList','.SubAbstractListIterator'],['java.util.AbstractList','.SimpleListIterator'],['java.util.AbstractList','.FullListIterator'],['java.util.AbstractList','.SubAbstractListRandomAccess'],['java.util.AbstractList','.SubAbstractList']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractList", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractCollection', 'java.util.List');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.modCount = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, ['add$TE'], function (object) {
this.add$I$TE(this.size(), object);
return true;
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
var it = collection.iterator();
while (it.hasNext()){
this.add$I$TE(location++, it.next());
}
return !collection.isEmpty();
});

Clazz_newMeth(C$, 'clear', function () {
this.removeRange$I$I(0, this.size());
});

Clazz_newMeth(C$, 'equals$O', function (object) {
if (this === object ) {
return true;
}if (Clazz_instanceOf(object, "java.util.List")) {
var list = object;
if (list.size() != this.size()) {
return false;
}var it1 = this.iterator();
var it2 = list.iterator();
while (it1.hasNext()){
var e1 = it1.next();
var e2 = it2.next();
if (!(e1 == null  ? e2 == null  : e1.equals$O(e2))) {
return false;
}}
return true;
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 1;
var it = this.iterator();
while (it.hasNext()){
var object = it.next();
result = (31 * result) + (object == null  ? 0 : object.hashCode());
}
return result;
});

Clazz_newMeth(C$, 'indexOf$O', function (object) {
var it = this.listIterator();
if (object != null ) {
while (it.hasNext()){
if (object.equals$O(it.next())) {
return it.previousIndex();
}}
} else {
while (it.hasNext()){
if (it.next() == null ) {
return it.previousIndex();
}}
}return -1;
});

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[2]||$incl$(2)), [this, null]);
});

Clazz_newMeth(C$, 'lastIndexOf$O', function (object) {
var it = this.listIterator$I(this.size());
if (object != null ) {
while (it.hasPrevious()){
if (object.equals$O(it.previous())) {
return it.nextIndex();
}}
} else {
while (it.hasPrevious()){
if (it.previous() == null ) {
return it.nextIndex();
}}
}return -1;
});

Clazz_newMeth(C$, 'listIterator', function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I', function (location) {
return Clazz_new_((I$[3]||$incl$(3)).c$$I, [this, null, location]);
});

Clazz_newMeth(C$, 'remove$I', function (location) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'removeRange$I$I', function (start, end) {
var it = this.listIterator$I(start);
for (var i = start; i < end; i++) {
it.next();
it.remove();
}
});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
if (0 <= start && end <= this.size() ) {
if (start <= end) {
if (Clazz_instanceOf(this, "java.util.RandomAccess")) {
return Clazz_new_((I$[4]||$incl$(4)).c$$java_util_AbstractList$I$I,[this, start, end]);
}return Clazz_new_((I$[5]||$incl$(5)).c$$java_util_AbstractList$I$I,[this, start, end]);
}throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});
;
(function(){var C$=Clazz_newClass(P$.AbstractList, "SimpleListIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.pos = 0;
this.expectedModCount = 0;
this.lastPosition = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.pos = -1;
this.lastPosition = -1;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.expectedModCount = this.this$0.modCount;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.pos + 1 < this.this$0.size();
});

Clazz_newMeth(C$, 'next', function () {
if (this.expectedModCount == this.this$0.modCount) {
try {
var result = this.this$0.get$I(this.pos + 1);
this.lastPosition = ++this.pos;
return result;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'remove', function () {
if (this.expectedModCount == this.this$0.modCount) {
try {
this.b$['java.util.AbstractList'].remove$I(this.lastPosition);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException'));
} else {
throw e;
}
}
if (this.this$0.modCount != this.expectedModCount) {
this.expectedModCount++;
}if (this.pos == this.lastPosition) {
this.pos--;
}this.lastPosition = -1;
} else {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractList, "FullListIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.AbstractList','java.util.AbstractList.SimpleListIterator'], 'java.util.ListIterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I', function (start) {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
if (0 <= start && start <= this.this$0.size() ) {
this.pos = start - 1;
} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
if (this.expectedModCount == this.this$0.modCount) {
try {
this.b$['java.util.AbstractList'].add$I$TE(this.pos + 1, object);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
this.pos++;
this.lastPosition = -1;
if (this.this$0.modCount != this.expectedModCount) {
this.expectedModCount++;
}} else {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'hasPrevious', function () {
return this.pos >= 0;
});

Clazz_newMeth(C$, 'nextIndex', function () {
return this.pos + 1;
});

Clazz_newMeth(C$, 'previous', function () {
if (this.expectedModCount == this.this$0.modCount) {
try {
var result = this.this$0.get$I(this.pos);
this.lastPosition = this.pos;
this.pos--;
return result;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'previousIndex', function () {
return this.pos;
});

Clazz_newMeth(C$, ['set$TE'], function (object) {
if (this.expectedModCount == this.this$0.modCount) {
try {
this.b$['java.util.AbstractList'].set$I$TE(this.lastPosition, object);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException'));
} else {
throw e;
}
}
} else {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractList, "SubAbstractListRandomAccess", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.AbstractList','java.util.AbstractList.SubAbstractList'], 'java.util.RandomAccess');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_AbstractList$I$I', function (list, start, end) {
C$.superclazz.c$$java_util_AbstractList$I$I.apply(this, [list, start, end]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractList, "SubAbstractList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.fullList = null;
this.offset = 0;
this.$size = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_AbstractList$I$I', function (list, start, end) {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.fullList = list;
this.modCount = this.fullList.modCount;
this.offset = start;
this.$size = end - start;
}, 1);

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location <= this.$size ) {
this.fullList.add$I$TE(location + this.offset, object);
this.$size++;
this.modCount = this.fullList.modCount;
} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}} else {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location <= this.$size ) {
var result = this.fullList.addAll$I$java_util_Collection(location + this.offset, collection);
if (result) {
this.$size = this.$size+(collection.size());
this.modCount = this.fullList.modCount;
}return result;
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
if (this.modCount == this.fullList.modCount) {
var result = this.fullList.addAll$I$java_util_Collection(this.offset + this.$size, collection);
if (result) {
this.$size = this.$size+(collection.size());
this.modCount = this.fullList.modCount;
}return result;
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'get$I', function (location) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location < this.$size ) {
return this.fullList.get$I(location + this.offset);
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'iterator', function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I', function (location) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location <= this.$size ) {
return Clazz_new_((I$[1]||$incl$(1)).c$$java_util_ListIterator$java_util_AbstractList_SubAbstractList$I$I,[this.fullList.listIterator$I(location + this.offset), this, this.offset, this.$size]);
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'remove$I', function (location) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location < this.$size ) {
var result = this.fullList.remove$I(location + this.offset);
this.$size--;
this.modCount = this.fullList.modCount;
return result;
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'removeRange$I$I', function (start, end) {
if (start != end) {
if (this.modCount == this.fullList.modCount) {
this.fullList.removeRange$I$I(start + this.offset, end + this.offset);
this.$size = this.$size-(end - start);
this.modCount = this.fullList.modCount;
} else {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}}});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
if (this.modCount == this.fullList.modCount) {
if (0 <= location && location < this.$size ) {
return this.fullList.set$I$TE(location + this.offset, object);
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'size', function () {
return this.$size;
});

Clazz_newMeth(C$, 'sizeChanged$Z', function (increment) {
if (increment) {
this.$size++;
} else {
this.$size--;
}this.modCount = this.fullList.modCount;
});
;
(function(){var C$=Clazz_newClass(P$.AbstractList.SubAbstractList, "SubAbstractListIterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.ListIterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.subList = null;
this.iterator = null;
this.start = 0;
this.end = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_ListIterator$java_util_AbstractList_SubAbstractList$I$I', function (it, list, offset, length) {
C$.$init$.apply(this);
this.iterator = it;
this.subList = list;
this.start = offset;
this.end = this.start + length;
}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
this.iterator.add$TE(object);
this.subList.sizeChanged$Z(true);
this.end++;
});

Clazz_newMeth(C$, 'hasNext', function () {
return this.iterator.nextIndex() < this.end;
});

Clazz_newMeth(C$, 'hasPrevious', function () {
return this.iterator.previousIndex() >= this.start;
});

Clazz_newMeth(C$, 'next', function () {
if (this.iterator.nextIndex() < this.end) {
return this.iterator.next();
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'nextIndex', function () {
return this.iterator.nextIndex() - this.start;
});

Clazz_newMeth(C$, 'previous', function () {
if (this.iterator.previousIndex() >= this.start) {
return this.iterator.previous();
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'previousIndex', function () {
var previous = this.iterator.previousIndex();
if (previous >= this.start) {
return previous - this.start;
}return -1;
});

Clazz_newMeth(C$, 'remove', function () {
this.iterator.remove();
this.subList.sizeChanged$Z(false);
this.end--;
});

Clazz_newMeth(C$, ['set$TE'], function (object) {
this.iterator.set$TE(object);
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[['java.util.AbstractMap$1$1','java.util.AbstractSet','java.util.AbstractMap$2$1','java.util.AbstractCollection','java.lang.StringBuilder']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'java.util.Map');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$keySet = null;
this.$values = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$keySet = null;
this.$values = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.entrySet().size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.size() == 0;
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
var i = this.entrySet().iterator();
if (value == null ) {
while (i.hasNext()){
var e = i.next();
if (e.getValue() == null ) return true;
}
} else {
while (i.hasNext()){
var e = i.next();
if (value.equals$O(e.getValue())) return true;
}
}return false;
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
var i = this.entrySet().iterator();
if (key == null ) {
while (i.hasNext()){
var e = i.next();
if (e.getKey() == null ) return true;
}
} else {
while (i.hasNext()){
var e = i.next();
if (key.equals$O(e.getKey())) return true;
}
}return false;
});

Clazz_newMeth(C$, 'get$O', function (key) {
var i = this.entrySet().iterator();
if (key == null ) {
while (i.hasNext()){
var e = i.next();
if (e.getKey() == null ) return e.getValue();
}
} else {
while (i.hasNext()){
var e = i.next();
if (key.equals$O(e.getKey())) return e.getValue();
}
}return null;
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O', function (key) {
var i = this.entrySet().iterator();
var correctEntry = null;
if (key == null ) {
while (correctEntry == null  && i.hasNext() ){
var e = i.next();
if (e.getKey() == null ) correctEntry = e;
}
} else {
while (correctEntry == null  && i.hasNext() ){
var e = i.next();
if (key.equals$O(e.getKey())) correctEntry = e;
}
}var oldValue = null;
if (correctEntry != null ) {
oldValue = correctEntry.getValue();
i.remove();
}return oldValue;
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (m) {
for (var e, $e = m.entrySet().iterator(); $e.hasNext()&&((e=$e.next()),1);) this.put$TK$TV(e.getKey(), e.getValue());

});

Clazz_newMeth(C$, 'clear', function () {
this.entrySet().clear();
});

Clazz_newMeth(C$, 'keySet', function () {
if (this.$keySet == null ) {
this.$keySet = ((
(function(){var C$=Clazz_newClass(P$, "AbstractMap$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractSet'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "AbstractMap$1$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.i = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.i = this.b$['java.util.AbstractMap'].entrySet().iterator();
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.i.hasNext();
});

Clazz_newMeth(C$, 'next', function () {
return this.i.next().getKey();
});

Clazz_newMeth(C$, 'remove', function () {
this.i.remove();
});
})()
), Clazz_new_((I$[1]||$incl$(1)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'size', function () {
return this.b$['java.util.AbstractMap'].size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.b$['java.util.AbstractMap'].isEmpty();
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.AbstractMap'].clear();
});

Clazz_newMeth(C$, 'contains$O', function (k) {
return this.b$['java.util.AbstractMap'].containsKey$O(k);
});
})()
), Clazz_new_((I$[2]||$incl$(2)), [this, null],P$.AbstractMap$1));
}return this.$keySet;
});

Clazz_newMeth(C$, 'values', function () {
if (this.$values == null ) {
this.$values = ((
(function(){var C$=Clazz_newClass(P$, "AbstractMap$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractCollection'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "AbstractMap$2$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.i = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.i = this.b$['java.util.AbstractMap'].entrySet().iterator();
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.i.hasNext();
});

Clazz_newMeth(C$, 'next', function () {
return this.i.next().getValue();
});

Clazz_newMeth(C$, 'remove', function () {
this.i.remove();
});
})()
), Clazz_new_((I$[3]||$incl$(3)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'size', function () {
return this.b$['java.util.AbstractMap'].size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.b$['java.util.AbstractMap'].isEmpty();
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.AbstractMap'].clear();
});

Clazz_newMeth(C$, 'contains$O', function (v) {
return this.b$['java.util.AbstractMap'].containsValue$O(v);
});
})()
), Clazz_new_((I$[4]||$incl$(4)), [this, null],P$.AbstractMap$2));
}return this.$values;
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Map"))) return false;
var m = o;
if (m.size() != this.size()) return false;
try {
var i = this.entrySet().iterator();
while (i.hasNext()){
var e = i.next();
var key = e.getKey();
var value = e.getValue();
if (value == null ) {
if (!(m.get$O(key) == null  && m.containsKey$O(key) )) return false;
} else {
if (!value.equals$O(m.get$O(key))) return false;
}}
} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.lang.ClassCastException")){
var unused = e$$;
{
return false;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.NullPointerException")){
var unused = e$$;
{
return false;
}
} else {
throw e$$;
}
}
return true;
});

Clazz_newMeth(C$, 'hashCode', function () {
var h = 0;
var i = this.entrySet().iterator();
while (i.hasNext())h = h+(i.next().hashCode());

return h;
});

Clazz_newMeth(C$, 'toString', function () {
var i = this.entrySet().iterator();
if (!i.hasNext()) return "{}";
var sb = Clazz_new_((I$[5]||$incl$(5)));
sb.append$C("{");
for (; ; ) {
var e = i.next();
var key = e.getKey();
var value = e.getValue();
sb.append$O(key === this  ? "(this Map)" : key);
sb.append$C("=");
sb.append$O(value === this  ? "(this Map)" : value);
if (!i.hasNext()) return sb.append$C("}").toString();
sb.append$S(", ");
}
});

Clazz_newMeth(C$, 'clone', function () {
var result = Clazz_clone(this);
result.$keySet = null;
result.$values = null;
return result;
});

Clazz_newMeth(C$, 'eq$O$O', function (o1, o2) {
return o1 == null  ? o2 == null  : o1.equals$O(o2);
}, 1);
;
(function(){var C$=Clazz_newClass(P$.AbstractMap, "SimpleEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry'], 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = null;
this.value = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TK$TV'], function (key, value) {
C$.$init$.apply(this);
this.key = key;
this.value = value;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map_Entry', function (entry) {
C$.$init$.apply(this);
this.key = entry.getKey();
this.value = entry.getValue();
}, 1);

Clazz_newMeth(C$, 'getKey', function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, ['setValue$TV'], function (value) {
var oldValue = this.value;
this.value = value;
return oldValue;
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e = o;
return P$.AbstractMap.eq$O$O(this.key, e.getKey()) && P$.AbstractMap.eq$O$O(this.value, e.getValue()) ;
});

Clazz_newMeth(C$, 'hashCode', function () {
return (this.key == null  ? 0 : this.key.hashCode()) ^ (this.value == null  ? 0 : this.value.hashCode());
});

Clazz_newMeth(C$, 'toString', function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractMap, "SimpleImmutableEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry'], 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = null;
this.value = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TK$TV'], function (key, value) {
C$.$init$.apply(this);
this.key = key;
this.value = value;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map_Entry', function (entry) {
C$.$init$.apply(this);
this.key = entry.getKey();
this.value = entry.getValue();
}, 1);

Clazz_newMeth(C$, 'getKey', function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, ['setValue$TV'], function (value) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e = o;
return P$.AbstractMap.eq$O$O(this.key, e.getKey()) && P$.AbstractMap.eq$O$O(this.value, e.getValue()) ;
});

Clazz_newMeth(C$, 'hashCode', function () {
return (this.key == null  ? 0 : this.key.hashCode()) ^ (this.value == null  ? 0 : this.value.hashCode());
});

Clazz_newMeth(C$, 'toString', function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[];
var C$=Clazz_newClass(P$, "AbstractSet", null, 'java.util.AbstractCollection', 'java.util.Set');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O', function (object) {
if (this === object ) {
return true;
}if (Clazz_instanceOf(object, "java.util.Set")) {
var s = object;
return this.size() == s.size() && this.containsAll$java_util_Collection(s) ;
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 0;
var it = this.iterator();
while (it.hasNext()){
var next = it.next();
result = result+(next == null  ? 0 : next.hashCode());
}
return result;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (collection) {
var result = false;
if (this.size() <= collection.size()) {
var it = this.iterator();
while (it.hasNext()){
if (collection.contains$O(it.next())) {
it.remove();
result = true;
}}
} else {
var it = collection.iterator();
while (it.hasNext()){
result = this.remove$O(it.next()) || result ;
}
}return result;
});
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[['java.util.Arrays','java.lang.reflect.Array']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ArrayList", null, 'java.util.AbstractList', ['java.util.List', 'Cloneable', 'java.io.Serializable', 'java.util.RandomAccess']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.firstIndex = 0;
this.lastIndex = 0;
this.array = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I.apply(this, [0]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (capacity) {
Clazz_super_(C$, this,1);
this.firstIndex = this.lastIndex = 0;
try {
this.array = p$.newElementArray$I.apply(this, [capacity]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.NegativeArraySizeException")){
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection', function (collection) {
Clazz_super_(C$, this,1);
var size = collection.size();
this.firstIndex = this.lastIndex = 0;
this.array = p$.newElementArray$I.apply(this, [size + ((size/10|0))]);
this.addAll$java_util_Collection(collection);
}, 1);

Clazz_newMeth(C$, 'newElementArray$I', function (size) {
return Clazz_array(java.lang.Object, [size]);
});

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
var size = this.size();
if (0 < location && location < size ) {
if (this.firstIndex == 0 && this.lastIndex == this.array.length ) {
p$.growForInsert$I$I.apply(this, [location, 1]);
} else if ((location < (size/2|0) && this.firstIndex > 0 ) || this.lastIndex == this.array.length ) {
System.arraycopy(this.array, this.firstIndex, this.array, --this.firstIndex, location);
} else {
var index = location + this.firstIndex;
System.arraycopy(this.array, index, this.array, index + 1, size - location);
this.lastIndex++;
}this.array[location + this.firstIndex] = object;
} else if (location == 0) {
if (this.firstIndex == 0) {
p$.growAtFront$I.apply(this, [1]);
}this.array[--this.firstIndex] = object;
} else if (location == size) {
if (this.lastIndex == this.array.length) {
p$.growAtEnd$I.apply(this, [1]);
}this.array[this.lastIndex++] = object;
} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}this.modCount++;
});

Clazz_newMeth(C$, ['add$TE'], function (object) {
if (this.lastIndex == this.array.length) {
p$.growAtEnd$I.apply(this, [1]);
}this.array[this.lastIndex++] = object;
this.modCount++;
return true;
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
var size = this.size();
if (location < 0 || location > size ) {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}var growSize = collection.size();
if (0 < location && location < size ) {
if (this.array.length - size < growSize) {
p$.growForInsert$I$I.apply(this, [location, growSize]);
} else if ((location < (size/2|0) && this.firstIndex > 0 ) || this.lastIndex > this.array.length - growSize ) {
var newFirst = this.firstIndex - growSize;
if (newFirst < 0) {
var index = location + this.firstIndex;
System.arraycopy(this.array, index, this.array, index - newFirst, size - location);
this.lastIndex = this.lastIndex-(newFirst);
newFirst = 0;
}System.arraycopy(this.array, this.firstIndex, this.array, newFirst, location);
this.firstIndex = newFirst;
} else {
var index = location + this.firstIndex;
System.arraycopy(this.array, index, this.array, index + growSize, size - location);
this.lastIndex = this.lastIndex+(growSize);
}} else if (location == 0) {
p$.growAtFront$I.apply(this, [growSize]);
this.firstIndex = this.firstIndex-(growSize);
} else if (location == size) {
if (this.lastIndex > this.array.length - growSize) {
p$.growAtEnd$I.apply(this, [growSize]);
}this.lastIndex = this.lastIndex+(growSize);
}if (growSize > 0) {
var it = collection.iterator();
var index = location + this.firstIndex;
var end = index + growSize;
while (index < end){
this.array[index++] = it.next();
}
this.modCount++;
return true;
}return false;
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
var growSize = collection.size();
if (growSize > 0) {
if (this.lastIndex > this.array.length - growSize) {
p$.growAtEnd$I.apply(this, [growSize]);
}var it = collection.iterator();
var end = this.lastIndex + growSize;
while (this.lastIndex < end){
this.array[this.lastIndex++] = it.next();
}
this.modCount++;
return true;
}return false;
});

Clazz_newMeth(C$, 'clear', function () {
if (this.firstIndex != this.lastIndex) {
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, this.firstIndex, this.lastIndex, null);
this.firstIndex = this.lastIndex = 0;
this.modCount++;
}});

Clazz_newMeth(C$, 'clone', function () {
try {
var newList = Clazz_clone(this);
newList.array = this.array.clone();
return newList;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'contains$O', function (object) {
if (object != null ) {
for (var i = this.firstIndex; i < this.lastIndex; i++) {
if (object.equals$O(this.array[i])) {
return true;
}}
} else {
for (var i = this.firstIndex; i < this.lastIndex; i++) {
if (this.array[i] == null ) {
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'ensureCapacity$I', function (minimumCapacity) {
if (this.array.length < minimumCapacity) {
if (this.firstIndex > 0) {
p$.growAtFront$I.apply(this, [minimumCapacity - this.array.length]);
} else {
p$.growAtEnd$I.apply(this, [minimumCapacity - this.array.length]);
}}});

Clazz_newMeth(C$, 'get$I', function (location) {
if (0 <= location && location < this.size() ) {
return this.array[this.firstIndex + location];
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'growAtEnd$I', function (required) {
var size = this.size();
if (this.firstIndex >= required - (this.array.length - this.lastIndex)) {
var newLast = this.lastIndex - this.firstIndex;
if (size > 0) {
System.arraycopy(this.array, this.firstIndex, this.array, 0, size);
var start = newLast < this.firstIndex ? this.firstIndex : newLast;
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, start, this.array.length, null);
}this.firstIndex = 0;
this.lastIndex = newLast;
} else {
var increment = (size/2|0);
if (required > increment) {
increment = required;
}if (increment < 12) {
increment = 12;
}var newArray = p$.newElementArray$I.apply(this, [size + increment]);
if (size > 0) {
System.arraycopy(this.array, this.firstIndex, newArray, this.firstIndex, size);
}this.array = newArray;
}});

Clazz_newMeth(C$, 'growAtFront$I', function (required) {
var size = this.size();
if (this.array.length - this.lastIndex >= required) {
var newFirst = this.array.length - size;
if (size > 0) {
System.arraycopy(this.array, this.firstIndex, this.array, newFirst, size);
var length = this.firstIndex + size > newFirst ? newFirst : this.firstIndex + size;
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, this.firstIndex, length, null);
}this.firstIndex = newFirst;
this.lastIndex = this.array.length;
} else {
var increment = (size/2|0);
if (required > increment) {
increment = required;
}if (increment < 12) {
increment = 12;
}var newArray = p$.newElementArray$I.apply(this, [size + increment]);
if (size > 0) {
System.arraycopy(this.array, this.firstIndex, newArray, newArray.length - size, size);
}this.firstIndex = newArray.length - size;
this.lastIndex = newArray.length;
this.array = newArray;
}});

Clazz_newMeth(C$, 'growForInsert$I$I', function (location, required) {
var size = this.size();
var increment = (size/2|0);
if (required > increment) {
increment = required;
}if (increment < 12) {
increment = 12;
}var newArray = p$.newElementArray$I.apply(this, [size + increment]);
if (location < (size/2|0)) {
var newFirst = newArray.length - (size + required);
System.arraycopy(this.array, location, newArray, location + increment, size - location);
System.arraycopy(this.array, this.firstIndex, newArray, newFirst, location);
this.firstIndex = newFirst;
this.lastIndex = newArray.length;
} else {
System.arraycopy(this.array, this.firstIndex, newArray, 0, location);
System.arraycopy(this.array, location, newArray, location + required, size - location);
this.firstIndex = 0;
this.lastIndex = this.lastIndex+(required);
}this.array = newArray;
});

Clazz_newMeth(C$, 'indexOf$O', function (object) {
if (object != null ) {
for (var i = this.firstIndex; i < this.lastIndex; i++) {
if (object.equals$O(this.array[i])) {
return i - this.firstIndex;
}}
} else {
for (var i = this.firstIndex; i < this.lastIndex; i++) {
if (this.array[i] == null ) {
return i - this.firstIndex;
}}
}return -1;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.lastIndex == this.firstIndex;
});

Clazz_newMeth(C$, 'lastIndexOf$O', function (object) {
if (object != null ) {
for (var i = this.lastIndex - 1; i >= this.firstIndex; i--) {
if (object.equals$O(this.array[i])) {
return i - this.firstIndex;
}}
} else {
for (var i = this.lastIndex - 1; i >= this.firstIndex; i--) {
if (this.array[i] == null ) {
return i - this.firstIndex;
}}
}return -1;
});

Clazz_newMeth(C$, 'remove$I', function (location) {
var result;
var size = this.size();
if (0 <= location && location < size ) {
if (location == size - 1) {
result = this.array[--this.lastIndex];
this.array[this.lastIndex] = null;
} else if (location == 0) {
result = this.array[this.firstIndex];
this.array[this.firstIndex++] = null;
} else {
var elementIndex = this.firstIndex + location;
result = this.array[elementIndex];
if (location < (size/2|0)) {
System.arraycopy(this.array, this.firstIndex, this.array, this.firstIndex + 1, location);
this.array[this.firstIndex++] = null;
} else {
System.arraycopy(this.array, elementIndex + 1, this.array, elementIndex, size - location - 1 );
this.array[--this.lastIndex] = null;
}}} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}this.modCount++;
return result;
});

Clazz_newMeth(C$, 'removeRange$I$I', function (start, end) {
if (start >= 0 && start <= end  && end <= this.size() ) {
if (start == end) {
return;
}var size = this.size();
if (end == size) {
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, this.firstIndex + start, this.lastIndex, null);
this.lastIndex = this.firstIndex + start;
} else if (start == 0) {
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, this.firstIndex, this.firstIndex + end, null);
this.firstIndex = this.firstIndex+(end);
} else {
System.arraycopy(this.array, this.firstIndex + end, this.array, this.firstIndex + start, size - end);
var newLast = this.lastIndex + start - end;
(I$[1]||$incl$(1)).fill$OA$I$I$O(this.array, newLast, this.lastIndex, null);
this.lastIndex = newLast;
}this.modCount++;
} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
if (0 <= location && location < this.size() ) {
var result = this.array[this.firstIndex + location];
this.array[this.firstIndex + location] = object;
return result;
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'size', function () {
return this.lastIndex - this.firstIndex;
});

Clazz_newMeth(C$, 'toArray', function () {
var size = this.size();
var result = Clazz_array(java.lang.Object, [size]);
System.arraycopy(this.array, this.firstIndex, result, 0, size);
return result;
});

Clazz_newMeth(C$, 'toArray$TTA', function (contents) {
var size = this.size();
if (size > contents.length) {
var ct = contents.getClass().getComponentType();
contents = Clazz_array(ct, size);
}System.arraycopy(this.array, this.firstIndex, contents, 0, size);
if (size < contents.length) {
contents[size] = null;
}return contents;
});

Clazz_newMeth(C$, 'trimToSize', function () {
var size = this.size();
var newArray = p$.newElementArray$I.apply(this, [size]);
System.arraycopy(this.array, this.firstIndex, newArray, 0, size);
this.array = newArray;
this.firstIndex = 0;
this.lastIndex = this.array.length;
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
var fields = stream.putFields();
fields.put$S$I("size", this.size());
stream.writeFields();
stream.writeInt$I(this.array.length);
var it = this.iterator();
while (it.hasNext()){
stream.writeObject$O(it.next());
}
});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function (stream) {
var fields = stream.readFields();
this.lastIndex = fields.get$S$I("size", 0);
this.array = p$.newElementArray$I.apply(this, [stream.readInt()]);
for (var i = 0; i < this.lastIndex; i++) {
this.array[i] = stream.readObject();
}
});
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[['java.util.Arrays','java.lang.reflect.Array',['java.util.Arrays','.ArrayList'],'java.lang.StringBuilder','java.util.HashSet']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Arrays", function(){
Clazz_newInstance(this, arguments,0,C$);
});
var p$=C$.prototype;

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'sort$JA', function (a) {
C$.sort1$JA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$JA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort1$JA$I$I(a, fromIndex, toIndex - fromIndex);
}, 1);

Clazz_newMeth(C$, 'sort$IA', function (a) {
C$.sort1$IA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$IA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort1$IA$I$I(a, fromIndex, toIndex - fromIndex);
}, 1);

Clazz_newMeth(C$, 'sort$HA', function (a) {
C$.sort1$HA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$HA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort1$HA$I$I(a, fromIndex, toIndex - fromIndex);
}, 1);

Clazz_newMeth(C$, 'sort$CA', function (a) {
C$.sort1$CA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$CA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort1$CA$I$I(a, fromIndex, toIndex - fromIndex);
}, 1);

Clazz_newMeth(C$, 'sort$BA', function (a) {
C$.sort1$BA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$BA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort1$BA$I$I(a, fromIndex, toIndex - fromIndex);
}, 1);

Clazz_newMeth(C$, 'sort$DA', function (a) {
C$.sort2$DA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$DA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort2$DA$I$I(a, fromIndex, toIndex);
}, 1);

Clazz_newMeth(C$, 'sort$FA', function (a) {
C$.sort2$FA$I$I(a, 0, a.length);
}, 1);

Clazz_newMeth(C$, 'sort$FA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
C$.sort2$FA$I$I(a, fromIndex, toIndex);
}, 1);

Clazz_newMeth(C$, 'sort2$DA$I$I', function (a, fromIndex, toIndex) {
var NEG_ZERO_BITS = Double.doubleToLongBits(-0.0);
var numNegZeros = 0;
var i = fromIndex;
var n = toIndex;
while (i < n){
if (a[i] != a[i] ) {
C$.swap$DA$I$I(a, i, --n);
} else {
if (a[i] == 0  && Double.doubleToLongBits(a[i]) == NEG_ZERO_BITS ) {
a[i] = 0.0;
numNegZeros++;
}i++;
}}
C$.sort1$DA$I$I(a, fromIndex, n - fromIndex);
if (numNegZeros != 0) {
var j = C$.binarySearch0$DA$I$I$D(a, fromIndex, n, 0.0);
do {
j--;
} while (j >= fromIndex && a[j] == 0.0  );
for (var k = 0; k < numNegZeros; k++) a[++j] = -0.0;

}}, 1);

Clazz_newMeth(C$, 'sort2$FA$I$I', function (a, fromIndex, toIndex) {
var NEG_ZERO_BITS = Float.floatToIntBits(-0.0);
var numNegZeros = 0;
var i = fromIndex;
var n = toIndex;
while (i < n){
if (a[i] != a[i] ) {
C$.swap$FA$I$I(a, i, --n);
} else {
if (a[i] == 0  && Float.floatToIntBits(a[i]) == NEG_ZERO_BITS ) {
a[i] = 0.0;
numNegZeros++;
}i++;
}}
C$.sort1$FA$I$I(a, fromIndex, n - fromIndex);
if (numNegZeros != 0) {
var j = C$.binarySearch0$FA$I$I$F(a, fromIndex, n, 0.0);
do {
j--;
} while (j >= fromIndex && a[j] == 0.0  );
for (var k = 0; k < numNegZeros; k++) a[++j] = -0.0;

}}, 1);

Clazz_newMeth(C$, 'sort1$JA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j] ; j--) C$.swap$JA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$JA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$JA$I$I$I(x, m - s, m, m + s);
n = C$.med3$JA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$JA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v ){
if (x[b] == v) C$.swap$JA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v ){
if (x[c] == v) C$.swap$JA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$JA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$JA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$JA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$JA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$JA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$JA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$JA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$JA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$JA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b] ? (x[b] < x[c] ? b : x[a] < x[c] ? c : a) : (x[b] > x[c] ? b : x[a] > x[c] ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$IA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j] ; j--) C$.swap$IA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$IA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$IA$I$I$I(x, m - s, m, m + s);
n = C$.med3$IA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$IA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v ){
if (x[b] == v) C$.swap$IA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v ){
if (x[c] == v) C$.swap$IA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$IA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$IA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$IA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$IA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$IA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$IA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$IA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$IA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$IA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b] ? (x[b] < x[c] ? b : x[a] < x[c] ? c : a) : (x[b] > x[c] ? b : x[a] > x[c] ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$HA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j] ; j--) C$.swap$HA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$HA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$HA$I$I$I(x, m - s, m, m + s);
n = C$.med3$HA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$HA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v ){
if (x[b] == v) C$.swap$HA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v ){
if (x[c] == v) C$.swap$HA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$HA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$HA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$HA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$HA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$HA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$HA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$HA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$HA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$HA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b] ? (x[b] < x[c] ? b : x[a] < x[c] ? c : a) : (x[b] > x[c] ? b : x[a] > x[c] ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$CA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j] ; j--) C$.swap$CA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$CA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$CA$I$I$I(x, m - s, m, m + s);
n = C$.med3$CA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$CA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v ){
if (x[b] == v) C$.swap$CA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v ){
if (x[c] == v) C$.swap$CA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$CA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$CA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$CA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$CA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$CA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$CA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$CA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$CA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$CA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b] ? (x[b] < x[c] ? b : x[a] < x[c] ? c : a) : (x[b] > x[c] ? b : x[a] > x[c] ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$BA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j] ; j--) C$.swap$BA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$BA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$BA$I$I$I(x, m - s, m, m + s);
n = C$.med3$BA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$BA$I$I$I(x, l, m, n);
}var v = ($b$[0] = x[m], $b$[0]);
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v ){
if (x[b] == v) C$.swap$BA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v ){
if (x[c] == v) C$.swap$BA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$BA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$BA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$BA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$BA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$BA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$BA$I$I', function (x, a, b) {
var t = ($b$[0] = x[a], $b$[0]);
x[a] = (x[b]|0);
x[b] = (t|0);
}, 1);

Clazz_newMeth(C$, 'vecswap$BA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$BA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$BA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b] ? (x[b] < x[c] ? b : x[a] < x[c] ? c : a) : (x[b] > x[c] ? b : x[a] > x[c] ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$DA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j]  ; j--) C$.swap$DA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$DA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$DA$I$I$I(x, m - s, m, m + s);
n = C$.med3$DA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$DA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v  ){
if (x[b] == v ) C$.swap$DA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v  ){
if (x[c] == v ) C$.swap$DA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$DA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$DA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$DA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$DA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$DA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$DA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$DA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$DA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$DA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b]  ? (x[b] < x[c]  ? b : x[a] < x[c]  ? c : a) : (x[b] > x[c]  ? b : x[a] > x[c]  ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort1$FA$I$I', function (x, off, len) {
if (len < 7) {
for (var i = off; i < len + off; i++) for (var j = i; j > off && x[j - 1] > x[j]  ; j--) C$.swap$FA$I$I(x, j, j - 1);


return;
}var m = off + (len >> 1);
if (len > 7) {
var l = off;
var n = off + len - 1;
if (len > 40) {
var s = (len/8|0);
l = C$.med3$FA$I$I$I(x, l, l + s, l + 2 * s);
m = C$.med3$FA$I$I$I(x, m - s, m, m + s);
n = C$.med3$FA$I$I$I(x, n - 2 * s, n - s, n);
}m = C$.med3$FA$I$I$I(x, l, m, n);
}var v = x[m];
var a = off;
var b = a;
var c = off + len - 1;
var d = c;
while (true){
while (b <= c && x[b] <= v  ){
if (x[b] == v ) C$.swap$FA$I$I(x, a++, b);
b++;
}
while (c >= b && x[c] >= v  ){
if (x[c] == v ) C$.swap$FA$I$I(x, c, d--);
c--;
}
if (b > c) break;
C$.swap$FA$I$I(x, b++, c--);
}
var s;
var n = off + len;
s = Math.min(a - off, b - a);
C$.vecswap$FA$I$I$I(x, off, b - s, s);
s = Math.min(d - c, n - d - 1 );
C$.vecswap$FA$I$I$I(x, b, n - s, s);
if ((s = b - a) > 1) C$.sort1$FA$I$I(x, off, s);
if ((s = d - c) > 1) C$.sort1$FA$I$I(x, n - s, s);
}, 1);

Clazz_newMeth(C$, 'swap$FA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'vecswap$FA$I$I$I', function (x, a, b, n) {
for (var i = 0; i < n; i++, a++, b++) C$.swap$FA$I$I(x, a, b);

}, 1);

Clazz_newMeth(C$, 'med3$FA$I$I$I', function (x, a, b, c) {
return (x[a] < x[b]  ? (x[b] < x[c]  ? b : x[a] < x[c]  ? c : a) : (x[b] > x[c]  ? b : x[a] > x[c]  ? c : a));
}, 1);

Clazz_newMeth(C$, 'sort$OA', function (a) {
var aux = a.clone();
C$.mergeSort$OA$OA$I$I$I(aux, a, 0, a.length, 0);
}, 1);

Clazz_newMeth(C$, 'sort$OA$I$I', function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var aux = C$.copyOfRange$TTA$I$I(a, fromIndex, toIndex);
C$.mergeSort$OA$OA$I$I$I(aux, a, fromIndex, toIndex, -fromIndex);
}, 1);

Clazz_newMeth(C$, 'mergeSort$OA$OA$I$I$I', function (src, dest, low, high, off) {
var length = high - low;
if (length < 7) {
for (var i = low; i < high; i++) for (var j = i; j > low && (dest[j - 1]).compareTo$TT(dest[j]) > 0 ; j--) C$.swap$OA$I$I(dest, j, j - 1);


return;
}var destLow = low;
var destHigh = high;
low = low+(off);
high = high+(off);
var mid = (low + high) >>> 1;
C$.mergeSort$OA$OA$I$I$I(dest, src, low, mid, -off);
C$.mergeSort$OA$OA$I$I$I(dest, src, mid, high, -off);
if ((src[mid - 1]).compareTo$TT(src[mid]) <= 0) {
System.arraycopy(src, low, dest, destLow, length);
return;
}for (var i = destLow, p = low, q = mid; i < destHigh; i++) {
if (q >= high || p < mid && (src[p]).compareTo$TT(src[q]) <= 0  ) dest[i] = src[p++];
 else dest[i] = src[q++];
}
}, 1);

Clazz_newMeth(C$, 'swap$OA$I$I', function (x, a, b) {
var t = x[a];
x[a] = x[b];
x[b] = t;
}, 1);

Clazz_newMeth(C$, 'sort$TTA$java_util_Comparator', function (a, c) {
var aux = a.clone();
if (c == null ) C$.mergeSort$OA$OA$I$I$I(aux, a, 0, a.length, 0);
 else C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(aux, a, 0, a.length, 0, c);
}, 1);

Clazz_newMeth(C$, 'sort$TTA$I$I$java_util_Comparator', function (a, fromIndex, toIndex, c) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var aux = C$.copyOfRange$TTA$I$I(a, fromIndex, toIndex);
if (c == null ) C$.mergeSort$OA$OA$I$I$I(aux, a, fromIndex, toIndex, -fromIndex);
 else C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(aux, a, fromIndex, toIndex, -fromIndex, c);
}, 1);

Clazz_newMeth(C$, 'mergeSort$OA$OA$I$I$I$java_util_Comparator', function (src, dest, low, high, off, c) {
var length = high - low;
if (length < 7) {
for (var i = low; i < high; i++) for (var j = i; j > low && c.compare$TT$TT(dest[j - 1], dest[j]) > 0 ; j--) C$.swap$OA$I$I(dest, j, j - 1);


return;
}var destLow = low;
var destHigh = high;
low = low+(off);
high = high+(off);
var mid = (low + high) >>> 1;
C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(dest, src, low, mid, -off, c);
C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(dest, src, mid, high, -off, c);
if (c.compare$TT$TT(src[mid - 1], src[mid]) <= 0) {
System.arraycopy(src, low, dest, destLow, length);
return;
}for (var i = destLow, p = low, q = mid; i < destHigh; i++) {
if (q >= high || p < mid && c.compare$TT$TT(src[p], src[q]) <= 0  ) dest[i] = src[p++];
 else dest[i] = src[q++];
}
}, 1);

Clazz_newMeth(C$, 'rangeCheck$I$I$I', function (arrayLen, fromIndex, toIndex) {
if (fromIndex > toIndex) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["fromIndex(" + fromIndex + ") > toIndex(" + toIndex + ")" ]);
if (fromIndex < 0) throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[fromIndex]);
if (toIndex > arrayLen) throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[toIndex]);
}, 1);

Clazz_newMeth(C$, 'binarySearch$JA$J', function (a, key) {
return C$.binarySearch0$JA$I$I$J(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$JA$I$I$J', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$JA$I$I$J(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$JA$I$I$J', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key) low = mid + 1;
 else if (midVal > key) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$IA$I', function (a, key) {
return C$.binarySearch0$IA$I$I$I(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$IA$I$I$I', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$IA$I$I$I(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$IA$I$I$I', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key) low = mid + 1;
 else if (midVal > key) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$HA$H', function (a, key) {
return C$.binarySearch0$HA$I$I$H(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$HA$I$I$H', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$HA$I$I$H(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$HA$I$I$H', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key) low = mid + 1;
 else if (midVal > key) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$CA$C', function (a, key) {
return C$.binarySearch0$CA$I$I$C(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$CA$I$I$C', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$CA$I$I$C(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$CA$I$I$C', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key) low = mid + 1;
 else if (midVal > key) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$BA$B', function (a, key) {
return C$.binarySearch0$BA$I$I$B(a, 0, a.length, ($b$[0] = key, $b$[0]));
}, 1);

Clazz_newMeth(C$, 'binarySearch$BA$I$I$B', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$BA$I$I$B(a, fromIndex, toIndex, ($b$[0] = key, $b$[0]));
}, 1);

Clazz_newMeth(C$, 'binarySearch0$BA$I$I$B', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = ($b$[0] = a[mid], $b$[0]);
if (midVal < key) low = mid + 1;
 else if (midVal > key) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$DA$D', function (a, key) {
return C$.binarySearch0$DA$I$I$D(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$DA$I$I$D', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$DA$I$I$D(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$DA$I$I$D', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key ) low = mid + 1;
 else if (midVal > key ) high = mid - 1;
 else {
var midBits = Double.doubleToLongBits(midVal);
var keyBits = Double.doubleToLongBits(key);
if (midBits == keyBits) return mid;
 else if (midBits < keyBits) low = mid + 1;
 else high = mid - 1;
}}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$FA$F', function (a, key) {
return C$.binarySearch0$FA$I$I$F(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$FA$I$I$F', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$FA$I$I$F(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$FA$I$I$F', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
if (midVal < key ) low = mid + 1;
 else if (midVal > key ) high = mid - 1;
 else {
var midBits = Float.floatToIntBits(midVal);
var keyBits = Float.floatToIntBits(key);
if (midBits == keyBits) return mid;
 else if (midBits < keyBits) low = mid + 1;
 else high = mid - 1;
}}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$O', function (a, key) {
return C$.binarySearch0$OA$I$I$O(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$I$I$O', function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$OA$I$I$O(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$OA$I$I$O', function (a, fromIndex, toIndex, key) {
var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
var cmp = midVal.compareTo$TT(key);
if (cmp < 0) low = mid + 1;
 else if (cmp > 0) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$TTA$TT$java_util_Comparator', function (a, key, c) {
return C$.binarySearch0$TTA$I$I$TT$java_util_Comparator(a, 0, a.length, key, c);
}, 1);

Clazz_newMeth(C$, 'binarySearch$TTA$I$I$TT$java_util_Comparator', function (a, fromIndex, toIndex, key, c) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$TTA$I$I$TT$java_util_Comparator(a, fromIndex, toIndex, key, c);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$TTA$I$I$TT$java_util_Comparator', function (a, fromIndex, toIndex, key, c) {
if (c == null ) {
return C$.binarySearch0$OA$I$I$O(a, fromIndex, toIndex, key);
}var low = fromIndex;
var high = toIndex - 1;
while (low <= high){
var mid = (low + high) >>> 1;
var midVal = a[mid];
var cmp = c.compare$TT$TT(midVal, key);
if (cmp < 0) low = mid + 1;
 else if (cmp > 0) high = mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'equals$JA$JA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$IA$IA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$HA$HA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$CA$CA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$BA$BA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$ZA$ZA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (a[i] != a2[i] ) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$DA$DA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (Double.doubleToLongBits(a[i]) != Double.doubleToLongBits(a2[i])) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$FA$FA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) if (Float.floatToIntBits(a[i]) != Float.floatToIntBits(a2[i])) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$OA$OA', function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length = a.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) {
var o1 = a[i];
var o2 = a2[i];
if (!(o1 == null  ? o2 == null  : o1.equals$O(o2))) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'fill$JA$J', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$JA$I$I$J', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$IA$I', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$IA$I$I$I', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$HA$H', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$HA$I$I$H', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$CA$C', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$CA$I$I$C', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$BA$B', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = (val|0);

}, 1);

Clazz_newMeth(C$, 'fill$BA$I$I$B', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = (val|0);

}, 1);

Clazz_newMeth(C$, 'fill$ZA$Z', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$ZA$I$I$Z', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$DA$D', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$DA$I$I$D', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$FA$F', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$FA$I$I$F', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$OA$O', function (a, val) {
for (var i = 0, len = a.length; i < len; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'fill$OA$I$I$O', function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i = fromIndex; i < toIndex; i++) a[i] = val;

}, 1);

Clazz_newMeth(C$, 'copyOf$TTA$I', function (original, newLength) {
return C$.copyOf$TUA$I$Class(original, newLength, original.getClass());
}, 1);

Clazz_newMeth(C$, 'copyOf$TUA$I$Class', function (original, newLength, newType) {
var copy = (newType === Clazz_array(java.lang.Object, -1) ) ? Clazz_array(java.lang.Object, [newLength]) : Clazz_array(newType.getComponentType(), newLength);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$BA$I', function (original, newLength) {
var copy = Clazz_array(Byte.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$HA$I', function (original, newLength) {
var copy = Clazz_array(Short.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$IA$I', function (original, newLength) {
var copy = Clazz_array(Integer.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$JA$I', function (original, newLength) {
var copy = Clazz_array(Long.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$CA$I', function (original, newLength) {
var copy = Clazz_array(Character.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$FA$I', function (original, newLength) {
var copy = Clazz_array(Float.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$DA$I', function (original, newLength) {
var copy = Clazz_array(Double.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$ZA$I', function (original, newLength) {
var copy = Clazz_array(Boolean.TYPE, [newLength]);
System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$TTA$I$I', function (original, from, to) {
return C$.copyOfRange$TUA$I$I$Class(original, from, to, original.getClass());
}, 1);

Clazz_newMeth(C$, 'copyOfRange$TUA$I$I$Class', function (original, from, to, newType) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = (newType === Clazz_array(java.lang.Object, -1) ) ? Clazz_array(java.lang.Object, [newLength]) : Clazz_array(newType.getComponentType(), newLength);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$BA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Byte.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$HA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Short.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$IA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Integer.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$JA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Long.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$CA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Character.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$FA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Float.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$DA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Double.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$ZA$I$I', function (original, from, to) {
var newLength = to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy = Clazz_array(Boolean.TYPE, [newLength]);
System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'asList$TTA', function (a) {
return Clazz_new_((I$[3]||$incl$(3)).c$$TEA,[a]);
}, 1);

Clazz_newMeth(C$, 'hashCode$JA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) {
var elementHash = ((element ^ (element >>> 32))|0);
result = 31 * result + elementHash;
}
return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$IA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$HA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$CA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + element.$c();

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$BA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$ZA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + (element ? 1231 : 1237);

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$FA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + Float.floatToIntBits(element);

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$DA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) {
var bits = Double.doubleToLongBits(element);
result = 31 * result + ((bits ^ (bits >>> 32))|0);
}
return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$OA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) result = 31 * result + (element == null  ? 0 : element.hashCode());

return result;
}, 1);

Clazz_newMeth(C$, 'deepHashCode$OA', function (a) {
if (a == null ) return 0;
var result = 1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=$$element[$element]),1);$element++) {
var elementHash = 0;
if (Clazz_instanceOf(element, Clazz_array(java.lang.Object, -1))) elementHash = C$.deepHashCode$OA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Byte.TYPE, -1))) elementHash = C$.hashCode$BA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Short.TYPE, -1))) elementHash = C$.hashCode$HA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Integer.TYPE, -1))) elementHash = C$.hashCode$IA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Long.TYPE, -1))) elementHash = C$.hashCode$JA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Character.TYPE, -1))) elementHash = C$.hashCode$CA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Float.TYPE, -1))) elementHash = C$.hashCode$FA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Double.TYPE, -1))) elementHash = C$.hashCode$DA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Boolean.TYPE, -1))) elementHash = C$.hashCode$ZA(element);
 else if (element != null ) elementHash = element.hashCode();
result = 31 * result + elementHash;
}
return result;
}, 1);

Clazz_newMeth(C$, 'deepEquals$OA$OA', function (a1, a2) {
if (a1 === a2 ) return true;
if (a1 == null  || a2 == null  ) return false;
var length = a1.length;
if (a2.length != length) return false;
for (var i = 0; i < length; i++) {
var e1 = a1[i];
var e2 = a2[i];
if (e1 === e2 ) continue;
if (e1 == null ) return false;
var eq;
if (Clazz_instanceOf(e1, Clazz_array(java.lang.Object, -1)) && Clazz_instanceOf(e2, Clazz_array(java.lang.Object, -1)) ) eq = C$.deepEquals$OA$OA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Byte.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Byte.TYPE, -1)) ) eq = C$.equals$BA$BA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Short.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Short.TYPE, -1)) ) eq = C$.equals$HA$HA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Integer.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Integer.TYPE, -1)) ) eq = C$.equals$IA$IA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Long.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Long.TYPE, -1)) ) eq = C$.equals$JA$JA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Character.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Character.TYPE, -1)) ) eq = C$.equals$CA$CA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Float.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Float.TYPE, -1)) ) eq = C$.equals$FA$FA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Double.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Double.TYPE, -1)) ) eq = C$.equals$DA$DA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Boolean.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Boolean.TYPE, -1)) ) eq = C$.equals$ZA$ZA(e1, e2);
 else eq = e1.equals$O(e2);
if (!eq) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'toString$JA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$J(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$IA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$HA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$CA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$C(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$BA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$ZA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$Z(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$FA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$F(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$DA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$D(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$OA', function (a) {
if (a == null ) return "null";
var iMax = a.length - 1;
if (iMax == -1) return "[]";
var b = Clazz_new_((I$[4]||$incl$(4)));
b.append$C("[");
for (var i = 0; ; i++) {
b.append$S(String.valueOf(a[i]));
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'deepToString$OA', function (a) {
if (a == null ) return "null";
var bufLen = 20 * a.length;
if (a.length != 0 && bufLen <= 0 ) bufLen = 2147483647;
var buf = Clazz_new_((I$[4]||$incl$(4)).c$$I,[bufLen]);
C$.deepToString$OA$StringBuilder$java_util_Set(a, buf, Clazz_new_((I$[5]||$incl$(5))));
return buf.toString();
}, 1);

Clazz_newMeth(C$, 'deepToString$OA$StringBuilder$java_util_Set', function (a, buf, dejaVu) {
if (a == null ) {
buf.append$S("null");
return;
}var iMax = a.length - 1;
if (iMax == -1) {
buf.append$S("[]");
return;
}dejaVu.add$TE(a);
buf.append$C("[");
for (var i = 0; ; i++) {
var element = a[i];
if (element == null ) {
buf.append$S("null");
} else {
var eClass = element.getClass();
if (eClass.isArray()) {
if (eClass === Clazz_array(Byte.TYPE, -1) ) buf.append$S(C$.toString$BA(element));
 else if (eClass === Clazz_array(Short.TYPE, -1) ) buf.append$S(C$.toString$HA(element));
 else if (eClass === Clazz_array(Integer.TYPE, -1) ) buf.append$S(C$.toString$IA(element));
 else if (eClass === Clazz_array(Long.TYPE, -1) ) buf.append$S(C$.toString$JA(element));
 else if (eClass === Clazz_array(Character.TYPE, -1) ) buf.append$S(C$.toString$CA(element));
 else if (eClass === Clazz_array(Float.TYPE, -1) ) buf.append$S(C$.toString$FA(element));
 else if (eClass === Clazz_array(Double.TYPE, -1) ) buf.append$S(C$.toString$DA(element));
 else if (eClass === Clazz_array(Boolean.TYPE, -1) ) buf.append$S(C$.toString$ZA(element));
 else {
if (dejaVu.contains$O(element)) buf.append$S("[...]");
 else C$.deepToString$OA$StringBuilder$java_util_Set(element, buf, dejaVu);
}} else {
buf.append$S(element.toString());
}}if (i == iMax) break;
buf.append$S(", ");
}
buf.append$C("]");
dejaVu.remove$O(a);
}, 1);
var $b$ = new Int8Array(1);
;
(function(){var C$=Clazz_newClass(P$.Arrays, "ArrayList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', ['java.util.RandomAccess', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.a = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$TEA', function (array) {
Clazz_super_(C$, this,1);
if (array == null ) throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
this.a = array;
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.a.length;
});

Clazz_newMeth(C$, 'toArray', function () {
return this.a.clone();
});

Clazz_newMeth(C$, 'toArray$TTA', function (a) {
var size = this.size();
if (a.length < size) return (I$[1]||$incl$(1)).copyOf$TUA$I$Class(this.a, size, a.getClass());
System.arraycopy(this.a, 0, a, 0, size);
if (a.length > size) a[size] = null;
return a;
});

Clazz_newMeth(C$, 'get$I', function (index) {
return this.a[index];
});

Clazz_newMeth(C$, 'set$I$TE', function (index, element) {
var oldValue = this.a[index];
this.a[index] = element;
return oldValue;
});

Clazz_newMeth(C$, 'indexOf$O', function (o) {
if (o == null ) {
for (var i = 0; i < this.a.length; i++) if (this.a[i] == null ) return i;

} else {
for (var i = 0; i < this.a.length; i++) if (o.equals$O(this.a[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.indexOf$O(o) != -1;
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:11
(function(){var P$=java.util,I$=[['java.util.Collections','java.util.Collections$EmptySet$1','java.util.Collections$SingletonSet$1','java.util.Collections$SingletonMap$1$1$1','java.util.Collections$SingletonMap$1$1','java.util.AbstractSet',['java.util.Collections','.SynchronizedList'],['java.util.Collections','.SynchronizedRandomAccessList'],['java.util.Collections','.SynchronizedSet'],['java.util.Collections','.SynchronizedCollection'],'java.util.Collections$UnmodifiableCollection$1','java.util.Collections$UnmodifiableList$1',['java.util.Collections','.UnmodifiableRandomAccessList'],['java.util.Collections','.UnmodifiableList'],['java.util.Collections','.UnmodifiableMap','.UnmodifiableEntrySet','.UnmodifiableMapEntry'],'java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1','java.lang.reflect.Array',['java.util.Collections','.UnmodifiableMap','.UnmodifiableEntrySet'],['java.util.Collections','.UnmodifiableSet'],['java.util.Collections','.UnmodifiableCollection'],['java.util.Collections','.CheckedListIterator'],'java.util.Arrays',['java.util.Collections','.CheckedMap','.CheckedEntry'],['java.util.Collections','.CheckedMap','.CheckedEntrySet','.CheckedEntryIterator'],['java.util.Map','.Entry'],['java.util.Collections','.CheckedMap','.CheckedEntrySet'],['java.util.Collections','.EmptyList'],['java.util.Collections','.EmptySet'],['java.util.Collections','.EmptyMap'],'java.util.Collections$1',['java.util.Collections','.CopiesList'],['java.util.Collections','.ReverseComparator'],['java.util.Collections','.ReverseComparatorWithComparator'],'java.util.Random',['java.util.Collections','.SingletonSet'],['java.util.Collections','.SingletonList'],['java.util.Collections','.SingletonMap'],'java.util.ArrayList',['java.util.Collections','.SynchronizedMap'],['java.util.Collections','.SynchronizedSortedMap'],['java.util.Collections','.SynchronizedSortedSet'],['java.util.Collections','.UnmodifiableMap'],['java.util.Collections','.UnmodifiableSortedMap'],['java.util.Collections','.UnmodifiableSortedSet'],['java.util.Collections','.CheckedCollection'],['java.util.Collections','.CheckedMap'],['java.util.Collections','.CheckedRandomAccessList'],['java.util.Collections','.CheckedList'],['java.util.Collections','.CheckedSet'],['java.util.Collections','.CheckedSortedMap'],['java.util.Collections','.CheckedSortedSet']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Collections", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.EMPTY_LIST = null;
C$.EMPTY_SET = null;
C$.EMPTY_MAP = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.EMPTY_LIST = Clazz_new_((I$[27]||$incl$(27)));
C$.EMPTY_SET = Clazz_new_((I$[28]||$incl$(28)));
C$.EMPTY_MAP = Clazz_new_((I$[29]||$incl$(29)));
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'binarySearch$java_util_List$TT', function (list, object) {
if (list == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (list.isEmpty()) {
return -1;
}var key = object;
if (!(Clazz_instanceOf(list, "java.util.RandomAccess"))) {
var it = list.listIterator();
while (it.hasNext()){
var result;
if ((result = key.compareTo$TT(it.next())) <= 0) {
if (result == 0) {
return it.previousIndex();
}return -it.previousIndex() - 1;
}}
return -list.size() - 1;
}var low = 0;
var mid = list.size();
var high = mid - 1;
var result = -1;
while (low <= high){
mid = (low + high) >> 1;
if ((result = key.compareTo$TT(list.get$I(mid))) > 0) {
low = mid + 1;
} else if (result == 0) {
return mid;
} else {
high = mid - 1;
}}
return -mid - (result < 0 ? 1 : 2);
}, 1);

Clazz_newMeth(C$, 'binarySearch$java_util_List$TT$java_util_Comparator', function (list, object, comparator) {
if (comparator == null ) {
return C$.binarySearch$java_util_List$TT(list, object);
}if (!(Clazz_instanceOf(list, "java.util.RandomAccess"))) {
var it = list.listIterator();
while (it.hasNext()){
var result;
if ((result = comparator.compare$TT$TT(object, it.next())) <= 0) {
if (result == 0) {
return it.previousIndex();
}return -it.previousIndex() - 1;
}}
return -list.size() - 1;
}var low = 0;
var mid = list.size();
var high = mid - 1;
var result = -1;
while (low <= high){
mid = (low + high) >> 1;
if ((result = comparator.compare$TT$TT(object, list.get$I(mid))) > 0) {
low = mid + 1;
} else if (result == 0) {
return mid;
} else {
high = mid - 1;
}}
return -mid - (result < 0 ? 1 : 2);
}, 1);

Clazz_newMeth(C$, 'copy$java_util_List$java_util_List', function (destination, source) {
if (destination.size() < source.size()) {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException'));
}var srcIt = source.iterator();
var destIt = destination.listIterator();
while (srcIt.hasNext()){
try {
destIt.next();
} catch (e) {
if (Clazz_exceptionOf(e, "java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException'));
} else {
throw e;
}
}
destIt.set$TE(srcIt.next());
}
}, 1);

Clazz_newMeth(C$, 'enumeration$java_util_Collection', function (collection) {
var c = collection;
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.it = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.it = this.$finals.c.iterator();
}, 1);

Clazz_newMeth(C$, 'hasMoreElements', function () {
return this.it.hasNext();
});

Clazz_newMeth(C$, 'nextElement', function () {
return this.it.next();
});
})()
), Clazz_new_((I$[30]||$incl$(30)).$init$, [this, {c: c}]));
}, 1);

Clazz_newMeth(C$, 'fill$java_util_List$TT', function (list, object) {
var it = list.listIterator();
while (it.hasNext()){
it.next();
it.set$TE(object);
}
}, 1);

Clazz_newMeth(C$, 'max$java_util_Collection', function (collection) {
var it = collection.iterator();
var max = it.next();
while (it.hasNext()){
var next = it.next();
if (max.compareTo$TT(next) < 0) {
max = next;
}}
return max;
}, 1);

Clazz_newMeth(C$, 'max$java_util_Collection$java_util_Comparator', function (collection, comparator) {
var it = collection.iterator();
var max = it.next();
while (it.hasNext()){
var next = it.next();
if (comparator.compare$TT$TT(max, next) < 0) {
max = next;
}}
return max;
}, 1);

Clazz_newMeth(C$, 'min$java_util_Collection', function (collection) {
var it = collection.iterator();
var min = it.next();
while (it.hasNext()){
var next = it.next();
if (min.compareTo$TT(next) > 0) {
min = next;
}}
return min;
}, 1);

Clazz_newMeth(C$, 'min$java_util_Collection$java_util_Comparator', function (collection, comparator) {
var it = collection.iterator();
var min = it.next();
while (it.hasNext()){
var next = it.next();
if (comparator.compare$TT$TT(min, next) > 0) {
min = next;
}}
return min;
}, 1);

Clazz_newMeth(C$, 'nCopies$I$TT', function (length, object) {
return Clazz_new_((I$[31]||$incl$(31)).c$$I$TE,[length, object]);
}, 1);

Clazz_newMeth(C$, 'reverse$java_util_List', function (list) {
var size = list.size();
var front = list.listIterator();
var back = list.listIterator$I(size);
for (var i = 0; i < (size/2|0); i++) {
var frontNext = front.next();
var backPrev = back.previous();
front.set$TE(backPrev);
back.set$TE(frontNext);
}
}, 1);

Clazz_newMeth(C$, 'reverseOrder', function () {
return Clazz_new_((I$[32]||$incl$(32)));
}, 1);

Clazz_newMeth(C$, 'reverseOrder$java_util_Comparator', function (c) {
if (c == null ) {
return C$.reverseOrder();
}return Clazz_new_((I$[33]||$incl$(33)).c$$java_util_Comparator,[c]);
}, 1);

Clazz_newMeth(C$, 'shuffle$java_util_List', function (list) {
C$.shuffle$java_util_List$java_util_Random(list, Clazz_new_((I$[34]||$incl$(34))));
}, 1);

Clazz_newMeth(C$, 'shuffle$java_util_List$java_util_Random', function (list, random) {
if (!(Clazz_instanceOf(list, "java.util.RandomAccess"))) {
var array = list.toArray();
for (var i = array.length - 1; i > 0; i--) {
var index = random.nextInt() % (i + 1);
if (index < 0) {
index = -index;
}var temp = array[i];
array[i] = array[index];
array[index] = temp;
}
var i = 0;
var it = list.listIterator();
while (it.hasNext()){
it.next();
it.set$TE(array[i++]);
}
} else {
var rawList = list;
for (var i = rawList.size() - 1; i > 0; i--) {
var index = random.nextInt() % (i + 1);
if (index < 0) {
index = -index;
}rawList.set$I$TE(index, rawList.set$I$TE(i, rawList.get$I(index)));
}
}}, 1);

Clazz_newMeth(C$, 'singleton$TE', function (object) {
return Clazz_new_((I$[35]||$incl$(35)).c$$TE,[object]);
}, 1);

Clazz_newMeth(C$, 'singletonList$TE', function (object) {
return Clazz_new_((I$[36]||$incl$(36)).c$$TE,[object]);
}, 1);

Clazz_newMeth(C$, 'singletonMap$TK$TV', function (key, value) {
return Clazz_new_((I$[37]||$incl$(37)).c$$TK$TV,[key, value]);
}, 1);

Clazz_newMeth(C$, 'sort$java_util_List', function (list) {
var array = list.toArray();
(I$[22]||$incl$(22)).sort$OA(array);
var i = 0;
var it = list.listIterator();
while (it.hasNext()){
it.next();
it.set$TE(array[i++]);
}
}, 1);

Clazz_newMeth(C$, 'sort$java_util_List$java_util_Comparator', function (list, comparator) {
var array = list.toArray$TTA(Clazz_array(java.lang.Object, [list.size()]));
(I$[22]||$incl$(22)).sort$TTA$java_util_Comparator(array, comparator);
var i = 0;
var it = list.listIterator();
while (it.hasNext()){
it.next();
it.set$TE(array[i++]);
}
}, 1);

Clazz_newMeth(C$, 'swap$java_util_List$I$I', function (list, index1, index2) {
if (list == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (index1 == index2) {
return;
}var rawList = list;
rawList.set$I$TE(index2, rawList.set$I$TE(index1, rawList.get$I(index2)));
}, 1);

Clazz_newMeth(C$, 'replaceAll$java_util_List$TT$TT', function (list, obj, obj2) {
var index;
var found = false;
while ((index = list.indexOf$O(obj)) > -1){
found = true;
list.set$I$TE(index, obj2);
}
return found;
}, 1);

Clazz_newMeth(C$, 'rotate$java_util_List$I', function (lst, dist) {
var list = lst;
var size = list.size();
if (size == 0) {
return;
}var normdist;
if (dist > 0) {
normdist = dist % size;
} else {
normdist = size - ((dist % size) * -1);
}if (normdist == 0 || normdist == size ) {
return;
}if (Clazz_instanceOf(list, "java.util.RandomAccess")) {
var temp = list.get$I(0);
var index = 0;
var beginIndex = 0;
for (var i = 0; i < size; i++) {
index = (index + normdist) % size;
temp = list.set$I$TE(index, temp);
if (index == beginIndex) {
index = ++beginIndex;
temp = list.get$I(beginIndex);
}}
} else {
var divideIndex = (size - normdist) % size;
var sublist1 = list.subList$I$I(0, divideIndex);
var sublist2 = list.subList$I$I(divideIndex, size);
C$.reverse$java_util_List(sublist1);
C$.reverse$java_util_List(sublist2);
C$.reverse$java_util_List(list);
}}, 1);

Clazz_newMeth(C$, 'indexOfSubList$java_util_List$java_util_List', function (list, sublist) {
var size = list.size();
var sublistSize = sublist.size();
if (sublistSize > size) {
return -1;
}if (sublistSize == 0) {
return 0;
}var firstObj = sublist.get$I(0);
var index = list.indexOf$O(firstObj);
if (index == -1) {
return -1;
}while (index < size && (size - index >= sublistSize) ){
var listIt = list.listIterator$I(index);
if ((firstObj == null ) ? listIt.next() == null  : firstObj.equals$O(listIt.next())) {
var sublistIt = sublist.listIterator$I(1);
var difFound = false;
while (sublistIt.hasNext()){
var element = sublistIt.next();
if (!listIt.hasNext()) {
return -1;
}if ((element == null ) ? listIt.next() != null  : !element.equals$O(listIt.next())) {
difFound = true;
break;
}}
if (!difFound) {
return index;
}}index++;
}
return -1;
}, 1);

Clazz_newMeth(C$, 'lastIndexOfSubList$java_util_List$java_util_List', function (list, sublist) {
var sublistSize = sublist.size();
var size = list.size();
if (sublistSize > size) {
return -1;
}if (sublistSize == 0) {
return size;
}var lastObj = sublist.get$I(sublistSize - 1);
var index = list.lastIndexOf$O(lastObj);
while ((index > -1) && (index + 1 >= sublistSize) ){
var listIt = list.listIterator$I(index + 1);
if ((lastObj == null ) ? listIt.previous() == null  : lastObj.equals$O(listIt.previous())) {
var sublistIt = sublist.listIterator$I(sublistSize - 1);
var difFound = false;
while (sublistIt.hasPrevious()){
var element = sublistIt.previous();
if (!listIt.hasPrevious()) {
return -1;
}if ((element == null ) ? listIt.previous() != null  : !element.equals$O(listIt.previous())) {
difFound = true;
break;
}}
if (!difFound) {
return listIt.nextIndex();
}}index--;
}
return -1;
}, 1);

Clazz_newMeth(C$, 'list$java_util_Enumeration', function (enumeration) {
var list = Clazz_new_((I$[38]||$incl$(38)));
while (enumeration.hasMoreElements()){
list.add$TE(enumeration.nextElement());
}
return list;
}, 1);

Clazz_newMeth(C$, 'synchronizedCollection$java_util_Collection', function (collection) {
if (collection == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[10]||$incl$(10)).c$$java_util_Collection,[collection]);
}, 1);

Clazz_newMeth(C$, 'synchronizedList$java_util_List', function (list) {
if (list == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (Clazz_instanceOf(list, "java.util.RandomAccess")) {
return Clazz_new_((I$[8]||$incl$(8)).c$$java_util_List,[list]);
}return Clazz_new_((I$[7]||$incl$(7)).c$$java_util_List,[list]);
}, 1);

Clazz_newMeth(C$, 'synchronizedMap$java_util_Map', function (map) {
if (map == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[39]||$incl$(39)).c$$java_util_Map,[map]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSet$java_util_Set', function (set) {
if (set == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[9]||$incl$(9)).c$$java_util_Set,[set]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSortedMap$java_util_SortedMap', function (map) {
if (map == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[40]||$incl$(40)).c$$java_util_SortedMap,[map]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSortedSet$java_util_SortedSet', function (set) {
if (set == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[41]||$incl$(41)).c$$java_util_SortedSet,[set]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableCollection$java_util_Collection', function (collection) {
if (collection == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[20]||$incl$(20)).c$$java_util_Collection,[collection]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableList$java_util_List', function (list) {
if (list == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (Clazz_instanceOf(list, "java.util.RandomAccess")) {
return Clazz_new_((I$[13]||$incl$(13)).c$$java_util_List,[list]);
}return Clazz_new_((I$[14]||$incl$(14)).c$$java_util_List,[list]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableMap$java_util_Map', function (map) {
if (map == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[42]||$incl$(42)).c$$java_util_Map,[map]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSet$java_util_Set', function (set) {
if (set == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[19]||$incl$(19)).c$$java_util_Set,[set]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSortedMap$java_util_SortedMap', function (map) {
if (map == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[43]||$incl$(43)).c$$java_util_SortedMap,[map]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSortedSet$java_util_SortedSet', function (set) {
if (set == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return Clazz_new_((I$[44]||$incl$(44)).c$$java_util_SortedSet,[set]);
}, 1);

Clazz_newMeth(C$, 'frequency$java_util_Collection$O', function (c, o) {
if (c == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}if (c.isEmpty()) {
return 0;
}var result = 0;
var itr = c.iterator();
while (itr.hasNext()){
var e = itr.next();
if (o == null  ? e == null  : o.equals$O(e)) {
result++;
}}
return result;
}, 1);

Clazz_newMeth(C$, 'emptyList', function () {
return C$.EMPTY_LIST;
}, 1);

Clazz_newMeth(C$, 'emptySet', function () {
return C$.EMPTY_SET;
}, 1);

Clazz_newMeth(C$, 'emptyMap', function () {
return C$.EMPTY_MAP;
}, 1);

Clazz_newMeth(C$, 'checkedCollection$java_util_Collection$Class', function (c, type) {
return Clazz_new_((I$[45]||$incl$(45)).c$$java_util_Collection$Class,[c, type]);
}, 1);

Clazz_newMeth(C$, 'checkedMap$java_util_Map$Class$Class', function (m, keyType, valueType) {
return Clazz_new_((I$[46]||$incl$(46)).c$$java_util_Map$Class$Class,[m, keyType, valueType]);
}, 1);

Clazz_newMeth(C$, 'checkedList$java_util_List$Class', function (list, type) {
if (Clazz_instanceOf(list, "java.util.RandomAccess")) {
return Clazz_new_((I$[47]||$incl$(47)).c$$java_util_List$Class,[list, type]);
}return Clazz_new_((I$[48]||$incl$(48)).c$$java_util_List$Class,[list, type]);
}, 1);

Clazz_newMeth(C$, 'checkedSet$java_util_Set$Class', function (s, type) {
return Clazz_new_((I$[49]||$incl$(49)).c$$java_util_Set$Class,[s, type]);
}, 1);

Clazz_newMeth(C$, 'checkedSortedMap$java_util_SortedMap$Class$Class', function (m, keyType, valueType) {
return Clazz_new_((I$[50]||$incl$(50)).c$$java_util_SortedMap$Class$Class,[m, keyType, valueType]);
}, 1);

Clazz_newMeth(C$, 'checkedSortedSet$java_util_SortedSet$Class', function (s, type) {
return Clazz_new_((I$[51]||$incl$(51)).c$$java_util_SortedSet$Class,[s, type]);
}, 1);

Clazz_newMeth(C$, 'addAll$java_util_Collection$TTA', function (c, a) {
var modified = false;
for (var i = 0; i < a.length; i++) {
modified = (modified|c.add$TE(a[i]));
}
return modified;
}, 1);

Clazz_newMeth(C$, 'disjoint$java_util_Collection$java_util_Collection', function (c1, c2) {
if ((Clazz_instanceOf(c1, "java.util.Set")) && !(Clazz_instanceOf(c2, "java.util.Set"))  || (c2.size()) > c1.size() ) {
var tmp = c1;
c1 = c2;
c2 = tmp;
}var it = c1.iterator();
while (it.hasNext()){
if (c2.contains$O(it.next())) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'checkType$TE$Class', function (obj, type) {
if (!type.isInstance$O(obj)) {
throw Clazz_new_(Clazz_load('java.lang.ClassCastException').c$$S,["Attempt to insert " + obj.getClass() + " element into collection with element type " + type ]);
}return obj;
}, 1);
;
(function(){var C$=Clazz_newClass(P$.Collections, "CopiesList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.n = 0;
this.element = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$TE', function (length, object) {
Clazz_super_(C$, this,1);
if (length < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
}this.n = length;
this.element = object;
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.element == null  ? object == null  : this.element.equals$O(object);
});

Clazz_newMeth(C$, 'size', function () {
return this.n;
});

Clazz_newMeth(C$, 'get$I', function (location) {
if (0 <= location && location < this.n ) {
return this.element;
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "EmptyList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', 'java.io.Serializable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return false;
});

Clazz_newMeth(C$, 'size', function () {
return 0;
});

Clazz_newMeth(C$, 'get$I', function (location) {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'readResolve', function () {
return (I$[1]||$incl$(1)).EMPTY_LIST;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "EmptySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractSet', 'java.io.Serializable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return false;
});

Clazz_newMeth(C$, 'size', function () {
return 0;
});

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$EmptySet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return false;
});

Clazz_newMeth(C$, 'next', function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[2]||$incl$(2)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'readResolve', function () {
return (I$[1]||$incl$(1)).EMPTY_SET;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "EmptyMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractMap', 'java.io.Serializable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return false;
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return false;
});

Clazz_newMeth(C$, 'entrySet', function () {
return (I$[1]||$incl$(1)).EMPTY_SET;
});

Clazz_newMeth(C$, 'get$O', function (key) {
return null;
});

Clazz_newMeth(C$, 'keySet', function () {
return (I$[1]||$incl$(1)).EMPTY_SET;
});

Clazz_newMeth(C$, 'values', function () {
return (I$[1]||$incl$(1)).EMPTY_LIST;
});

Clazz_newMeth(C$, 'readResolve', function () {
return (I$[1]||$incl$(1)).EMPTY_MAP;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "ReverseComparator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Comparator', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['compare$TT$TT'], function (o1, o2) {
var c2 = o2;
return c2.compareTo$TT(o1);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "ReverseComparatorWithComparator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Comparator', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.comparator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Comparator', function (comparator) {
C$.$init$.apply(this);
this.comparator = comparator;
}, 1);

Clazz_newMeth(C$, ['compare$TT$TT'], function (o1, o2) {
return this.comparator.compare$TT$TT(o2, o1);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SingletonSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractSet', 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.element = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TE'], function (object) {
Clazz_super_(C$, this,1);
this.element = object;
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.element == null  ? object == null  : this.element.equals$O(object);
});

Clazz_newMeth(C$, 'size', function () {
return 1;
});

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$SingletonSet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$hasNext = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$hasNext = true;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.$hasNext;
});

Clazz_newMeth(C$, 'next', function () {
if (this.$hasNext) {
this.$hasNext = false;
return this.b$['java.util.Collections.SingletonSet'].element;
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[3]||$incl$(3)).$init$, [this, null]));
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SingletonList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.element = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TE'], function (object) {
Clazz_super_(C$, this,1);
this.element = object;
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.element == null  ? object == null  : this.element.equals$O(object);
});

Clazz_newMeth(C$, 'get$I', function (location) {
if (location == 0) {
return this.element;
}throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
});

Clazz_newMeth(C$, 'size', function () {
return 1;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SingletonMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractMap', 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.k = null;
this.v = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TK$TV'], function (key, value) {
Clazz_super_(C$, this,1);
this.k = key;
this.v = value;
}, 1);

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.k == null  ? key == null  : this.k.equals$O(key);
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return this.v == null  ? value == null  : this.v.equals$O(value);
});

Clazz_newMeth(C$, 'get$O', function (key) {
if (this.containsKey$O(key)) {
return this.v;
}return null;
});

Clazz_newMeth(C$, 'size', function () {
return 1;
});

Clazz_newMeth(C$, 'entrySet', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$SingletonMap$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractSet'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
if (Clazz_instanceOf(object, "java.util.Map.Entry")) {
var entry = object;
return this.b$['java.util.Collections.SingletonMap'].containsKey$O(entry.getKey()) && this.b$['java.util.Collections.SingletonMap'].containsValue$O(entry.getValue()) ;
}return false;
});

Clazz_newMeth(C$, 'size', function () {
return 1;
});

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$SingletonMap$1$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$hasNext = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$hasNext = true;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.$hasNext;
});

Clazz_newMeth(C$, 'next', function () {
if (this.$hasNext) {
this.$hasNext = false;
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$SingletonMap$1$1$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['java.util.Map','java.util.Map.Entry']], 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.b$['java.util.Collections$SingletonMap$1'].contains$O(object);
});

Clazz_newMeth(C$, 'getKey', function () {
return this.b$['java.util.Collections.SingletonMap'].k;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.b$['java.util.Collections.SingletonMap'].v;
});

Clazz_newMeth(C$, 'hashCode', function () {
return (this.b$['java.util.Collections.SingletonMap'].k == null  ? 0 : this.b$['java.util.Collections.SingletonMap'].k.hashCode()) ^ (this.b$['java.util.Collections.SingletonMap'].v == null  ? 0 : this.b$['java.util.Collections.SingletonMap'].v.hashCode());
});

Clazz_newMeth(C$, ['setValue$TV'], function (value) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[4]||$incl$(4)).$init$, [this, null]));
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[5]||$incl$(5)).$init$, [this, null]));
});
})()
), Clazz_new_((I$[6]||$incl$(6)), [this, null],P$.Collections$SingletonMap$1));
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.c = null;
this.mutex = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection', function (collection) {
C$.$init$.apply(this);
this.c = collection;
this.mutex = this;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection$O', function (collection, mutex) {
C$.$init$.apply(this);
this.c = collection;
this.mutex = mutex;
}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
{
return this.c.add$TE(object);
}});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
{
return this.c.addAll$java_util_Collection(collection);
}});

Clazz_newMeth(C$, 'clear', function () {
{
this.c.clear();
}});

Clazz_newMeth(C$, 'contains$O', function (object) {
{
return this.c.contains$O(object);
}});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (collection) {
{
return this.c.containsAll$java_util_Collection(collection);
}});

Clazz_newMeth(C$, 'isEmpty', function () {
{
return this.c.isEmpty();
}});

Clazz_newMeth(C$, 'iterator', function () {
{
return this.c.iterator();
}});

Clazz_newMeth(C$, 'remove$O', function (object) {
{
return this.c.remove$O(object);
}});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (collection) {
{
return this.c.removeAll$java_util_Collection(collection);
}});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (collection) {
{
return this.c.retainAll$java_util_Collection(collection);
}});

Clazz_newMeth(C$, 'size', function () {
{
return this.c.size();
}});

Clazz_newMeth(C$, 'toArray', function () {
{
return this.c.toArray();
}});

Clazz_newMeth(C$, 'toString', function () {
{
return this.c.toString();
}});

Clazz_newMeth(C$, 'toArray$TTA', function (array) {
{
return this.c.toArray$TTA(array);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.SynchronizedList'], 'java.util.RandomAccess');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List', function (l) {
C$.superclazz.c$$java_util_List.apply(this, [l]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$O', function (l, mutex) {
C$.superclazz.c$$java_util_List$O.apply(this, [l, mutex]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
{
return Clazz_new_(C$.c$$java_util_List$O,[this.list.subList$I$I(start, end), this.mutex]);
}});

Clazz_newMeth(C$, 'writeReplace', function () {
return Clazz_new_((I$[7]||$incl$(7)).c$$java_util_List,[this.list]);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.SynchronizedCollection'], 'java.util.List');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.list = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List', function (l) {
C$.superclazz.c$$java_util_Collection.apply(this, [l]);
C$.$init$.apply(this);
this.list = l;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$O', function (l, mutex) {
C$.superclazz.c$$java_util_Collection$O.apply(this, [l, mutex]);
C$.$init$.apply(this);
this.list = l;
}, 1);

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
{
this.list.add$I$TE(location, object);
}});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
{
return this.list.addAll$I$java_util_Collection(location, collection);
}});

Clazz_newMeth(C$, 'equals$O', function (object) {
{
return this.list.equals$O(object);
}});

Clazz_newMeth(C$, 'get$I', function (location) {
{
return this.list.get$I(location);
}});

Clazz_newMeth(C$, 'hashCode', function () {
{
return this.list.hashCode();
}});

Clazz_newMeth(C$, 'indexOf$O', function (object) {
{
return this.list.indexOf$O(object);
}});

Clazz_newMeth(C$, 'lastIndexOf$O', function (object) {
{
return this.list.lastIndexOf$O(object);
}});

Clazz_newMeth(C$, 'listIterator', function () {
{
return this.list.listIterator();
}});

Clazz_newMeth(C$, 'listIterator$I', function (location) {
{
return this.list.listIterator$I(location);
}});

Clazz_newMeth(C$, 'remove$I', function (location) {
{
return this.list.remove$I(location);
}});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
{
return this.list.set$I$TE(location, object);
}});

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
{
return Clazz_new_(C$.c$$java_util_List$O,[this.list.subList$I$I(start, end), this.mutex]);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$, 'readResolve', function () {
if (Clazz_instanceOf(this.list, "java.util.RandomAccess")) {
return Clazz_new_((I$[8]||$incl$(8)).c$$java_util_List$O,[this.list, this.mutex]);
}return this;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.m = null;
this.mutex = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map'], function (map) {
C$.$init$.apply(this);
this.m = map;
this.mutex = this;
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map$O'], function (map, mutex) {
C$.$init$.apply(this);
this.m = map;
this.mutex = mutex;
}, 1);

Clazz_newMeth(C$, 'clear', function () {
{
this.m.clear();
}});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
{
return this.m.containsKey$O(key);
}});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
{
return this.m.containsValue$O(value);
}});

Clazz_newMeth(C$, 'entrySet', function () {
{
return Clazz_new_((I$[9]||$incl$(9)).c$$java_util_Set$O,[this.m.entrySet(), this.mutex]);
}});

Clazz_newMeth(C$, 'equals$O', function (object) {
{
return this.m.equals$O(object);
}});

Clazz_newMeth(C$, 'get$O', function (key) {
{
return this.m.get$O(key);
}});

Clazz_newMeth(C$, 'hashCode', function () {
{
return this.m.hashCode();
}});

Clazz_newMeth(C$, 'isEmpty', function () {
{
return this.m.isEmpty();
}});

Clazz_newMeth(C$, 'keySet', function () {
{
return Clazz_new_((I$[9]||$incl$(9)).c$$java_util_Set$O,[this.m.keySet(), this.mutex]);
}});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
{
return this.m.put$TK$TV(key, value);
}});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (map) {
{
this.m.putAll$java_util_Map(map);
}});

Clazz_newMeth(C$, 'remove$O', function (key) {
{
return this.m.remove$O(key);
}});

Clazz_newMeth(C$, 'size', function () {
{
return this.m.size();
}});

Clazz_newMeth(C$, 'values', function () {
{
return Clazz_new_((I$[10]||$incl$(10)).c$$java_util_Collection$O,[this.m.values(), this.mutex]);
}});

Clazz_newMeth(C$, 'toString', function () {
{
return this.m.toString();
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.SynchronizedCollection'], 'java.util.Set');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Set', function (set) {
C$.superclazz.c$$java_util_Collection.apply(this, [set]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Set$O', function (set, mutex) {
C$.superclazz.c$$java_util_Collection$O.apply(this, [set, mutex]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O', function (object) {
{
return this.c.equals$O(object);
}});

Clazz_newMeth(C$, 'hashCode', function () {
{
return this.c.hashCode();
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.SynchronizedMap'], 'java.util.SortedMap');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.sm = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_SortedMap'], function (map) {
C$.superclazz.c$$java_util_Map.apply(this, [map]);
C$.$init$.apply(this);
this.sm = map;
}, 1);

Clazz_newMeth(C$, ['c$$java_util_SortedMap$O'], function (map, mutex) {
C$.superclazz.c$$java_util_Map$O.apply(this, [map, mutex]);
C$.$init$.apply(this);
this.sm = map;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
{
return this.sm.comparator();
}});

Clazz_newMeth(C$, 'firstKey', function () {
{
return this.sm.firstKey();
}});

Clazz_newMeth(C$, ['headMap$TK'], function (endKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.headMap$TK(endKey), this.mutex]);
}});

Clazz_newMeth(C$, 'lastKey', function () {
{
return this.sm.lastKey();
}});

Clazz_newMeth(C$, ['subMap$TK$TK'], function (startKey, endKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.subMap$TK$TK(startKey, endKey), this.mutex]);
}});

Clazz_newMeth(C$, ['tailMap$TK'], function (startKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.tailMap$TK(startKey), this.mutex]);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "SynchronizedSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.SynchronizedSet'], 'java.util.SortedSet');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.ss = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedSet', function (set) {
C$.superclazz.c$$java_util_Set.apply(this, [set]);
C$.$init$.apply(this);
this.ss = set;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedSet$O', function (set, mutex) {
C$.superclazz.c$$java_util_Set$O.apply(this, [set, mutex]);
C$.$init$.apply(this);
this.ss = set;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
{
return this.ss.comparator();
}});

Clazz_newMeth(C$, 'first', function () {
{
return this.ss.first();
}});

Clazz_newMeth(C$, ['headSet$TE'], function (end) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.headSet$TE(end), this.mutex]);
}});

Clazz_newMeth(C$, 'last', function () {
{
return this.ss.last();
}});

Clazz_newMeth(C$, ['subSet$TE$TE'], function (start, end) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.subSet$TE$TE(start, end), this.mutex]);
}});

Clazz_newMeth(C$, ['tailSet$TE'], function (start) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.tailSet$TE(start), this.mutex]);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
{
stream.defaultWriteObject();
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.c = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection', function (collection) {
C$.$init$.apply(this);
this.c = collection;
}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'clear', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.c.contains$O(object);
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (collection) {
return this.c.containsAll$java_util_Collection(collection);
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.c.isEmpty();
});

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$UnmodifiableCollection$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.iterator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.iterator = this.b$['java.util.Collections.UnmodifiableCollection'].c.iterator();
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.iterator.hasNext();
});

Clazz_newMeth(C$, 'next', function () {
return this.iterator.next();
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[11]||$incl$(11)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'remove$O', function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (collection) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (collection) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'size', function () {
return this.c.size();
});

Clazz_newMeth(C$, 'toArray', function () {
return this.c.toArray();
});

Clazz_newMeth(C$, 'toArray$TTA', function (array) {
return this.c.toArray$TTA(array);
});

Clazz_newMeth(C$, 'toString', function () {
return this.c.toString();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableCollection'], 'java.util.List');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.list = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List', function (l) {
C$.superclazz.c$$java_util_Collection.apply(this, [l]);
C$.$init$.apply(this);
this.list = l;
}, 1);

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.list.equals$O(object);
});

Clazz_newMeth(C$, 'get$I', function (location) {
return this.list.get$I(location);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.list.hashCode();
});

Clazz_newMeth(C$, 'indexOf$O', function (object) {
return this.list.indexOf$O(object);
});

Clazz_newMeth(C$, 'lastIndexOf$O', function (object) {
return this.list.lastIndexOf$O(object);
});

Clazz_newMeth(C$, 'listIterator', function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I', function (location) {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$UnmodifiableList$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.ListIterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.iterator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.iterator = this.b$['java.util.Collections.UnmodifiableList'].list.listIterator$I(this.$finals.location);
}, 1);

Clazz_newMeth(C$, ['add$TE'], function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'hasNext', function () {
return this.iterator.hasNext();
});

Clazz_newMeth(C$, 'hasPrevious', function () {
return this.iterator.hasPrevious();
});

Clazz_newMeth(C$, 'next', function () {
return this.iterator.next();
});

Clazz_newMeth(C$, 'nextIndex', function () {
return this.iterator.nextIndex();
});

Clazz_newMeth(C$, 'previous', function () {
return this.iterator.previous();
});

Clazz_newMeth(C$, 'previousIndex', function () {
return this.iterator.previousIndex();
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, ['set$TE'], function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[12]||$incl$(12)).$init$, [this, {location: location}]));
});

Clazz_newMeth(C$, 'remove$I', function (location) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
return Clazz_new_(C$.c$$java_util_List,[this.list.subList$I$I(start, end)]);
});

Clazz_newMeth(C$, 'readResolve', function () {
if (Clazz_instanceOf(this.list, "java.util.RandomAccess")) {
return Clazz_new_((I$[13]||$incl$(13)).c$$java_util_List,[this.list]);
}return this;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableList'], 'java.util.RandomAccess');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List', function (l) {
C$.superclazz.c$$java_util_List.apply(this, [l]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
return Clazz_new_(C$.c$$java_util_List,[this.list.subList$I$I(start, end)]);
});

Clazz_newMeth(C$, 'writeReplace', function () {
return Clazz_new_((I$[14]||$incl$(14)).c$$java_util_List,[this.list]);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableCollection'], 'java.util.Set');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Set', function (set) {
C$.superclazz.c$$java_util_Collection.apply(this, [set]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.c.equals$O(object);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.c.hashCode();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.m = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map'], function (map) {
C$.$init$.apply(this);
this.m = map;
}, 1);

Clazz_newMeth(C$, 'clear', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.m.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return this.m.containsValue$O(value);
});

Clazz_newMeth(C$, 'entrySet', function () {
return Clazz_new_((I$[18]||$incl$(18)).c$$java_util_Set,[this.m.entrySet()]);
});

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.m.equals$O(object);
});

Clazz_newMeth(C$, 'get$O', function (key) {
return this.m.get$O(key);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.m.hashCode();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.m.isEmpty();
});

Clazz_newMeth(C$, 'keySet', function () {
return Clazz_new_((I$[19]||$incl$(19)).c$$java_util_Set,[this.m.keySet()]);
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (map) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O', function (key) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'size', function () {
return this.m.size();
});

Clazz_newMeth(C$, 'values', function () {
return Clazz_new_((I$[20]||$incl$(20)).c$$java_util_Collection,[this.m.values()]);
});

Clazz_newMeth(C$, 'toString', function () {
return this.m.toString();
});
;
(function(){var C$=Clazz_newClass(P$.Collections.UnmodifiableMap, "UnmodifiableEntrySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableSet']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Set'], function (set) {
C$.superclazz.c$$java_util_Set.apply(this, [set]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Collections$UnmodifiableMap$UnmodifiableEntrySet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.iterator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.iterator = this.b$['java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet'].c.iterator();
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.iterator.hasNext();
});

Clazz_newMeth(C$, 'next', function () {
return Clazz_new_((I$[15]||$incl$(15)).c$$java_util_Map_Entry,[this.iterator.next()]);
});

Clazz_newMeth(C$, 'remove', function () {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});
})()
), Clazz_new_((I$[16]||$incl$(16)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'toArray', function () {
var length = this.c.size();
var result = Clazz_array(java.lang.Object, [length]);
var it = this.iterator();
for (var i = length; --i >= 0; ) {
result[i] = it.next();
}
return result;
});

Clazz_newMeth(C$, 'toArray$TTA', function (contents) {
var size = this.c.size();
var index = 0;
var it = this.iterator();
if (size > contents.length) {
var ct = contents.getClass().getComponentType();
contents = Clazz_array(ct, size);
}while (index < size){
contents[index++] = it.next();
}
if (index < contents.length) {
contents[index] = null;
}return contents;
});
;
(function(){var C$=Clazz_newClass(P$.Collections.UnmodifiableMap.UnmodifiableEntrySet, "UnmodifiableMapEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.mapEntry = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map_Entry'], function (entry) {
C$.$init$.apply(this);
this.mapEntry = entry;
}, 1);

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.mapEntry.equals$O(object);
});

Clazz_newMeth(C$, 'getKey', function () {
return this.mapEntry.getKey();
});

Clazz_newMeth(C$, 'getValue', function () {
return this.mapEntry.getValue();
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.mapEntry.hashCode();
});

Clazz_newMeth(C$, ['setValue$TV'], function (object) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'toString', function () {
return this.mapEntry.toString();
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableMap'], 'java.util.SortedMap');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.sm = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_SortedMap'], function (map) {
C$.superclazz.c$$java_util_Map.apply(this, [map]);
C$.$init$.apply(this);
this.sm = map;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
return this.sm.comparator();
});

Clazz_newMeth(C$, 'firstKey', function () {
return this.sm.firstKey();
});

Clazz_newMeth(C$, ['headMap$TK'], function (before) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.headMap$TK(before)]);
});

Clazz_newMeth(C$, 'lastKey', function () {
return this.sm.lastKey();
});

Clazz_newMeth(C$, ['subMap$TK$TK'], function (start, end) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.subMap$TK$TK(start, end)]);
});

Clazz_newMeth(C$, ['tailMap$TK'], function (after) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.tailMap$TK(after)]);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "UnmodifiableSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.UnmodifiableSet'], 'java.util.SortedSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.ss = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedSet', function (set) {
C$.superclazz.c$$java_util_Set.apply(this, [set]);
C$.$init$.apply(this);
this.ss = set;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
return this.ss.comparator();
});

Clazz_newMeth(C$, 'first', function () {
return this.ss.first();
});

Clazz_newMeth(C$, ['headSet$TE'], function (before) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.headSet$TE(before)]);
});

Clazz_newMeth(C$, 'last', function () {
return this.ss.last();
});

Clazz_newMeth(C$, ['subSet$TE$TE'], function (start, end) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.subSet$TE$TE(start, end)]);
});

Clazz_newMeth(C$, ['tailSet$TE'], function (after) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.tailSet$TE(after)]);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.c = null;
this.type = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection$Class', function (c, type) {
C$.$init$.apply(this);
if (c == null  || type == null  ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.c = c;
this.type = type;
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.c.size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.c.isEmpty();
});

Clazz_newMeth(C$, 'contains$O', function (obj) {
return this.c.contains$O(obj);
});

Clazz_newMeth(C$, 'iterator', function () {
var i = this.c.iterator();
if (Clazz_instanceOf(i, "java.util.ListIterator")) {
i = Clazz_new_((I$[21]||$incl$(21)).c$$java_util_ListIterator$Class,[i, this.type]);
}return i;
});

Clazz_newMeth(C$, 'toArray', function () {
return this.c.toArray();
});

Clazz_newMeth(C$, 'toArray$TTA', function (arr) {
return this.c.toArray$TTA(arr);
});

Clazz_newMeth(C$, ['add$TE'], function (obj) {
return this.c.add$TE(P$.Collections.checkType$TE$Class(obj, this.type));
});

Clazz_newMeth(C$, 'remove$O', function (obj) {
return this.c.remove$O(obj);
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (c1) {
return this.c.containsAll$java_util_Collection(c1);
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (c1) {
var size = c1.size();
if (size == 0) {
return false;
}var arr = Clazz_array(java.lang.Object, [size]);
var it = c1.iterator();
for (var i = 0; i < size; i++) {
arr[i] = P$.Collections.checkType$TE$Class(it.next(), this.type);
}
var added = false;
for (var i = 0; i < size; i++) {
added = (added|this.c.add$TE(arr[i]));
}
return added;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (c1) {
return this.c.removeAll$java_util_Collection(c1);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (c1) {
return this.c.retainAll$java_util_Collection(c1);
});

Clazz_newMeth(C$, 'clear', function () {
this.c.clear();
});

Clazz_newMeth(C$, 'toString', function () {
return this.c.toString();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedListIterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.ListIterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.i = null;
this.type = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_ListIterator$Class', function (i, type) {
C$.$init$.apply(this);
this.i = i;
this.type = type;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.i.hasNext();
});

Clazz_newMeth(C$, 'next', function () {
return this.i.next();
});

Clazz_newMeth(C$, 'remove', function () {
this.i.remove();
});

Clazz_newMeth(C$, 'hasPrevious', function () {
return this.i.hasPrevious();
});

Clazz_newMeth(C$, 'previous', function () {
return this.i.previous();
});

Clazz_newMeth(C$, 'nextIndex', function () {
return this.i.nextIndex();
});

Clazz_newMeth(C$, 'previousIndex', function () {
return this.i.previousIndex();
});

Clazz_newMeth(C$, ['set$TE'], function (obj) {
this.i.set$TE(P$.Collections.checkType$TE$Class(obj, this.type));
});

Clazz_newMeth(C$, ['add$TE'], function (obj) {
this.i.add$TE(P$.Collections.checkType$TE$Class(obj, this.type));
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.CheckedCollection'], 'java.util.List');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.l = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$Class', function (l, type) {
C$.superclazz.c$$java_util_Collection$Class.apply(this, [l, type]);
C$.$init$.apply(this);
this.l = l;
}, 1);

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (index, c1) {
var size = c1.size();
if (size == 0) {
return false;
}var arr = Clazz_array(java.lang.Object, [size]);
var it = c1.iterator();
for (var i = 0; i < size; i++) {
arr[i] = P$.Collections.checkType$TE$Class(it.next(), this.type);
}
return this.l.addAll$I$java_util_Collection(index, (I$[22]||$incl$(22)).asList$TTA(arr));
});

Clazz_newMeth(C$, 'get$I', function (index) {
return this.l.get$I(index);
});

Clazz_newMeth(C$, 'set$I$TE', function (index, obj) {
return this.l.set$I$TE(index, P$.Collections.checkType$TE$Class(obj, this.type));
});

Clazz_newMeth(C$, 'add$I$TE', function (index, obj) {
this.l.add$I$TE(index, P$.Collections.checkType$TE$Class(obj, this.type));
});

Clazz_newMeth(C$, 'remove$I', function (index) {
return this.l.remove$I(index);
});

Clazz_newMeth(C$, 'indexOf$O', function (obj) {
return this.l.indexOf$O(obj);
});

Clazz_newMeth(C$, 'lastIndexOf$O', function (obj) {
return this.l.lastIndexOf$O(obj);
});

Clazz_newMeth(C$, 'listIterator', function () {
return Clazz_new_((I$[21]||$incl$(21)).c$$java_util_ListIterator$Class,[this.l.listIterator(), this.type]);
});

Clazz_newMeth(C$, 'listIterator$I', function (index) {
return Clazz_new_((I$[21]||$incl$(21)).c$$java_util_ListIterator$Class,[this.l.listIterator$I(index), this.type]);
});

Clazz_newMeth(C$, 'subList$I$I', function (fromIndex, toIndex) {
return P$.Collections.checkedList$java_util_List$Class(this.l.subList$I$I(fromIndex, toIndex), this.type);
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
return this.l.equals$O(obj);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.l.hashCode();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.CheckedList'], 'java.util.RandomAccess');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$Class', function (l, type) {
C$.superclazz.c$$java_util_List$Class.apply(this, [l, type]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.CheckedCollection'], 'java.util.Set');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Set$Class', function (s, type) {
C$.superclazz.c$$java_util_Collection$Class.apply(this, [s, type]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O', function (obj) {
return this.c.equals$O(obj);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.c.hashCode();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.m = null;
this.keyType = null;
this.valueType = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map$Class$Class'], function (m, keyType, valueType) {
C$.$init$.apply(this);
if (m == null  || keyType == null   || valueType == null  ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.m = m;
this.keyType = keyType;
this.valueType = valueType;
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.m.size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.m.isEmpty();
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.m.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return this.m.containsValue$O(value);
});

Clazz_newMeth(C$, 'get$O', function (key) {
return this.m.get$O(key);
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
return this.m.put$TK$TV(P$.Collections.checkType$TE$Class(key, this.keyType), P$.Collections.checkType$TE$Class(value, this.valueType));
});

Clazz_newMeth(C$, 'remove$O', function (key) {
return this.m.remove$O(key);
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (map) {
var size = map.size();
if (size == 0) {
return;
}var entries = Clazz_array((I$[25]||$incl$(25)), [size]);
var it = map.entrySet().iterator();
for (var i = 0; i < size; i++) {
var e = it.next();
P$.Collections.checkType$TE$Class(e.getKey(), this.keyType);
P$.Collections.checkType$TE$Class(e.getValue(), this.valueType);
entries[i] = e;
}
for (var i = 0; i < size; i++) {
this.m.put$TK$TV(entries[i].getKey(), entries[i].getValue());
}
});

Clazz_newMeth(C$, 'clear', function () {
this.m.clear();
});

Clazz_newMeth(C$, 'keySet', function () {
return this.m.keySet();
});

Clazz_newMeth(C$, 'values', function () {
return this.m.values();
});

Clazz_newMeth(C$, 'entrySet', function () {
return Clazz_new_((I$[26]||$incl$(26)).c$$java_util_Set$Class,[this.m.entrySet(), this.valueType]);
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
return this.m.equals$O(obj);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.m.hashCode();
});

Clazz_newMeth(C$, 'toString', function () {
return this.m.toString();
});
;
(function(){var C$=Clazz_newClass(P$.Collections.CheckedMap, "CheckedEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.e = null;
this.valueType = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Map_Entry$Class'], function (e, valueType) {
C$.$init$.apply(this);
if (e == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}this.e = e;
this.valueType = valueType;
}, 1);

Clazz_newMeth(C$, 'getKey', function () {
return this.e.getKey();
});

Clazz_newMeth(C$, 'getValue', function () {
return this.e.getValue();
});

Clazz_newMeth(C$, ['setValue$TV'], function (obj) {
return this.e.setValue$TV(P$.Collections.checkType$TE$Class(obj, this.valueType));
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
return this.e.equals$O(obj);
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.e.hashCode();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections.CheckedMap, "CheckedEntrySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Set');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.s = null;
this.valueType = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Set$Class'], function (s, valueType) {
C$.$init$.apply(this);
this.s = s;
this.valueType = valueType;
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[24]||$incl$(24)).c$$java_util_Iterator$Class,[this.s.iterator(), this.valueType]);
});

Clazz_newMeth(C$, 'toArray', function () {
var thisSize = this.size();
var array = Clazz_array(java.lang.Object, [thisSize]);
var it = this.iterator();
for (var i = 0; i < thisSize; i++) {
array[i] = it.next();
}
return array;
});

Clazz_newMeth(C$, 'toArray$TTA', function (array) {
var thisSize = this.size();
if (array.length < thisSize) {
var ct = array.getClass().getComponentType();
array = Clazz_array(ct, thisSize);
}var it = this.iterator();
for (var i = 0; i < thisSize; i++) {
array[i] = it.next();
}
if (thisSize < array.length) {
array[thisSize] = null;
}return array;
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (c) {
return this.s.retainAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (c) {
return this.s.removeAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (c) {
return this.s.containsAll$java_util_Collection(c);
});

Clazz_newMeth(C$, ['addAll$java_util_Collection'], function (c) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O', function (o) {
return this.s.remove$O(o);
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.s.contains$O(o);
});

Clazz_newMeth(C$, ['add$java_util_Map_Entry','add$TE'], function (o) {
throw Clazz_new_(Clazz_load('java.lang.UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.s.isEmpty();
});

Clazz_newMeth(C$, 'clear', function () {
this.s.clear();
});

Clazz_newMeth(C$, 'size', function () {
return this.s.size();
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.s.hashCode();
});

Clazz_newMeth(C$, 'equals$O', function (object) {
return this.s.equals$O(object);
});
;
(function(){var C$=Clazz_newClass(P$.Collections.CheckedMap.CheckedEntrySet, "CheckedEntryIterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Iterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.i = null;
this.valueType = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_Iterator$Class'], function (i, valueType) {
C$.$init$.apply(this);
this.i = i;
this.valueType = valueType;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.i.hasNext();
});

Clazz_newMeth(C$, 'remove', function () {
this.i.remove();
});

Clazz_newMeth(C$, 'next', function () {
return Clazz_new_((I$[23]||$incl$(23)).c$$java_util_Map_Entry$Class,[this.i.next(), this.valueType]);
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.CheckedSet'], 'java.util.SortedSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.ss = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedSet$Class', function (s, type) {
C$.superclazz.c$$java_util_Set$Class.apply(this, [s, type]);
C$.$init$.apply(this);
this.ss = s;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
return this.ss.comparator();
});

Clazz_newMeth(C$, ['subSet$TE$TE'], function (fromElement, toElement) {
return Clazz_new_(C$.c$$java_util_SortedSet$Class,[this.ss.subSet$TE$TE(fromElement, toElement), this.type]);
});

Clazz_newMeth(C$, ['headSet$TE'], function (toElement) {
return Clazz_new_(C$.c$$java_util_SortedSet$Class,[this.ss.headSet$TE(toElement), this.type]);
});

Clazz_newMeth(C$, ['tailSet$TE'], function (fromElement) {
return Clazz_new_(C$.c$$java_util_SortedSet$Class,[this.ss.tailSet$TE(fromElement), this.type]);
});

Clazz_newMeth(C$, 'first', function () {
return this.ss.first();
});

Clazz_newMeth(C$, 'last', function () {
return this.ss.last();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Collections, "CheckedSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','java.util.Collections.CheckedMap'], 'java.util.SortedMap');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.sm = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$java_util_SortedMap$Class$Class'], function (m, keyType, valueType) {
C$.superclazz.c$$java_util_Map$Class$Class.apply(this, [m, keyType, valueType]);
C$.$init$.apply(this);
this.sm = m;
}, 1);

Clazz_newMeth(C$, 'comparator', function () {
return this.sm.comparator();
});

Clazz_newMeth(C$, ['subMap$TK$TK'], function (fromKey, toKey) {
return Clazz_new_(C$.c$$java_util_SortedMap$Class$Class,[this.sm.subMap$TK$TK(fromKey, toKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, ['headMap$TK'], function (toKey) {
return Clazz_new_(C$.c$$java_util_SortedMap$Class$Class,[this.sm.headMap$TK(toKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, ['tailMap$TK'], function (fromKey) {
return Clazz_new_(C$.c$$java_util_SortedMap$Class$Class,[this.sm.tailMap$TK(fromKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'firstKey', function () {
return this.sm.firstKey();
});

Clazz_newMeth(C$, 'lastKey', function () {
return this.sm.lastKey();
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:12
(function(){var P$=java.util,I$=[];
var C$=Clazz_newClass(P$, "Dictionary");

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);
})();
//Created 2018-05-15 01:02:12
(function(){var P$=java.util,I$=[];
var C$=Clazz_newInterface(P$, "EventListener");
})();
//Created 2018-05-15 01:02:12
(function(){var P$=java.util,I$=[];
var C$=Clazz_newClass(P$, "EventObject", null, null, 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.source = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function (source) {
C$.$init$.apply(this);
if (source != null ) this.source = source;
}, 1);

Clazz_newMeth(C$, 'getSource', function () {
return this.source;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[source=" + String.valueOf(this.source) + ']' ;
});
})();
//Created 2018-05-15 01:02:12
(function(){var P$=java.util,I$=[[['java.util.HashMap','.Entry'],['java.util.HashMap','.KeyIterator'],['java.util.HashMap','.ValueIterator'],['java.util.HashMap','.EntryIterator'],['java.util.HashMap','.KeySet'],['java.util.HashMap','.Values'],['java.util.HashMap','.EntrySet']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "HashMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractMap', ['java.util.Map', 'Cloneable', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.table = null;
this.$size = 0;
this.threshold = 0;
this.$loadFactor = 0;
this.modCount = 0;
this.$entrySet = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$entrySet = null;
}, 1);

Clazz_newMeth(C$, 'c$$I$F', function (initialCapacity, loadFactor) {
Clazz_super_(C$, this,1);
if (initialCapacity < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Illegal initial capacity: " + initialCapacity]);
if (initialCapacity > 1073741824) initialCapacity = 1073741824;
if (loadFactor <= 0  || Float.isNaN(loadFactor) ) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Illegal load factor: " + new Float(loadFactor).toString()]);
var capacity = 1;
while (capacity < initialCapacity)capacity = capacity<<(1);

this.$loadFactor = loadFactor;
this.threshold = ((capacity * loadFactor)|0);
this.table = Clazz_array((I$[1]||$incl$(1)), [capacity]);
this.init();
}, 1);

Clazz_newMeth(C$, 'c$$I', function (initialCapacity) {
C$.c$$I$F.apply(this, [initialCapacity, 0.75]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.$loadFactor = 0.75;
this.threshold = 12;
this.table = Clazz_array((I$[1]||$incl$(1)), [16]);
this.init();
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map', function (m) {
C$.c$$I$F.apply(this, [Math.max(((m.size() / 0.75)|0) + 1, 16), 0.75]);
p$.putAllForCreate$java_util_Map.apply(this, [m]);
}, 1);

Clazz_newMeth(C$, 'init', function () {
});

Clazz_newMeth(C$, 'hash$I', function (h) {
h = h^((h >>> 20) ^ (h >>> 12));
return h ^ (h >>> 7) ^ (h >>> 4) ;
}, 1);

Clazz_newMeth(C$, 'indexFor$I$I', function (h, length) {
return h & (length - 1);
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.$size;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.$size == 0;
});

Clazz_newMeth(C$, 'get$O', function (key) {
if (key == null ) return p$.getForNullKey.apply(this, []);
var hash = C$.hash$I(key.hashCode());
for (var e = this.table[C$.indexFor$I$I(hash, this.table.length)]; e != null ; e = e.next) {
var k;
if (e.hash == hash && ((k = e.key) === key  || key.equals$O(k) ) ) return e.value;
}
return null;
});

Clazz_newMeth(C$, 'getForNullKey', function () {
for (var e = this.table[0]; e != null ; e = e.next) {
if (e.key == null ) return e.value;
}
return null;
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.getEntry$O(key) != null ;
});

Clazz_newMeth(C$, ['getEntry$O'], function (key) {
var hash = (key == null ) ? 0 : C$.hash$I(key.hashCode());
for (var e = this.table[C$.indexFor$I$I(hash, this.table.length)]; e != null ; e = e.next) {
var k;
if (e.hash == hash && ((k = e.key) === key  || (key != null  && key.equals$O(k) ) ) ) return e;
}
return null;
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
if (key == null ) return p$.putForNullKey$TV.apply(this, [value]);
var hash = C$.hash$I(key.hashCode());
var i = C$.indexFor$I$I(hash, this.table.length);
for (var e = this.table[i]; e != null ; e = e.next) {
var k;
if (e.hash == hash && ((k = e.key) === key  || key.equals$O(k) ) ) {
var oldValue = e.value;
e.value = value;
e.recordAccess$java_util_HashMap(this);
return oldValue;
}}
this.modCount++;
this.addEntry$I$TK$TV$I(hash, key, value, i);
return null;
});

Clazz_newMeth(C$, ['putForNullKey$TV'], function (value) {
for (var e = this.table[0]; e != null ; e = e.next) {
if (e.key == null ) {
var oldValue = e.value;
e.value = value;
e.recordAccess$java_util_HashMap(this);
return oldValue;
}}
this.modCount++;
this.addEntry$I$TK$TV$I(0, null, value, 0);
return null;
});

Clazz_newMeth(C$, ['putForCreate$TK$TV'], function (key, value) {
var hash = (key == null ) ? 0 : C$.hash$I(key.hashCode());
var i = C$.indexFor$I$I(hash, this.table.length);
for (var e = this.table[i]; e != null ; e = e.next) {
var k;
if (e.hash == hash && ((k = e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
e.value = value;
return;
}}
this.createEntry$I$TK$TV$I(hash, key, value, i);
});

Clazz_newMeth(C$, 'putAllForCreate$java_util_Map', function (m) {
for (var i = m.entrySet().iterator(); i.hasNext(); ) {
var e = i.next();
p$.putForCreate$TK$TV.apply(this, [e.getKey(), e.getValue()]);
}
});

Clazz_newMeth(C$, 'resize$I', function (newCapacity) {
var oldTable = this.table;
var oldCapacity = oldTable.length;
if (oldCapacity == 1073741824) {
this.threshold = 2147483647;
return;
}var newTable = Clazz_array((I$[1]||$incl$(1)), [newCapacity]);
this.transfer$java_util_HashMap_EntryA(newTable);
this.table = newTable;
this.threshold = ((newCapacity * this.$loadFactor)|0);
});

Clazz_newMeth(C$, 'transfer$java_util_HashMap_EntryA', function (newTable) {
var src = this.table;
var newCapacity = newTable.length;
for (var j = 0; j < src.length; j++) {
var e = src[j];
if (e != null ) {
src[j] = null;
do {
var next = e.next;
var i = C$.indexFor$I$I(e.hash, newCapacity);
e.next = newTable[i];
newTable[i] = e;
e = next;
} while (e != null );
}}
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (m) {
var numKeysToBeAdded = m.size();
if (numKeysToBeAdded == 0) return;
if (numKeysToBeAdded > this.threshold) {
var targetCapacity = ((numKeysToBeAdded / this.$loadFactor + 1)|0);
if (targetCapacity > 1073741824) targetCapacity = 1073741824;
var newCapacity = this.table.length;
while (newCapacity < targetCapacity)newCapacity = newCapacity<<(1);

if (newCapacity > this.table.length) this.resize$I(newCapacity);
}for (var i = m.entrySet().iterator(); i.hasNext(); ) {
var e = i.next();
this.put$TK$TV(e.getKey(), e.getValue());
}
});

Clazz_newMeth(C$, 'remove$O', function (key) {
var e = this.removeEntryForKey$O(key);
return (e == null  ? null : e.value);
});

Clazz_newMeth(C$, ['removeEntryForKey$O'], function (key) {
var hash = (key == null ) ? 0 : C$.hash$I(key.hashCode());
var i = C$.indexFor$I$I(hash, this.table.length);
var prev = this.table[i];
var e = prev;
while (e != null ){
var next = e.next;
var k;
if (e.hash == hash && ((k = e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
this.modCount++;
this.$size--;
if (prev === e ) this.table[i] = next;
 else prev.next = next;
e.recordRemoval$java_util_HashMap(this);
return e;
}prev = e;
e = next;
}
return e;
});

Clazz_newMeth(C$, ['removeMapping$O'], function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return null;
var entry = o;
var key = entry.getKey();
var hash = (key == null ) ? 0 : C$.hash$I(key.hashCode());
var i = C$.indexFor$I$I(hash, this.table.length);
var prev = this.table[i];
var e = prev;
while (e != null ){
var next = e.next;
if (e.hash == hash && e.equals$O(entry) ) {
this.modCount++;
this.$size--;
if (prev === e ) this.table[i] = next;
 else prev.next = next;
e.recordRemoval$java_util_HashMap(this);
return e;
}prev = e;
e = next;
}
return e;
});

Clazz_newMeth(C$, 'clear', function () {
this.modCount++;
var tab = this.table;
for (var i = 0; i < tab.length; i++) tab[i] = null;

this.$size = 0;
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
if (value == null ) return p$.containsNullValue.apply(this, []);
var tab = this.table;
for (var i = 0; i < tab.length; i++) for (var e = tab[i]; e != null ; e = e.next) if (value.equals$O(e.value)) return true;


return false;
});

Clazz_newMeth(C$, 'containsNullValue', function () {
var tab = this.table;
for (var i = 0; i < tab.length; i++) for (var e = tab[i]; e != null ; e = e.next) if (e.value == null ) return true;


return false;
});

Clazz_newMeth(C$, 'clone', function () {
var result = null;
try {
result = Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
} else {
throw e;
}
}
result.table = Clazz_array((I$[1]||$incl$(1)), [this.table.length]);
result.$entrySet = null;
result.modCount = 0;
result.$size = 0;
result.init();
result.putAllForCreate$java_util_Map(this);
return result;
});

Clazz_newMeth(C$, ['addEntry$I$TK$TV$I'], function (hash, key, value, bucketIndex) {
var e = this.table[bucketIndex];
this.table[bucketIndex] = Clazz_new_((I$[1]||$incl$(1)).c$$I$TK$TV$java_util_HashMap_Entry,[hash, key, value, e]);
if (this.$size++ >= this.threshold) this.resize$I(2 * this.table.length);
});

Clazz_newMeth(C$, ['createEntry$I$TK$TV$I'], function (hash, key, value, bucketIndex) {
var e = this.table[bucketIndex];
this.table[bucketIndex] = Clazz_new_((I$[1]||$incl$(1)).c$$I$TK$TV$java_util_HashMap_Entry,[hash, key, value, e]);
this.$size++;
});

Clazz_newMeth(C$, 'newKeyIterator', function () {
return Clazz_new_((I$[2]||$incl$(2)), [this, null]);
});

Clazz_newMeth(C$, 'newValueIterator', function () {
return Clazz_new_((I$[3]||$incl$(3)), [this, null]);
});

Clazz_newMeth(C$, 'newEntryIterator', function () {
return Clazz_new_((I$[4]||$incl$(4)), [this, null]);
});

Clazz_newMeth(C$, 'keySet', function () {
var ks = this.$keySet;
return (ks != null  ? ks : (this.$keySet = Clazz_new_((I$[5]||$incl$(5)), [this, null])));
});

Clazz_newMeth(C$, 'values', function () {
var vs = this.$values;
return (vs != null  ? vs : (this.$values = Clazz_new_((I$[6]||$incl$(6)), [this, null])));
});

Clazz_newMeth(C$, 'entrySet', function () {
return p$.entrySet0.apply(this, []);
});

Clazz_newMeth(C$, 'entrySet0', function () {
var es = this.$entrySet;
return es != null  ? es : (this.$entrySet = Clazz_new_((I$[7]||$incl$(7)), [this, null]));
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (s) {
var i = (this.$size > 0) ? p$.entrySet0.apply(this, []).iterator() : null;
s.defaultWriteObject();
s.writeInt$I(this.table.length);
s.writeInt$I(this.$size);
if (i != null ) {
while (i.hasNext()){
var e = i.next();
s.writeObject$O(e.getKey());
s.writeObject$O(e.getValue());
}
}});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function (s) {
s.defaultReadObject();
var numBuckets = s.readInt();
this.table = Clazz_array((I$[1]||$incl$(1)), [numBuckets]);
this.init();
var size = s.readInt();
for (var i = 0; i < size; i++) {
var key = s.readObject();
var value = s.readObject();
p$.putForCreate$TK$TV.apply(this, [key, value]);
}
});

Clazz_newMeth(C$, 'capacity', function () {
return this.table.length;
});

Clazz_newMeth(C$, 'loadFactor', function () {
return this.$loadFactor;
});
;
(function(){var C$=Clazz_newClass(P$.HashMap, "Entry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = null;
this.value = null;
this.next = null;
this.hash = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$I$TK$TV$java_util_HashMap_Entry'], function (h, k, v, n) {
C$.$init$.apply(this);
this.value = v;
this.next = n;
this.key = k;
this.hash = h;
}, 1);

Clazz_newMeth(C$, 'getKey', function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, ['setValue$TV'], function (newValue) {
var oldValue = this.value;
this.value = newValue;
return oldValue;
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e = o;
var k1 = this.getKey();
var k2 = e.getKey();
if (k1 === k2  || (k1 != null  && k1.equals$O(k2) ) ) {
var v1 = this.getValue();
var v2 = e.getValue();
if (v1 === v2  || (v1 != null  && v1.equals$O(v2) ) ) return true;
}return false;
});

Clazz_newMeth(C$, 'hashCode', function () {
return (this.key == null  ? 0 : this.key.hashCode()) ^ (this.value == null  ? 0 : this.value.hashCode());
});

Clazz_newMeth(C$, 'toString', function () {
return this.getKey() + "=" + this.getValue() ;
});

Clazz_newMeth(C$, ['recordAccess$java_util_HashMap'], function (m) {
});

Clazz_newMeth(C$, ['recordRemoval$java_util_HashMap'], function (m) {
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "HashIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$next = null;
this.expectedModCount = 0;
this.index = 0;
this.current = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.expectedModCount = this.this$0.modCount;
if (this.this$0.$size > 0) {
var t = this.this$0.table;
while (this.index < t.length && (this.$next = t[this.index++]) == null  );
}}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
return this.$next != null ;
});

Clazz_newMeth(C$, 'nextEntry', function () {
if (this.this$0.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
var e = this.$next;
if (e == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
if ((this.$next = e.next) == null ) {
var t = this.this$0.table;
while (this.index < t.length && (this.$next = t[this.index++]) == null  );
}this.current = e;
return e;
});

Clazz_newMeth(C$, 'remove', function () {
if (this.current == null ) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException'));
if (this.this$0.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
var k = this.current.key;
this.current = null;
this.b$['java.util.HashMap'].removeEntryForKey$O(k);
this.expectedModCount = this.this$0.modCount;
});
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "ValueIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','java.util.HashMap.HashIterator']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
return this.nextEntry().value;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "KeyIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','java.util.HashMap.HashIterator']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
return this.nextEntry().getKey();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "EntryIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','java.util.HashMap.HashIterator']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
return this.nextEntry();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "KeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return this.this$0.newKeyIterator();
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.this$0.containsKey$O(o);
});

Clazz_newMeth(C$, 'remove$O', function (o) {
return this.b$['java.util.HashMap'].removeEntryForKey$O(o) != null ;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.HashMap'].clear();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "Values", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return this.this$0.newValueIterator();
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.this$0.containsValue$O(o);
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.HashMap'].clear();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.HashMap, "EntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return this.this$0.newEntryIterator();
});

Clazz_newMeth(C$, 'contains$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e = o;
var candidate = this.this$0.getEntry$O(e.getKey());
return candidate != null  && candidate.equals$O(e) ;
});

Clazz_newMeth(C$, 'remove$O', function (o) {
return this.this$0.removeMapping$O(o) != null ;
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.HashMap'].clear();
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:12
(function(){var P$=java.util,I$=[['java.util.HashMap','java.util.LinkedHashMap','java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "HashSet", null, 'java.util.AbstractSet', ['java.util.Set', 'Cloneable', 'java.io.Serializable']);
C$.PRESENT = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.PRESENT =  Clazz_new_();
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.map = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.map = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection', function (c) {
Clazz_super_(C$, this,1);
this.map = Clazz_new_((I$[1]||$incl$(1)).c$$I,[Math.max(((c.size() / 0.75)|0) + 1, 16)]);
this.addAll$java_util_Collection(c);
}, 1);

Clazz_newMeth(C$, 'c$$I$F', function (initialCapacity, loadFactor) {
Clazz_super_(C$, this,1);
this.map = Clazz_new_((I$[1]||$incl$(1)).c$$I$F,[initialCapacity, loadFactor]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (initialCapacity) {
Clazz_super_(C$, this,1);
this.map = Clazz_new_((I$[1]||$incl$(1)).c$$I,[initialCapacity]);
}, 1);

Clazz_newMeth(C$, 'c$$I$F$Z', function (initialCapacity, loadFactor, dummy) {
Clazz_super_(C$, this,1);
this.map = Clazz_new_((I$[2]||$incl$(2)).c$$I$F,[initialCapacity, loadFactor]);
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return this.map.keySet().iterator();
});

Clazz_newMeth(C$, 'size', function () {
return this.map.size();
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.map.isEmpty();
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.map.containsKey$O(o);
});

Clazz_newMeth(C$, ['add$TE'], function (e) {
return this.map.put$TK$TV(e, C$.PRESENT) == null ;
});

Clazz_newMeth(C$, 'remove$O', function (o) {
return this.map.remove$O(o) === C$.PRESENT ;
});

Clazz_newMeth(C$, 'clear', function () {
this.map.clear();
});

Clazz_newMeth(C$, 'clone', function () {
try {
var newSet = Clazz_clone(this);
newSet.map = this.map.clone();
return newSet;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[3]||$incl$(3)));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (s) {
s.defaultWriteObject();
s.writeInt$I(this.map.capacity());
s.writeFloat$F(this.map.loadFactor());
s.writeInt$I(this.map.size());
for (var i = this.map.keySet().iterator(); i.hasNext(); ) s.writeObject$O(i.next());

});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function (s) {
s.defaultReadObject();
var capacity = s.readInt();
var loadFactor = s.readFloat();
this.map = (Clazz_instanceOf((this), "java.util.LinkedHashSet") ? Clazz_new_((I$[2]||$incl$(2)).c$$I$F,[capacity, loadFactor]) : Clazz_new_((I$[1]||$incl$(1)).c$$I$F,[capacity, loadFactor]));
var size = s.readInt();
for (var i = 0; i < size; i++) {
var e = s.readObject();
this.map.put$TK$TV(e, C$.PRESENT);
}
});
})();
//Created 2018-05-15 01:02:13
(function(){var P$=java.util,I$=[['java.util.Hashtable$1',['java.util.Hashtable','.Entry'],'java.util.Arrays',['java.util.Hashtable','.HashEnumerator'],['java.util.Collections','.SynchronizedSet'],['java.util.Hashtable','.HashIterator'],'java.util.Hashtable$2$1','java.util.AbstractSet','java.util.Hashtable$3$1','java.lang.StringBuilder',['java.util.Collections','.SynchronizedCollection'],'java.util.Hashtable$4$1','java.util.AbstractCollection']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Hashtable", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.Dictionary', ['java.util.Map', 'Cloneable', 'java.io.Serializable']);
C$.EMPTY_ENUMERATION = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.EMPTY_ENUMERATION = ((
(function(){var C$=Clazz_newClass(P$, "Hashtable$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'hasMoreElements', function () {
return false;
});

Clazz_newMeth(C$, 'nextElement', function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});
})()
), Clazz_new_((I$[1]||$incl$(1)).$init$, [this, null]));
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.elementCount = 0;
this.elementData = null;
this.loadFactor = 0;
this.threshold = 0;
this.firstSlot = 0;
this.lastSlot = 0;
this.modCount = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.lastSlot = -1;
}, 1);

Clazz_newMeth(C$, ['newEntry$TK$TV$I'], function (key, value, hash) {
return Clazz_new_((I$[2]||$incl$(2)).c$$TK$TV,[key, value]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I.apply(this, [11]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (capacity) {
Clazz_super_(C$, this,1);
if (capacity >= 0) {
this.elementCount = 0;
this.elementData = p$.newElementArray$I.apply(this, [capacity == 0 ? 1 : capacity]);
this.firstSlot = this.elementData.length;
this.loadFactor = 0.75;
p$.computeMaxSize.apply(this, []);
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
}}, 1);

Clazz_newMeth(C$, 'c$$I$F', function (capacity, loadFactor) {
Clazz_super_(C$, this,1);
if (capacity >= 0 && loadFactor > 0  ) {
this.elementCount = 0;
this.firstSlot = capacity;
this.elementData = p$.newElementArray$I.apply(this, [capacity == 0 ? 1 : capacity]);
this.loadFactor = loadFactor;
p$.computeMaxSize.apply(this, []);
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
}}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map', function (map) {
C$.c$$I.apply(this, [map.size() < 6 ? 11 : ((map.size() * 4/3|0)) + 11]);
this.putAll$java_util_Map(map);
}, 1);

Clazz_newMeth(C$, ['newElementArray$I'], function (size) {
return Clazz_array((I$[2]||$incl$(2)), [size]);
});

Clazz_newMeth(C$, 'clear', function () {
this.elementCount = 0;
(I$[3]||$incl$(3)).fill$OA$O(this.elementData, null);
this.modCount++;
});

Clazz_newMeth(C$, 'clone', function () {
try {
var hashtable = Clazz_clone(this);
hashtable.elementData = this.elementData.clone();
var entry;
for (var i = this.elementData.length; --i >= 0; ) {
if ((entry = this.elementData[i]) != null ) {
hashtable.elementData[i] = entry.clone();
}}
return hashtable;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'computeMaxSize', function () {
this.threshold = ((this.elementData.length * this.loadFactor)|0);
});

Clazz_newMeth(C$, 'contains$O', function (value) {
if (value == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}for (var i = this.elementData.length; --i >= 0; ) {
var entry = this.elementData[i];
while (entry != null ){
if (value.equals$O(entry.value)) {
return true;
}entry = entry.next;
}
}
return false;
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
return this.getEntry$O(key) != null ;
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
return this.contains$O(value);
});

Clazz_newMeth(C$, 'elements', function () {
if (this.elementCount == 0) {
return C$.EMPTY_ENUMERATION;
}return Clazz_new_((I$[4]||$incl$(4)).c$$Z, [this, null, false]);
});

Clazz_newMeth(C$, 'entrySet', function () {
return Clazz_new_((I$[5]||$incl$(5)).c$$java_util_Set$O,[((
(function(){var C$=Clazz_newClass(P$, "Hashtable$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractSet'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.b$['java.util.Hashtable'].elementCount;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.Hashtable'].clear();
});

Clazz_newMeth(C$, 'remove$O', function (object) {
if (this.contains$O(object)) {
this.b$['java.util.Hashtable'].remove$O((object).getKey());
return true;
}return false;
});

Clazz_newMeth(C$, 'contains$O', function (object) {
var entry = this.b$['java.util.Hashtable'].getEntry$O((object).getKey());
return object.equals$O(entry);
});

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[6]||$incl$(6)).c$$java_util_MapEntry_Type, [this, null, ((
(function(){var C$=Clazz_newClass(P$, "Hashtable$2$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['java.util.MapEntry','java.util.MapEntry.Type']], 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['get$java_util_MapEntry'], function (entry) {
return entry;
});
})()
), Clazz_new_((I$[7]||$incl$(7)).$init$, [this, null]))]);
});
})()
), Clazz_new_((I$[8]||$incl$(8)), [this, null],P$.Hashtable$2)), this]);
});

Clazz_newMeth(C$, 'equals$O', function (object) {
if (this === object ) {
return true;
}if (Clazz_instanceOf(object, "java.util.Map")) {
var map = object;
if (this.size() != map.size()) {
return false;
}var entries = this.entrySet();
for (var e, $e = map.entrySet().iterator(); $e.hasNext()&&((e=$e.next()),1);) {
if (!entries.contains$O(e)) {
return false;
}}
return true;
}return false;
});

Clazz_newMeth(C$, 'get$O', function (key) {
var hash = key.hashCode();
var index = (hash & 2147483647) % this.elementData.length;
var entry = this.elementData[index];
while (entry != null ){
if (entry.equalsKey$O$I(key, hash)) {
return entry.value;
}entry = entry.next;
}
return null;
});

Clazz_newMeth(C$, ['getEntry$O'], function (key) {
var hash = key.hashCode();
var index = (hash & 2147483647) % this.elementData.length;
var entry = this.elementData[index];
while (entry != null ){
if (entry.equalsKey$O$I(key, hash)) {
return entry;
}entry = entry.next;
}
return null;
});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 0;
var it = this.entrySet().iterator();
while (it.hasNext()){
var entry = it.next();
var key = entry.getKey();
var value = entry.getValue();
var hash = (key !== this  ? key.hashCode() : 0) ^ (value !== this  ? (value != null  ? value.hashCode() : 0) : 0);
result = result+(hash);
}
return result;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.elementCount == 0;
});

Clazz_newMeth(C$, 'keys', function () {
if (this.elementCount == 0) {
return C$.EMPTY_ENUMERATION;
}return Clazz_new_((I$[4]||$incl$(4)).c$$Z, [this, null, true]);
});

Clazz_newMeth(C$, 'keySet', function () {
return Clazz_new_((I$[5]||$incl$(5)).c$$java_util_Set$O,[((
(function(){var C$=Clazz_newClass(P$, "Hashtable$3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractSet'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.b$['java.util.Hashtable'].containsKey$O(object);
});

Clazz_newMeth(C$, 'size', function () {
return this.b$['java.util.Hashtable'].elementCount;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.Hashtable'].clear();
});

Clazz_newMeth(C$, 'remove$O', function (key) {
if (this.b$['java.util.Hashtable'].containsKey$O(key)) {
this.b$['java.util.Hashtable'].remove$O(key);
return true;
}return false;
});

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[6]||$incl$(6)).c$$java_util_MapEntry_Type, [this, null, ((
(function(){var C$=Clazz_newClass(P$, "Hashtable$3$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['java.util.MapEntry','java.util.MapEntry.Type']], 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['get$java_util_MapEntry'], function (entry) {
return entry.key;
});
})()
), Clazz_new_((I$[9]||$incl$(9)).$init$, [this, null]))]);
});
})()
), Clazz_new_((I$[8]||$incl$(8)), [this, null],P$.Hashtable$3)), this]);
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
if (key != null  && value != null  ) {
var hash = key.hashCode();
var index = (hash & 2147483647) % this.elementData.length;
var entry = this.elementData[index];
while (entry != null  && !entry.equalsKey$O$I(key, hash) ){
entry = entry.next;
}
if (entry == null ) {
this.modCount++;
if (++this.elementCount > this.threshold) {
this.rehash();
index = (hash & 2147483647) % this.elementData.length;
}if (index < this.firstSlot) {
this.firstSlot = index;
}if (index > this.lastSlot) {
this.lastSlot = index;
}entry = C$.newEntry$TK$TV$I(key, value, hash);
entry.next = this.elementData[index];
this.elementData[index] = entry;
return null;
}var result = entry.value;
entry.value = value;
return result;
}throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (map) {
for (var entry, $entry = map.entrySet().iterator(); $entry.hasNext()&&((entry=$entry.next()),1);) {
this.put$TK$TV(entry.getKey(), entry.getValue());
}
});

Clazz_newMeth(C$, 'rehash', function () {
var length = (this.elementData.length << 1) + 1;
if (length == 0) {
length = 1;
}var newFirst = length;
var newLast = -1;
var newData = p$.newElementArray$I.apply(this, [length]);
for (var i = this.lastSlot + 1; --i >= this.firstSlot; ) {
var entry = this.elementData[i];
while (entry != null ){
var index = (entry.getKeyHash() & 2147483647) % length;
if (index < newFirst) {
newFirst = index;
}if (index > newLast) {
newLast = index;
}var next = entry.next;
entry.next = newData[index];
newData[index] = entry;
entry = next;
}
}
this.firstSlot = newFirst;
this.lastSlot = newLast;
this.elementData = newData;
p$.computeMaxSize.apply(this, []);
});

Clazz_newMeth(C$, 'remove$O', function (key) {
var hash = key.hashCode();
var index = (hash & 2147483647) % this.elementData.length;
var last = null;
var entry = this.elementData[index];
while (entry != null  && !entry.equalsKey$O$I(key, hash) ){
last = entry;
entry = entry.next;
}
if (entry != null ) {
this.modCount++;
if (last == null ) {
this.elementData[index] = entry.next;
} else {
last.next = entry.next;
}this.elementCount--;
var result = entry.value;
entry.value = null;
return result;
}return null;
});

Clazz_newMeth(C$, 'size', function () {
return this.elementCount;
});

Clazz_newMeth(C$, 'toString', function () {
if (this.isEmpty()) {
return "{}";
}var buffer = Clazz_new_((I$[10]||$incl$(10)).c$$I,[this.size() * 28]);
buffer.append$C("{");
for (var i = this.lastSlot; i >= this.firstSlot; i--) {
var entry = this.elementData[i];
while (entry != null ){
if (entry.key !== this ) {
buffer.append$O(entry.key);
} else {
buffer.append$S("(this Map)");
}buffer.append$C("=");
if (entry.value !== this ) {
buffer.append$O(entry.value);
} else {
buffer.append$S("(this Map)");
}buffer.append$S(", ");
entry = entry.next;
}
}
if (this.elementCount > 0) {
buffer.setLength$I(buffer.length$() - 2);
}buffer.append$C("}");
return buffer.toString();
});

Clazz_newMeth(C$, 'values', function () {
return Clazz_new_((I$[11]||$incl$(11)).c$$java_util_Collection$O,[((
(function(){var C$=Clazz_newClass(P$, "Hashtable$4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractCollection'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.b$['java.util.Hashtable'].contains$O(object);
});

Clazz_newMeth(C$, 'size', function () {
return this.b$['java.util.Hashtable'].elementCount;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.Hashtable'].clear();
});

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[6]||$incl$(6)).c$$java_util_MapEntry_Type, [this, null, ((
(function(){var C$=Clazz_newClass(P$, "Hashtable$4$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['java.util.MapEntry','java.util.MapEntry.Type']], 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['get$java_util_MapEntry'], function (entry) {
return entry.value;
});
})()
), Clazz_new_((I$[12]||$incl$(12)).$init$, [this, null]))]);
});
})()
), Clazz_new_((I$[13]||$incl$(13)), [this, null],P$.Hashtable$4)), this]);
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
stream.defaultWriteObject();
stream.writeInt$I(this.elementData.length);
stream.writeInt$I(this.elementCount);
for (var i = this.elementData.length; --i >= 0; ) {
var entry = this.elementData[i];
while (entry != null ){
stream.writeObject$O(entry.key);
stream.writeObject$O(entry.value);
entry = entry.next;
}
}
});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function (stream) {
stream.defaultReadObject();
var length = stream.readInt();
this.elementData = p$.newElementArray$I.apply(this, [length]);
this.elementCount = stream.readInt();
for (var i = this.elementCount; --i >= 0; ) {
var key = stream.readObject();
var hash = key.hashCode();
var index = (hash & 2147483647) % length;
if (index < this.firstSlot) {
this.firstSlot = index;
}if (index > this.lastSlot) {
this.lastSlot = index;
}var entry = C$.newEntry$TK$TV$I(key, stream.readObject(), hash);
entry.next = this.elementData[index];
this.elementData[index] = entry;
}
});
;
(function(){var C$=Clazz_newClass(P$.Hashtable, "Entry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.MapEntry');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.next = null;
this.hashcode = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TK$TV'], function (theKey, theValue) {
C$.superclazz.c$$TK$TV.apply(this, [theKey, theValue]);
C$.$init$.apply(this);
this.hashcode = theKey.hashCode();
}, 1);

Clazz_newMeth(C$, 'clone', function () {
var entry = Clazz_clone(this);
if (this.next != null ) {
entry.next = this.next.clone();
}return entry;
});

Clazz_newMeth(C$, ['setValue$TV'], function (object) {
if (object == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}var result = this.value;
this.value = object;
return result;
});

Clazz_newMeth(C$, 'getKeyHash', function () {
return this.key.hashCode();
});

Clazz_newMeth(C$, 'equalsKey$O$I', function (aKey, hash) {
return this.hashcode == aKey.hashCode() && this.key.equals$O(aKey) ;
});

Clazz_newMeth(C$, 'toString', function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Hashtable, "HashIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.position = 0;
this.expectedModCount = 0;
this.type = null;
this.lastEntry = null;
this.lastPosition = 0;
this.canRemove = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.canRemove = false;
}, 1);

Clazz_newMeth(C$, ['c$$java_util_MapEntry_Type'], function (value) {
C$.$init$.apply(this);
this.type = value;
this.position = this.this$0.lastSlot;
this.expectedModCount = this.this$0.modCount;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
if (this.lastEntry != null  && this.lastEntry.next != null  ) {
return true;
}while (this.position >= this.this$0.firstSlot){
if (this.this$0.elementData[this.position] == null ) {
this.position--;
} else {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'next', function () {
if (this.expectedModCount == this.this$0.modCount) {
if (this.lastEntry != null ) {
this.lastEntry = this.lastEntry.next;
}if (this.lastEntry == null ) {
while (this.position >= this.this$0.firstSlot && (this.lastEntry = this.this$0.elementData[this.position]) == null  ){
this.position--;
}
if (this.lastEntry != null ) {
this.lastPosition = this.position;
this.position--;
}}if (this.lastEntry != null ) {
this.canRemove = true;
return this.type.get$java_util_MapEntry(this.lastEntry);
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'remove', function () {
if (this.expectedModCount == this.this$0.modCount) {
if (this.canRemove) {
this.canRemove = false;
{
var removed = false;
var entry = this.this$0.elementData[this.lastPosition];
if (entry === this.lastEntry ) {
this.this$0.elementData[this.lastPosition] = entry.next;
removed = true;
} else {
while (entry != null  && entry.next !== this.lastEntry  ){
entry = entry.next;
}
if (entry != null ) {
entry.next = this.lastEntry.next;
removed = true;
}}if (removed) {
this.this$0.modCount++;
this.this$0.elementCount--;
this.expectedModCount++;
return;
}}} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException'));
}}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.Hashtable, "HashEnumerator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Enumeration');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = false;
this.start = 0;
this.entry = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$Z', function (isKey) {
C$.$init$.apply(this);
this.key = isKey;
this.start = this.this$0.lastSlot + 1;
}, 1);

Clazz_newMeth(C$, 'hasMoreElements', function () {
if (this.entry != null ) {
return true;
}while (--this.start >= this.this$0.firstSlot){
if (this.this$0.elementData[this.start] != null ) {
this.entry = this.this$0.elementData[this.start];
return true;
}}
return false;
});

Clazz_newMeth(C$, 'nextElement', function () {
if (this.hasMoreElements()) {
var result = this.key ? this.entry.key : this.entry.value;
this.entry = this.entry.next;
return result;
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:13
(function(){var P$=java.util,I$=[[['java.util.IdentityHashMap','.KeyIterator'],['java.util.IdentityHashMap','.ValueIterator'],['java.util.IdentityHashMap','.EntryIterator'],['java.util.AbstractMap','.SimpleEntry'],'java.lang.reflect.Array','java.lang.InternalError',['java.util.IdentityHashMap','.KeySet'],['java.util.IdentityHashMap','.Values'],['java.util.IdentityHashMap','.EntrySet']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "IdentityHashMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractMap', ['java.util.Map', 'java.io.Serializable', 'Cloneable']);
C$.NULL_KEY = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.NULL_KEY =  Clazz_new_();
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.table = null;
this.$size = 0;
this.modCount = 0;
this.threshold = 0;
this.$entrySet = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$entrySet = null;
}, 1);

Clazz_newMeth(C$, 'maskNull$O', function (key) {
return (key == null  ? C$.NULL_KEY : key);
}, 1);

Clazz_newMeth(C$, 'unmaskNull$O', function (key) {
return (key === C$.NULL_KEY  ? null : key);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
p$.init$I.apply(this, [32]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (expectedMaxSize) {
Clazz_super_(C$, this,1);
if (expectedMaxSize < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["expectedMaxSize is negative: " + expectedMaxSize]);
p$.init$I.apply(this, [p$.capacity$I.apply(this, [expectedMaxSize])]);
}, 1);

Clazz_newMeth(C$, 'capacity$I', function (expectedMaxSize) {
var minCapacity = ((3 * expectedMaxSize)/2|0);
var result;
if (minCapacity > 536870912 || minCapacity < 0 ) {
result = 536870912;
} else {
result = 4;
while (result < minCapacity)result = result<<(1);

}return result;
});

Clazz_newMeth(C$, 'init$I', function (initCapacity) {
this.threshold = ((initCapacity * 2)/3|0);
this.table = Clazz_array(java.lang.Object, [2 * initCapacity]);
});

Clazz_newMeth(C$, 'c$$java_util_Map', function (m) {
C$.c$$I.apply(this, [(((1 + m.size()) * 1.1)|0)]);
this.putAll$java_util_Map(m);
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.$size;
});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.$size == 0;
});

Clazz_newMeth(C$, 'hash$O$I', function (x, length) {
var h = System.identityHashCode(x);
return ((h << 1) - (h << 8)) & (length - 1);
}, 1);

Clazz_newMeth(C$, 'nextKeyIndex$I$I', function (i, len) {
return (i + 2 < len ? i + 2 : 0);
}, 1);

Clazz_newMeth(C$, 'get$O', function (key) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
while (true){
var item = tab[i];
if (item === k ) return tab[i + 1];
if (item == null ) return null;
i = C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
while (true){
var item = tab[i];
if (item === k ) return true;
if (item == null ) return false;
i = C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'containsValue$O', function (value) {
var tab = this.table;
for (var i = 1; i < tab.length; i = i+(2)) if (tab[i] === value  && tab[i - 1] != null  ) return true;

return false;
});

Clazz_newMeth(C$, 'containsMapping$O$O', function (key, value) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
while (true){
var item = tab[i];
if (item === k ) return tab[i + 1] === value ;
if (item == null ) return false;
i = C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, ['put$TK$TV'], function (key, value) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
var item;
while ((item = tab[i]) != null ){
if (item === k ) {
var oldValue = tab[i + 1];
tab[i + 1] = value;
return oldValue;
}i = C$.nextKeyIndex$I$I(i, len);
}
this.modCount++;
tab[i] = k;
tab[i + 1] = value;
if (++this.$size >= this.threshold) p$.resize$I.apply(this, [len]);
return null;
});

Clazz_newMeth(C$, 'resize$I', function (newCapacity) {
var newLength = newCapacity * 2;
var oldTable = this.table;
var oldLength = oldTable.length;
if (oldLength == 1073741824) {
if (this.threshold == 536870911) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Capacity exhausted."]);
this.threshold = 536870911;
return;
}if (oldLength >= newLength) return;
var newTable = Clazz_array(java.lang.Object, [newLength]);
this.threshold = (newLength/3|0);
for (var j = 0; j < oldLength; j = j+(2)) {
var key = oldTable[j];
if (key != null ) {
var value = oldTable[j + 1];
oldTable[j] = null;
oldTable[j + 1] = null;
var i = C$.hash$O$I(key, newLength);
while (newTable[i] != null )i = C$.nextKeyIndex$I$I(i, newLength);

newTable[i] = key;
newTable[i + 1] = value;
}}
this.table = newTable;
});

Clazz_newMeth(C$, 'putAll$java_util_Map', function (m) {
var n = m.size();
if (n == 0) return;
if (n > this.threshold) p$.resize$I.apply(this, [p$.capacity$I.apply(this, [n])]);
for (var e, $e = m.entrySet().iterator(); $e.hasNext()&&((e=$e.next()),1);) this.put$TK$TV(e.getKey(), e.getValue());

});

Clazz_newMeth(C$, 'remove$O', function (key) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
while (true){
var item = tab[i];
if (item === k ) {
this.modCount++;
this.$size--;
var oldValue = tab[i + 1];
tab[i + 1] = null;
tab[i] = null;
p$.closeDeletion$I.apply(this, [i]);
return oldValue;
}if (item == null ) return null;
i = C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'removeMapping$O$O', function (key, value) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
while (true){
var item = tab[i];
if (item === k ) {
if (tab[i + 1] !== value ) return false;
this.modCount++;
this.$size--;
tab[i] = null;
tab[i + 1] = null;
p$.closeDeletion$I.apply(this, [i]);
return true;
}if (item == null ) return false;
i = C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'closeDeletion$I', function (d) {
var tab = this.table;
var len = tab.length;
var item;
for (var i = C$.nextKeyIndex$I$I(d, len); (item = tab[i]) != null ; i = C$.nextKeyIndex$I$I(i, len)) {
var r = C$.hash$O$I(item, len);
if ((i < r && (r <= d || d <= i ) ) || (r <= d && d <= i ) ) {
tab[d] = item;
tab[d + 1] = tab[i + 1];
tab[i] = null;
tab[i + 1] = null;
d = i;
}}
});

Clazz_newMeth(C$, 'clear', function () {
this.modCount++;
var tab = this.table;
for (var i = 0; i < tab.length; i++) tab[i] = null;

this.$size = 0;
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (o === this ) {
return true;
} else if (Clazz_instanceOf(o, "java.util.IdentityHashMap")) {
var m = o;
if (m.size() != this.$size) return false;
var tab = m.table;
for (var i = 0; i < tab.length; i = i+(2)) {
var k = tab[i];
if (k != null  && !p$.containsMapping$O$O.apply(this, [k, tab[i + 1]]) ) return false;
}
return true;
} else if (Clazz_instanceOf(o, "java.util.Map")) {
var m = o;
return this.entrySet().equals$O(m.entrySet());
} else {
return false;
}});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 0;
var tab = this.table;
for (var i = 0; i < tab.length; i = i+(2)) {
var key = tab[i];
if (key != null ) {
var k = C$.unmaskNull$O(key);
result = result+(System.identityHashCode(k) ^ System.identityHashCode(tab[i + 1]));
}}
return result;
});

Clazz_newMeth(C$, 'clone', function () {
try {
var m = Clazz_clone(this);
m.$entrySet = null;
m.table = this.table.clone();
return m;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[6]||$incl$(6)));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'keySet', function () {
var ks = this.$keySet;
if (ks != null ) return ks;
 else return this.$keySet = Clazz_new_((I$[7]||$incl$(7)), [this, null]);
});

Clazz_newMeth(C$, 'values', function () {
var vs = this.$values;
if (vs != null ) return vs;
 else return this.$values = Clazz_new_((I$[8]||$incl$(8)), [this, null]);
});

Clazz_newMeth(C$, 'entrySet', function () {
var es = this.$entrySet;
if (es != null ) return es;
 else return this.$entrySet = Clazz_new_((I$[9]||$incl$(9)), [this, null]);
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (s) {
s.defaultWriteObject();
s.writeInt$I(this.$size);
var tab = this.table;
for (var i = 0; i < tab.length; i = i+(2)) {
var key = tab[i];
if (key != null ) {
s.writeObject$O(C$.unmaskNull$O(key));
s.writeObject$O(tab[i + 1]);
}}
});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream', function (s) {
s.defaultReadObject();
var size = s.readInt();
p$.init$I.apply(this, [p$.capacity$I.apply(this, [((size * 4)/3|0)])]);
for (var i = 0; i < size; i++) {
var key = s.readObject();
var value = s.readObject();
p$.putForCreate$TK$TV.apply(this, [key, value]);
}
});

Clazz_newMeth(C$, ['putForCreate$TK$TV'], function (key, value) {
var k = C$.maskNull$O(key);
var tab = this.table;
var len = tab.length;
var i = C$.hash$O$I(k, len);
var item;
while ((item = tab[i]) != null ){
if (item === k ) throw Clazz_new_(Clazz_load('java.io.StreamCorruptedException'));
i = C$.nextKeyIndex$I$I(i, len);
}
tab[i] = k;
tab[i + 1] = value;
});
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "IdentityHashMapIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.index = 0;
this.expectedModCount = 0;
this.lastReturnedIndex = 0;
this.indexValid = false;
this.traversalTable = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.index = (this.this$0.$size != 0 ? 0 : this.this$0.table.length);
this.expectedModCount = this.this$0.modCount;
this.lastReturnedIndex = -1;
this.traversalTable = this.this$0.table;
}, 1);

Clazz_newMeth(C$, 'hasNext', function () {
var tab = this.traversalTable;
for (var i = this.index; i < tab.length; i = i+(2)) {
var key = tab[i];
if (key != null ) {
this.index = i;
return this.indexValid = true;
}}
this.index = tab.length;
return false;
});

Clazz_newMeth(C$, 'nextIndex', function () {
if (this.this$0.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
if (!this.indexValid && !this.hasNext() ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.indexValid = false;
this.lastReturnedIndex = this.index;
this.index = this.index+(2);
return this.lastReturnedIndex;
});

Clazz_newMeth(C$, 'remove', function () {
if (this.lastReturnedIndex == -1) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException'));
if (this.this$0.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.expectedModCount = ++this.this$0.modCount;
var deletedSlot = this.lastReturnedIndex;
this.lastReturnedIndex = -1;
this.this$0.$size--;
this.index = deletedSlot;
this.indexValid = false;
var tab = this.traversalTable;
var len = tab.length;
var d = deletedSlot;
var key = tab[d];
tab[d] = null;
tab[d + 1] = null;
if (tab !== this.b$['java.util.IdentityHashMap'].table ) {
this.b$['java.util.IdentityHashMap'].remove$O(key);
this.expectedModCount = this.this$0.modCount;
return;
}var item;
for (var i = P$.IdentityHashMap.nextKeyIndex$I$I(d, len); (item = tab[i]) != null ; i = P$.IdentityHashMap.nextKeyIndex$I$I(i, len)) {
var r = P$.IdentityHashMap.hash$O$I(item, len);
if ((i < r && (r <= d || d <= i ) ) || (r <= d && d <= i ) ) {
if (i < deletedSlot && d >= deletedSlot  && this.traversalTable === this.b$['java.util.IdentityHashMap'].table  ) {
var remaining = len - deletedSlot;
var newTable = Clazz_array(java.lang.Object, [remaining]);
System.arraycopy(tab, deletedSlot, newTable, 0, remaining);
this.traversalTable = newTable;
this.index = 0;
}tab[d] = item;
tab[d + 1] = tab[i + 1];
tab[i] = null;
tab[i + 1] = null;
d = i;
}}
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "KeyIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','java.util.IdentityHashMap.IdentityHashMapIterator']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
return P$.IdentityHashMap.unmaskNull$O(this.traversalTable[this.nextIndex()]);
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "ValueIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','java.util.IdentityHashMap.IdentityHashMapIterator']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
return this.traversalTable[this.nextIndex() + 1];
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "EntryIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','java.util.IdentityHashMap.IdentityHashMapIterator'], [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'next', function () {
this.nextIndex();
return this;
});

Clazz_newMeth(C$, 'getKey', function () {
if (this.lastReturnedIndex < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Entry was removed"]);
return P$.IdentityHashMap.unmaskNull$O(this.traversalTable[this.lastReturnedIndex]);
});

Clazz_newMeth(C$, 'getValue', function () {
if (this.lastReturnedIndex < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Entry was removed"]);
return this.traversalTable[this.lastReturnedIndex + 1];
});

Clazz_newMeth(C$, ['setValue$TV'], function (value) {
if (this.lastReturnedIndex < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["Entry was removed"]);
var oldValue = this.traversalTable[this.lastReturnedIndex + 1];
this.traversalTable[this.lastReturnedIndex + 1] = value;
if (this.traversalTable !== this.b$['java.util.IdentityHashMap'].table ) this.this$0.put$TK$TV(this.traversalTable[this.lastReturnedIndex], value);
return oldValue;
});

Clazz_newMeth(C$, 'equals$O', function (o) {
if (this.lastReturnedIndex < 0) return C$.superclazz.prototype.equals$O.apply(this, [o]);
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e = o;
return e.getKey() === this.getKey()  && e.getValue() === this.getValue()  ;
});

Clazz_newMeth(C$, 'hashCode', function () {
if (this.lastReturnedIndex < 0) return C$.superclazz.prototype.hashCode.apply(this, []);
return System.identityHashCode(this.getKey()) ^ System.identityHashCode(this.getValue());
});

Clazz_newMeth(C$, 'toString', function () {
if (this.lastReturnedIndex < 0) return C$.superclazz.prototype.toString.apply(this, []);
return this.getKey() + "=" + this.getValue() ;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "KeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[1]||$incl$(1)), [this, null]);
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.this$0.containsKey$O(o);
});

Clazz_newMeth(C$, 'remove$O', function (o) {
var oldSize = this.this$0.$size;
this.b$['java.util.IdentityHashMap'].remove$O(o);
return this.this$0.$size != oldSize;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (c) {
var modified = false;
for (var i = this.iterator(); i.hasNext(); ) {
if (c.contains$O(i.next())) {
i.remove();
modified = true;
}}
return modified;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.IdentityHashMap'].clear();
});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 0;
for (var key, $key = this.iterator(); $key.hasNext()&&((key=$key.next()),1);) result = result+(System.identityHashCode(key));

return result;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "Values", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[2]||$incl$(2)), [this, null]);
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'contains$O', function (o) {
return this.this$0.containsValue$O(o);
});

Clazz_newMeth(C$, 'remove$O', function (o) {
for (var i = this.iterator(); i.hasNext(); ) {
if (i.next() === o ) {
i.remove();
return true;
}}
return false;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.IdentityHashMap'].clear();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.IdentityHashMap, "EntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'iterator', function () {
return Clazz_new_((I$[3]||$incl$(3)), [this, null]);
});

Clazz_newMeth(C$, 'contains$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry = o;
return this.this$0.containsMapping$O$O.apply(this.this$0, [entry.getKey(), entry.getValue()]);
});

Clazz_newMeth(C$, 'remove$O', function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry = o;
return this.this$0.removeMapping$O$O.apply(this.this$0, [entry.getKey(), entry.getValue()]);
});

Clazz_newMeth(C$, 'size', function () {
return this.this$0.$size;
});

Clazz_newMeth(C$, 'clear', function () {
this.b$['java.util.IdentityHashMap'].clear();
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (c) {
var modified = false;
for (var i = this.iterator(); i.hasNext(); ) {
if (c.contains$O(i.next())) {
i.remove();
modified = true;
}}
return modified;
});

Clazz_newMeth(C$, 'toArray', function () {
var size = this.size();
var result = Clazz_array(java.lang.Object, [size]);
var it = this.iterator();
for (var i = 0; i < size; i++) result[i] = Clazz_new_((I$[4]||$incl$(4)).c$$java_util_Map_Entry,[it.next()]);

return result;
});

Clazz_newMeth(C$, 'toArray$TTA', function (a) {
var size = this.size();
if (a.length < size) a = Clazz_array(a.getClass().getComponentType(), size);
var it = this.iterator();
for (var i = 0; i < size; i++) a[i] = Clazz_new_((I$[4]||$incl$(4)).c$$java_util_Map_Entry,[it.next()]);

if (a.length > size) a[size] = null;
return a;
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:13
(function(){var P$=java.util,I$=[['java.util.HashMap','java.lang.StringBuilder','java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Locale", null, null, ['Cloneable', 'java.io.Serializable']);
C$.cache = null;
C$.ENGLISH = null;
C$.US = null;
C$.ROOT = null;
var p$=C$.prototype;
C$.defaultLocale = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.cache = Clazz_new_((I$[1]||$incl$(1)).c$$I,[32]);
C$.ENGLISH = C$.createSingleton$S$S$S("en__", "en", "");
C$.US = C$.createSingleton$S$S$S("en_US_", "en", "US");
C$.ROOT = C$.createSingleton$S$S$S("__", "", "");
C$.defaultLocale = null;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.language = null;
this.country = null;
this.variant = null;
this.hashCodeValue = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.hashCodeValue = 0;
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S', function (language, country, variant) {
C$.$init$.apply(this);
this.language = language.toLowerCase().intern();
this.country = country.toUpperCase().intern();
this.variant = variant.toUpperCase().intern();
}, 1);

Clazz_newMeth(C$, 'c$$S$S', function (language, country) {
C$.c$$S$S$S.apply(this, [language, country, ""]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (language) {
C$.c$$S$S$S.apply(this, [language, "", ""]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$Z', function (language, country, flag) {
C$.$init$.apply(this);
this.language = language;
this.country = country;
this.variant = "";
}, 1);

Clazz_newMeth(C$, 'createSingleton$S$S$S', function (key, language, country) {
var locale = Clazz_new_(C$.c$$S$S$Z,[language, country, false]);
C$.cache.put$TK$TV(key, locale);
return locale;
}, 1);

Clazz_newMeth(C$, 'getInstance$S$S$S', function (language, country, variant) {
if (language == null  || country == null   || variant == null  ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}var sb = Clazz_new_((I$[2]||$incl$(2)));
sb.append$S(language).append$C("_").append$S(country).append$C("_").append$S(variant);
var key = sb.toString();
var locale = C$.cache.get$O(key);
if (locale == null ) {
locale = Clazz_new_(C$.c$$S$S$S,[language, country, variant]);
var l = C$.cache.put$TK$TV(key, locale);
if (l != null ) {
locale = l;
}}return locale;
}, 1);

Clazz_newMeth(C$, 'getDefault', function () {
if (C$.defaultLocale == null ) {
C$.defaultLocale = Clazz_new_(C$.c$$S$S$S,["en", "US", ""]);
}return C$.defaultLocale;
}, 1);

Clazz_newMeth(C$, 'setDefault$java_util_Locale', function (newLocale) {
if (newLocale == null ) throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Can\'t set default locale to NULL"]);
C$.defaultLocale = newLocale;
}, 1);

Clazz_newMeth(C$, 'getLanguage', function () {
return this.language;
});

Clazz_newMeth(C$, 'getCountry', function () {
return this.country;
});

Clazz_newMeth(C$, 'getVariant', function () {
return this.variant;
});

Clazz_newMeth(C$, 'toString', function () {
var l = this.language.length$() != 0;
var c = this.country.length$() != 0;
var v = this.variant.length$() != 0;
var result = Clazz_new_((I$[2]||$incl$(2)).c$$S,[this.language]);
if (c || (l && v ) ) {
result.append$C("_").append$S(this.country);
}if (v && (l || c ) ) {
result.append$C("_").append$S(this.variant);
}return result.toString();
});

Clazz_newMeth(C$, 'getDisplayLanguage', function () {
return this.getDisplayLanguage$java_util_Locale(C$.getDefault());
});

Clazz_newMeth(C$, 'getDisplayLanguage$java_util_Locale', function (inLocale) {
return p$.getDisplayString$S$java_util_Locale$I.apply(this, [this.language, inLocale, 0]);
});

Clazz_newMeth(C$, 'getDisplayCountry', function () {
return this.getDisplayCountry$java_util_Locale(C$.getDefault());
});

Clazz_newMeth(C$, 'getDisplayCountry$java_util_Locale', function (inLocale) {
return p$.getDisplayString$S$java_util_Locale$I.apply(this, [this.country, inLocale, 1]);
});

Clazz_newMeth(C$, 'getDisplayString$S$java_util_Locale$I', function (code, inLocale, type) {
if (code.length$() == 0) {
return "";
}if (inLocale == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}return inLocale.toString();
});

Clazz_newMeth(C$, 'getDisplayVariant', function () {
return this.getDisplayVariant$java_util_Locale(C$.getDefault());
});

Clazz_newMeth(C$, 'getDisplayVariant$java_util_Locale', function (inLocale) {
if (this.variant.length$() == 0) return "";
return this.variant;
});

Clazz_newMeth(C$, 'getDisplayName', function () {
return this.getDisplayName$java_util_Locale(C$.getDefault());
});

Clazz_newMeth(C$, 'getDisplayName$java_util_Locale', function (inLocale) {
return inLocale.toString();
});

Clazz_newMeth(C$, 'clone', function () {
try {
var that = Clazz_clone(this);
return that;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[3]||$incl$(3)));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'hashCode', function () {
var hc = this.hashCodeValue;
if (hc == 0) {
hc = (this.language.hashCode() << 8) ^ this.country.hashCode() ^ (this.variant.hashCode() << 4) ;
this.hashCodeValue = hc;
}return hc;
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (this === obj ) return true;
if (!(Clazz_instanceOf(obj, "java.util.Locale"))) return false;
var other = obj;
return this.language == other.language && this.country == other.country  && this.variant == other.variant ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:14
(function(){var P$=java.util,I$=[];
var C$=Clazz_newClass(P$, "MapEntry", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, [['java.util.Map','java.util.Map.Entry'], 'Cloneable']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = null;
this.value = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['c$$TK'], function (theKey) {
C$.$init$.apply(this);
this.key = theKey;
}, 1);

Clazz_newMeth(C$, ['c$$TK$TV'], function (theKey, theValue) {
C$.$init$.apply(this);
this.key = theKey;
this.value = theValue;
}, 1);

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'equals$O', function (object) {
if (this === object ) {
return true;
}if (Clazz_instanceOf(object, "java.util.Map.Entry")) {
var entry = object;
return (this.key == null  ? entry.getKey() == null  : this.key.equals$O(entry.getKey())) && (this.value == null  ? entry.getValue() == null  : this.value.equals$O(entry.getValue())) ;
}return false;
});

Clazz_newMeth(C$, 'getKey', function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, 'hashCode', function () {
return (this.key == null  ? 0 : this.key.hashCode()) ^ (this.value == null  ? 0 : this.value.hashCode());
});

Clazz_newMeth(C$, ['setValue$TV'], function (object) {
var result = this.value;
this.value = object;
return result;
});

Clazz_newMeth(C$, 'toString', function () {
return this.key + "=" + this.value ;
});
;
(function(){var C$=Clazz_newInterface(P$.MapEntry, "Type", function(){
});
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:14
(function(){var P$=Clazz_newPackage("javajs.api"),I$=[];
var C$=Clazz_newInterface(P$, "JSFunction");
})();
//Created 2018-05-15 01:02:16
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[['javajs.util.Rdr']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AjaxURLConnection", null, 'java.net.URLConnection');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.bytesOut = null;
this.postOut = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.postOut = "";
}, 1);

Clazz_newMeth(C$, 'c$$java_net_URL', function (url) {
C$.superclazz.c$$java_net_URL.apply(this, [url]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'doAjax$Z', function (isBinary) {
var j2s = null;
{
j2s = J2S;
}
return j2s._doAjax(this.url, this.postOut, this.bytesOut, isBinary);
});

Clazz_newMeth(C$, 'connect', function () {
});

Clazz_newMeth(C$, 'outputBytes$BA', function (bytes) {
this.bytesOut = bytes;
});

Clazz_newMeth(C$, 'outputString$S', function (post) {
this.postOut = post;
});

Clazz_newMeth(C$, 'getInputStream', function () {
var is = C$.getAttachedStreamData$java_net_URL$Z(this.url, false);
return (is == null  ? C$.attachStreamData$java_net_URL$O(this.url, p$.doAjax$Z.apply(this, [true])) : is);
});

Clazz_newMeth(C$, 'getAttachedStreamData$java_net_URL$Z', function (url, andDelete) {
var data = null;
{
data = url._streamData;
if (andDelete) url._streamData = null;
}
return (data == null  ? null : (I$[1]||$incl$(1)).toBIS$O(data));
}, 1);

Clazz_newMeth(C$, 'attachStreamData$java_net_URL$O', function (url, o) {

url._streamData = o;
return (o == null  ? null : (I$[1]||$incl$(1)).toBIS$O(o));
}, 1);

Clazz_newMeth(C$, 'getContents', function () {
return p$.doAjax$Z.apply(this, [false]);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:17
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[['java.util.Hashtable','javajs.util.AjaxURLStreamHandler']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AjaxURLStreamHandlerFactory", null, null, 'java.net.URLStreamHandlerFactory');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.htFactories = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.htFactories = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createURLStreamHandler$S', function (protocol) {
var fac = this.htFactories.get$O(protocol);
if (fac == null ) this.htFactories.put$TK$TV(protocol, fac = Clazz_new_((I$[2]||$incl$(2)).c$$S,[protocol]));
return (fac.protocol == null  ? null : fac);
});
})();
//Created 2018-05-15 01:02:17
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[['java.lang.reflect.Array','javajs.util.T3','java.util.Arrays','javajs.util.Lst','java.util.Hashtable']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AU");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'ensureLength$O$I', function (array, minimumLength) {
return (array != null  && C$.getLength$O(array) >= minimumLength  ? array : C$.arrayCopyObject$O$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthS$SA$I', function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyS$SA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthA$FA$I', function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyF$FA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthI$IA$I', function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyI$IA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthShort$HA$I', function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyShort$HA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthByte$BA$I', function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyByte$BA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'doubleLength$O', function (array) {
return C$.arrayCopyObject$O$I(array, (array == null  ? 16 : 2 * C$.getLength$O(array)));
}, 1);

Clazz_newMeth(C$, 'doubleLengthS$SA', function (array) {
return C$.arrayCopyS$SA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthF$FA', function (array) {
return C$.arrayCopyF$FA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthI$IA', function (array) {
return C$.arrayCopyI$IA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthShort$HA', function (array) {
return C$.arrayCopyShort$HA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthByte$BA', function (array) {
return C$.arrayCopyByte$BA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthBool$ZA', function (array) {
return C$.arrayCopyBool$ZA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'deleteElements$O$I$I', function (array, firstElement, nElements) {
if (nElements == 0 || array == null  ) return array;
var oldLength = C$.getLength$O(array);
if (firstElement >= oldLength) return array;
var n = oldLength - (firstElement + nElements);
if (n < 0) n = 0;
var t = C$.newInstanceO$O$I(array, firstElement + n);
if (firstElement > 0) System.arraycopy(array, 0, t, 0, firstElement);
if (n > 0) System.arraycopy(array, firstElement + nElements, t, firstElement, n);
return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyObject$O$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : C$.getLength$O(array));
if (newLength < 0) newLength = oldLength;
if (newLength == oldLength) return array;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = C$.newInstanceO$O$I(array, newLength);
if (oldLength > 0) System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
return t;
}, 1);

Clazz_newMeth(C$, 'newInstanceO$O$I', function (array, n) {
return Clazz_array(array.getClass().getComponentType(), n);
}, 1);

Clazz_newMeth(C$, 'getLength$O', function (array) {
{
return array.length
}
}, 1);

Clazz_newMeth(C$, 'arrayCopyS$SA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(java.lang.String, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyII$IAA$I', function (array, newLength) {
var t = C$.newInt2$I(newLength);
if (array != null ) {
var oldLength = array.length;
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyPt$javajs_util_T3A$I', function (array, newLength) {
if (newLength < 0) newLength = array.length;
var t = Clazz_array((I$[2]||$incl$(2)), [newLength]);
if (array != null ) {
var oldLength = array.length;
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyF$FA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(Float.TYPE, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyI$IA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(Integer.TYPE, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyRangeI$IA$I$I', function (array, i0, n) {
if (array == null ) return null;
var oldLength = array.length;
if (n == -1) n = oldLength;
if (n == -2) n = (oldLength/2|0);
{
return Clazz_array(-1, array, i0, n);
}
n = n-(i0);
var t = Clazz_array(Integer.TYPE, [n]);
System.arraycopy(array, i0, t, 0, n);
return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyRangeRevI$IA$I$I', function (array, i0, n) {
if (array == null ) return null;
{
return Clazz_array(-1, array, i0, n).reverse();
}
var t = C$.arrayCopyRangeI$IA$I$I(array, i0, n);
if (n < 0) n = array.length;
for (var i = (n/2|0); --i >= 0; ) C$.swapInt$IA$I$I(t, i, n - 1 - i );

return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyShort$HA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(Short.TYPE, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyByte$BA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(Byte.TYPE, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyBool$ZA$I', function (array, newLength) {
var oldLength = (array == null  ? -1 : array.length);
if (newLength < 0) newLength = oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t = Clazz_array(Boolean.TYPE, [newLength]);
if (array != null ) {
System.arraycopy(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'swapInt$IA$I$I', function (array, indexA, indexB) {
var t = array[indexA];
array[indexA] = array[indexB];
array[indexB] = t;
}, 1);

Clazz_newMeth(C$, 'dumpArray$S$FAA$I$I$I$I', function (msg, A, x1, x2, y1, y2) {
var s = "dumpArray: " + msg + "\n" ;
for (var x = x1; x <= x2; x++) s += "\t*" + x + "*" ;

for (var y = y2; y >= y1; y--) {
s += "\n*" + y + "*" ;
for (var x = x1; x <= x2; x++) s += "\t" + new Float((x < A.length && y < A[x].length  ? A[x][y] : NaN)).toString();

}
return s;
}, 1);

Clazz_newMeth(C$, 'dumpIntArray$IA$I', function (A, n) {
var str = "";
for (var i = 0; i < n; i++) str += " " + A[i];

return str;
}, 1);

Clazz_newMeth(C$, 'sortedItem$javajs_util_Lst$I', function (v, n) {
if (v.size() == 0) return null;
if (v.size() == 1) return v.get$I(0);
var keys = v.toArray$TTA(Clazz_array(java.lang.String, [v.size()]));
(I$[3]||$incl$(3)).sort$OA(keys);
return keys[n % keys.length];
}, 1);

Clazz_newMeth(C$, 'createArrayOfArrayList$I', function (size) {
return Clazz_array((I$[4]||$incl$(4)), [size]);
}, 1);

Clazz_newMeth(C$, 'createArrayOfHashtable$I', function (size) {
return Clazz_array((I$[5]||$incl$(5)), [size]);
}, 1);

Clazz_newMeth(C$, 'swap$OA$I$I', function (o, i, j) {
var oi = o[i];
o[i] = o[j];
o[j] = oi;
}, 1);

Clazz_newMeth(C$, 'newFloat2$I', function (n) {
return Clazz_array(Float.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newBool2$I', function (n) {
return Clazz_array(Boolean.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newInt2$I', function (n) {
return Clazz_array(Integer.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newInt3$I$I', function (nx, ny) {
return (ny < 0 ? Clazz_array(Integer.TYPE, [nx, null, null]) : Clazz_array(Integer.TYPE, [nx, ny, null]));
}, 1);

Clazz_newMeth(C$, 'newFloat3$I$I', function (nx, ny) {
return (ny < 0 ? Clazz_array(Float.TYPE, [nx, null, null]) : Clazz_array(Float.TYPE, [nx, ny, null]));
}, 1);

Clazz_newMeth(C$, 'newInt4$I', function (n) {
return Clazz_array(Integer.TYPE, [n, null, null, null]);
}, 1);

Clazz_newMeth(C$, 'newShort2$I', function (n) {
return Clazz_array(Short.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newByte2$I', function (n) {
return Clazz_array(Byte.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newDouble2$I', function (n) {
return Clazz_array(Double.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'removeMapKeys$java_util_Map$S', function (map, root) {
var list = Clazz_new_((I$[4]||$incl$(4)));
for (var key, $key = map.keySet().iterator(); $key.hasNext()&&((key=$key.next()),1);) if (key.startsWith$S(root)) list.addLast$TV(key);

for (var i = list.size(); --i >= 0; ) map.remove$O(list.get$I(i));

return list.size();
}, 1);

Clazz_newMeth(C$, 'isAS$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(java.lang.String, -1));
}, 1);

Clazz_newMeth(C$, 'isASS$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(java.lang.String, -2));
}, 1);

Clazz_newMeth(C$, 'isAP$O', function (x) {
return Clazz_instanceOf(x, Clazz_array((I$[2]||$incl$(2)), -1));
}, 1);

Clazz_newMeth(C$, 'isAF$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Float.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isAFloat$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(java.lang.Float, -1));
}, 1);

Clazz_newMeth(C$, 'isAD$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Double.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isADD$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Double.TYPE, -2));
}, 1);

Clazz_newMeth(C$, 'isAB$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Byte.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isAI$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Integer.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isAII$O', function (x) {
return (Clazz_instanceOf(x, Clazz_array(Integer.TYPE, -2)));
}, 1);

Clazz_newMeth(C$, 'isAFF$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Float.TYPE, -2));
}, 1);

Clazz_newMeth(C$, 'isAFFF$O', function (x) {
return Clazz_instanceOf(x, Clazz_array(Float.TYPE, -3));
}, 1);

Clazz_newMeth(C$, 'ensureSignedBytes$BA', function (b) {
if (b != null ) {
{
for (var i = b.length; --i >= 0;) { var j = b[i] & 0xFF; if (j >= 0x80) j -= 0x100; b[i] = j; }
}
}return b;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:17
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[['javajs.util.JSThread$1']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSThread", null, 'Thread', 'javajs.api.JSFunction');
C$.threadCount = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.threadCount = 0;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.isJS = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$ThreadGroup$S.apply(this, [null, "JSThread-" + (++C$.threadCount)]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.c$$ThreadGroup$S.apply(this, [null, name]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S', function (group, name) {
C$.superclazz.c$$ThreadGroup$S.apply(this, [group, name]);
C$.$init$.apply(this);
{
this.isJS = true;
}
}, 1);

Clazz_newMeth(C$, 'run', function () {
this.run1$I(0);
});

Clazz_newMeth(C$, 'start', function () {
{
Clazz_load("swingjs.JSToolkit").dispatch$O$I$I(this, 1, 0);
}
});

Clazz_newMeth(C$, 'run1$I', function (state) {
var executeFinally = true;
try {
while (!Thread.interrupted()){
switch (state) {
case 0:
if (!this.myInit()) return;
state = 1;
continue;
case 1:
if (!this.isLooping()) {
state = 2;
continue;
}if (this.myLoop() && this.sleepAndReturn$I$I(this.getDelayMillis(), state) ) {
executeFinally = false;
return;
}continue;
case 2:
this.whenDone();
return;
}
}
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
this.onException$Exception(e);
state = 2;
} else {
throw e;
}
} finally {
if (executeFinally) this.doFinally();
}
});

Clazz_newMeth(C$, 'sleepAndReturn$I$I', function (delay, state) {
if (!this.isJS) {
Thread.sleep$J(delay);
return false;
}var me = this;
var r = ((
(function(){var C$=Clazz_newClass(P$, "JSThread$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
this.$finals.me.run1$I(this.$finals.state);
});
})()
), Clazz_new_((I$[1]||$incl$(1)).$init$, [this, {me: me, state: state}]));
{
setTimeout( function() { java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent$java_awt_AWTEvent( Clazz_new_(java.awt.event.InvocationEvent.c$$O$Runnable,[me, r]))}, delay);
}
return true;
});
})();
//Created 2018-05-15 01:02:18
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
var C$=Clazz_newClass(P$, "Lst", null, 'java.util.ArrayList');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['addLast$TV'], function (v) {
return C$.superclazz.prototype.add$TE.apply(this, [v]);
});

Clazz_newMeth(C$, 'removeItemAt$I', function (location) {
return C$.superclazz.prototype.remove$I.apply(this, [location]);
});

Clazz_newMeth(C$, 'removeObj$O', function (v) {
return C$.superclazz.prototype.remove$O.apply(this, [v]);
});
})();
//Created 2018-05-15 01:02:18
(function(){var P$=Clazz_newPackage("javajs.util"),I$=[['javajs.util.DF','javajs.util.SB','javajs.util.AU','java.lang.reflect.Array']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "PT");
C$.tensScale = null;
C$.decimalScale = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.tensScale = Clazz_array(Float.TYPE, -1, [10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0]);
C$.decimalScale = Clazz_array(Float.TYPE, -1, [0.1, 0.01, 0.001, 1.0E-4, 1.0E-5, 1.0E-6, 1.0E-7, 1.0E-8, 1.0E-9]);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'parseInt$S', function (str) {
return C$.parseIntNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseIntNext$S$IA', function (str, next) {
var cch = str.length$();
if (next[0] < 0 || next[0] >= cch ) return -2147483648;
return C$.parseIntChecked$S$I$IA(str, cch, next);
}, 1);

Clazz_newMeth(C$, 'parseIntChecked$S$I$IA', function (str, ichMax, next) {
var digitSeen = false;
var value = 0;
var ich = next[0];
if (ich < 0) return -2147483648;
var ch;
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var negative = false;
if (ich < ichMax && (str.charCodeAt(ich)) == 45  ) {
negative = true;
++ich;
}while (ich < ichMax && (ch = str.charAt(ich).$c()) >= 48  && ch <= 57 ){
value = value * 10 + (ch - 48);
digitSeen = true;
++ich;
}
if (!digitSeen) value = -2147483648;
 else if (negative) value = -value;
next[0] = ich;
return value;
}, 1);

Clazz_newMeth(C$, 'isWhiteSpace$S$I', function (str, ich) {
var ch;
return (ich >= 0 && ((ch = str.charAt(ich)) == " " || ch == "\u0009"  || ch == "\u000a" ) );
}, 1);

Clazz_newMeth(C$, 'parseFloatChecked$S$I$IA$Z', function (str, ichMax, next, isStrict) {
var digitSeen = false;
var ich = next[0];
if (isStrict && str.indexOf("\u000a") != str.lastIndexOf("\u000a") ) return NaN;
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var negative = false;
if (ich < ichMax && str.charAt(ich) == "-" ) {
++ich;
negative = true;
}var ch = 0;
var ival = 0.0;
var ival2 = 0.0;
while (ich < ichMax && (ch = str.charAt(ich).$c()) >= 48  && ch <= 57 ){
ival = (ival * 10.0) + (ch - 48) * 1.0;
++ich;
digitSeen = true;
}
var isDecimal = false;
var iscale = 0;
var nzero = (ival == 0  ? -1 : 0);
if (ch == 46 ) {
isDecimal = true;
while (++ich < ichMax && (ch = str.charAt(ich).$c()) >= 48  && ch <= 57 ){
digitSeen = true;
if (nzero < 0) {
if (ch == 48) {
nzero--;
continue;
}nzero = -nzero;
}if (iscale < C$.decimalScale.length) {
ival2 = (ival2 * 10.0) + (ch - 48) * 1.0;
iscale++;
}}
}var value;
if (!digitSeen) {
value = NaN;
} else if (ival2 > 0 ) {
value = ival2 * C$.decimalScale[iscale - 1];
if (nzero > 1) {
if (nzero - 2 < C$.decimalScale.length) {
value *= C$.decimalScale[nzero - 2];
} else {
value *= Math.pow(10, 1 - nzero);
}} else {
value += ival;
}} else {
value = ival;
}var isExponent = false;
if (ich < ichMax && (ch == 69 || ch == 101  || ch == 68 ) ) {
isExponent = true;
if (++ich >= ichMax) return NaN;
ch = str.charAt(ich).$c();
if ((ch == 43 ) && (++ich >= ichMax) ) return NaN;
next[0] = ich;
var exponent = C$.parseIntChecked$S$I$IA(str, ichMax, next);
if (exponent == -2147483648) return NaN;
if (exponent > 0 && exponent <= C$.tensScale.length ) value *= C$.tensScale[exponent - 1];
 else if (exponent < 0 && -exponent <= C$.decimalScale.length ) value *= C$.decimalScale[-exponent - 1];
 else if (exponent != 0) value *= Math.pow(10, exponent);
} else {
next[0] = ich;
}if (negative) value = -value;
if (value == Infinity ) value = 3.4028235E38;
return (!isStrict || (!isExponent || isDecimal ) && C$.checkTrailingText$S$I$I(str, next[0], ichMax)   ? value : NaN);
}, 1);

Clazz_newMeth(C$, 'checkTrailingText$S$I$I', function (str, ich, ichMax) {
var ch;
while (ich < ichMax && (C$.isWhitespace$C(ch = str.charAt(ich)) || ch == ";" ) )++ich;

return (ich == ichMax);
}, 1);

Clazz_newMeth(C$, 'parseFloatArray$S', function (str) {
return C$.parseFloatArrayNext$S$IA$FA$S$S(str, Clazz_array(Integer.TYPE, [1]), null, null, null);
}, 1);

Clazz_newMeth(C$, 'parseFloatArrayInfested$SA$FA', function (tokens, data) {
var len = data.length;
var nTokens = tokens.length;
var n = 0;
var max = 0;
for (var i = 0; i >= 0 && i < len  && n < nTokens ; i++) {
var f;
while (Float.isNaN(f = C$.parseFloat$S(tokens[n++])) && n < nTokens ){
}
if (!Float.isNaN(f)) data[(max = i)] = f;
if (n == nTokens) break;
}
return max + 1;
}, 1);

Clazz_newMeth(C$, 'parseFloatArrayNext$S$IA$FA$S$S', function (str, next, f, strStart, strEnd) {
var n = 0;
var pt = next[0];
if (pt >= 0) {
if (strStart != null ) {
var p = str.indexOf(strStart, pt);
if (p >= 0) next[0] = p + strStart.length$();
}str = str.substring(next[0]);
pt = (strEnd == null  ? -1 : str.indexOf(strEnd));
if (pt < 0) pt = str.length$();
 else str = str.substring(0, pt);
next[0] = next[0]+(pt + 1);
var tokens = C$.getTokens$S(str);
if (f == null ) f = Clazz_array(Float.TYPE, [tokens.length]);
n = C$.parseFloatArrayInfested$SA$FA(tokens, f);
}if (f == null ) return Clazz_array(Float.TYPE, [0]);
for (var i = n; i < f.length; i++) f[i] = NaN;

return f;
}, 1);

Clazz_newMeth(C$, 'parseFloatRange$S$I$IA', function (str, ichMax, next) {
var cch = str.length$();
if (ichMax > cch) ichMax = cch;
if (next[0] < 0 || next[0] >= ichMax ) return NaN;
return C$.parseFloatChecked$S$I$IA$Z(str, ichMax, next, false);
}, 1);

Clazz_newMeth(C$, 'parseFloatNext$S$IA', function (str, next) {
var cch = (str == null  ? -1 : str.length$());
return (next[0] < 0 || next[0] >= cch  ? NaN : C$.parseFloatChecked$S$I$IA$Z(str, cch, next, false));
}, 1);

Clazz_newMeth(C$, 'parseFloatStrict$S', function (str) {
var cch = str.length$();
if (cch == 0) return NaN;
return C$.parseFloatChecked$S$I$IA$Z(str, cch, Clazz_array(Integer.TYPE, -1, [0]), true);
}, 1);

Clazz_newMeth(C$, 'parseFloat$S', function (str) {
return C$.parseFloatNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseIntRadix$S$I', function (s, i) {
{
return Integer.parseIntRadix(s, i);
}
}, 1);

Clazz_newMeth(C$, 'getTokens$S', function (line) {
return C$.getTokensAt$S$I(line, 0);
}, 1);

Clazz_newMeth(C$, 'parseToken$S', function (str) {
return C$.parseTokenNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseTrimmed$S', function (str) {
return C$.parseTrimmedRange$S$I$I(str, 0, str.length$());
}, 1);

Clazz_newMeth(C$, 'parseTrimmedAt$S$I', function (str, ichStart) {
return C$.parseTrimmedRange$S$I$I(str, ichStart, str.length$());
}, 1);

Clazz_newMeth(C$, 'parseTrimmedRange$S$I$I', function (str, ichStart, ichMax) {
var cch = str.length$();
if (ichMax < cch) cch = ichMax;
if (cch < ichStart) return "";
return C$.parseTrimmedChecked$S$I$I(str, ichStart, cch);
}, 1);

Clazz_newMeth(C$, 'getTokensAt$S$I', function (line, ich) {
if (line == null ) return null;
var cchLine = line.length$();
if (ich < 0 || ich > cchLine ) return null;
var tokenCount = C$.countTokens$S$I(line, ich);
var tokens = Clazz_array(java.lang.String, [tokenCount]);
var next = Clazz_array(Integer.TYPE, [1]);
next[0] = ich;
for (var i = 0; i < tokenCount; ++i) tokens[i] = C$.parseTokenChecked$S$I$IA(line, cchLine, next);

return tokens;
}, 1);

Clazz_newMeth(C$, 'countChar$S$C', function (line, c) {
var n = 0;
for (var i = line.lastIndexOf(c) + 1; --i >= 0; ) if (line.charAt(i) == c) n++;

return n;
}, 1);

Clazz_newMeth(C$, 'countTokens$S$I', function (line, ich) {
var tokenCount = 0;
if (line != null ) {
var ichMax = line.length$();
while (true){
while (ich < ichMax && C$.isWhiteSpace$S$I(line, ich) )++ich;

if (ich == ichMax) break;
++tokenCount;
do {
++ich;
} while (ich < ichMax && !C$.isWhiteSpace$S$I(line, ich) );
}
}return tokenCount;
}, 1);

Clazz_newMeth(C$, 'parseTokenNext$S$IA', function (str, next) {
var cch = str.length$();
return (next[0] < 0 || next[0] >= cch  ? null : C$.parseTokenChecked$S$I$IA(str, cch, next));
}, 1);

Clazz_newMeth(C$, 'parseTokenRange$S$I$IA', function (str, ichMax, next) {
var cch = str.length$();
if (ichMax > cch) ichMax = cch;
return (next[0] < 0 || next[0] >= ichMax  ? null : C$.parseTokenChecked$S$I$IA(str, ichMax, next));
}, 1);

Clazz_newMeth(C$, 'parseTokenChecked$S$I$IA', function (str, ichMax, next) {
var ich = next[0];
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var ichNonWhite = ich;
while (ich < ichMax && !C$.isWhiteSpace$S$I(str, ich) )++ich;

next[0] = ich;
return (ichNonWhite == ich ? null : str.substring(ichNonWhite, ich));
}, 1);

Clazz_newMeth(C$, 'parseTrimmedChecked$S$I$I', function (str, ich, ichMax) {
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var ichLast = ichMax - 1;
while (ichLast >= ich && C$.isWhiteSpace$S$I(str, ichLast) )--ichLast;

return (ichLast < ich ? "" : str.substring(ich, ichLast + 1));
}, 1);

Clazz_newMeth(C$, 'parseIntRange$S$I$IA', function (str, ichMax, next) {
var cch = str.length$();
if (ichMax > cch) ichMax = cch;
return (next[0] < 0 || next[0] >= ichMax  ? -2147483648 : C$.parseIntChecked$S$I$IA(str, ichMax, next));
}, 1);

Clazz_newMeth(C$, 'parseFloatArrayData$SA$FA', function (tokens, data) {
C$.parseFloatArrayDataN$SA$FA$I(tokens, data, data.length);
}, 1);

Clazz_newMeth(C$, 'parseFloatArrayDataN$SA$FA$I', function (tokens, data, nData) {
for (var i = nData; --i >= 0; ) data[i] = (i >= tokens.length ? NaN : C$.parseFloat$S(tokens[i]));

}, 1);

Clazz_newMeth(C$, 'split$S$S', function (text, run) {
if (text.length$() == 0) return Clazz_array(java.lang.String, [0]);
var n = 1;
var i = text.indexOf(run);
var lines;
var runLen = run.length$();
if (i < 0 || runLen == 0 ) {
lines = Clazz_array(java.lang.String, [1]);
lines[0] = text;
return lines;
}var len = text.length$() - runLen;
for (; i >= 0 && i < len ; n++) i = text.indexOf(run, i + runLen);

lines = Clazz_array(java.lang.String, [n]);
i = 0;
var ipt = 0;
var pt = 0;
for (; (ipt = text.indexOf(run, i)) >= 0 && pt + 1 < n ; ) {
lines[pt++] = text.substring(i, ipt);
i = ipt + runLen;
}
if (text.indexOf(run, len) != len) len = len+(runLen);
lines[pt] = text.substring(i, len);
return lines;
}, 1);

Clazz_newMeth(C$, 'getQuotedStringAt$S$I', function (line, ipt0) {
var next = Clazz_array(Integer.TYPE, -1, [ipt0]);
return C$.getQuotedStringNext$S$IA(line, next);
}, 1);

Clazz_newMeth(C$, 'getQuotedStringNext$S$IA', function (line, next) {
var i = next[0];
if (i < 0 || (i = line.indexOf("\"", i)) < 0 ) return "";
var pt = i + 1;
var len = line.length$();
while (++i < len && line.charAt(i) != "\"" )if (line.charAt(i) == "\\") i++;

next[0] = i + 1;
return line.substring(pt, i);
}, 1);

Clazz_newMeth(C$, 'getQuotedOrUnquotedAttribute$S$S', function (line, key) {
if (line == null  || key == null  ) return null;
var pt = line.toLowerCase().indexOf(key.toLowerCase() + "=");
if (pt < 0 || (pt = pt + key.length$() + 1 ) >= line.length$() ) return "";
var c = line.charAt(pt);
switch (c.$c()) {
case 39:
case 34:
pt++;
break;
default:
c = " ";
line += " ";
}
var pt1 = line.indexOf(c, pt);
return (pt1 < 0 ? null : line.substring(pt, pt1));
}, 1);

Clazz_newMeth(C$, 'getCSVString$S$IA', function (line, next) {
var i = next[1];
if (i < 0 || (i = line.indexOf("\"", i)) < 0 ) return null;
var pt = next[0] = i;
var len = line.length$();
var escaped = false;
var haveEscape = false;
while (++i < len && (line.charAt(i) != "\"" || (escaped = (i + 1 < len && line.charAt(i + 1) == "\"" )) ) )if (escaped) {
escaped = false;
haveEscape = true;
i++;
}
if (i >= len) {
next[1] = -1;
return null;
}next[1] = i + 1;
var s = line.substring(pt + 1, i);
return (haveEscape ? C$.rep$S$S$S(C$.rep$S$S$S(s, "\"\"", "\u0000"), "\u0000", "\"") : s);
}, 1);

Clazz_newMeth(C$, 'isOneOf$S$S', function (key, semiList) {
if (semiList.length$() == 0) return false;
if (semiList.charAt(0) != ";") semiList = ";" + semiList + ";" ;
return key.indexOf(";") < 0 && semiList.indexOf(';' + key + ';' ) >= 0 ;
}, 1);

Clazz_newMeth(C$, 'getQuotedAttribute$S$S', function (info, name) {
var i = info.indexOf(name + "=");
return (i < 0 ? null : C$.getQuotedStringAt$S$I(info, i));
}, 1);

Clazz_newMeth(C$, 'approx$F$F', function (f, n) {
return Math.round(f * n) / n;
}, 1);

Clazz_newMeth(C$, 'rep$S$S$S', function (str, strFrom, strTo) {
if (str == null  || strFrom.length$() == 0  || str.indexOf(strFrom) < 0 ) return str;
var isOnce = (strTo.indexOf(strFrom) >= 0);
do {
str = str.$replace(strFrom, strTo);
} while (!isOnce && str.indexOf(strFrom) >= 0 );
return str;
}, 1);

Clazz_newMeth(C$, 'formatF$F$I$I$Z$Z', function (value, width, precision, alignLeft, zeroPad) {
return C$.formatS$S$I$I$Z$Z((I$[1]||$incl$(1)).formatDecimal$F$I(value, precision), width, 0, alignLeft, zeroPad);
}, 1);

Clazz_newMeth(C$, 'formatD$D$I$I$Z$Z$Z', function (value, width, precision, alignLeft, zeroPad, allowOverflow) {
return C$.formatS$S$I$I$Z$Z((I$[1]||$incl$(1)).formatDecimal$F$I(value, -1 - precision), width, 0, alignLeft, zeroPad);
}, 1);

Clazz_newMeth(C$, 'formatS$S$I$I$Z$Z', function (value, width, precision, alignLeft, zeroPad) {
if (value == null ) return "";
var len = value.length$();
if (precision != 2147483647 && precision > 0  && precision < len ) value = value.substring(0, precision);
 else if (precision < 0 && len + precision >= 0 ) value = value.substring(len + precision + 1 );
var padLength = width - value.length$();
if (padLength <= 0) return value;
var isNeg = (zeroPad && !alignLeft && value.charAt(0) == "-"  );
var padChar = (zeroPad ? "0" : " ");
var padChar0 = (isNeg ? "-" : padChar);
var sb = Clazz_new_((I$[2]||$incl$(2)));
if (alignLeft) sb.append$S(value);
sb.appendC$C(padChar0);
for (var i = padLength; --i > 0; ) sb.appendC$C(padChar);

if (!alignLeft) sb.append$S(isNeg ? padChar + value.substring(1) : value);
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'replaceWithCharacter$S$S$C', function (str, strFrom, chTo) {
if (str == null ) return null;
for (var i = strFrom.length$(); --i >= 0; ) str = str.$replace(strFrom.charAt(i), chTo);

return str;
}, 1);

Clazz_newMeth(C$, 'replaceAllCharacters$S$S$S', function (str, strFrom, strTo) {
for (var i = strFrom.length$(); --i >= 0; ) {
var chFrom = strFrom.substring(i, i + 1);
str = C$.rep$S$S$S(str, chFrom, strTo);
}
return str;
}, 1);

Clazz_newMeth(C$, 'trim$S$S', function (str, chars) {
if (str == null  || str.length$() == 0 ) return str;
if (chars.length$() == 0) return str.trim();
var len = str.length$();
var k = 0;
while (k < len && chars.indexOf(str.charAt(k)) >= 0 )k++;

var m = str.length$() - 1;
while (m > k && chars.indexOf(str.charAt(m)) >= 0 )m--;

return str.substring(k, m + 1);
}, 1);

Clazz_newMeth(C$, 'trimQuotes$S', function (value) {
return (value != null  && value.length$() > 1  && value.startsWith$S("\"")  && value.endsWith$S("\"")  ? value.substring(1, value.length$() - 1) : value);
}, 1);

Clazz_newMeth(C$, 'isNonStringPrimitive$O', function (info) {
return Clazz_instanceOf(info, "java.lang.Number") || Clazz_instanceOf(info, "java.lang.Boolean") ;
}, 1);

Clazz_newMeth(C$, 'toJSON$S$O', function (infoType, info) {
if (info == null ) return C$.packageJSON$S$S(infoType, null);
if (C$.isNonStringPrimitive$O(info)) return C$.packageJSON$S$S(infoType, info.toString());
var s = null;
var sb = null;
while (true){
if (Clazz_instanceOf(info, "java.lang.String")) {
s = info;
{
if (typeof s == "undefined") s = "null"
}
if (s.indexOf("{\"") != 0) {
s = C$.esc$S(s);
}break;
}if (Clazz_instanceOf(info, "javajs.api.JSONEncodable")) {
if ((s = (info).toJSON()) == null ) s = "null";
break;
}sb = Clazz_new_((I$[2]||$incl$(2)));
if (Clazz_instanceOf(info, "java.util.Map")) {
sb.append$S("{ ");
var sep = "";
for (var key, $key = (info).keySet().iterator(); $key.hasNext()&&((key=$key.next()),1);) {
sb.append$S(sep).append$S(C$.packageJSON$S$S(key, C$.toJSON$S$O(null, (info).get$O(key))));
sep = ",";
}
sb.append$S(" }");
break;
}if (Clazz_instanceOf(info, "javajs.util.Lst")) {
sb.append$S("[ ");
var n = (info).size();
for (var i = 0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.append$S(C$.toJSON$S$O(null, (info).get$I(i)));
}
sb.append$S(" ]");
break;
}if (Clazz_instanceOf(info, "javajs.util.M34")) {
var len = (Clazz_instanceOf(info, "javajs.util.M4") ? 4 : 3);
var x = Clazz_array(Float.TYPE, [len]);
var m = info;
sb.appendC$C("[");
for (var i = 0; i < len; i++) {
if (i > 0) sb.appendC$C(",");
m.getRow$I$FA(i, x);
sb.append$S(C$.toJSON$S$O(null, x));
}
sb.appendC$C("]");
break;
}s = C$.nonArrayString$O(info);
if (s == null ) {
sb.append$S("[");
var n = (I$[3]||$incl$(3)).getLength$O(info);
for (var i = 0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.append$S(C$.toJSON$S$O(null, (I$[4]||$incl$(4)).get(info, i)));
}
sb.append$S("]");
break;
}info = info.toString();
}
return C$.packageJSON$S$S(infoType, (s == null  ? sb.toString() : s));
}, 1);

Clazz_newMeth(C$, 'nonArrayString$O', function (x) {
{
return (x.constructor == Array || x.BYTES_PER_ELEMENT ? null : x.toString());
}
}, 1);

Clazz_newMeth(C$, 'byteArrayToJSON$BA', function (data) {
var sb = Clazz_new_((I$[2]||$incl$(2)));
sb.append$S("[");
var n = data.length;
for (var i = 0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.appendI$I(data[i] & 255);
}
sb.append$S("]");
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'packageJSON$S$S', function (infoType, info) {
return (infoType == null  ? info : "\"" + infoType + "\": " + info );
}, 1);

Clazz_newMeth(C$, 'escapeUrl$S', function (url) {
url = C$.rep$S$S$S(url, "\u000a", "");
url = C$.rep$S$S$S(url, "%", "%25");
url = C$.rep$S$S$S(url, "#", "%23");
url = C$.rep$S$S$S(url, "[", "%5B");
url = C$.rep$S$S$S(url, "\\", "%5C");
url = C$.rep$S$S$S(url, "]", "%5D");
url = C$.rep$S$S$S(url, " ", "%20");
return url;
}, 1);

Clazz_newMeth(C$, 'esc$S', function (str) {
if (str == null  || str.length$() == 0 ) return "\"\"";
var haveEscape = false;
var i = 0;
for (; i < "\\\\\u0009t\u000dr\u000an\"\"".length$(); i = i+(2)) if (str.indexOf("\\\\\u0009t\u000dr\u000an\"\"".charAt(i)) >= 0) {
haveEscape = true;
break;
}
if (haveEscape) while (i < "\\\\\u0009t\u000dr\u000an\"\"".length$()){
var pt = -1;
var ch = "\\\\\u0009t\u000dr\u000an\"\"".charAt(i++);
var ch2 = "\\\\\u0009t\u000dr\u000an\"\"".charAt(i++);
var sb = Clazz_new_((I$[2]||$incl$(2)));
var pt0 = 0;
while ((pt = str.indexOf(ch, pt + 1)) >= 0){
sb.append$S(str.substring(pt0, pt)).appendC$C("\\").appendC$C(ch2);
pt0 = pt + 1;
}
sb.append$S(str.substring(pt0, str.length$()));
str = sb.toString();
}
return "\"" + C$.escUnicode$S(str) + "\"" ;
}, 1);

Clazz_newMeth(C$, 'escUnicode$S', function (str) {
for (var i = str.length$(); --i >= 0; ) if ((str.charCodeAt(i)) > 127 ) {
var s = "0000" + Integer.toHexString(str.charAt(i).$c());
str = str.substring(0, i) + "\\u" + s.substring(s.length$() - 4) + str.substring(i + 1) ;
}
return str;
}, 1);

Clazz_newMeth(C$, 'escF$F', function (f) {
var sf = "" + new Float(f).toString();
{
if (sf.indexOf(".") < 0 && sf.indexOf("e") < 0) sf += ".0";
}
return sf;
}, 1);

Clazz_newMeth(C$, 'join$SA$C$I', function (s, c, i0) {
if (s.length < i0) return null;
var sb = Clazz_new_((I$[2]||$incl$(2)));
sb.append$S(s[i0++]);
for (var i = i0; i < s.length; i++) sb.appendC$C(c).append$S(s[i]);

return sb.toString();
}, 1);

Clazz_newMeth(C$, 'isLike$S$S', function (a, b) {
var areEqual = a.equals$O(b);
if (areEqual) return true;
var isStart = b.startsWith$S("*");
var isEnd = b.endsWith$S("*");
return (!isStart && !isEnd ) ? areEqual : isStart && isEnd  ? b.length$() == 1 || a.contains$CharSequence(b.substring(1, b.length$() - 1))  : isStart ? a.endsWith$S(b.substring(1)) : a.startsWith$S(b.substring(0, b.length$() - 1));
}, 1);

Clazz_newMeth(C$, 'getMapValueNoCase$java_util_Map$S', function (h, key) {
if ("this".equals$O(key)) return h;
var val = h.get$O(key);
if (val == null ) for (var e, $e = h.entrySet().iterator(); $e.hasNext()&&((e=$e.next()),1);) if (e.getKey().equalsIgnoreCase$S(key)) return e.getValue();

return val;
}, 1);

Clazz_newMeth(C$, 'clean$S', function (s) {
return C$.rep$S$S$S(C$.replaceAllCharacters$S$S$S(s, " \u0009\u000a\u000d", " "), "  ", " ").trim();
}, 1);

Clazz_newMeth(C$, 'fdup$S$I$I', function (f, pt, n) {
var ch;
var count = 0;
for (var i = pt; --i >= 1; ) {
if (C$.isDigit$C(ch = f.charAt(i))) continue;
switch (ch.$c()) {
case 46:
if (count++ != 0) return f;
continue;
case 45:
if (i != 1 && f.charAt(i - 1) != "." ) return f;
continue;
default:
return f;
}
}
var s = f.substring(0, pt + 1);
var sb = Clazz_new_((I$[2]||$incl$(2)));
for (var i = 0; i < n; i++) sb.append$S(s);

sb.append$S(f.substring(pt + 1));
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'formatString$S$S$S$F$D$Z', function (strFormat, key, strT, floatT, doubleT, doOne) {
if (strFormat == null ) return null;
if ("".equals$O(strFormat)) return "";
var len = key.length$();
if (strFormat.indexOf("%") < 0 || len == 0  || strFormat.indexOf(key) < 0 ) return strFormat;
var strLabel = "";
var ich;
var ichPercent;
var ichKey;
for (ich = 0; (ichPercent = strFormat.indexOf("%", ich)) >= 0 && (ichKey = strFormat.indexOf(key, ichPercent + 1)) >= 0 ; ) {
if (ich != ichPercent) strLabel += strFormat.substring(ich, ichPercent);
ich = ichPercent + 1;
if (ichKey > ichPercent + 6) {
strLabel += "%";
continue;
}try {
var alignLeft = false;
if (strFormat.charAt(ich) == "-") {
alignLeft = true;
++ich;
}var zeroPad = false;
if (strFormat.charAt(ich) == "0") {
zeroPad = true;
++ich;
}var ch;
var width = 0;
while ((ch = strFormat.charAt(ich)) >= "0" && (ch <= "9") ){
width = (10 * width) + (ch.$c() - 48);
++ich;
}
var precision = 2147483647;
var isExponential = false;
if (strFormat.charAt(ich) == ".") {
++ich;
if ((ch = strFormat.charAt(ich)) == "-") {
isExponential = (strT == null );
++ich;
}if ((ch = strFormat.charAt(ich)) >= "0" && ch <= "9" ) {
precision = ch.$c() - 48;
++ich;
}if (isExponential) precision = -precision;
}var st = strFormat.substring(ich, ich + len);
if (!st.equals$O(key)) {
ich = ichPercent + 1;
strLabel += "%";
continue;
}ich = ich+(len);
if (!Float.isNaN(floatT)) strLabel += C$.formatF$F$I$I$Z$Z(floatT, width, precision, alignLeft, zeroPad);
 else if (strT != null ) strLabel += C$.formatS$S$I$I$Z$Z(strT, width, precision, alignLeft, zeroPad);
 else if (!Double.isNaN(doubleT)) strLabel += C$.formatD$D$I$I$Z$Z$Z(doubleT, width, precision - 1, alignLeft, zeroPad, true);
if (doOne) break;
} catch (ioobe) {
if (Clazz_exceptionOf(ioobe, "java.lang.IndexOutOfBoundsException")){
ich = ichPercent;
break;
} else {
throw ioobe;
}
}
}
strLabel += strFormat.substring(ich);
return strLabel;
}, 1);

Clazz_newMeth(C$, 'formatStringS$S$S$S', function (strFormat, key, strT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, strT, NaN, NaN, false);
}, 1);

Clazz_newMeth(C$, 'formatStringF$S$S$F', function (strFormat, key, floatT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, null, floatT, NaN, false);
}, 1);

Clazz_newMeth(C$, 'formatStringI$S$S$I', function (strFormat, key, intT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, "" + intT, NaN, NaN, false);
}, 1);

Clazz_newMeth(C$, 'sprintf$S$S$OA', function (strFormat, list, values) {
if (values == null ) return strFormat;
var n = list.length$();
if (n == values.length) try {
for (var o = 0; o < n; o++) {
if (values[o] == null ) continue;
switch ((list.charCodeAt(o))) {
case 115:
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "s", values[o], NaN, NaN, true);
break;
case 102:
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, (values[o]).floatValue(), NaN, true);
break;
case 105:
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "d", "" + values[o], NaN, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "i", "" + values[o], NaN, NaN, true);
break;
case 100:
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "e", null, NaN, (values[o]).doubleValue(), true);
break;
case 112:
var pVal = values[o];
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "p", null, pVal.x, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "p", null, pVal.y, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "p", null, pVal.z, NaN, true);
break;
case 113:
var qVal = values[o];
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, qVal.x, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, qVal.y, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, qVal.z, NaN, true);
strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, qVal.w, NaN, true);
break;
case 83:
var sVal = values[o];
for (var i = 0; i < sVal.length; i++) strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "s", sVal[i], NaN, NaN, true);

break;
case 70:
var fVal = values[o];
for (var i = 0; i < fVal.length; i++) strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, fVal[i], NaN, true);

break;
case 73:
var iVal = values[o];
for (var i = 0; i < iVal.length; i++) strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "d", "" + iVal[i], NaN, NaN, true);

for (var i = 0; i < iVal.length; i++) strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "i", "" + iVal[i], NaN, NaN, true);

break;
case 68:
var dVal = values[o];
for (var i = 0; i < dVal.length; i++) strFormat = C$.formatString$S$S$S$F$D$Z(strFormat, "e", null, NaN, dVal[i], true);

}
}
return C$.rep$S$S$S(strFormat, "%%", "%");
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
System.out.println$S("TextFormat.sprintf error " + list + " " + strFormat );
return C$.rep$S$S$S(strFormat, "%", "?");
}, 1);

Clazz_newMeth(C$, 'formatCheck$S', function (strFormat) {
if (strFormat == null  || strFormat.indexOf("p") < 0 && strFormat.indexOf("q") < 0  ) return strFormat;
strFormat = C$.rep$S$S$S(strFormat, "%%", "\u0001");
strFormat = C$.rep$S$S$S(strFormat, "%p", "%6.2p");
strFormat = C$.rep$S$S$S(strFormat, "%q", "%6.2q");
var format = C$.split$S$S(strFormat, "%");
var sb = Clazz_new_((I$[2]||$incl$(2)));
sb.append$S(format[0]);
for (var i = 1; i < format.length; i++) {
var f = "%" + format[i];
var pt;
if (f.length$() >= 3) {
if ((pt = f.indexOf("p")) >= 0) f = C$.fdup$S$I$I(f, pt, 3);
if ((pt = f.indexOf("q")) >= 0) f = C$.fdup$S$I$I(f, pt, 4);
}sb.append$S(f);
}
return sb.toString().$replace("\u0001", "%");
}, 1);

Clazz_newMeth(C$, 'leftJustify$javajs_util_SB$S$S', function (s, s1, s2) {
s.append$S(s2);
var n = s1.length$() - s2.length$();
if (n > 0) s.append$S(s1.substring(0, n));
}, 1);

Clazz_newMeth(C$, 'rightJustify$javajs_util_SB$S$S', function (s, s1, s2) {
var n = s1.length$() - s2.length$();
if (n > 0) s.append$S(s1.substring(0, n));
s.append$S(s2);
}, 1);

Clazz_newMeth(C$, 'safeTruncate$F$I', function (f, n) {
if (f > -0.001  && f < 0.001  ) f = 0;
return (new Float(f).toString() + "         ").substring(0, n);
}, 1);

Clazz_newMeth(C$, 'isWild$S', function (s) {
return s != null  && (s.indexOf("*") >= 0 || s.indexOf("?") >= 0 ) ;
}, 1);

Clazz_newMeth(C$, 'isMatch$S$S$Z$Z', function (search, match, checkStar, allowInitialStar) {
if (search.equals$O(match)) return true;
var mLen = match.length$();
if (mLen == 0) return false;
var isStar0 = (checkStar && allowInitialStar  ? match.charAt(0) == "*" : false);
if (mLen == 1 && isStar0 ) return true;
var isStar1 = (checkStar && match.endsWith$S("*") );
var haveQ = (match.indexOf("?") >= 0);
if (!haveQ) {
if (isStar0) return (isStar1 ? (mLen < 3 || search.indexOf(match.substring(1, mLen - 1)) >= 0 ) : search.endsWith$S(match.substring(1)));
 else if (isStar1) return search.startsWith$S(match.substring(0, mLen - 1));
}var sLen = search.length$();
var qqqq = "????";
var nq = 4;
while (nq < sLen){
qqqq += qqqq;
nq = nq+(4);
}
if (checkStar) {
if (isStar0) {
match = qqqq + match.substring(1);
mLen = mLen+(nq - 1);
}if (isStar1) {
match = match.substring(0, mLen - 1) + qqqq;
mLen = mLen+(nq - 1);
}}if (mLen < sLen) return false;
var ich = 0;
while (mLen > sLen){
if (allowInitialStar && match.charAt(ich) == "?" ) {
++ich;
} else if (match.charAt(ich + mLen - 1) != "?") {
return false;
}--mLen;
}
for (var i = sLen; --i >= 0; ) {
var chm = match.charAt(ich + i);
if (chm == "?") continue;
var chs = search.charAt(i);
if (chm != chs && (chm != "\u0001" || chs != "?" ) ) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'replaceQuotedStrings$S$javajs_util_Lst$javajs_util_Lst', function (s, list, newList) {
var n = list.size();
for (var i = 0; i < n; i++) {
var name = list.get$I(i);
var newName = newList.get$I(i);
if (!newName.equals$O(name)) s = C$.rep$S$S$S(s, "\"" + name + "\"" , "\"" + newName + "\"" );
}
return s;
}, 1);

Clazz_newMeth(C$, 'replaceStrings$S$javajs_util_Lst$javajs_util_Lst', function (s, list, newList) {
var n = list.size();
for (var i = 0; i < n; i++) {
var name = list.get$I(i);
var newName = newList.get$I(i);
if (!newName.equals$O(name)) s = C$.rep$S$S$S(s, name, newName);
}
return s;
}, 1);

Clazz_newMeth(C$, 'isDigit$C', function (ch) {
var c = ch.$c();
return (48 <= c && c <= 57 );
}, 1);

Clazz_newMeth(C$, 'isUpperCase$C', function (ch) {
var c = ch.$c();
return (65 <= c && c <= 90 );
}, 1);

Clazz_newMeth(C$, 'isLowerCase$C', function (ch) {
var c = ch.$c();
return (97 <= c && c <= 122 );
}, 1);

Clazz_newMeth(C$, 'isLetter$C', function (ch) {
var c = ch.$c();
return (65 <= c && c <= 90  || 97 <= c && c <= 122  );
}, 1);

Clazz_newMeth(C$, 'isLetterOrDigit$C', function (ch) {
var c = ch.$c();
return (65 <= c && c <= 90  || 97 <= c && c <= 122   || 48 <= c && c <= 57  );
}, 1);

Clazz_newMeth(C$, 'isWhitespace$C', function (ch) {
var c = ch.$c();
return (c >= 28 && c <= 32  || c >= 9 && c <= 13  );
}, 1);

Clazz_newMeth(C$, 'fixPtFloats$javajs_util_T3$F', function (pt, f) {
pt.x = Math.round(pt.x * f) / f;
pt.y = Math.round(pt.y * f) / f;
pt.z = Math.round(pt.z * f) / f;
}, 1);

Clazz_newMeth(C$, 'fixDouble$D$D', function (d, f) {
return Math.round(d * f) / f;
}, 1);

Clazz_newMeth(C$, 'parseFloatFraction$S', function (s) {
var pt = s.indexOf("/");
return (pt < 0 ? C$.parseFloat$S(s) : C$.parseFloat$S(s.substring(0, pt)) / C$.parseFloat$S(s.substring(pt + 1)));
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:19
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.AbstractAction','javax.swing.UIManager','java.awt.event.ActionListener',['javax.swing.AbstractButton','.ButtonActionPropertyChangeListener'],'javax.swing.SwingUtilities','javax.swing.OverlayLayout','javax.swing.event.ChangeListener','javax.swing.event.ChangeEvent','java.awt.event.ActionEvent','java.awt.event.ItemListener','java.awt.event.ItemEvent',['javax.swing.AbstractButton','.Handler']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractButton", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent', ['java.awt.ItemSelectable', 'javax.swing.SwingConstants']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.model = null;
this.text = null;
this.margin = null;
this.defaultMargin = null;
this.defaultIcon = null;
this.pressedIcon = null;
this.disabledIcon = null;
this.selectedIcon = null;
this.disabledSelectedIcon = null;
this.rolloverIcon = null;
this.rolloverSelectedIcon = null;
this.$paintBorder = false;
this.paintFocus = false;
this.rolloverEnabled = false;
this.contentAreaFilled = false;
this.verticalAlignment = 0;
this.horizontalAlignment = 0;
this.verticalTextPosition = 0;
this.horizontalTextPosition = 0;
this.iconTextGap = 0;
this.mnemonic = 0;
this.mnemonicIndex = 0;
this.multiClickThreshhold = 0;
this.borderPaintedSet = false;
this.rolloverEnabledSet = false;
this.iconTextGapSet = false;
this.contentAreaFilledSet = false;
this.$setLayout = false;
this.defaultCapable = false;
this.handler = null;
this.changeListener = null;
this.actionListener = null;
this.itemListener = null;
this.changeEvent = null;
this.hideActionText = false;
this.$action = null;
this.actionPropertyChangeListener = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.model = null;
this.text = "";
this.margin = null;
this.defaultMargin = null;
this.defaultIcon = null;
this.pressedIcon = null;
this.disabledIcon = null;
this.selectedIcon = null;
this.disabledSelectedIcon = null;
this.rolloverIcon = null;
this.rolloverSelectedIcon = null;
this.$paintBorder = true;
this.paintFocus = true;
this.rolloverEnabled = false;
this.contentAreaFilled = true;
this.verticalAlignment = 0;
this.horizontalAlignment = 0;
this.verticalTextPosition = 0;
this.horizontalTextPosition = 11;
this.iconTextGap = 4;
this.mnemonicIndex = -1;
this.multiClickThreshhold = 0;
this.borderPaintedSet = false;
this.rolloverEnabledSet = false;
this.iconTextGapSet = false;
this.contentAreaFilledSet = false;
this.$setLayout = false;
this.defaultCapable = true;
this.changeListener = null;
this.actionListener = null;
this.itemListener = null;
this.hideActionText = false;
}, 1);

Clazz_newMeth(C$, 'setHideActionText$Z', function (hideActionText) {
if (hideActionText != this.hideActionText ) {
this.hideActionText = hideActionText;
if (this.getAction() != null ) {
p$.setTextFromAction$javax_swing_Action$Z.apply(this, [this.getAction(), false]);
}this.firePropertyChange$S$Z$Z("hideActionText", !hideActionText, hideActionText);
}});

Clazz_newMeth(C$, 'getHideActionText', function () {
return this.hideActionText;
});

Clazz_newMeth(C$, 'getText', function () {
return this.text;
});

Clazz_newMeth(C$, 'setText$S', function (text) {
var oldValue = this.text;
this.text = text;
this.firePropertyChange$S$O$O("text", oldValue, text);
p$.updateDisplayedMnemonicIndex$S$I.apply(this, [text, this.getMnemonic()]);
if (text == null  || oldValue == null   || !text.equals$O(oldValue) ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'isSelected', function () {
return this.model.isSelected();
});

Clazz_newMeth(C$, 'setSelected$Z', function (b) {
this.model.setSelected$Z(b);
});

Clazz_newMeth(C$, 'doClick', function () {
this.doClick$I(68);
});

Clazz_newMeth(C$, 'doClick$I', function (pressTime) {
var focusedUI = null;
{
focusedUI = document.activeElement && document.activeElement.ui;
}
if (focusedUI != null  && focusedUI !== this.ui  ) {
focusedUI.notifyFocus$Z(false);
(this.ui).notifyFocus$Z(true);
}this.model.setArmed$Z(true);
this.model.setPressed$Z(true);
this.model.setPressed$Z(false);
this.model.setArmed$Z(false);
});

Clazz_newMeth(C$, 'setMargin$java_awt_Insets', function (m) {
if (Clazz_instanceOf(m, "javax.swing.plaf.UIResource")) {
this.defaultMargin = m;
} else if (Clazz_instanceOf(this.margin, "javax.swing.plaf.UIResource")) {
this.defaultMargin = this.margin;
}if (m == null  && this.defaultMargin != null  ) {
m = this.defaultMargin;
}var old = this.margin;
this.margin = m;
this.firePropertyChange$S$O$O("margin", old, m);
if (old == null  || !old.equals$O(m) ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getMargin', function () {
return (this.margin == null ) ? null : this.margin.clone();
});

Clazz_newMeth(C$, 'getIcon', function () {
return this.defaultIcon;
});

Clazz_newMeth(C$, 'setIcon$javax_swing_Icon', function (defaultIcon) {
var oldValue = this.defaultIcon;
this.defaultIcon = defaultIcon;
if (defaultIcon !== oldValue  && (Clazz_instanceOf(this.disabledIcon, "javax.swing.plaf.UIResource")) ) {
this.disabledIcon = null;
}this.firePropertyChange$S$O$O("icon", oldValue, defaultIcon);
if (defaultIcon !== oldValue ) {
if (defaultIcon == null  || oldValue == null   || defaultIcon.getIconWidth() != oldValue.getIconWidth()  || defaultIcon.getIconHeight() != oldValue.getIconHeight() ) {
this.revalidate();
}this.repaint();
}});

Clazz_newMeth(C$, 'getPressedIcon', function () {
return this.pressedIcon;
});

Clazz_newMeth(C$, 'setPressedIcon$javax_swing_Icon', function (pressedIcon) {
var oldValue = this.pressedIcon;
this.pressedIcon = pressedIcon;
this.firePropertyChange$S$O$O("pressedIcon", oldValue, pressedIcon);
if (pressedIcon !== oldValue ) {
if (this.getModel().isPressed()) {
this.repaint();
}}});

Clazz_newMeth(C$, 'getSelectedIcon', function () {
return this.selectedIcon;
});

Clazz_newMeth(C$, 'setSelectedIcon$javax_swing_Icon', function (selectedIcon) {
var oldValue = this.selectedIcon;
this.selectedIcon = selectedIcon;
if (selectedIcon !== oldValue  && Clazz_instanceOf(this.disabledSelectedIcon, "javax.swing.plaf.UIResource") ) {
this.disabledSelectedIcon = null;
}this.firePropertyChange$S$O$O("selectedIcon", oldValue, selectedIcon);
if (selectedIcon !== oldValue ) {
if (this.isSelected()) {
this.repaint();
}}});

Clazz_newMeth(C$, 'getRolloverIcon', function () {
return this.rolloverIcon;
});

Clazz_newMeth(C$, 'setRolloverIcon$javax_swing_Icon', function (rolloverIcon) {
var oldValue = this.rolloverIcon;
this.rolloverIcon = rolloverIcon;
this.firePropertyChange$S$O$O("rolloverIcon", oldValue, rolloverIcon);
this.setRolloverEnabled$Z(true);
if (rolloverIcon !== oldValue ) {
this.repaint();
}});

Clazz_newMeth(C$, 'getRolloverSelectedIcon', function () {
return this.rolloverSelectedIcon;
});

Clazz_newMeth(C$, 'setRolloverSelectedIcon$javax_swing_Icon', function (rolloverSelectedIcon) {
var oldValue = this.rolloverSelectedIcon;
this.rolloverSelectedIcon = rolloverSelectedIcon;
this.firePropertyChange$S$O$O("rolloverSelectedIcon", oldValue, rolloverSelectedIcon);
this.setRolloverEnabled$Z(true);
if (rolloverSelectedIcon !== oldValue ) {
if (this.isSelected()) {
this.repaint();
}}});

Clazz_newMeth(C$, 'getDisabledIcon', function () {
if (this.disabledIcon == null ) {
this.disabledIcon = (I$[2]||$incl$(2)).getLookAndFeel().getDisabledIcon$javax_swing_JComponent$javax_swing_Icon(this, this.getIcon());
if (this.disabledIcon != null ) {
this.firePropertyChange$S$O$O("disabledIcon", null, this.disabledIcon);
}}return this.disabledIcon;
});

Clazz_newMeth(C$, 'setDisabledIcon$javax_swing_Icon', function (disabledIcon) {
var oldValue = this.disabledIcon;
this.disabledIcon = disabledIcon;
this.firePropertyChange$S$O$O("disabledIcon", oldValue, disabledIcon);
if (disabledIcon !== oldValue ) {
if (!this.isEnabled()) {
this.repaint();
}}});

Clazz_newMeth(C$, 'getDisabledSelectedIcon', function () {
if (this.disabledSelectedIcon == null ) {
if (this.selectedIcon != null ) {
this.disabledSelectedIcon = (I$[2]||$incl$(2)).getLookAndFeel().getDisabledSelectedIcon$javax_swing_JComponent$javax_swing_Icon(this, this.getSelectedIcon());
} else {
return this.getDisabledIcon();
}}return this.disabledSelectedIcon;
});

Clazz_newMeth(C$, 'setDisabledSelectedIcon$javax_swing_Icon', function (disabledSelectedIcon) {
var oldValue = this.disabledSelectedIcon;
this.disabledSelectedIcon = disabledSelectedIcon;
this.firePropertyChange$S$O$O("disabledSelectedIcon", oldValue, disabledSelectedIcon);
if (disabledSelectedIcon !== oldValue ) {
if (disabledSelectedIcon == null  || oldValue == null   || disabledSelectedIcon.getIconWidth() != oldValue.getIconWidth()  || disabledSelectedIcon.getIconHeight() != oldValue.getIconHeight() ) {
this.revalidate();
}if (!this.isEnabled() && this.isSelected() ) {
this.repaint();
}}});

Clazz_newMeth(C$, 'getVerticalAlignment', function () {
return this.verticalAlignment;
});

Clazz_newMeth(C$, 'setVerticalAlignment$I', function (alignment) {
if (alignment == this.verticalAlignment) return;
var oldValue = this.verticalAlignment;
this.verticalAlignment = this.checkVerticalKey$I$S(alignment, "verticalAlignment");
this.firePropertyChange$S$I$I("verticalAlignment", oldValue, this.verticalAlignment);
this.repaint();
});

Clazz_newMeth(C$, 'getHorizontalAlignment', function () {
return this.horizontalAlignment;
});

Clazz_newMeth(C$, 'setHorizontalAlignment$I', function (alignment) {
if (alignment == this.horizontalAlignment) return;
var oldValue = this.horizontalAlignment;
this.horizontalAlignment = this.checkHorizontalKey$I$S(alignment, "horizontalAlignment");
this.firePropertyChange$S$I$I("horizontalAlignment", oldValue, this.horizontalAlignment);
this.repaint();
});

Clazz_newMeth(C$, 'getVerticalTextPosition', function () {
return this.verticalTextPosition;
});

Clazz_newMeth(C$, 'setVerticalTextPosition$I', function (textPosition) {
if (textPosition == this.verticalTextPosition) return;
var oldValue = this.verticalTextPosition;
this.verticalTextPosition = this.checkVerticalKey$I$S(textPosition, "verticalTextPosition");
this.firePropertyChange$S$I$I("verticalTextPosition", oldValue, this.verticalTextPosition);
this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'getHorizontalTextPosition', function () {
return this.horizontalTextPosition;
});

Clazz_newMeth(C$, 'setHorizontalTextPosition$I', function (textPosition) {
if (textPosition == this.horizontalTextPosition) return;
var oldValue = this.horizontalTextPosition;
this.horizontalTextPosition = this.checkHorizontalKey$I$S(textPosition, "horizontalTextPosition");
this.firePropertyChange$S$I$I("horizontalTextPosition", oldValue, this.horizontalTextPosition);
this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'getIconTextGap', function () {
return this.iconTextGap;
});

Clazz_newMeth(C$, 'setIconTextGap$I', function (iconTextGap) {
var oldValue = this.iconTextGap;
this.iconTextGap = iconTextGap;
this.iconTextGapSet = true;
this.firePropertyChange$S$I$I("iconTextGap", oldValue, iconTextGap);
if (iconTextGap != oldValue) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'checkHorizontalKey$I$S', function (key, exception) {
if ((key == 2) || (key == 0) || (key == 4) || (key == 10) || (key == 11)  ) {
return key;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[exception]);
}});

Clazz_newMeth(C$, 'checkVerticalKey$I$S', function (key, exception) {
if ((key == 1) || (key == 0) || (key == 3)  ) {
return key;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[exception]);
}});

Clazz_newMeth(C$, 'removeNotify', function () {
C$.superclazz.prototype.removeNotify.apply(this, []);
if (this.isRolloverEnabled()) {
this.getModel().setRollover$Z(false);
}});

Clazz_newMeth(C$, 'setActionCommand$S', function (actionCommand) {
this.getModel().setActionCommand$S(actionCommand);
});

Clazz_newMeth(C$, 'getActionCommand', function () {
var ac = this.getModel().getActionCommand();
if (ac == null ) {
ac = this.getText();
}return ac;
});

Clazz_newMeth(C$, 'setAction$javax_swing_Action', function (a) {
var oldValue = this.getAction();
if (this.$action == null  || !this.$action.equals$O(a) ) {
this.$action = a;
if (oldValue != null ) {
this.removeActionListener$java_awt_event_ActionListener(oldValue);
oldValue.removePropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
this.actionPropertyChangeListener = null;
}this.configurePropertiesFromAction$javax_swing_Action(this.$action);
if (this.$action != null ) {
if (!p$.isListener$Class$java_awt_event_ActionListener.apply(this, [Clazz_getClass((I$[3]||$incl$(3)),['actionPerformed$java_awt_event_ActionEvent']), this.$action])) {
this.addActionListener$java_awt_event_ActionListener(this.$action);
}this.actionPropertyChangeListener = this.createActionPropertyChangeListener$javax_swing_Action(this.$action);
this.$action.addPropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
}this.firePropertyChange$S$O$O("action", oldValue, this.$action);
}});

Clazz_newMeth(C$, 'isListener$Class$java_awt_event_ActionListener', function (c, a) {
var isListener = false;
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === c  && listeners[i + 1] === a  ) {
isListener = true;
}}
return isListener;
});

Clazz_newMeth(C$, 'getAction', function () {
return this.$action;
});

Clazz_newMeth(C$, 'configurePropertiesFromAction$javax_swing_Action', function (a) {
p$.setMnemonicFromAction$javax_swing_Action.apply(this, [a]);
p$.setTextFromAction$javax_swing_Action$Z.apply(this, [a, false]);
(I$[1]||$incl$(1)).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
this.setIconFromAction$javax_swing_Action(a);
p$.setActionCommandFromAction$javax_swing_Action.apply(this, [a]);
(I$[1]||$incl$(1)).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
if ((I$[1]||$incl$(1)).hasSelectedKey$javax_swing_Action(a) && this.shouldUpdateSelectedStateFromAction() ) {
p$.setSelectedFromAction$javax_swing_Action.apply(this, [a]);
}p$.setDisplayedMnemonicIndexFromAction$javax_swing_Action$Z.apply(this, [a, false]);
});

Clazz_newMeth(C$, 'clientPropertyChanged$O$O$O', function (key, oldValue, newValue) {
if (key === "hideActionText" ) {
var current = (Clazz_instanceOf(newValue, "java.lang.Boolean")) ? (newValue).booleanValue() : false;
if (this.getHideActionText() != current ) {
this.setHideActionText$Z(current);
}}});

Clazz_newMeth(C$, 'shouldUpdateSelectedStateFromAction', function () {
return false;
});

Clazz_newMeth(C$, 'actionPropertyChanged$javax_swing_Action$S', function (action, propertyName) {
if (propertyName == "Name") {
p$.setTextFromAction$javax_swing_Action$Z.apply(this, [action, true]);
} else if (propertyName == "enabled") {
(I$[1]||$incl$(1)).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
} else if (propertyName == "ShortDescription") {
(I$[1]||$incl$(1)).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
} else if (propertyName == "SmallIcon") {
this.smallIconChanged$javax_swing_Action(action);
} else if (propertyName == "MnemonicKey") {
p$.setMnemonicFromAction$javax_swing_Action.apply(this, [action]);
} else if (propertyName == "ActionCommandKey") {
p$.setActionCommandFromAction$javax_swing_Action.apply(this, [action]);
} else if (propertyName == "SwingSelectedKey" && (I$[1]||$incl$(1)).hasSelectedKey$javax_swing_Action(action)  && this.shouldUpdateSelectedStateFromAction() ) {
p$.setSelectedFromAction$javax_swing_Action.apply(this, [action]);
} else if (propertyName == "SwingDisplayedMnemonicIndexKey") {
p$.setDisplayedMnemonicIndexFromAction$javax_swing_Action$Z.apply(this, [action, true]);
} else if (propertyName == "SwingLargeIconKey") {
this.largeIconChanged$javax_swing_Action(action);
}});

Clazz_newMeth(C$, 'setDisplayedMnemonicIndexFromAction$javax_swing_Action$Z', function (a, fromPropertyChange) {
var iValue = (a == null ) ? null : a.getValue$S("SwingDisplayedMnemonicIndexKey");
if (fromPropertyChange || iValue != null  ) {
var value;
if (iValue == null ) {
value = -1;
} else {
value = (iValue).intValue();
var text = this.getText();
if (text == null  || value >= text.length$() ) {
value = -1;
}}this.setDisplayedMnemonicIndex$I(value);
}});

Clazz_newMeth(C$, 'setMnemonicFromAction$javax_swing_Action', function (a) {
var n = (a == null ) ? null : a.getValue$S("MnemonicKey");
this.setMnemonic$I((n == null ) ? "\u0000".$c() : (n).intValue());
});

Clazz_newMeth(C$, 'setTextFromAction$javax_swing_Action$Z', function (a, propertyChange) {
var hideText = this.getHideActionText();
if (!propertyChange) {
this.setText$S((a != null  && !hideText ) ? a.getValue$S("Name") : null);
} else if (!hideText) {
this.setText$S(a.getValue$S("Name"));
}});

Clazz_newMeth(C$, 'setIconFromAction$javax_swing_Action', function (a) {
var icon = null;
if (a != null ) {
icon = a.getValue$S("SwingLargeIconKey");
if (icon == null ) {
icon = a.getValue$S("SmallIcon");
}}this.setIcon$javax_swing_Icon(icon);
});

Clazz_newMeth(C$, 'smallIconChanged$javax_swing_Action', function (a) {
if (a.getValue$S("SwingLargeIconKey") == null ) {
this.setIconFromAction$javax_swing_Action(a);
}});

Clazz_newMeth(C$, 'largeIconChanged$javax_swing_Action', function (a) {
this.setIconFromAction$javax_swing_Action(a);
});

Clazz_newMeth(C$, 'setActionCommandFromAction$javax_swing_Action', function (a) {
this.setActionCommand$S((a != null ) ? a.getValue$S("ActionCommandKey") : null);
});

Clazz_newMeth(C$, 'setSelectedFromAction$javax_swing_Action', function (a) {
var selected = false;
if (a != null ) {
selected = (I$[1]||$incl$(1)).isSelected$javax_swing_Action(a);
}if (selected != this.isSelected() ) {
this.setSelected$Z(selected);
if (!selected && this.isSelected() ) {
if (Clazz_instanceOf(this.getModel(), "javax.swing.DefaultButtonModel")) {
var group = (this.getModel()).getGroup();
if (group != null ) {
group.clearSelection();
}}}}});

Clazz_newMeth(C$, 'createActionPropertyChangeListener$javax_swing_Action', function (a) {
return this.createActionPropertyChangeListener0$javax_swing_Action(a);
});

Clazz_newMeth(C$, 'createActionPropertyChangeListener0$javax_swing_Action', function (a) {
return Clazz_new_((I$[4]||$incl$(4)).c$$javax_swing_AbstractButton$javax_swing_Action,[this, a]);
});

Clazz_newMeth(C$, 'isBorderPainted', function () {
return this.$paintBorder;
});

Clazz_newMeth(C$, 'setBorderPainted$Z', function (b) {
var oldValue = this.$paintBorder;
this.$paintBorder = b;
this.borderPaintedSet = true;
this.firePropertyChange$S$Z$Z("borderPainted", oldValue, this.$paintBorder);
if (b != oldValue ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'paintBorder$java_awt_Graphics', function (g) {
if (this.isBorderPainted()) {
C$.superclazz.prototype.paintBorder$java_awt_Graphics.apply(this, [g]);
}});

Clazz_newMeth(C$, 'isFocusPainted', function () {
return this.paintFocus;
});

Clazz_newMeth(C$, 'setFocusPainted$Z', function (b) {
var oldValue = this.paintFocus;
this.paintFocus = b;
this.firePropertyChange$S$Z$Z("focusPainted", oldValue, this.paintFocus);
if (b != oldValue  && this.isFocusOwner() ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'isContentAreaFilled', function () {
return this.contentAreaFilled;
});

Clazz_newMeth(C$, 'setContentAreaFilled$Z', function (b) {
var oldValue = this.contentAreaFilled;
this.contentAreaFilled = b;
this.contentAreaFilledSet = true;
this.firePropertyChange$S$Z$Z("contentAreaFilled", oldValue, this.contentAreaFilled);
if (b != oldValue ) {
this.repaint();
}});

Clazz_newMeth(C$, 'isRolloverEnabled', function () {
return this.rolloverEnabled;
});

Clazz_newMeth(C$, 'setRolloverEnabled$Z', function (b) {
var oldValue = this.rolloverEnabled;
this.rolloverEnabled = b;
this.rolloverEnabledSet = true;
this.firePropertyChange$S$Z$Z("rolloverEnabled", oldValue, this.rolloverEnabled);
if (b != oldValue ) {
this.repaint();
}});

Clazz_newMeth(C$, 'getMnemonic', function () {
return this.mnemonic;
});

Clazz_newMeth(C$, 'setMnemonic$I', function (mnemonic) {
this.model.setMnemonic$I(mnemonic);
p$.updateMnemonicProperties.apply(this, []);
});

Clazz_newMeth(C$, 'setMnemonic$C', function (mnemonic) {
var vk = mnemonic.$c();
if (vk >= 97  && vk <= 122  ) vk = vk-(32);
this.setMnemonic$I(vk);
});

Clazz_newMeth(C$, 'setDisplayedMnemonicIndex$I', function (index) {
var oldValue = this.mnemonicIndex;
if (index == -1) {
this.mnemonicIndex = -1;
} else {
var text = this.getText();
var textLength = (text == null ) ? 0 : text.length$();
if (index < -1 || index >= textLength ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index == " + index]);
}}this.mnemonicIndex = index;
this.firePropertyChange$S$I$I("displayedMnemonicIndex", oldValue, index);
if (index != oldValue) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getDisplayedMnemonicIndex', function () {
return this.mnemonicIndex;
});

Clazz_newMeth(C$, 'updateDisplayedMnemonicIndex$S$I', function (text, mnemonic) {
this.setDisplayedMnemonicIndex$I((I$[5]||$incl$(5)).findDisplayedMnemonicIndex$S$I(text, mnemonic));
});

Clazz_newMeth(C$, 'updateMnemonicProperties', function () {
var newMnemonic = this.model.getMnemonic();
if (this.mnemonic != newMnemonic) {
var oldValue = this.mnemonic;
this.mnemonic = newMnemonic;
this.firePropertyChange$S$I$I("mnemonic", oldValue, this.mnemonic);
p$.updateDisplayedMnemonicIndex$S$I.apply(this, [this.getText(), this.mnemonic]);
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'setMultiClickThreshhold$J', function (threshhold) {
if (threshhold < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["threshhold must be >= 0"]);
}this.multiClickThreshhold = threshhold;
});

Clazz_newMeth(C$, 'getMultiClickThreshhold', function () {
return this.multiClickThreshhold;
});

Clazz_newMeth(C$, 'getModel', function () {
return this.model;
});

Clazz_newMeth(C$, 'setModel$javax_swing_ButtonModel', function (newModel) {
var oldModel = this.getModel();
if (oldModel != null ) {
oldModel.removeChangeListener$javax_swing_event_ChangeListener(this.changeListener);
oldModel.removeActionListener$java_awt_event_ActionListener(this.actionListener);
oldModel.removeItemListener$java_awt_event_ItemListener(this.itemListener);
this.changeListener = null;
this.actionListener = null;
this.itemListener = null;
}this.model = newModel;
if (newModel != null ) {
this.changeListener = this.createChangeListener();
this.actionListener = this.createActionListener();
this.itemListener = this.createItemListener();
newModel.addChangeListener$javax_swing_event_ChangeListener(this.changeListener);
newModel.addActionListener$java_awt_event_ActionListener(this.actionListener);
newModel.addItemListener$java_awt_event_ItemListener(this.itemListener);
p$.updateMnemonicProperties.apply(this, []);
C$.superclazz.prototype.setEnabled$Z.apply(this, [newModel.isEnabled()]);
} else {
this.mnemonic = "\u0000".$c();
}p$.updateDisplayedMnemonicIndex$S$I.apply(this, [this.getText(), this.mnemonic]);
this.firePropertyChange$S$O$O("model", oldModel, newModel);
if (newModel !== oldModel ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getUI', function () {
return this.ui;
});

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_ButtonUI', function (ui) {
C$.superclazz.prototype.setUI$javax_swing_plaf_ComponentUI.apply(this, [ui]);
if (Clazz_instanceOf(this.disabledIcon, "javax.swing.plaf.UIResource")) {
this.setDisabledIcon$javax_swing_Icon(null);
}if (Clazz_instanceOf(this.disabledSelectedIcon, "javax.swing.plaf.UIResource")) {
this.setDisabledSelectedIcon$javax_swing_Icon(null);
}});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
if (!this.$setLayout) {
this.setLayout$java_awt_LayoutManager(Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Container,[this]));
}return this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager', function (mgr) {
this.$setLayout = true;
C$.superclazz.prototype.setLayout$java_awt_LayoutManager.apply(this, [mgr]);
});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners', function () {
return (this.listenerList.getListeners$Class(Clazz_getClass((I$[7]||$incl$(7)),['stateChanged$javax_swing_event_ChangeEvent'])));
});

Clazz_newMeth(C$, 'fireStateChanged', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) this.changeEvent = Clazz_new_((I$[8]||$incl$(8)).c$$O,[this]);
(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'addActionListener$java_awt_event_ActionListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[3]||$incl$(3)),['actionPerformed$java_awt_event_ActionEvent']), l);
});

Clazz_newMeth(C$, 'removeActionListener$java_awt_event_ActionListener', function (l) {
if ((l != null ) && (this.getAction() === l ) ) {
this.setAction$javax_swing_Action(null);
} else {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[3]||$incl$(3)),['actionPerformed$java_awt_event_ActionEvent']), l);
}});

Clazz_newMeth(C$, 'getActionListeners', function () {
return (this.listenerList.getListeners$Class(Clazz_getClass((I$[3]||$incl$(3)),['actionPerformed$java_awt_event_ActionEvent'])));
});

Clazz_newMeth(C$, 'createChangeListener', function () {
return p$.getHandler.apply(this, []);
});

Clazz_newMeth(C$, 'fireActionPerformed$java_awt_event_ActionEvent', function (event) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[3]||$incl$(3)),['actionPerformed$java_awt_event_ActionEvent']) ) {
if (e == null ) {
var actionCommand = event.getActionCommand();
if (actionCommand == null ) {
actionCommand = this.getActionCommand();
}e = Clazz_new_((I$[9]||$incl$(9)).c$$O$I$S$J$I,[this, 1001, actionCommand, event.getWhen(), event.getModifiers()]);
}(listeners[i + 1]).actionPerformed$java_awt_event_ActionEvent(e);
}}
});

Clazz_newMeth(C$, 'fireItemStateChanged$java_awt_event_ItemEvent', function (event) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[10]||$incl$(10)),['itemStateChanged$java_awt_event_ItemEvent']) ) {
if (e == null ) {
e = Clazz_new_((I$[11]||$incl$(11)).c$$java_awt_ItemSelectable$I$O$I,[this, 701, this, event.getStateChange()]);
}(listeners[i + 1]).itemStateChanged$java_awt_event_ItemEvent(e);
}}
});

Clazz_newMeth(C$, 'createActionListener', function () {
return p$.getHandler.apply(this, []);
});

Clazz_newMeth(C$, 'createItemListener', function () {
return p$.getHandler.apply(this, []);
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
if (!b && this.model.isRollover() ) {
this.model.setRollover$Z(false);
}C$.superclazz.prototype.setEnabled$Z.apply(this, [b]);
this.model.setEnabled$Z(b);
});

Clazz_newMeth(C$, 'getLabel', function () {
return this.getText();
});

Clazz_newMeth(C$, 'setLabel$S', function (label) {
this.setText$S(label);
});

Clazz_newMeth(C$, 'addItemListener$java_awt_event_ItemListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[10]||$incl$(10)),['itemStateChanged$java_awt_event_ItemEvent']), l);
});

Clazz_newMeth(C$, 'removeItemListener$java_awt_event_ItemListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[10]||$incl$(10)),['itemStateChanged$java_awt_event_ItemEvent']), l);
});

Clazz_newMeth(C$, 'getItemListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[10]||$incl$(10)),['itemStateChanged$java_awt_event_ItemEvent']));
});

Clazz_newMeth(C$, 'getSelectedObjects', function () {
if (this.isSelected() == false ) {
return null;
}var selectedObjects = Clazz_array(java.lang.Object, [1]);
selectedObjects[0] = this.getText();
return selectedObjects;
});

Clazz_newMeth(C$, 'init$S$javax_swing_Icon$S', function (text, icon, uid) {
if (text != null ) {
this.setText$S(text);
}if (icon != null ) {
this.setIcon$javax_swing_Icon(icon);
}this.uiClassID = uid;
this.updateUI();
this.setAlignmentX$F(0.0);
this.setAlignmentY$F(0.5);
});

Clazz_newMeth(C$, 'imageUpdate$java_awt_Image$I$I$I$I$I', function (img, infoflags, x, y, w, h) {
var iconDisplayed = this.getIcon();
if (iconDisplayed == null ) {
return false;
}if (!this.model.isEnabled()) {
if (this.model.isSelected()) {
iconDisplayed = this.getDisabledSelectedIcon();
} else {
iconDisplayed = this.getDisabledIcon();
}} else if (this.model.isPressed() && this.model.isArmed() ) {
iconDisplayed = this.getPressedIcon();
} else if (this.isRolloverEnabled() && this.model.isRollover() ) {
if (this.model.isSelected()) {
iconDisplayed = this.getRolloverSelectedIcon();
} else {
iconDisplayed = this.getRolloverIcon();
}} else if (this.model.isSelected()) {
iconDisplayed = this.getSelectedIcon();
}if (!(I$[5]||$incl$(5)).doesIconReferenceImage$javax_swing_Icon$java_awt_Image(iconDisplayed, img)) {
return false;
}return C$.superclazz.prototype.imageUpdate$java_awt_Image$I$I$I$I$I.apply(this, [img, infoflags, x, y, w, h]);
});

Clazz_newMeth(C$, 'setUIProperty$S$O', function (propertyName, value) {
if (propertyName == "borderPainted") {
if (!this.borderPaintedSet) {
this.setBorderPainted$Z((value).booleanValue());
this.borderPaintedSet = false;
}} else if (propertyName == "rolloverEnabled") {
if (!this.rolloverEnabledSet) {
this.setRolloverEnabled$Z((value).booleanValue());
this.rolloverEnabledSet = false;
}} else if (propertyName == "iconTextGap") {
if (!this.iconTextGapSet) {
this.setIconTextGap$I((value).intValue());
this.iconTextGapSet = false;
}} else if (propertyName == "contentAreaFilled") {
if (!this.contentAreaFilledSet) {
this.setContentAreaFilled$Z((value).booleanValue());
this.contentAreaFilledSet = false;
}} else {
C$.superclazz.prototype.setUIProperty$S$O.apply(this, [propertyName, value]);
}});

Clazz_newMeth(C$, 'paramString', function () {
var defaultIconString = ((this.defaultIcon != null ) && (this.defaultIcon !== this )  ? this.defaultIcon.toString() : "");
var pressedIconString = ((this.pressedIcon != null ) && (this.pressedIcon !== this )  ? this.pressedIcon.toString() : "");
var disabledIconString = ((this.disabledIcon != null ) && (this.disabledIcon !== this )  ? this.disabledIcon.toString() : "");
var selectedIconString = ((this.selectedIcon != null ) && (this.selectedIcon !== this )  ? this.selectedIcon.toString() : "");
var disabledSelectedIconString = ((this.disabledSelectedIcon != null ) && (this.disabledSelectedIcon !== this )  ? this.disabledSelectedIcon.toString() : "");
var rolloverIconString = ((this.rolloverIcon != null ) && (this.rolloverIcon !== this )  ? this.rolloverIcon.toString() : "");
var rolloverSelectedIconString = ((this.rolloverSelectedIcon != null ) && (this.rolloverSelectedIcon !== this )  ? this.rolloverSelectedIcon.toString() : "");
var paintBorderString = (this.$paintBorder ? "true" : "false");
var paintFocusString = (this.paintFocus ? "true" : "false");
var rolloverEnabledString = (this.rolloverEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",defaultIcon=" + defaultIconString + ",disabledIcon=" + disabledIconString + ",disabledSelectedIcon=" + disabledSelectedIconString + ",margin=" + this.margin + ",paintBorder=" + paintBorderString + ",paintFocus=" + paintFocusString + ",pressedIcon=" + pressedIconString + ",rolloverEnabled=" + rolloverEnabledString + ",rolloverIcon=" + rolloverIconString + ",rolloverSelectedIcon=" + rolloverSelectedIconString + ",selectedIcon=" + selectedIconString + ",text=" + this.text ;
});

Clazz_newMeth(C$, 'getHandler', function () {
if (this.handler == null ) {
this.handler = Clazz_new_((I$[12]||$incl$(12)), [this, null]);
}return this.handler;
});
;
(function(){var C$=Clazz_newClass(P$.AbstractButton, "ButtonActionPropertyChangeListener", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.ActionPropertyChangeListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_AbstractButton$javax_swing_Action', function (b, a) {
C$.superclazz.c$$TT$javax_swing_Action.apply(this, [b, a]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['actionPropertyChanged$javax_swing_AbstractButton$javax_swing_Action$java_beans_PropertyChangeEvent','actionPropertyChanged$TT$javax_swing_Action$java_beans_PropertyChangeEvent'], function (button, action, e) {
if ((I$[1]||$incl$(1)).shouldReconfigure$java_beans_PropertyChangeEvent(e)) {
button.configurePropertiesFromAction$javax_swing_Action(action);
} else {
button.actionPropertyChanged$javax_swing_Action$S(action, e.getPropertyName());
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractButton, "ButtonChangeListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.ChangeListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
this.this$0.getHandler.apply(this.this$0, []).stateChanged$javax_swing_event_ChangeEvent(e);
});
})()
;
(function(){var C$=Clazz_newClass(P$.AbstractButton, "Handler", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, ['java.awt.event.ActionListener', 'javax.swing.event.ChangeListener', 'java.awt.event.ItemListener']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
this.this$0.updateMnemonicProperties.apply(this.this$0, []);
if (this.this$0.isEnabled() != this.this$0.model.isEnabled() ) {
this.this$0.setEnabled$Z(this.this$0.model.isEnabled());
}this.this$0.fireStateChanged();
this.this$0.repaint();
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (event) {
this.this$0.fireActionPerformed$java_awt_event_ActionEvent(event);
});

Clazz_newMeth(C$, 'itemStateChanged$java_awt_event_ItemEvent', function (event) {
this.this$0.fireItemStateChanged$java_awt_event_ItemEvent(event);
if (this.this$0.shouldUpdateSelectedStateFromAction()) {
var action = this.this$0.getAction();
if (action != null  && (I$[1]||$incl$(1)).hasSelectedKey$javax_swing_Action(action) ) {
var selected = this.this$0.isSelected();
var isActionSelected = (I$[1]||$incl$(1)).isSelected$javax_swing_Action(action);
if (isActionSelected != selected ) {
action.putValue$S$O("SwingSelectedKey", new Boolean(selected));
}}}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:22
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.ArrayTable','java.util.HashMap']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ActionMap");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.arrayTable = null;
this.parent = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setParent$javax_swing_ActionMap', function (map) {
this.parent = map;
});

Clazz_newMeth(C$, 'getParent', function () {
return this.parent;
});

Clazz_newMeth(C$, 'put$O$javax_swing_Action', function (key, action) {
if (key == null ) {
return;
}if (action == null ) {
this.remove$O(key);
} else {
if (this.arrayTable == null ) {
this.arrayTable = Clazz_new_((I$[1]||$incl$(1)));
}this.arrayTable.put$O$O(key, action);
}});

Clazz_newMeth(C$, 'get$O', function (key) {
var value = (this.arrayTable == null ) ? null : this.arrayTable.get$O(key);
if (value == null ) {
var parent = this.getParent();
if (parent != null ) {
return parent.get$O(key);
}}return value;
});

Clazz_newMeth(C$, 'remove$O', function (key) {
if (this.arrayTable != null ) {
this.arrayTable.remove$O(key);
}});

Clazz_newMeth(C$, 'clear', function () {
if (this.arrayTable != null ) {
this.arrayTable.clear();
}});

Clazz_newMeth(C$, 'keys', function () {
if (this.arrayTable == null ) {
return null;
}return this.arrayTable.getKeys$OA(null);
});

Clazz_newMeth(C$, 'size', function () {
if (this.arrayTable == null ) {
return 0;
}return this.arrayTable.size();
});

Clazz_newMeth(C$, 'allKeys', function () {
var count = this.size();
var parent = this.getParent();
if (count == 0) {
if (parent != null ) {
return parent.allKeys();
}return this.keys();
}if (parent == null ) {
return this.keys();
}var keys = this.keys();
var pKeys = parent.allKeys();
if (pKeys == null ) {
return keys;
}if (keys == null ) {
return pKeys;
}var keyMap = Clazz_new_((I$[2]||$incl$(2)));
var counter;
for (counter = keys.length - 1; counter >= 0; counter--) {
keyMap.put$TK$TV(keys[counter], keys[counter]);
}
for (counter = pKeys.length - 1; counter >= 0; counter--) {
keyMap.put$TK$TV(pKeys[counter], pKeys[counter]);
}
return keyMap.keySet().toArray();
});
})();
//Created 2018-05-15 01:02:22
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.Hashtable']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ArrayTable", null, null, 'Cloneable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.table = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.table = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'put$O$O', function (key, value) {
if (this.table == null ) {
this.table = Clazz_array(java.lang.Object, -1, [key, value]);
} else {
var size = this.size();
if (size < 8) {
if (this.containsKey$O(key)) {
var tmp = this.table;
for (var i = 0; i < tmp.length - 1; i = i+(2)) {
if (tmp[i].equals$O(key)) {
tmp[i + 1] = value;
break;
}}
} else {
var array = this.table;
var i = array.length;
var tmp = Clazz_array(java.lang.Object, [i + 2]);
System.arraycopy(array, 0, tmp, 0, i);
tmp[i] = key;
tmp[i + 1] = value;
this.table = tmp;
}} else {
if ((size == 8) && p$.isArray.apply(this, []) ) {
p$.grow.apply(this, []);
}(this.table).put$TK$TV(key, value);
}}});

Clazz_newMeth(C$, 'get$O', function (key) {
var value = null;
if (this.table != null ) {
if (p$.isArray.apply(this, [])) {
var array = this.table;
for (var i = 0; i < array.length - 1; i = i+(2)) {
if (array[i].equals$O(key)) {
value = array[i + 1];
break;
}}
} else {
value = (this.table).get$O(key);
}}return value;
});

Clazz_newMeth(C$, 'size', function () {
var size;
if (this.table == null ) return 0;
if (p$.isArray.apply(this, [])) {
size = ((this.table).length/2|0);
} else {
size = (this.table).size();
}return size;
});

Clazz_newMeth(C$, 'containsKey$O', function (key) {
var contains = false;
if (this.table != null ) {
if (p$.isArray.apply(this, [])) {
var array = this.table;
for (var i = 0; i < array.length - 1; i = i+(2)) {
if (array[i].equals$O(key)) {
contains = true;
break;
}}
} else {
contains = (this.table).containsKey$O(key);
}}return contains;
});

Clazz_newMeth(C$, 'remove$O', function (key) {
var value = null;
if (key == null ) {
return null;
}if (this.table != null ) {
if (p$.isArray.apply(this, [])) {
var index = -1;
var array = this.table;
for (var i = array.length - 2; i >= 0; i = i-(2)) {
if (array[i].equals$O(key)) {
index = i;
value = array[i + 1];
break;
}}
if (index != -1) {
var tmp = Clazz_array(java.lang.Object, [array.length - 2]);
System.arraycopy(array, 0, tmp, 0, index);
if (index < tmp.length) System.arraycopy(array, index + 2, tmp, index, tmp.length - index);
this.table = (tmp.length == 0) ? null : tmp;
}} else {
value = (this.table).remove$O(key);
}if (this.size() == 7 && !p$.isArray.apply(this, []) ) {
p$.shrink.apply(this, []);
}}return value;
});

Clazz_newMeth(C$, 'clear', function () {
this.table = null;
});

Clazz_newMeth(C$, 'clone', function () {
var newArrayTable = Clazz_new_(C$);
if (p$.isArray.apply(this, [])) {
var array = this.table;
for (var i = 0; i < array.length - 1; i = i+(2)) {
newArrayTable.put$O$O(array[i], array[i + 1]);
}
} else {
var tmp = this.table;
var keys = tmp.keys();
while (keys.hasMoreElements()){
var o = keys.nextElement();
newArrayTable.put$O$O(o, tmp.get$O(o));
}
}return newArrayTable;
});

Clazz_newMeth(C$, 'getKeys$OA', function (keys) {
if (this.table == null ) {
return null;
}if (p$.isArray.apply(this, [])) {
var array = this.table;
if (keys == null ) {
keys = Clazz_array(java.lang.Object, [(array.length/2|0)]);
}for (var i = 0, index = 0; i < array.length - 1; i = i+(2), index++) {
keys[index] = array[i];
}
} else {
var tmp = this.table;
var enum_ = tmp.keys();
var counter = tmp.size();
if (keys == null ) {
keys = Clazz_array(java.lang.Object, [counter]);
}while (counter > 0){
keys[--counter] = enum_.nextElement();
}
}return keys;
});

Clazz_newMeth(C$, 'isArray', function () {
return (Clazz_instanceOf(this.table, Clazz_array(java.lang.Object, -1)));
});

Clazz_newMeth(C$, 'grow', function () {
var array = this.table;
var tmp = Clazz_new_((I$[1]||$incl$(1)).c$$I,[(array.length/2|0)]);
for (var i = 0; i < array.length; i = i+(2)) {
tmp.put$TK$TV(array[i], array[i + 1]);
}
this.table = tmp;
});

Clazz_newMeth(C$, 'shrink', function () {
var tmp = this.table;
var array = Clazz_array(java.lang.Object, [tmp.size() * 2]);
var keys = tmp.keys();
var j = 0;
while (keys.hasMoreElements()){
var o = keys.nextElement();
array[j] = o;
array[j + 1] = tmp.get$O(o);
j = j+(2);
}
this.table = array;
});
})();
//Created 2018-05-15 01:02:22
(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[['java.awt.Insets','java.awt.Rectangle',['java.awt.Component','.BaselineResizeBehavior']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractBorder", null, null, 'javax.swing.border.Border');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component', function (c) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[0, 0, 0, 0]);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets', function (c, insets) {
insets.left = insets.top = insets.right = insets.bottom = 0;
return insets;
});

Clazz_newMeth(C$, 'isBorderOpaque', function () {
return false;
});

Clazz_newMeth(C$, 'getInteriorRectangle$java_awt_Component$I$I$I$I', function (c, x, y, width, height) {
return C$.getInteriorRectangle$java_awt_Component$javax_swing_border_Border$I$I$I$I(c, this, x, y, width, height);
});

Clazz_newMeth(C$, 'getInteriorRectangle$java_awt_Component$javax_swing_border_Border$I$I$I$I', function (c, b, x, y, width, height) {
var insets;
if (b != null ) insets = b.getBorderInsets$java_awt_Component(c);
 else insets = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[0, 0, 0, 0]);
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[x + insets.left, y + insets.top, width - insets.right - insets.left , height - insets.top - insets.bottom ]);
}, 1);

Clazz_newMeth(C$, 'getBaseline$java_awt_Component$I$I', function (c, width, height) {
if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$java_awt_Component', function (c) {
if (c == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Component must be non-null"]);
}return (I$[3]||$incl$(3)).OTHER;
});

Clazz_newMeth(C$, 'isLeftToRight$java_awt_Component', function (c) {
return c.getComponentOrientation().isLeftToRight();
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[['java.awt.Insets']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BevelBorder", null, 'javax.swing.border.AbstractBorder');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.bevelType = 0;
this.highlightOuter = null;
this.highlightInner = null;
this.shadowInner = null;
this.shadowOuter = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I', function (bevelType) {
Clazz_super_(C$, this,1);
this.bevelType = bevelType;
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color', function (bevelType, highlight, shadow) {
C$.c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color.apply(this, [bevelType, highlight.brighter(), highlight, shadow, shadow.brighter()]);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color', function (bevelType, highlightOuterColor, highlightInnerColor, shadowOuterColor, shadowInnerColor) {
C$.c$$I.apply(this, [bevelType]);
this.highlightOuter = highlightOuterColor;
this.highlightInner = highlightInnerColor;
this.shadowOuter = shadowOuterColor;
this.shadowInner = shadowInnerColor;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
if (this.bevelType == 0) {
this.paintRaisedBevel$java_awt_Component$java_awt_Graphics$I$I$I$I(c, g, x, y, width, height);
} else if (this.bevelType == 1) {
this.paintLoweredBevel$java_awt_Component$java_awt_Graphics$I$I$I$I(c, g, x, y, width, height);
}});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component', function (c) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[2, 2, 2, 2]);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets', function (c, insets) {
insets.left = insets.top = insets.right = insets.bottom = 2;
return insets;
});

Clazz_newMeth(C$, 'getHighlightOuterColor$java_awt_Component', function (c) {
var highlight = this.getHighlightOuterColor();
return highlight != null  ? highlight : c.getBackground().brighter().brighter();
});

Clazz_newMeth(C$, 'getHighlightInnerColor$java_awt_Component', function (c) {
var highlight = this.getHighlightInnerColor();
return highlight != null  ? highlight : c.getBackground().brighter();
});

Clazz_newMeth(C$, 'getShadowInnerColor$java_awt_Component', function (c) {
var shadow = this.getShadowInnerColor();
return shadow != null  ? shadow : c.getBackground().darker();
});

Clazz_newMeth(C$, 'getShadowOuterColor$java_awt_Component', function (c) {
var shadow = this.getShadowOuterColor();
return shadow != null  ? shadow : c.getBackground().darker().darker();
});

Clazz_newMeth(C$, 'getHighlightOuterColor', function () {
return this.highlightOuter;
});

Clazz_newMeth(C$, 'getHighlightInnerColor', function () {
return this.highlightInner;
});

Clazz_newMeth(C$, 'getShadowInnerColor', function () {
return this.shadowInner;
});

Clazz_newMeth(C$, 'getShadowOuterColor', function () {
return this.shadowOuter;
});

Clazz_newMeth(C$, 'getBevelType', function () {
return this.bevelType;
});

Clazz_newMeth(C$, 'isBorderOpaque', function () {
return true;
});

Clazz_newMeth(C$, 'paintRaisedBevel$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
var oldColor = g.getColor();
var h = height;
var w = width;
g.translate$I$I(x, y);
g.setColor$java_awt_Color(this.getHighlightOuterColor$java_awt_Component(c));
g.drawLine$I$I$I$I(0, 0, 0, h - 2);
g.drawLine$I$I$I$I(1, 0, w - 2, 0);
g.setColor$java_awt_Color(this.getHighlightInnerColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, 1, 1, h - 3);
g.drawLine$I$I$I$I(2, 1, w - 3, 1);
g.setColor$java_awt_Color(this.getShadowOuterColor$java_awt_Component(c));
g.drawLine$I$I$I$I(0, h - 1, w - 1, h - 1);
g.drawLine$I$I$I$I(w - 1, 0, w - 1, h - 2);
g.setColor$java_awt_Color(this.getShadowInnerColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, h - 2, w - 2, h - 2);
g.drawLine$I$I$I$I(w - 2, 1, w - 2, h - 3);
g.translate$I$I(-x, -y);
g.setColor$java_awt_Color(oldColor);
});

Clazz_newMeth(C$, 'paintLoweredBevel$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
var oldColor = g.getColor();
var h = height;
var w = width;
g.translate$I$I(x, y);
g.setColor$java_awt_Color(this.getShadowInnerColor$java_awt_Component(c));
g.drawLine$I$I$I$I(0, 0, 0, h - 1);
g.drawLine$I$I$I$I(1, 0, w - 1, 0);
g.setColor$java_awt_Color(this.getShadowOuterColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, 1, 1, h - 2);
g.drawLine$I$I$I$I(2, 1, w - 2, 1);
g.setColor$java_awt_Color(this.getHighlightOuterColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, h - 1, w - 1, h - 1);
g.drawLine$I$I$I$I(w - 1, 1, w - 1, h - 2);
g.setColor$java_awt_Color(this.getHighlightInnerColor$java_awt_Component(c));
g.drawLine$I$I$I$I(2, h - 2, w - 2, h - 2);
g.drawLine$I$I$I$I(w - 2, 2, w - 2, h - 3);
g.translate$I$I(-x, -y);
g.setColor$java_awt_Color(oldColor);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[];
var C$=Clazz_newInterface(P$, "Border");
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[['java.awt.Insets']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "EmptyBorder", null, 'javax.swing.border.AbstractBorder');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.left = 0;
this.right = 0;
this.top = 0;
this.bottom = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (top, left, bottom, right) {
Clazz_super_(C$, this,1);
this.top = top;
this.right = right;
this.bottom = bottom;
this.left = left;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Insets', function (borderInsets) {
Clazz_super_(C$, this,1);
this.top = borderInsets.top;
this.right = borderInsets.right;
this.bottom = borderInsets.bottom;
this.left = borderInsets.left;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component', function (c) {
return this.getBorderInsets();
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets', function (c, insets) {
insets.left = this.left;
insets.top = this.top;
insets.right = this.right;
insets.bottom = this.bottom;
return insets;
});

Clazz_newMeth(C$, 'getBorderInsets', function () {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[this.top, this.left, this.bottom, this.right]);
});

Clazz_newMeth(C$, 'isBorderOpaque', function () {
return false;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[['java.awt.Insets']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "EtchedBorder", null, 'javax.swing.border.AbstractBorder');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.etchType = 0;
this.highlight = null;
this.shadow = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I.apply(this, [1]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (etchType) {
C$.c$$I$java_awt_Color$java_awt_Color.apply(this, [etchType, null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$java_awt_Color', function (highlight, shadow) {
C$.c$$I$java_awt_Color$java_awt_Color.apply(this, [1, highlight, shadow]);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color', function (etchType, highlight, shadow) {
Clazz_super_(C$, this,1);
this.etchType = etchType;
this.highlight = highlight;
this.shadow = shadow;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
var w = width;
var h = height;
g.translate$I$I(x, y);
g.setColor$java_awt_Color(this.etchType == 1 ? this.getShadowColor$java_awt_Component(c) : this.getHighlightColor$java_awt_Component(c));
g.drawRect$I$I$I$I(0, 0, w - 2, h - 2);
g.setColor$java_awt_Color(this.etchType == 1 ? this.getHighlightColor$java_awt_Component(c) : this.getShadowColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, h - 3, 1, 1);
g.drawLine$I$I$I$I(1, 1, w - 3, 1);
g.drawLine$I$I$I$I(0, h - 1, w - 1, h - 1);
g.drawLine$I$I$I$I(w - 1, h - 1, w - 1, 0);
g.translate$I$I(-x, -y);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component', function (c) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[2, 2, 2, 2]);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets', function (c, insets) {
insets.left = insets.top = insets.right = insets.bottom = 2;
return insets;
});

Clazz_newMeth(C$, 'isBorderOpaque', function () {
return true;
});

Clazz_newMeth(C$, 'getEtchType', function () {
return this.etchType;
});

Clazz_newMeth(C$, 'getHighlightColor$java_awt_Component', function (c) {
return this.highlight != null  ? this.highlight : c.getBackground().brighter();
});

Clazz_newMeth(C$, 'getHighlightColor', function () {
return this.highlight;
});

Clazz_newMeth(C$, 'getShadowColor$java_awt_Component', function (c) {
return this.shadow != null  ? this.shadow : c.getBackground().darker();
});

Clazz_newMeth(C$, 'getShadowColor', function () {
return this.shadow;
});
})();
//Created 2018-05-15 01:02:43
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.border.BevelBorder','javax.swing.border.EtchedBorder','javax.swing.border.EmptyBorder','javax.swing.border.LineBorder','javax.swing.border.TitledBorder','javax.swing.border.CompoundBorder','javax.swing.border.MatteBorder']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BorderFactory");
var p$=C$.prototype;
C$.sharedRaisedBevel = null;
C$.sharedLoweredBevel = null;
C$.sharedEtchedBorder = null;
C$.sharedRaisedEtchedBorder = null;
C$.emptyBorder = null;
C$.html5Border = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.sharedRaisedBevel = Clazz_new_((I$[1]||$incl$(1)).c$$I,[0]);
C$.sharedLoweredBevel = Clazz_new_((I$[1]||$incl$(1)).c$$I,[1]);
C$.sharedEtchedBorder = Clazz_new_((I$[2]||$incl$(2)));
C$.emptyBorder = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$I,[0, 0, 0, 0]);
C$.html5Border = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$I,[0, 0, 0, 0]);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createLineBorder$java_awt_Color', function (color) {
return Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_Color$I,[color, 1]);
}, 1);

Clazz_newMeth(C$, 'createLineBorder$java_awt_Color$I', function (color, thickness) {
return Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_Color$I,[color, thickness]);
}, 1);

Clazz_newMeth(C$, 'createRaisedBevelBorder', function () {
return C$.createSharedBevel$I(0);
}, 1);

Clazz_newMeth(C$, 'createLoweredBevelBorder', function () {
return C$.createSharedBevel$I(1);
}, 1);

Clazz_newMeth(C$, 'createBevelBorder$I', function (type) {
return C$.createSharedBevel$I(type);
}, 1);

Clazz_newMeth(C$, 'createBevelBorder$I$java_awt_Color$java_awt_Color', function (type, highlight, shadow) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$java_awt_Color$java_awt_Color,[type, highlight, shadow]);
}, 1);

Clazz_newMeth(C$, 'createBevelBorder$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color', function (type, highlightOuter, highlightInner, shadowOuter, shadowInner) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color,[type, highlightOuter, highlightInner, shadowOuter, shadowInner]);
}, 1);

Clazz_newMeth(C$, 'createSharedBevel$I', function (type) {
if (type == 0) {
return C$.sharedRaisedBevel;
} else if (type == 1) {
return C$.sharedLoweredBevel;
}return null;
}, 1);

Clazz_newMeth(C$, 'createEtchedBorder', function () {
return C$.sharedEtchedBorder;
}, 1);

Clazz_newMeth(C$, 'createEtchedBorder$java_awt_Color$java_awt_Color', function (highlight, shadow) {
return Clazz_new_((I$[2]||$incl$(2)).c$$java_awt_Color$java_awt_Color,[highlight, shadow]);
}, 1);

Clazz_newMeth(C$, 'createEtchedBorder$I', function (type) {
switch (type) {
case 0:
if (C$.sharedRaisedEtchedBorder == null ) {
C$.sharedRaisedEtchedBorder = Clazz_new_((I$[2]||$incl$(2)).c$$I,[0]);
}return C$.sharedRaisedEtchedBorder;
case 1:
return C$.sharedEtchedBorder;
default:
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["type must be one of EtchedBorder.RAISED or EtchedBorder.LOWERED"]);
}
}, 1);

Clazz_newMeth(C$, 'createEtchedBorder$I$java_awt_Color$java_awt_Color', function (type, highlight, shadow) {
return Clazz_new_((I$[2]||$incl$(2)).c$$I$java_awt_Color$java_awt_Color,[type, highlight, shadow]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$S', function (title) {
return Clazz_new_((I$[5]||$incl$(5)).c$$S,[title]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$javax_swing_border_Border', function (border) {
return Clazz_new_((I$[5]||$incl$(5)).c$$javax_swing_border_Border,[border]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$javax_swing_border_Border$S', function (border, title) {
return Clazz_new_((I$[5]||$incl$(5)).c$$javax_swing_border_Border$S,[border, title]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$javax_swing_border_Border$S$I$I', function (border, title, titleJustification, titlePosition) {
return Clazz_new_((I$[5]||$incl$(5)).c$$javax_swing_border_Border$S$I$I,[border, title, titleJustification, titlePosition]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$javax_swing_border_Border$S$I$I$java_awt_Font', function (border, title, titleJustification, titlePosition, titleFont) {
return Clazz_new_((I$[5]||$incl$(5)).c$$javax_swing_border_Border$S$I$I$java_awt_Font,[border, title, titleJustification, titlePosition, titleFont]);
}, 1);

Clazz_newMeth(C$, 'createTitledBorder$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color', function (border, title, titleJustification, titlePosition, titleFont, titleColor) {
return Clazz_new_((I$[5]||$incl$(5)).c$$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color,[border, title, titleJustification, titlePosition, titleFont, titleColor]);
}, 1);

Clazz_newMeth(C$, 'createEmptyBorder', function () {
return C$.emptyBorder;
}, 1);

Clazz_newMeth(C$, 'createHTML5Border', function () {
return C$.html5Border;
}, 1);

Clazz_newMeth(C$, 'createEmptyBorder$I$I$I$I', function (top, left, bottom, right) {
return Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$I,[top, left, bottom, right]);
}, 1);

Clazz_newMeth(C$, 'createCompoundBorder', function () {
return Clazz_new_((I$[6]||$incl$(6)));
}, 1);

Clazz_newMeth(C$, 'createCompoundBorder$javax_swing_border_Border$javax_swing_border_Border', function (outsideBorder, insideBorder) {
return Clazz_new_((I$[6]||$incl$(6)).c$$javax_swing_border_Border$javax_swing_border_Border,[outsideBorder, insideBorder]);
}, 1);

Clazz_newMeth(C$, 'createMatteBorder$I$I$I$I$java_awt_Color', function (top, left, bottom, right, color) {
return Clazz_new_((I$[7]||$incl$(7)).c$$I$I$I$I$java_awt_Color,[top, left, bottom, right, color]);
}, 1);

Clazz_newMeth(C$, 'createMatteBorder$I$I$I$I$javax_swing_Icon', function (top, left, bottom, right, tileIcon) {
return Clazz_new_((I$[7]||$incl$(7)).c$$I$I$I$I$javax_swing_Icon,[top, left, bottom, right, tileIcon]);
}, 1);
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "BoundedRangeModel");
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "ButtonModel", null, null, 'java.awt.ItemSelectable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.event.EventListenerList','javax.swing.event.ChangeListener','javax.swing.event.ChangeEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DefaultBoundedRangeModel", null, null, 'javax.swing.BoundedRangeModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.changeEvent = null;
this.listenerList = null;
this.value = 0;
this.extent = 0;
this.min = 0;
this.max = 0;
this.isAdjusting = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.changeEvent = null;
this.listenerList = Clazz_new_((I$[1]||$incl$(1)));
this.value = 0;
this.extent = 0;
this.min = 0;
this.max = 100;
this.isAdjusting = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (value, extent, min, max) {
C$.$init$.apply(this);
if ((max >= min) && (value >= min) && ((value + extent) >= value) && ((value + extent) <= max)  ) {
this.value = value;
this.extent = extent;
this.min = min;
this.max = max;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["invalid range properties"]);
}}, 1);

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, 'getExtent', function () {
return this.extent;
});

Clazz_newMeth(C$, 'getMinimum', function () {
return this.min;
});

Clazz_newMeth(C$, 'getMaximum', function () {
return this.max;
});

Clazz_newMeth(C$, 'setValue$I', function (n) {
n = Math.min(n, 2147483647 - this.extent);
var newValue = Math.max(n, this.min);
if (newValue + this.extent > this.max) {
newValue = this.max - this.extent;
}this.setRangeProperties$I$I$I$I$Z(newValue, this.extent, this.min, this.max, this.isAdjusting);
});

Clazz_newMeth(C$, 'setExtent$I', function (n) {
var newExtent = Math.max(0, n);
if (this.value + newExtent > this.max) {
newExtent = this.max - this.value;
}this.setRangeProperties$I$I$I$I$Z(this.value, newExtent, this.min, this.max, this.isAdjusting);
});

Clazz_newMeth(C$, 'setMinimum$I', function (n) {
var newMax = Math.max(n, this.max);
var newValue = Math.max(n, this.value);
var newExtent = Math.min(newMax - newValue, this.extent);
this.setRangeProperties$I$I$I$I$Z(newValue, newExtent, n, newMax, this.isAdjusting);
});

Clazz_newMeth(C$, 'setMaximum$I', function (n) {
var newMin = Math.min(n, this.min);
var newExtent = Math.min(n - newMin, this.extent);
var newValue = Math.min(n - newExtent, this.value);
this.setRangeProperties$I$I$I$I$Z(newValue, newExtent, newMin, n, this.isAdjusting);
});

Clazz_newMeth(C$, 'setValueIsAdjusting$Z', function (b) {
this.setRangeProperties$I$I$I$I$Z(this.value, this.extent, this.min, this.max, b);
});

Clazz_newMeth(C$, 'getValueIsAdjusting', function () {
return this.isAdjusting;
});

Clazz_newMeth(C$, 'setRangeProperties$I$I$I$I$Z', function (newValue, newExtent, newMin, newMax, adjusting) {
if (newMin > newMax) {
newMin = newMax;
}if (newValue > newMax) {
newMax = newValue;
}if (newValue < newMin) {
newMin = newValue;
}if ((newExtent + newValue) > newMax) {
newExtent = newMax - newValue;
}if (newExtent < 0) {
newExtent = 0;
}var isChange = (newValue != this.value) || (newExtent != this.extent) || (newMin != this.min) || (newMax != this.max) || (adjusting != this.isAdjusting )  ;
if (isChange) {
this.value = newValue;
this.extent = newExtent;
this.min = newMin;
this.max = newMax;
this.isAdjusting = adjusting;
this.fireStateChanged();
}});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']));
});

Clazz_newMeth(C$, 'fireStateChanged', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) {
this.changeEvent = Clazz_new_((I$[3]||$incl$(3)).c$$O,[this]);
}(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'toString', function () {
var modelString = "value=" + this.getValue() + ", " + "extent=" + this.getExtent() + ", " + "min=" + this.getMinimum() + ", " + "max=" + this.getMaximum() + ", " + "adj=" + this.getValueIsAdjusting() ;
return this.getClass().getName() + "[" + modelString + "]" ;
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});
})();
//Created 2018-05-15 01:02:24
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.event.EventListenerList','javax.swing.UIManager','java.awt.event.ItemEvent','java.awt.EventQueue','java.awt.event.ActionEvent','javax.swing.event.ChangeListener','javax.swing.event.ChangeEvent','java.awt.event.ActionListener','java.awt.event.ItemListener']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DefaultButtonModel", null, null, 'javax.swing.ButtonModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.stateMask = 0;
this.actionCommand = null;
this.group = null;
this.mnemonic = 0;
this.changeEvent = null;
this.listenerList = null;
this.menuItem = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.stateMask = 0;
this.actionCommand = null;
this.group = null;
this.mnemonic = 0;
this.changeEvent = null;
this.listenerList = Clazz_new_((I$[1]||$incl$(1)));
this.menuItem = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.stateMask = 0;
this.setEnabled$Z(true);
}, 1);

Clazz_newMeth(C$, 'setActionCommand$S', function (actionCommand) {
this.actionCommand = actionCommand;
});

Clazz_newMeth(C$, 'getActionCommand', function () {
return this.actionCommand;
});

Clazz_newMeth(C$, 'isArmed', function () {
return (this.stateMask & 1) != 0;
});

Clazz_newMeth(C$, 'isSelected', function () {
return (this.stateMask & 2) != 0;
});

Clazz_newMeth(C$, 'isEnabled', function () {
return (this.stateMask & 8) != 0;
});

Clazz_newMeth(C$, 'isPressed', function () {
return (this.stateMask & 4) != 0;
});

Clazz_newMeth(C$, 'isRollover', function () {
return (this.stateMask & 16) != 0;
});

Clazz_newMeth(C$, 'setArmed$Z', function (b) {
if (this.isMenuItem() && (I$[2]||$incl$(2)).getBoolean$O("MenuItem.disabledAreNavigable") ) {
if ((this.isArmed() == b )) {
return;
}} else {
if ((this.isArmed() == b ) || !this.isEnabled() ) {
return;
}}if (b) {
this.stateMask = this.stateMask|(1);
} else {
this.stateMask = this.stateMask&(-2);
}this.fireStateChanged();
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
if (this.isEnabled() == b ) {
return;
}if (b) {
this.stateMask = this.stateMask|(8);
} else {
this.stateMask = this.stateMask&(-9);
this.stateMask = this.stateMask&(-2);
this.stateMask = this.stateMask&(-5);
}this.fireStateChanged();
});

Clazz_newMeth(C$, 'setSelected$Z', function (b) {
if (this.isSelected() == b ) {
return;
}if (b) {
this.stateMask = this.stateMask|(2);
} else {
this.stateMask = this.stateMask&(-3);
}this.fireItemStateChanged$java_awt_event_ItemEvent(Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_ItemSelectable$I$O$I,[this, 701, this, b ? 1 : 2]));
this.fireStateChanged();
});

Clazz_newMeth(C$, 'setPressed$Z', function (b) {
if ((this.isPressed() == b ) || !this.isEnabled() ) {
return;
}if (b) {
this.stateMask = this.stateMask|(4);
} else {
this.stateMask = this.stateMask&(-5);
}if (!this.isPressed() && this.isArmed() ) {
var modifiers = 0;
var currentEvent = (I$[4]||$incl$(4)).getCurrentEvent();
if (Clazz_instanceOf(currentEvent, "java.awt.event.InputEvent")) {
modifiers = (currentEvent).getModifiers();
} else if (Clazz_instanceOf(currentEvent, "java.awt.event.ActionEvent")) {
modifiers = (currentEvent).getModifiers();
}this.fireActionPerformed$java_awt_event_ActionEvent(Clazz_new_((I$[5]||$incl$(5)).c$$O$I$S$J$I,[this, 1001, this.getActionCommand(), (I$[4]||$incl$(4)).getMostRecentEventTime(), modifiers]));
}this.fireStateChanged();
});

Clazz_newMeth(C$, 'setRollover$Z', function (b) {
if ((this.isRollover() == b ) || !this.isEnabled() ) {
return;
}if (b) {
this.stateMask = this.stateMask|(16);
} else {
this.stateMask = this.stateMask&(-17);
}this.fireStateChanged();
});

Clazz_newMeth(C$, 'setMnemonic$I', function (key) {
this.mnemonic = key;
this.fireStateChanged();
});

Clazz_newMeth(C$, 'getMnemonic', function () {
return this.mnemonic;
});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[6]||$incl$(6)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[6]||$incl$(6)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[6]||$incl$(6)),['stateChanged$javax_swing_event_ChangeEvent']));
});

Clazz_newMeth(C$, 'fireStateChanged', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[6]||$incl$(6)),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) this.changeEvent = Clazz_new_((I$[7]||$incl$(7)).c$$O,[this]);
(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'addActionListener$java_awt_event_ActionListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['actionPerformed$java_awt_event_ActionEvent']), l);
});

Clazz_newMeth(C$, 'removeActionListener$java_awt_event_ActionListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['actionPerformed$java_awt_event_ActionEvent']), l);
});

Clazz_newMeth(C$, 'getActionListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[8]||$incl$(8)),['actionPerformed$java_awt_event_ActionEvent']));
});

Clazz_newMeth(C$, 'fireActionPerformed$java_awt_event_ActionEvent', function (e) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['actionPerformed$java_awt_event_ActionEvent']) ) {
(listeners[i + 1]).actionPerformed$java_awt_event_ActionEvent(e);
}}
});

Clazz_newMeth(C$, 'addItemListener$java_awt_event_ItemListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[9]||$incl$(9)),['itemStateChanged$java_awt_event_ItemEvent']), l);
});

Clazz_newMeth(C$, 'removeItemListener$java_awt_event_ItemListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[9]||$incl$(9)),['itemStateChanged$java_awt_event_ItemEvent']), l);
});

Clazz_newMeth(C$, 'getItemListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[9]||$incl$(9)),['itemStateChanged$java_awt_event_ItemEvent']));
});

Clazz_newMeth(C$, 'fireItemStateChanged$java_awt_event_ItemEvent', function (e) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[9]||$incl$(9)),['itemStateChanged$java_awt_event_ItemEvent']) ) {
(listeners[i + 1]).itemStateChanged$java_awt_event_ItemEvent(e);
}}
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$, 'getSelectedObjects', function () {
return null;
});

Clazz_newMeth(C$, 'setGroup$javax_swing_ButtonGroup', function (group) {
this.group = group;
});

Clazz_newMeth(C$, 'getGroup', function () {
return this.group;
});

Clazz_newMeth(C$, 'isMenuItem', function () {
return this.menuItem;
});

Clazz_newMeth(C$, 'setMenuItem$Z', function (menuItem) {
this.menuItem = menuItem;
});
})();
//Created 2018-05-15 01:02:24
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newInterface(P$, "AncestorListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newInterface(P$, "ChangeListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newClass(P$, "EventListenerList");
C$.NULL_ARRAY = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.NULL_ARRAY = Clazz_array(java.lang.Object, [0]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.listenerList = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.listenerList = C$.NULL_ARRAY;
}, 1);

Clazz_newMeth(C$, 'getListenerList', function () {
return this.listenerList;
});

Clazz_newMeth(C$, 'getListeners$Class', function (t) {
var lList = this.listenerList;
var n = p$.getListenerCount$OA$Class.apply(this, [lList, t]);
var result = Clazz_array(t, n);
var j = 0;
for (var i = lList.length - 2; i >= 0; i = i-(2)) {
if (lList[i] === t ) {
result[j++] = lList[i + 1];
}}
return result;
});

Clazz_newMeth(C$, 'getListenerCount', function () {
return (this.listenerList.length/2|0);
});

Clazz_newMeth(C$, 'getListenerCount$Class', function (t) {
var lList = this.listenerList;
return p$.getListenerCount$OA$Class.apply(this, [lList, t]);
});

Clazz_newMeth(C$, 'getListenerCount$OA$Class', function (list, t) {
var count = 0;
for (var i = 0; i < list.length; i = i+(2)) {
if (t === list[i] ) count++;
}
return count;
});

Clazz_newMeth(C$, 'add$Class$TT', function (t, l) {
if (l == null ) {
return;
}if (this.listenerList === C$.NULL_ARRAY ) {
this.listenerList = Clazz_array(java.lang.Object, -1, [t, l]);
} else {
var i = this.listenerList.length;
var tmp = Clazz_array(java.lang.Object, [i + 2]);
System.arraycopy(this.listenerList, 0, tmp, 0, i);
tmp[i] = t;
tmp[i + 1] = l;
this.listenerList = tmp;
}});

Clazz_newMeth(C$, 'remove$Class$TT', function (t, l) {
if (l == null ) {
return;
}var index = -1;
for (var i = this.listenerList.length - 2; i >= 0; i = i-(2)) {
if ((this.listenerList[i] === t ) && (this.listenerList[i + 1].equals$O(l) == true ) ) {
index = i;
break;
}}
if (index != -1) {
var tmp = Clazz_array(java.lang.Object, [this.listenerList.length - 2]);
System.arraycopy(this.listenerList, 0, tmp, 0, index);
if (index < tmp.length) System.arraycopy(this.listenerList, index + 2, tmp, index, tmp.length - index);
this.listenerList = (tmp.length == 0) ? C$.NULL_ARRAY : tmp;
}});

Clazz_newMeth(C$, 'toString', function () {
var lList = this.listenerList;
var s = "EventListenerList: ";
s += (lList.length/2|0) + " listeners: ";
for (var i = 0; i <= lList.length - 2; i = i+(2)) {
s += " type " + (lList[i]).getName();
s += " listener " + lList[i + 1];
}
return s;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.awt.Color','javax.swing.JComponent','java.awt.BorderLayout','javax.swing.JRootPane','javax.swing.SwingUtilities','javax.swing.RepaintManager']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JApplet", null, 'java.applet.Applet', 'javax.swing.RootPaneContainer');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.rootPane = null;
this.rootPaneCheckingEnabled = false;
this.transferHandler = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.rootPaneCheckingEnabled = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.setFrameViewer$swingjs_JSFrameViewer(this.appletViewer);
this.uiClassID = "AppletUI";
p$.setJApplet.apply(this, []);
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'setJApplet', function () {
this.setForeground$java_awt_Color((I$[1]||$incl$(1)).black);
this.setBackground$java_awt_Color((I$[1]||$incl$(1)).white);
this.setLocale$java_util_Locale((I$[2]||$incl$(2)).getDefaultLocale());
this.setLayout$java_awt_LayoutManager(Clazz_new_((I$[3]||$incl$(3))));
this.setRootPane$javax_swing_JRootPane(this.createRootPane());
this.rootPane.setFrameViewer$swingjs_JSFrameViewer(this.appletViewer);
this.setRootPaneCheckingEnabled$Z(true);
this.setFocusTraversalPolicyProvider$Z(true);
this.enableEvents$J(8);
});

Clazz_newMeth(C$, 'createRootPane', function () {
var rp = Clazz_new_((I$[4]||$incl$(4)).c$$S$Z,["", true]);
rp.setOpaque$Z(true);
return rp;
});

Clazz_newMeth(C$, 'setTransferHandler$javax_swing_TransferHandler', function (newHandler) {
var oldHandler = this.transferHandler;
this.transferHandler = newHandler;
(I$[5]||$incl$(5)).installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler(this, this.transferHandler);
this.firePropertyChange$S$O$O("transferHandler", oldHandler, newHandler);
});

Clazz_newMeth(C$, 'getTransferHandler', function () {
return this.transferHandler;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
(g).setBackground$java_awt_Color(this.getBackground());
(g).setColor$java_awt_Color(this.getForeground());
this.rootPane.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar', function (menuBar) {
this.getRootPane().setMenuBar$javax_swing_JMenuBar(menuBar);
});

Clazz_newMeth(C$, 'getJMenuBar', function () {
return this.getRootPane().getMenuBar();
});

Clazz_newMeth(C$, 'isRootPaneCheckingEnabled', function () {
return this.rootPaneCheckingEnabled;
});

Clazz_newMeth(C$, 'setRootPaneCheckingEnabled$Z', function (enabled) {
this.rootPaneCheckingEnabled = enabled;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
if (this.isRootPaneCheckingEnabled()) {
return this.getContentPane().add$java_awt_Component$O$I(comp, constraints, index);
}return this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'remove$java_awt_Component', function (comp) {
if (comp === this.rootPane ) {
C$.superclazz.prototype.remove$java_awt_Component.apply(this, [comp]);
} else {
this.getContentPane().remove$java_awt_Component(comp);
}});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager', function (manager) {
if (this.isRootPaneCheckingEnabled()) {
this.getContentPane().setLayout$java_awt_LayoutManager(manager);
} else {
C$.superclazz.prototype.setLayout$java_awt_LayoutManager.apply(this, [manager]);
}});

Clazz_newMeth(C$, 'getRootPane', function () {
return this.rootPane;
});

Clazz_newMeth(C$, 'setRootPane$javax_swing_JRootPane', function (root) {
if (this.rootPane != null ) {
this.remove$java_awt_Component(this.rootPane);
}this.rootPane = root;
if (this.rootPane != null ) {
var checkingEnabled = this.isRootPaneCheckingEnabled();
try {
this.setRootPaneCheckingEnabled$Z(false);
this.add$java_awt_Component$O(this.rootPane, "Center");
} finally {
this.setRootPaneCheckingEnabled$Z(checkingEnabled);
}
}});

Clazz_newMeth(C$, 'getContentPane', function () {
return this.getRootPane().getContentPane();
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container', function (contentPane) {
this.getRootPane().setContentPane$java_awt_Container(contentPane);
});

Clazz_newMeth(C$, 'getLayeredPane', function () {
return this.getRootPane().getLayeredPane();
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane', function (layeredPane) {
this.getRootPane().setLayeredPane$javax_swing_JLayeredPane(layeredPane);
});

Clazz_newMeth(C$, 'getGlassPane', function () {
return this.getRootPane().getGlassPane();
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component', function (glassPane) {
this.getRootPane().setGlassPane$java_awt_Component(glassPane);
});

Clazz_newMeth(C$, 'getGraphics', function () {
(I$[2]||$incl$(2)).getGraphicsInvoked$java_awt_Component(this);
return C$.superclazz.prototype.getGraphics.apply(this, []);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (time, x, y, width, height) {
if ((I$[6]||$incl$(6)).HANDLE_TOP_LEVEL_PAINT) {
(I$[6]||$incl$(6)).currentManager$java_awt_Component(this).addDirtyRegion$java_applet_Applet$I$I$I$I(this, x, y, width, height);
} else {
C$.superclazz.prototype.repaint$J$I$I$I$I.apply(this, [time, x, y, width, height]);
}});

Clazz_newMeth(C$, 'repaintNow', function () {
this.repaint$J$I$I$I$I(100, 0, 0, this.getWidth(), this.getHeight());
});

Clazz_newMeth(C$, 'paramString', function () {
var rootPaneString = (this.rootPane != null  ? this.rootPane.toString() : "");
var rootPaneCheckingEnabledString = (this.rootPaneCheckingEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",rootPane=" + rootPaneString + ",rootPaneCheckingEnabled=" + rootPaneCheckingEnabledString ;
});
})();
//Created 2018-05-15 01:02:25
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.DefaultButtonModel','javax.swing.SwingUtilities']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JButton", null, 'javax.swing.AbstractButton');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
C$.c$$S$javax_swing_Icon.apply(this, [null, icon]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon.apply(this, [text, null]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.c$.apply(this, []);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
Clazz_super_(C$, this,1);
this.setModel$javax_swing_ButtonModel(Clazz_new_((I$[1]||$incl$(1))));
this.init$S$javax_swing_Icon$S(text, icon, "ButtonUI");
this.setOpaque$Z(true);
}, 1);

Clazz_newMeth(C$, 'isDefaultButton', function () {
var root = (I$[2]||$incl$(2)).getRootPane$java_awt_Component(this);
if (root != null ) {
return root.getDefaultButton() === this ;
}return false;
});

Clazz_newMeth(C$, 'isDefaultCapable', function () {
return this.defaultCapable;
});

Clazz_newMeth(C$, 'setDefaultCapable$Z', function (defaultCapable) {
var oldDefaultCapable = this.defaultCapable;
this.defaultCapable = defaultCapable;
this.firePropertyChange$S$Z$Z("defaultCapable", oldDefaultCapable, defaultCapable);
});

Clazz_newMeth(C$, 'removeNotify', function () {
var root = (I$[2]||$incl$(2)).getRootPane$java_awt_Component(this);
if (root != null  && root.getDefaultButton() === this  ) {
root.setDefaultButton$javax_swing_JButton(null);
}C$.superclazz.prototype.removeNotify.apply(this, []);
});

Clazz_newMeth(C$, 'paramString', function () {
var defaultCapableString = (this.defaultCapable ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",defaultCapable=" + defaultCapableString ;
});
})();
//Created 2018-05-15 01:02:25
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.SwingUtilities',['javax.swing.JComponent','.IntVector'],'javajs.util.Lst','javax.swing.JComponent','javax.swing.JComponent$1','javax.swing.event.EventListenerList','java.util.HashSet','javax.swing.KeyStroke','java.awt.Rectangle','javax.swing.RepaintManager','sun.font.FontDesignMetrics','java.awt.Insets','javax.swing.ClientPropertyKey',['javax.swing.JComponent','.ActionStandin'],'java.util.Hashtable','javax.swing.KeyboardManager','javax.swing.InputMap','javax.swing.ComponentInputMap','javax.swing.ActionMap',['java.awt.Component','.BaselineResizeBehavior'],'java.util.Locale',['javax.swing.JComponent','.KeyboardState'],'javax.swing.Popup','javax.swing.JToolTip','javax.swing.Autoscroller','javax.swing.ArrayTable','swingjs.JSToolkit','swingjs.JSUtil','javax.swing.AncestorNotifier','javax.swing.event.AncestorListener','java.beans.PropertyChangeListener','javax.swing.JComponent$2','java.util.ArrayList']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JComponent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.Container');
C$.managingFocusForwardTraversalKeys = null;
C$.managingFocusBackwardTraversalKeys = null;
C$.DEBUG_GRAPHICS_LOADED = false;
C$.INPUT_VERIFIER_SOURCE_KEY = null;
C$.tempRectangles = null;
C$.componentObtainingGraphicsFrom = null;
C$.componentObtainingGraphicsFromLock = null;
var p$=C$.prototype;
C$.focusController = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.INPUT_VERIFIER_SOURCE_KEY =  Clazz_new_();
C$.tempRectangles = Clazz_new_((I$[3]||$incl$(3)));
C$.componentObtainingGraphicsFromLock =  Clazz_new_();
C$.focusController = ((
(function(){var C$=Clazz_newClass(P$, "JComponent$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'sun.awt.RequestFocusController', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'acceptRequestFocus$java_awt_Component$java_awt_Component$Z$Z$sun_awt_CausedFocusEvent_Cause', function (from, to, temporary, focusedWindowChangeAllowed, cause) {
if ((to == null ) || !(Clazz_instanceOf(to, "javax.swing.JComponent")) ) {
return true;
}if ((from == null ) || !(Clazz_instanceOf(from, "javax.swing.JComponent")) ) {
return true;
}var target = to;
if (!target.getVerifyInputWhenFocusTarget()) {
return true;
}var jFocusOwner = from;
var iv = jFocusOwner.getInputVerifier();
if (iv == null ) {
return true;
} else {
var currentSource = (I$[1]||$incl$(1)).appContextGet$O((I$[4]||$incl$(4)).INPUT_VERIFIER_SOURCE_KEY);
if (currentSource === jFocusOwner ) {
return true;
}(I$[1]||$incl$(1)).appContextPut$O$O((I$[4]||$incl$(4)).INPUT_VERIFIER_SOURCE_KEY, jFocusOwner);
try {
return iv.shouldYieldFocus$javax_swing_JComponent(jFocusOwner);
} finally {
if (currentSource != null ) {
(I$[1]||$incl$(1)).appContextPut$O$O((I$[4]||$incl$(4)).INPUT_VERIFIER_SOURCE_KEY, currentSource);
} else {
(I$[1]||$incl$(1)).appContextRemove$O((I$[4]||$incl$(4)).INPUT_VERIFIER_SOURCE_KEY);
}}
}});
})()
), Clazz_new_((I$[5]||$incl$(5)).$init$, [this, null]));
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.isAlignmentXSet = false;
this.alignmentX = 0;
this.isAlignmentYSet = false;
this.alignmentY = 0;
this.listenerList = null;
this.clientProperties = null;
this.autoscrolls = false;
this.border = null;
this.flags = 0;
this.verifyInputWhenFocusTarget = false;
this.paintingChild = null;
this.popupMenu = null;
this.focusInputMap = null;
this.ancestorInputMap = null;
this.windowInputMap = null;
this.actionMap = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.listenerList = Clazz_new_((I$[6]||$incl$(6)));
this.verifyInputWhenFocusTarget = true;
}, 1);

Clazz_newMeth(C$, 'safelyGetGraphics$java_awt_Component', function (c) {
return C$.safelyGetGraphics$java_awt_Component$java_awt_Component(c, (I$[1]||$incl$(1)).getRoot$java_awt_Component(c));
}, 1);

Clazz_newMeth(C$, 'safelyGetGraphics$java_awt_Component$java_awt_Component', function (c, root) {
{
C$.componentObtainingGraphicsFrom = root;
var g = c.getGraphics();
C$.componentObtainingGraphicsFrom = null;
return g;
}}, 1);

Clazz_newMeth(C$, 'getGraphicsInvoked$java_awt_Component', function (root) {
if (!C$.isComponentObtainingGraphicsFrom$java_awt_Component(root)) {
var rootPane = (root).getRootPane();
if (rootPane != null ) {
rootPane.disableTrueDoubleBuffering();
}}}, 1);

Clazz_newMeth(C$, 'isComponentObtainingGraphicsFrom$java_awt_Component', function (c) {
{
return (C$.componentObtainingGraphicsFrom === c );
}}, 1);

Clazz_newMeth(C$, 'getManagingFocusForwardTraversalKeys', function () {
{
if (C$.managingFocusForwardTraversalKeys == null ) {
C$.managingFocusForwardTraversalKeys = Clazz_new_((I$[7]||$incl$(7)).c$$I,[1]);
C$.managingFocusForwardTraversalKeys.add$TE((I$[8]||$incl$(8)).getKeyStroke$I$I(9, 2));
}}return C$.managingFocusForwardTraversalKeys;
}, 1);

Clazz_newMeth(C$, 'getManagingFocusBackwardTraversalKeys', function () {
{
if (C$.managingFocusBackwardTraversalKeys == null ) {
C$.managingFocusBackwardTraversalKeys = Clazz_new_((I$[7]||$incl$(7)).c$$I,[1]);
C$.managingFocusBackwardTraversalKeys.add$TE((I$[8]||$incl$(8)).getKeyStroke$I$I(9, 3));
}}return C$.managingFocusBackwardTraversalKeys;
}, 1);

Clazz_newMeth(C$, 'fetchRectangle', function () {
{
var rect;
var size = C$.tempRectangles.size();
if (size > 0) {
rect = C$.tempRectangles.removeItemAt$I(size - 1);
} else {
rect = Clazz_new_((I$[9]||$incl$(9)).c$$I$I$I$I,[0, 0, 0, 0]);
}return rect;
}}, 1);

Clazz_newMeth(C$, 'recycleRectangle$java_awt_Rectangle', function (rect) {
{
C$.tempRectangles.addLast$TV(rect);
}}, 1);

Clazz_newMeth(C$, 'setInheritsPopupMenu$Z', function (value) {
var oldValue = p$.getFlag$I.apply(this, [23]);
p$.setFlag$I$Z.apply(this, [23, value]);
this.firePropertyChange$S$Z$Z("inheritsPopupMenu", oldValue, value);
});

Clazz_newMeth(C$, 'getInheritsPopupMenu', function () {
return p$.getFlag$I.apply(this, [23]);
});

Clazz_newMeth(C$, 'setComponentPopupMenu$javax_swing_JPopupMenu', function (popup) {
if (popup != null ) {
this.enableEvents$J(16);
}var oldPopup = this.popupMenu;
this.popupMenu = popup;
this.firePropertyChange$S$O$O("componentPopupMenu", oldPopup, popup);
});

Clazz_newMeth(C$, 'getComponentPopupMenu', function () {
if (!this.getInheritsPopupMenu()) {
return this.popupMenu;
}if (this.popupMenu == null ) {
var parent = this.getParent();
while (parent != null ){
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
return (parent).getComponentPopupMenu();
}if (Clazz_instanceOf(parent, "java.awt.Window") || Clazz_instanceOf(parent, "java.applet.Applet") ) {
break;
}parent = parent.getParent();
}
return null;
}return this.popupMenu;
});

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.enableEvents$J(8);
C$.superclazz.prototype.setLocale$java_util_Locale.apply(this, [C$.getDefaultLocale()]);
}, 1);

Clazz_newMeth(C$, 'getComponentGraphics$java_awt_Graphics', function (g) {
var componentGraphics = g;
componentGraphics.setColor$java_awt_Color(this.getForeground());
componentGraphics.setFont$java_awt_Font(this.getFont());
return componentGraphics;
});

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics', function (g) {
if (this.ui != null ) {
var scratchGraphics = (g == null ) ? null : g.create();
try {
this.isBackgroundPainted = false;
this.ui.update$java_awt_Graphics$javax_swing_JComponent(scratchGraphics, this);
var jsg = this.getJSGraphic2D$java_awt_Graphics(scratchGraphics);
this.isBackgroundPainted = (jsg != null  && jsg.isBackgroundPainted() );
} finally {
scratchGraphics.dispose();
}
}});

Clazz_newMeth(C$, 'paintChildren$java_awt_Graphics', function (g) {
var sg = g;
{
var i = this.getComponentCount() - 1;
if (i < 0) {
return;
}if (this.paintingChild != null  && (Clazz_instanceOf(this.paintingChild, "javax.swing.JComponent")) ) {
for (; i >= 0; i--) {
if (this.getComponent$I(i) === this.paintingChild ) {
break;
}}
}var tmpRect = C$.fetchRectangle();
for (; i >= 0; i--) {
var jc = this.getComponent$I(i);
if (jc != null  && jc.isVisible() == true  ) {
var cr = jc.getBounds$java_awt_Rectangle(tmpRect);
var jsg = sg.create$I$I$I$I(cr.x, (jc.isContentPane ? 0 : cr.y), cr.width, cr.height);
jsg.setColor$java_awt_Color(jc.getForeground());
jsg.setFont$java_awt_Font(jc.getFont());
var shouldSetFlagBack = false;
try {
jc.checkBackgroundPainted$swingjs_JSGraphics2D(null);
jc.paint$java_awt_Graphics(jsg);
jc.checkBackgroundPainted$swingjs_JSGraphics2D(this.getJSGraphic2D$java_awt_Graphics(jsg));
} finally {
jsg.dispose();
if (shouldSetFlagBack) {
(jc).setFlag$I$Z(1, false);
(jc).setFlag$I$Z(2, false);
}}
}}
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
}});

Clazz_newMeth(C$, 'paintBorder$java_awt_Graphics', function (g) {
var border = this.getBorder();
if (border != null ) {
border.paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I(this, g, 0, 0, this.getWidth(), this.getHeight());
}});

Clazz_newMeth(C$, 'update$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
var shouldClearPaintFlags = false;
if ((this.getWidth() <= 0) || (this.getHeight() <= 0) ) {
return;
}var componentGraphics = this.getComponentGraphics$java_awt_Graphics(g);
var cg = componentGraphics.create();
try {
if (this.getParent() != null  && !(Clazz_instanceOf(this.getParent(), "javax.swing.JComponent")) ) {
p$.adjustPaintFlags.apply(this, []);
shouldClearPaintFlags = true;
}var printing = p$.getFlag$I.apply(this, [11]);
if (!printing) {
p$.paintComponentSafely$java_awt_Graphics.apply(this, [cg]);
p$.paintBorderSafely$java_awt_Graphics.apply(this, [cg]);
} else {
p$.printComponentSafely$java_awt_Graphics.apply(this, [cg]);
p$.printBorderSafely$java_awt_Graphics.apply(this, [cg]);
}if (!printing) {
this.paintChildren$java_awt_Graphics(cg);
} else {
this.printChildren$java_awt_Graphics(cg);
}} finally {
cg.dispose();
if (shouldClearPaintFlags) {
p$.setFlag$I$Z.apply(this, [1, false]);
p$.setFlag$I$Z.apply(this, [2, false]);
p$.setFlag$I$Z.apply(this, [11, false]);
p$.setFlag$I$Z.apply(this, [12, false]);
}}
});

Clazz_newMeth(C$, 'paintForceDoubleBuffered$java_awt_Graphics', function (g) {
var rm = (I$[10]||$incl$(10)).currentManager$javax_swing_JComponent(this);
var clip = g.getClipBounds();
rm.beginPaint();
p$.setFlag$I$Z.apply(this, [13, true]);
try {
rm.paint$javax_swing_JComponent$javax_swing_JComponent$java_awt_Graphics$I$I$I$I(this, this, g, clip.x, clip.y, clip.width, clip.height);
} finally {
rm.endPaint();
p$.setFlag$I$Z.apply(this, [13, false]);
}
});

Clazz_newMeth(C$, 'isPainting', function () {
var component = this;
while (component != null ){
if (Clazz_instanceOf(component, "javax.swing.JComponent") && (component).getFlag$I(1) ) {
return true;
}component = component.getParent();
}
return false;
});

Clazz_newMeth(C$, 'adjustPaintFlags', function () {
var jparent = null;
var parent;
for (parent = this.getParent(); parent != null ; parent = parent.getParent()) {
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
jparent = parent;
if (jparent.getFlag$I(1)) p$.setFlag$I$Z.apply(this, [1, true]);
if (jparent.getFlag$I(2)) p$.setFlag$I$Z.apply(this, [2, true]);
if (jparent.getFlag$I(11)) p$.setFlag$I$Z.apply(this, [11, true]);
if (jparent.getFlag$I(12)) p$.setFlag$I$Z.apply(this, [12, true]);
break;
}}
});

Clazz_newMeth(C$, 'printAll$java_awt_Graphics', function (g) {
p$.setFlag$I$Z.apply(this, [12, true]);
try {
this.print$java_awt_Graphics(g);
} finally {
p$.setFlag$I$Z.apply(this, [12, false]);
}
});

Clazz_newMeth(C$, 'print$java_awt_Graphics', function (g) {
p$.setFlag$I$Z.apply(this, [11, true]);
this.firePropertyChange$S$Z$Z("paintingForPrint", false, true);
try {
this.paint$java_awt_Graphics(g);
} finally {
p$.setFlag$I$Z.apply(this, [11, false]);
this.firePropertyChange$S$Z$Z("paintingForPrint", true, false);
}
});

Clazz_newMeth(C$, 'printComponent$java_awt_Graphics', function (g) {
this.paintComponent$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printChildren$java_awt_Graphics', function (g) {
this.paintChildren$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printBorder$java_awt_Graphics', function (g) {
this.paintBorder$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'isPaintingTile', function () {
return p$.getFlag$I.apply(this, [2]);
});

Clazz_newMeth(C$, 'isPaintingForPrint', function () {
return p$.getFlag$I.apply(this, [11]);
});

Clazz_newMeth(C$, 'isManagingFocus', function () {
return false;
});

Clazz_newMeth(C$, 'registerNextFocusableComponent', function () {
p$.registerNextFocusableComponent$java_awt_Component.apply(this, [this.getNextFocusableComponent()]);
});

Clazz_newMeth(C$, 'registerNextFocusableComponent$java_awt_Component', function (nextFocusableComponent) {
if (nextFocusableComponent == null ) {
return;
}});

Clazz_newMeth(C$, 'deregisterNextFocusableComponent', function () {
var nextFocusableComponent = this.getNextFocusableComponent();
if (nextFocusableComponent == null ) {
return;
}var nearestRoot = (this.isFocusCycleRoot()) ? this : this.getFocusCycleRootAncestor();
if (nearestRoot == null ) {
return;
}});

Clazz_newMeth(C$, 'setNextFocusableComponent$java_awt_Component', function (aComponent) {
var displayable = this.isDisplayable();
if (displayable) {
p$.deregisterNextFocusableComponent.apply(this, []);
}this.putClientProperty$O$O("nextFocus", aComponent);
if (displayable) {
p$.registerNextFocusableComponent$java_awt_Component.apply(this, [aComponent]);
}});

Clazz_newMeth(C$, 'getNextFocusableComponent', function () {
return this.getClientProperty$O("nextFocus");
});

Clazz_newMeth(C$, 'setRequestFocusEnabled$Z', function (requestFocusEnabled) {
p$.setFlag$I$Z.apply(this, [22, !requestFocusEnabled]);
});

Clazz_newMeth(C$, 'isRequestFocusEnabled', function () {
return !p$.getFlag$I.apply(this, [22]);
});

Clazz_newMeth(C$, 'requestFocus', function () {
C$.superclazz.prototype.requestFocus.apply(this, []);
});

Clazz_newMeth(C$, 'requestFocus$Z', function (temporary) {
C$.superclazz.prototype.requestFocus.apply(this, []);
return true;
});

Clazz_newMeth(C$, 'requestFocusInWindow', function () {
return C$.superclazz.prototype.requestFocusInWindow.apply(this, []);
});

Clazz_newMeth(C$, 'requestFocusInWindow$Z', function (temporary) {
return C$.superclazz.prototype.requestFocusInWindow.apply(this, []);
});

Clazz_newMeth(C$, 'grabFocus', function () {
this.requestFocus();
});

Clazz_newMeth(C$, 'setVerifyInputWhenFocusTarget$Z', function (verifyInputWhenFocusTarget) {
var oldVerifyInputWhenFocusTarget = this.verifyInputWhenFocusTarget;
this.verifyInputWhenFocusTarget = verifyInputWhenFocusTarget;
this.firePropertyChange$S$Z$Z("verifyInputWhenFocusTarget", oldVerifyInputWhenFocusTarget, verifyInputWhenFocusTarget);
});

Clazz_newMeth(C$, 'getVerifyInputWhenFocusTarget', function () {
return this.verifyInputWhenFocusTarget;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return (I$[11]||$incl$(11)).getMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'setPreferredSize$java_awt_Dimension', function (preferredSize) {
C$.superclazz.prototype.setPreferredSize$java_awt_Dimension.apply(this, [preferredSize]);
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return this.getPrefSizeJComp();
});

Clazz_newMeth(C$, 'getPrefSizeJComp', function () {
var size = (this.isPreferredSizeSet() || this.ui == null   ? null : this.ui.getPreferredSize());
return (size == null  ? this.preferredSize() : size);
});

Clazz_newMeth(C$, 'setMaximumSize$java_awt_Dimension', function (maximumSize) {
C$.superclazz.prototype.setMaximumSize$java_awt_Dimension.apply(this, [maximumSize]);
});

Clazz_newMeth(C$, 'getMaximumSize', function () {
if (this.isMaximumSizeSet()) {
return C$.superclazz.prototype.getMaximumSize.apply(this, []);
}var size = null;
if (this.ui != null ) {
size = this.ui.getMaximumSize();
}return (size != null ) ? size : C$.superclazz.prototype.getMaximumSize.apply(this, []);
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension', function (minimumSize) {
C$.superclazz.prototype.setMinimumSize$java_awt_Dimension.apply(this, [minimumSize]);
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
if (this.isMinimumSizeSet()) {
return C$.superclazz.prototype.getMinimumSize.apply(this, []);
}var size = null;
if (this.ui != null ) {
size = this.ui.getMinimumSize();
}return (size != null ) ? size : C$.superclazz.prototype.getMinimumSize.apply(this, []);
});

Clazz_newMeth(C$, 'contains$I$I', function (x, y) {
return (this.ui != null ) ? this.ui.contains$javax_swing_JComponent$I$I(this, x, y) : this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'setBorder$javax_swing_border_Border', function (border) {
var oldBorder = this.border;
this.border = border;
this.firePropertyChange$S$O$O("border", oldBorder, border);
if (border !== oldBorder ) {
if (border == null  || oldBorder == null   || !(border.getBorderInsets$java_awt_Component(this).equals$O(oldBorder.getBorderInsets$java_awt_Component(this))) ) {
this.revalidate();
}this.repaint();
}});

Clazz_newMeth(C$, 'getBorder', function () {
return this.border;
});

Clazz_newMeth(C$, 'getInsets', function () {
if (this.border != null ) {
return this.border.getBorderInsets$java_awt_Component(this);
}return C$.superclazz.prototype.getInsets.apply(this, []);
});

Clazz_newMeth(C$, 'getInsets$java_awt_Insets', function (insets) {
if (insets == null ) {
insets = Clazz_new_((I$[12]||$incl$(12)).c$$I$I$I$I,[0, 0, 0, 0]);
}if (this.border != null ) {
if (Clazz_instanceOf(this.border, "javax.swing.border.AbstractBorder")) {
return (this.border).getBorderInsets$java_awt_Component$java_awt_Insets(this, insets);
} else {
return this.border.getBorderInsets$java_awt_Component(this);
}} else {
insets.left = insets.top = insets.right = insets.bottom = 0;
return insets;
}});

Clazz_newMeth(C$, 'getAlignmentY', function () {
if (this.isAlignmentYSet) {
return this.alignmentY;
}return C$.superclazz.prototype.getAlignmentY.apply(this, []);
});

Clazz_newMeth(C$, 'setAlignmentY$F', function (alignmentY) {
this.alignmentY = alignmentY > 1.0  ? 1.0 : alignmentY < 0.0  ? 0.0 : alignmentY;
this.isAlignmentYSet = true;
});

Clazz_newMeth(C$, 'getAlignmentX', function () {
if (this.isAlignmentXSet) {
return this.alignmentX;
}return C$.superclazz.prototype.getAlignmentX.apply(this, []);
});

Clazz_newMeth(C$, 'setAlignmentX$F', function (alignmentX) {
this.alignmentX = alignmentX > 1.0  ? 1.0 : alignmentX < 0.0  ? 0.0 : alignmentX;
this.isAlignmentXSet = true;
});

Clazz_newMeth(C$, 'setInputVerifier$javax_swing_InputVerifier', function (inputVerifier) {
var oldInputVerifier = this.getClientProperty$O((I$[13]||$incl$(13)).JComponent_INPUT_VERIFIER);
this.putClientProperty$O$O((I$[13]||$incl$(13)).JComponent_INPUT_VERIFIER, inputVerifier);
this.firePropertyChange$S$O$O("inputVerifier", oldInputVerifier, inputVerifier);
});

Clazz_newMeth(C$, 'getInputVerifier', function () {
return this.getClientProperty$O((I$[13]||$incl$(13)).JComponent_INPUT_VERIFIER);
});

Clazz_newMeth(C$, 'getGraphics', function () {
return C$.superclazz.prototype.getGraphics.apply(this, []);
});

Clazz_newMeth(C$, 'registerKeyboardAction$java_awt_event_ActionListener$S$javax_swing_KeyStroke$I', function (anAction, aCommand, aKeyStroke, aCondition) {
var inputMap = this.getInputMap$I$Z(aCondition, true);
if (inputMap != null ) {
var actionMap = this.getActionMap$Z(true);
var action = Clazz_new_((I$[14]||$incl$(14)).c$$java_awt_event_ActionListener$S, [this, null, anAction, aCommand]);
inputMap.put$javax_swing_KeyStroke$O(aKeyStroke, action);
if (actionMap != null ) {
actionMap.put$O$javax_swing_Action(action, action);
}}});

Clazz_newMeth(C$, 'registerWithKeyboardManager$Z', function (onlyIfNew) {
var inputMap = this.getInputMap$I$Z(2, false);
var strokes;
var registered = this.getClientProperty$O("_WhenInFocusedWindow");
if (inputMap != null ) {
strokes = inputMap.allKeys();
if (strokes != null ) {
for (var counter = strokes.length - 1; counter >= 0; counter--) {
if (!onlyIfNew || registered == null   || registered.get$O(strokes[counter]) == null  ) {
p$.registerWithKeyboardManager$javax_swing_KeyStroke.apply(this, [strokes[counter]]);
}if (registered != null ) {
registered.remove$O(strokes[counter]);
}}
}} else {
strokes = null;
}if (registered != null  && registered.size() > 0 ) {
var keys = registered.keys();
while (keys.hasMoreElements()){
var ks = keys.nextElement();
p$.unregisterWithKeyboardManager$javax_swing_KeyStroke.apply(this, [ks]);
}
registered.clear();
}if (strokes != null  && strokes.length > 0 ) {
if (registered == null ) {
registered = Clazz_new_((I$[15]||$incl$(15)).c$$I,[strokes.length]);
this.putClientProperty$O$O("_WhenInFocusedWindow", registered);
}for (var counter = strokes.length - 1; counter >= 0; counter--) {
registered.put$TK$TV(strokes[counter], strokes[counter]);
}
} else {
this.putClientProperty$O$O("_WhenInFocusedWindow", null);
}});

Clazz_newMeth(C$, 'unregisterWithKeyboardManager', function () {
var registered = this.getClientProperty$O("_WhenInFocusedWindow");
if (registered != null  && registered.size() > 0 ) {
var keys = registered.keys();
while (keys.hasMoreElements()){
var ks = keys.nextElement();
p$.unregisterWithKeyboardManager$javax_swing_KeyStroke.apply(this, [ks]);
}
}this.putClientProperty$O$O("_WhenInFocusedWindow", null);
});

Clazz_newMeth(C$, 'componentInputMapChanged$javax_swing_ComponentInputMap', function (inputMap) {
var km = this.getInputMap$I$Z(2, false);
while (km !== inputMap  && km != null  ){
km = km.getParent();
}
if (km != null ) {
p$.registerWithKeyboardManager$Z.apply(this, [false]);
}});

Clazz_newMeth(C$, 'registerWithKeyboardManager$javax_swing_KeyStroke', function (aKeyStroke) {
(I$[16]||$incl$(16)).getCurrentManager().registerKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent(aKeyStroke, this);
});

Clazz_newMeth(C$, 'unregisterWithKeyboardManager$javax_swing_KeyStroke', function (aKeyStroke) {
(I$[16]||$incl$(16)).getCurrentManager().unregisterKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent(aKeyStroke, this);
});

Clazz_newMeth(C$, 'registerKeyboardAction$java_awt_event_ActionListener$javax_swing_KeyStroke$I', function (anAction, aKeyStroke, aCondition) {
this.registerKeyboardAction$java_awt_event_ActionListener$S$javax_swing_KeyStroke$I(anAction, null, aKeyStroke, aCondition);
});

Clazz_newMeth(C$, 'unregisterKeyboardAction$javax_swing_KeyStroke', function (aKeyStroke) {
var am = this.getActionMap$Z(false);
for (var counter = 0; counter < 3; counter++) {
var km = this.getInputMap$I$Z(counter, false);
if (km != null ) {
var actionID = km.get$javax_swing_KeyStroke(aKeyStroke);
if (am != null  && actionID != null  ) {
am.remove$O(actionID);
}km.remove$javax_swing_KeyStroke(aKeyStroke);
}}
});

Clazz_newMeth(C$, 'getRegisteredKeyStrokes', function () {
var counts = Clazz_array(Integer.TYPE, [3]);
var strokes = Clazz_array((I$[8]||$incl$(8)), [3, null]);
for (var counter = 0; counter < 3; counter++) {
var km = this.getInputMap$I$Z(counter, false);
strokes[counter] = (km != null ) ? km.allKeys() : null;
counts[counter] = (strokes[counter] != null ) ? strokes[counter].length : 0;
}
var retValue = Clazz_array((I$[8]||$incl$(8)), [counts[0] + counts[1] + counts[2] ]);
for (var counter = 0, last = 0; counter < 3; counter++) {
if (counts[counter] > 0) {
System.arraycopy(strokes[counter], 0, retValue, last, counts[counter]);
last = last+(counts[counter]);
}}
return retValue;
});

Clazz_newMeth(C$, 'getConditionForKeyStroke$javax_swing_KeyStroke', function (aKeyStroke) {
for (var counter = 0; counter < 3; counter++) {
var inputMap = this.getInputMap$I$Z(counter, false);
if (inputMap != null  && inputMap.get$javax_swing_KeyStroke(aKeyStroke) != null  ) {
return counter;
}}
return -1;
});

Clazz_newMeth(C$, 'getActionForKeyStroke$javax_swing_KeyStroke', function (aKeyStroke) {
var am = this.getActionMap$Z(false);
if (am == null ) {
return null;
}for (var counter = 0; counter < 3; counter++) {
var inputMap = this.getInputMap$I$Z(counter, false);
if (inputMap != null ) {
var actionBinding = inputMap.get$javax_swing_KeyStroke(aKeyStroke);
if (actionBinding != null ) {
var action = am.get$O(actionBinding);
if (Clazz_instanceOf(action, "javax.swing.JComponent.ActionStandin")) {
return (action).actionListener;
}return action;
}}}
return null;
});

Clazz_newMeth(C$, 'resetKeyboardActions', function () {
for (var counter = 0; counter < 3; counter++) {
var inputMap = this.getInputMap$I$Z(counter, false);
if (inputMap != null ) {
inputMap.clear();
}}
var am = this.getActionMap$Z(false);
if (am != null ) {
am.clear();
}});

Clazz_newMeth(C$, 'setInputMap$I$javax_swing_InputMap', function (condition, map) {
switch (condition) {
case 2:
if (map != null  && !(Clazz_instanceOf(map, "javax.swing.ComponentInputMap")) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["WHEN_IN_FOCUSED_WINDOW InputMaps must be of type ComponentInputMap"]);
}this.windowInputMap = map;
p$.setFlag$I$Z.apply(this, [7, true]);
p$.registerWithKeyboardManager$Z.apply(this, [false]);
break;
case 1:
this.ancestorInputMap = map;
p$.setFlag$I$Z.apply(this, [6, true]);
break;
case 0:
this.focusInputMap = map;
p$.setFlag$I$Z.apply(this, [5, true]);
break;
default:
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT"]);
}
});

Clazz_newMeth(C$, 'getInputMap$I', function (condition) {
return this.getInputMap$I$Z(condition, true);
});

Clazz_newMeth(C$, 'getInputMap', function () {
return this.getInputMap$I$Z(0, true);
});

Clazz_newMeth(C$, 'setActionMap$javax_swing_ActionMap', function (am) {
this.actionMap = am;
p$.setFlag$I$Z.apply(this, [8, true]);
});

Clazz_newMeth(C$, 'getActionMap', function () {
return this.getActionMap$Z(true);
});

Clazz_newMeth(C$, 'getInputMap$I$Z', function (condition, create) {
switch (condition) {
case 0:
if (p$.getFlag$I.apply(this, [5])) {
return this.focusInputMap;
}if (create) {
var km = Clazz_new_((I$[17]||$incl$(17)));
this.setInputMap$I$javax_swing_InputMap(condition, km);
return km;
}break;
case 1:
if (p$.getFlag$I.apply(this, [6])) {
return this.ancestorInputMap;
}if (create) {
var km = Clazz_new_((I$[17]||$incl$(17)));
this.setInputMap$I$javax_swing_InputMap(condition, km);
return km;
}break;
case 2:
if (p$.getFlag$I.apply(this, [7])) {
return this.windowInputMap;
}if (create) {
var km = Clazz_new_((I$[18]||$incl$(18)).c$$javax_swing_JComponent,[this]);
this.setInputMap$I$javax_swing_InputMap(condition, km);
return km;
}break;
default:
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT"]);
}
return null;
});

Clazz_newMeth(C$, 'getActionMap$Z', function (create) {
if (p$.getFlag$I.apply(this, [8])) {
return this.actionMap;
}if (create) {
var am = Clazz_new_((I$[19]||$incl$(19)));
this.setActionMap$javax_swing_ActionMap(am);
return am;
}return null;
});

Clazz_newMeth(C$, 'getBaseline$I$I', function (width, height) {
C$.superclazz.prototype.getBaseline$I$I.apply(this, [width, height]);
if (this.ui != null ) {
return this.ui.getBaseline$javax_swing_JComponent$I$I(this, width, height);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior', function () {
if (this.ui != null ) {
return this.ui.getBaselineResizeBehavior$javax_swing_JComponent(this);
}return (I$[20]||$incl$(20)).OTHER;
});

Clazz_newMeth(C$, 'requestDefaultFocus', function () {
var nearestRoot = (this.isFocusCycleRoot()) ? this : this.getFocusCycleRootAncestor();
if (nearestRoot == null ) {
return false;
}return false;
});

Clazz_newMeth(C$, 'setVisible$Z', function (aFlag) {
if (aFlag != this.isVisible() ) {
C$.superclazz.prototype.setVisible$Z.apply(this, [aFlag]);
var parent = this.getParent();
if (parent != null ) {
var r = this.getBounds();
parent.repaint$I$I$I$I(r.x, r.y, r.width, r.height);
}this.revalidate();
}});

Clazz_newMeth(C$, 'setEnabled$Z', function (enabled) {
var oldEnabled = this.isEnabled();
C$.superclazz.prototype.setEnabled$Z.apply(this, [enabled]);
this.firePropertyChange$S$Z$Z("enabled", oldEnabled, enabled);
if (enabled != oldEnabled ) {
this.repaint();
}});

Clazz_newMeth(C$, 'setForeground$java_awt_Color', function (fg) {
var oldFg = this.getForeground();
C$.superclazz.prototype.setForeground$java_awt_Color.apply(this, [fg]);
if ((oldFg != null ) ? !oldFg.equals$O(fg) : ((fg != null ) && !fg.equals$O(oldFg) )) {
this.repaint();
}});

Clazz_newMeth(C$, 'setBackground$java_awt_Color', function (bg) {
var oldBg = this.getBackground();
C$.superclazz.prototype.setBackground$java_awt_Color.apply(this, [bg]);
if ((oldBg != null ) ? !oldBg.equals$O(bg) : ((bg != null ) && !bg.equals$O(oldBg) )) {
this.repaint();
}});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (font) {
var oldFont = this.getFont();
C$.superclazz.prototype.setFont$java_awt_Font.apply(this, [font]);
if (font !== oldFont ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getDefaultLocale', function () {
var l = (I$[1]||$incl$(1)).appContextGet$O("JComponent.defaultLocale");
if (l == null ) {
l = (I$[21]||$incl$(21)).getDefault();
C$.setDefaultLocale$java_util_Locale(l);
}return l;
}, 1);

Clazz_newMeth(C$, 'setDefaultLocale$java_util_Locale', function (l) {
(I$[1]||$incl$(1)).appContextPut$O$O("JComponent.defaultLocale", l);
}, 1);

Clazz_newMeth(C$, 'processComponentKeyEvent$java_awt_event_KeyEvent', function (e) {
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent', function (e) {
var shouldProcessKey;
C$.superclazz.prototype.processKeyEvent$java_awt_event_KeyEvent.apply(this, [e]);
if (!e.isConsumed()) {
this.processComponentKeyEvent$java_awt_event_KeyEvent(e);
}shouldProcessKey = (I$[22]||$incl$(22)).shouldProcess$java_awt_event_KeyEvent(e);
if (e.isConsumed()) {
return;
}if (shouldProcessKey && this.processKeyBindings$java_awt_event_KeyEvent$Z(e, e.getID() == 401) ) {
e.consume();
}});

Clazz_newMeth(C$, 'processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z', function (ks, e, condition, pressed) {
var map = this.getInputMap$I$Z(condition, false);
var am = this.getActionMap$Z(false);
if (map != null  && am != null   && this.isEnabled() ) {
var binding = map.get$javax_swing_KeyStroke(ks);
var action = (binding == null ) ? null : am.get$O(binding);
if (action != null ) {
return (I$[1]||$incl$(1)).notifyAction$javax_swing_Action$javax_swing_KeyStroke$java_awt_event_KeyEvent$O$I(action, ks, e, this, e.getModifiers());
}}return false;
});

Clazz_newMeth(C$, 'processKeyBindings$java_awt_event_KeyEvent$Z', function (e, pressed) {
if (!(I$[1]||$incl$(1)).isValidKeyEventForKeyBindings$java_awt_event_KeyEvent(e)) {
return false;
}var ks;
if (e.getID() == 400) {
ks = (I$[8]||$incl$(8)).getKeyStroke$C(e.getKeyChar());
} else {
ks = (I$[8]||$incl$(8)).getKeyStroke$I$I$Z(e.getKeyCode(), e.getModifiers(), (pressed ? false : true));
}if (this.processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, 0, pressed)) return true;
var parent = this;
while (parent != null  && !(Clazz_instanceOf(parent, "java.awt.Window"))  && !(Clazz_instanceOf(parent, "java.applet.Applet")) ){
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
if ((parent).processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, 1, pressed)) return true;
}parent = parent.getParent();
}
if (parent != null ) {
return C$.processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z(e, parent, pressed);
}return false;
});

Clazz_newMeth(C$, 'processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z', function (e, container, pressed) {
while (true){
if ((I$[16]||$incl$(16)).getCurrentManager().fireKeyboardAction$java_awt_event_KeyEvent$Z$java_awt_Container(e, pressed, container)) {
return true;
}if ((I$[23]||$incl$(23)).isHeavyWeight$java_awt_Container(container)) {
container = (container).getOwner();
} else {
return false;
}}
}, 1);

Clazz_newMeth(C$, 'setToolTipText$S', function (text) {
this.putClientProperty$O$O("ToolTipText", text);
});

Clazz_newMeth(C$, 'getToolTipText', function () {
return this.getClientProperty$O("ToolTipText");
});

Clazz_newMeth(C$, 'getToolTipText$java_awt_event_MouseEvent', function (event) {
return this.getToolTipText();
});

Clazz_newMeth(C$, 'getToolTipLocation$java_awt_event_MouseEvent', function (event) {
return null;
});

Clazz_newMeth(C$, 'getPopupLocation$java_awt_event_MouseEvent', function (event) {
return null;
});

Clazz_newMeth(C$, 'createToolTip', function () {
var tip = Clazz_new_((I$[24]||$incl$(24)));
tip.setComponent$javax_swing_JComponent(this);
return tip;
});

Clazz_newMeth(C$, 'scrollRectToVisible$java_awt_Rectangle', function (aRect) {
var parent;
var dx = this.getX();
var dy = this.getY();
for (parent = this.getParent(); !(parent == null ) && !(Clazz_instanceOf(parent, "javax.swing.JComponent")) && !(Clazz_instanceOf(parent, "javax.swing.CellRendererPane"))  ; parent = parent.getParent()) {
var bounds = parent.getBounds();
dx = dx+(bounds.x);
dy = dy+(bounds.y);
}
if (!(parent == null ) && !(Clazz_instanceOf(parent, "javax.swing.CellRendererPane")) ) {
aRect.x = aRect.x+(dx);
aRect.y = aRect.y+(dy);
(parent).scrollRectToVisible$java_awt_Rectangle(aRect);
aRect.x = aRect.x-(dx);
aRect.y = aRect.y-(dy);
}});

Clazz_newMeth(C$, 'setAutoscrolls$Z', function (autoscrolls) {
p$.setFlag$I$Z.apply(this, [25, true]);
if (this.autoscrolls != autoscrolls ) {
this.autoscrolls = autoscrolls;
if (autoscrolls) {
this.enableEvents$J(16);
this.enableEvents$J(32);
} else {
(I$[25]||$incl$(25)).stop$javax_swing_JComponent(this);
}}});

Clazz_newMeth(C$, 'getAutoscrolls', function () {
return this.autoscrolls;
});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent', function (e) {
if (this.autoscrolls && e.getID() == 502 ) {
(I$[25]||$incl$(25)).stop$javax_swing_JComponent(this);
}C$.superclazz.prototype.processMouseEvent$java_awt_event_MouseEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'processMouseMotionEvent$java_awt_event_MouseEvent', function (e) {
var dispatch = true;
if (this.autoscrolls && e.getID() == 506 ) {
dispatch = !(I$[25]||$incl$(25)).isRunning$javax_swing_JComponent(this);
(I$[25]||$incl$(25)).processMouseDragged$java_awt_event_MouseEvent(e);
}if (dispatch) {
C$.superclazz.prototype.processMouseMotionEvent$java_awt_event_MouseEvent.apply(this, [e]);
}});

Clazz_newMeth(C$, 'superProcessMouseMotionEvent$java_awt_event_MouseEvent', function (e) {
C$.superclazz.prototype.processMouseMotionEvent$java_awt_event_MouseEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'setCreatedDoubleBuffer$Z', function (newValue) {
p$.setFlag$I$Z.apply(this, [9, newValue]);
});

Clazz_newMeth(C$, 'getCreatedDoubleBuffer', function () {
return p$.getFlag$I.apply(this, [9]);
});

Clazz_newMeth(C$, 'getTitledBorderText', function () {
var border = this.getBorder();
if (Clazz_instanceOf(border, "javax.swing.border.TitledBorder")) {
return (border).getTitle();
} else {
return null;
}});

Clazz_newMeth(C$, 'getClientProperties', function () {
if (this.clientProperties == null ) {
this.clientProperties = Clazz_new_((I$[26]||$incl$(26)));
}return this.clientProperties;
});

Clazz_newMeth(C$, 'getClientProperty$O', function (key) {
if (this.clientProperties == null ) {
return null;
} else {
{
return this.clientProperties.get$O(key);
}}});

Clazz_newMeth(C$, 'putClientProperty$O$O', function (key, value) {
if (value == null  && this.clientProperties == null  ) {
return;
}var clientProperties = p$.getClientProperties.apply(this, []);
var oldValue;
{
oldValue = clientProperties.get$O(key);
if (value != null ) {
clientProperties.put$O$O(key, value);
} else if (oldValue != null ) {
clientProperties.remove$O(key);
} else {
return;
}}this.clientPropertyChanged$O$O$O(key, oldValue, value);
this.firePropertyChange$S$O$O(key.toString(), oldValue, value);
});

Clazz_newMeth(C$, 'clientPropertyChanged$O$O$O', function (key, oldValue, newValue) {
});

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_ComponentUI', function (newUI) {
p$.uninstallUIAndProperties.apply(this, []);
this.ui = newUI;
if (this.ui != null ) {
this.ui.installJS();
}this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'uninstallUIAndProperties', function () {
if (this.ui != null ) {
this.ui.uninstallUI$javax_swing_JComponent(this);
this.ui.uninstallJS();
}});

Clazz_newMeth(C$, 'setUIProperty$S$O', function (propertyName, value) {
if (propertyName == "opaque") {
if (!p$.getFlag$I.apply(this, [24])) {
this.setOpaque$Z((value).booleanValue());
p$.setFlag$I$Z.apply(this, [24, false]);
}} else if (propertyName == "autoscrolls") {
if (!p$.getFlag$I.apply(this, [25])) {
this.setAutoscrolls$Z((value).booleanValue());
p$.setFlag$I$Z.apply(this, [25, false]);
}} else if (propertyName == "focusTraversalKeysForward") {
} else if (propertyName == "focusTraversalKeysBackward") {
} else {
System.out.println$S((I$[27]||$incl$(27)).getClassNameForObject$O(this) + " property \"" + propertyName + "\" cannot be set using this method" + (I$[28]||$incl$(28)).getStackTrace$I(5) );
}});

Clazz_newMeth(C$, 'setFocusTraversalKeys$I$java_util_Set', function (id, keystrokes) {
C$.superclazz.prototype.setFocusTraversalKeys$I$java_util_Set.apply(this, [id, keystrokes]);
});

Clazz_newMeth(C$, 'isLightweightComponent$java_awt_Component', function (c) {
{
return(!c.rootPane);
}
}, 1);

Clazz_newMeth(C$, 'isOpaque', function () {
return p$.getFlag$I.apply(this, [3]);
});

Clazz_newMeth(C$, 'setOpaque$Z', function (isOpaque) {
var oldValue = p$.getFlag$I.apply(this, [3]);
p$.setFlag$I$Z.apply(this, [3, isOpaque]);
p$.setFlag$I$Z.apply(this, [24, true]);
this.firePropertyChange$S$Z$Z("opaque", oldValue, isOpaque);
});

Clazz_newMeth(C$, 'rectangleIsObscured$I$I$I$I', function (x, y, width, height) {
var numChildren = this.getComponentCount();
for (var i = 0; i < numChildren; i++) {
var child = this.getComponent$I(i);
var cx;
var cy;
var cw;
var ch;
cx = child.getX();
cy = child.getY();
cw = child.getWidth();
ch = child.getHeight();
if (x >= cx && (x + width) <= (cx + cw)  && y >= cy  && (y + height) <= (cy + ch)  && child.isVisible() ) {
if (Clazz_instanceOf(child, "javax.swing.JComponent")) {
return (child).isOpaque();
} else {
return false;
}}}
return false;
});

Clazz_newMeth(C$, 'computeVisibleRect$java_awt_Component$java_awt_Rectangle', function (c, visibleRect) {
var p = c.getParent();
var bounds = c.getBounds();
if (p == null  || Clazz_instanceOf(p, "java.awt.Window")  || Clazz_instanceOf(p, "java.applet.Applet") ) {
visibleRect.setBounds$I$I$I$I(0, 0, bounds.width, bounds.height);
} else {
C$.computeVisibleRect$java_awt_Component$java_awt_Rectangle(p, visibleRect);
visibleRect.x = visibleRect.x-(bounds.x);
visibleRect.y = visibleRect.y-(bounds.y);
(I$[1]||$incl$(1)).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, bounds.width, bounds.height, visibleRect);
}}, 1);

Clazz_newMeth(C$, 'computeVisibleRect$java_awt_Rectangle', function (visibleRect) {
C$.computeVisibleRect$java_awt_Component$java_awt_Rectangle(this, visibleRect);
});

Clazz_newMeth(C$, 'getVisibleRect', function () {
var visibleRect = Clazz_new_((I$[9]||$incl$(9)));
this.computeVisibleRect$java_awt_Rectangle(visibleRect);
return visibleRect;
});

Clazz_newMeth(C$, 'getTopLevelAncestor', function () {
for (var p = this; p != null ; p = p.getParent()) {
if (Clazz_instanceOf(p, "java.awt.Window") || Clazz_instanceOf(p, "java.applet.Applet") ) {
return p;
}}
return null;
});

Clazz_newMeth(C$, 'getAncestorNotifier', function () {
return this.getClientProperty$O((I$[13]||$incl$(13)).JComponent_ANCESTOR_NOTIFIER);
});

Clazz_newMeth(C$, 'addAncestorListener$javax_swing_event_AncestorListener', function (listener) {
var ancestorNotifier = p$.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
ancestorNotifier = Clazz_new_((I$[29]||$incl$(29)).c$$javax_swing_JComponent,[this]);
this.putClientProperty$O$O((I$[13]||$incl$(13)).JComponent_ANCESTOR_NOTIFIER, ancestorNotifier);
}ancestorNotifier.addAncestorListener$javax_swing_event_AncestorListener(listener);
});

Clazz_newMeth(C$, 'removeAncestorListener$javax_swing_event_AncestorListener', function (listener) {
var ancestorNotifier = p$.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
return;
}ancestorNotifier.removeAncestorListener$javax_swing_event_AncestorListener(listener);
if (ancestorNotifier.listenerList.getListenerList().length == 0) {
ancestorNotifier.removeAllListeners();
this.putClientProperty$O$O((I$[13]||$incl$(13)).JComponent_ANCESTOR_NOTIFIER, null);
}});

Clazz_newMeth(C$, 'getAncestorListeners', function () {
var ancestorNotifier = p$.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
return Clazz_array((I$[30]||$incl$(30)), [0]);
}return ancestorNotifier.getAncestorListeners();
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
var result;
if (listenerType === Clazz_getClass((I$[30]||$incl$(30)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']) ) {
result = this.getAncestorListeners();
} else if (listenerType === Clazz_getClass((I$[31]||$incl$(31)),['propertyChange$java_beans_PropertyChangeEvent']) ) {
result = this.getPropertyChangeListeners();
} else {
result = this.listenerList.getListeners$Class(listenerType);
}if (result.length == 0) {
return C$.superclazz.prototype.getListeners$Class.apply(this, [listenerType]);
}return result;
});

Clazz_newMeth(C$, 'addNotify', function () {
C$.superclazz.prototype.addNotify.apply(this, []);
this.firePropertyChange$S$O$O("ancestor", null, this.getParent());
p$.registerWithKeyboardManager$Z.apply(this, [false]);
p$.registerNextFocusableComponent.apply(this, []);
});

Clazz_newMeth(C$, 'removeNotify', function () {
C$.superclazz.prototype.removeNotify.apply(this, []);
this.firePropertyChange$S$O$O("ancestor", this.getParent(), null);
p$.unregisterWithKeyboardManager.apply(this, []);
p$.deregisterNextFocusableComponent.apply(this, []);
if (this.getCreatedDoubleBuffer()) {
(I$[10]||$incl$(10)).currentManager$javax_swing_JComponent(this).resetDoubleBuffer();
this.setCreatedDoubleBuffer$Z(false);
}if (this.autoscrolls) {
(I$[25]||$incl$(25)).stop$javax_swing_JComponent(this);
}});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (tm, x, y, width, height) {
(I$[10]||$incl$(10)).currentManager$javax_swing_JComponent(this).addDirtyRegion$javax_swing_JComponent$I$I$I$I(this, x, y, width, height);
});

Clazz_newMeth(C$, 'repaint$java_awt_Rectangle', function (r) {
this.repaint$J$I$I$I$I(0, r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'revalidate', function () {
if (this.ui != null ) (this.ui).setTainted();
if (this.getParent() == null ) {
return;
}if ((I$[1]||$incl$(1)).isEventDispatchThread()) {
this.invalidate();
(I$[10]||$incl$(10)).currentManager$javax_swing_JComponent(this).addInvalidComponent$javax_swing_JComponent(this);
} else {
{
if (p$.getFlag$I.apply(this, [28])) {
return;
}p$.setFlag$I$Z.apply(this, [28, true]);
}var callRevalidate = ((
(function(){var C$=Clazz_newClass(P$, "JComponent$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
{
this.b$['javax.swing.JComponent'].setFlag$I$Z.apply(this.b$['javax.swing.JComponent'], [28, false]);
}this.b$['javax.swing.JComponent'].revalidate();
});
})()
), Clazz_new_((I$[32]||$incl$(32)).$init$, [this, null]));
(I$[1]||$incl$(1)).invokeLater$Runnable(callRevalidate);
}});

Clazz_newMeth(C$, 'isValidateRoot', function () {
return false;
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled', function () {
return true;
});

Clazz_newMeth(C$, 'isPaintingOrigin', function () {
return false;
});

Clazz_newMeth(C$, 'paintImmediately$I$I$I$I', function (x, y, w, h) {
var c = this;
var parent;
if (!this.isShowing()) {
return;
}while (!(c).isOpaque()){
parent = c.getParent();
if (parent != null ) {
x = x+(c.getX());
y = y+(c.getY());
c = parent;
} else {
break;
}if (!(Clazz_instanceOf(c, "javax.swing.JComponent"))) {
break;
}}
if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
(c)._paintImmediately$I$I$I$I(x, y, w, h);
} else {
c.repaint$I$I$I$I(x, y, w, h);
}});

Clazz_newMeth(C$, 'paintImmediately$java_awt_Rectangle', function (r) {
this.paintImmediately$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'alwaysOnTop', function () {
return false;
});

Clazz_newMeth(C$, 'setPaintingChild$java_awt_Component', function (paintingChild) {
this.paintingChild = paintingChild;
});

Clazz_newMeth(C$, '_paintImmediately$I$I$I$I', function (x, y, w, h) {
var g;
var c;
var tmpX;
var tmpY;
var tmpWidth;
var tmpHeight;
var offsetX = 0;
var offsetY = 0;
var hasBuffer = false;
var bufferedComponent = null;
var paintingComponent = this;
var path = Clazz_new_((I$[33]||$incl$(33)).c$$I,[7]);
var pIndex = -1;
var pCount = 0;
tmpX = tmpY = tmpWidth = tmpHeight = 0;
var paintImmediatelyClip = C$.fetchRectangle();
paintImmediatelyClip.x = x;
paintImmediatelyClip.y = y;
paintImmediatelyClip.width = w;
paintImmediatelyClip.height = h;
var ontop = this.alwaysOnTop() && this.isOpaque() ;
if (ontop) {
(I$[1]||$incl$(1)).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, this.getWidth(), this.getHeight(), paintImmediatelyClip);
if (paintImmediatelyClip.width == 0) {
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
}}var child;
for (c = this, child = null; c != null  && !(Clazz_instanceOf(c, "java.awt.Window"))  && !(Clazz_instanceOf(c, "java.applet.Applet")) ; child = c, c = c.getParent()) {
var jc = (Clazz_instanceOf(c, "javax.swing.JComponent")) ? c : null;
path.add$TE(c);
if (!ontop && jc != null   && !jc.isOptimizedDrawingEnabled() ) {
var resetPC;
if (c !== this ) {
if (jc.isPaintingOrigin()) {
resetPC = true;
} else {
var children = c.getComponents();
var i = 0;
for (; i < children.length; i++) {
if (children[i] === child ) break;
}
switch (jc.getObscuredState$I$I$I$I$I(i, paintImmediatelyClip.x, paintImmediatelyClip.y, paintImmediatelyClip.width, paintImmediatelyClip.height)) {
case 0:
resetPC = false;
break;
case 2:
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
default:
resetPC = true;
break;
}
}} else {
resetPC = false;
}if (resetPC) {
paintingComponent = jc;
pIndex = pCount;
offsetX = offsetY = 0;
hasBuffer = false;
}}pCount++;
if (!ontop) {
var bx = c.getX();
var by = c.getY();
tmpWidth = c.getWidth();
tmpHeight = c.getHeight();
(I$[1]||$incl$(1)).computeIntersection$I$I$I$I$java_awt_Rectangle(tmpX, tmpY, tmpWidth, tmpHeight, paintImmediatelyClip);
paintImmediatelyClip.x = paintImmediatelyClip.x+(bx);
paintImmediatelyClip.y = paintImmediatelyClip.y+(by);
offsetX = offsetX+(bx);
offsetY = offsetY+(by);
}}
if (c == null  || paintImmediatelyClip.width <= 0  || paintImmediatelyClip.height <= 0 ) {
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
}paintingComponent.setFlag$I$Z(13, true);
paintImmediatelyClip.x = paintImmediatelyClip.x-(offsetX);
paintImmediatelyClip.y = paintImmediatelyClip.y-(offsetY);
if (paintingComponent !== this ) {
var comp;
var i = pIndex;
for (; i > 0; i--) {
comp = path.get$I(i);
if (Clazz_instanceOf(comp, "javax.swing.JComponent")) {
(comp).setPaintingChild$java_awt_Component(path.get$I(i - 1));
}}
}try {
g = C$.safelyGetGraphics$java_awt_Component$java_awt_Component(paintingComponent, c);
try {
if (hasBuffer) {
var rm = (I$[10]||$incl$(10)).currentManager$javax_swing_JComponent(bufferedComponent);
rm.beginPaint();
try {
rm.paint$javax_swing_JComponent$javax_swing_JComponent$java_awt_Graphics$I$I$I$I(paintingComponent, bufferedComponent, g, paintImmediatelyClip.x, paintImmediatelyClip.y, paintImmediatelyClip.width, paintImmediatelyClip.height);
} finally {
rm.endPaint();
}
} else {
g.setClip$I$I$I$I(paintImmediatelyClip.x, paintImmediatelyClip.y, paintImmediatelyClip.width, paintImmediatelyClip.height);
this.checkBackgroundPainted$swingjs_JSGraphics2D(null);
paintingComponent.paint$java_awt_Graphics(g);
this.checkBackgroundPainted$swingjs_JSGraphics2D(this.getJSGraphic2D$java_awt_Graphics(g));
}} finally {
g.dispose();
}
} finally {
if (paintingComponent !== this ) {
var comp;
var i = pIndex;
for (; i > 0; i--) {
comp = path.get$I(i);
if (Clazz_instanceOf(comp, "javax.swing.JComponent")) {
(comp).setPaintingChild$java_awt_Component(null);
}}
}paintingComponent.setFlag$I$Z(13, false);
}
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
});

Clazz_newMeth(C$, 'paintToOffscreen$java_awt_Graphics$I$I$I$I$I$I', function (g, x, y, w, h, maxX, maxY) {
try {
p$.setFlag$I$Z.apply(this, [1, true]);
if ((y + h) < maxY || (x + w) < maxX ) {
p$.setFlag$I$Z.apply(this, [2, true]);
}if (p$.getFlag$I.apply(this, [13])) {
this.paint$java_awt_Graphics(g);
} else {
if (!this.rectangleIsObscured$I$I$I$I(x, y, w, h)) {
p$.paintComponentSafely$java_awt_Graphics.apply(this, [g]);
this.paintBorder$java_awt_Graphics(g);
}this.paintChildren$java_awt_Graphics(g);
}} finally {
p$.setFlag$I$Z.apply(this, [1, false]);
p$.setFlag$I$Z.apply(this, [2, false]);
}
});

Clazz_newMeth(C$, 'getObscuredState$I$I$I$I$I', function (compIndex, x, y, width, height) {
var retValue = 0;
var tmpRect = C$.fetchRectangle();
for (var i = compIndex - 1; i >= 0; i--) {
var sibling = this.getComponent$I(i);
if (!sibling.isVisible()) {
continue;
}var siblingRect;
var opaque;
if (Clazz_instanceOf(sibling, "javax.swing.JComponent")) {
opaque = (sibling).isOpaque();
if (!opaque) {
if (retValue == 1) {
continue;
}}} else {
opaque = true;
}siblingRect = sibling.getBounds$java_awt_Rectangle(tmpRect);
if (opaque && x >= siblingRect.x  && (x + width) <= (siblingRect.x + siblingRect.width)  && y >= siblingRect.y  && (y + height) <= (siblingRect.y + siblingRect.height) ) {
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
return 2;
} else if (retValue == 0 && !((x + width <= siblingRect.x) || (y + height <= siblingRect.y) || (x >= siblingRect.x + siblingRect.width) || (y >= siblingRect.y + siblingRect.height)  ) ) {
retValue = 1;
}}
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
return retValue;
});

Clazz_newMeth(C$, 'checkIfChildObscuredBySibling', function () {
return true;
});

Clazz_newMeth(C$, 'setFlag$I$Z', function (aFlag, aValue) {
if (aValue) {
this.flags = this.flags|((1 << aFlag));
} else {
this.flags = this.flags&(~(1 << aFlag));
}});

Clazz_newMeth(C$, 'getFlag$I', function (aFlag) {
var mask = (1 << aFlag);
return ((this.flags & mask) == mask);
});

Clazz_newMeth(C$, 'setDoubleBuffered$Z', function (aFlag) {
});

Clazz_newMeth(C$, 'isDoubleBuffered', function () {
return p$.getFlag$I.apply(this, [0]);
});

Clazz_newMeth(C$, 'getRootPane', function () {
return (I$[1]||$incl$(1)).getRootPane$java_awt_Component(this);
});

Clazz_newMeth(C$, 'paramString', function () {
var preferredSizeString = (this.isPreferredSizeSet() ? this.getPreferredSize().toString() : "");
var minimumSizeString = (this.isMinimumSizeSet() ? this.getMinimumSize().toString() : "");
var maximumSizeString = (this.isMaximumSizeSet() ? this.getMaximumSize().toString() : "");
var borderString = (this.border == null  ? "" : (this.border === this  ? "this" : this.border.toString()));
return C$.superclazz.prototype.paramString.apply(this, []) + ",alignmentX=" + new Float(this.alignmentX).toString() + ",alignmentY=" + new Float(this.alignmentY).toString() + ",border=" + borderString + ",flags=" + this.flags + ",maximumSize=" + maximumSizeString + ",minimumSize=" + minimumSizeString + ",preferredSize=" + preferredSizeString ;
});

Clazz_newMeth(C$, 'isActionStandin$javax_swing_Action', function (action) {
return Clazz_instanceOf(action, "javax.swing.JComponent.ActionStandin");
}, 1);

Clazz_newMeth(C$, 'dropLocationForPoint$java_awt_Point', function (p) {
return null;
});

Clazz_newMeth(C$, 'getTransferHandler', function () {
return null;
});

Clazz_newMeth(C$, 'setDropLocation$javax_swing_TransferHandler_DropLocation$O$Z', function (dropLocation, state, forDrop) {
return null;
});

Clazz_newMeth(C$, 'dndDone', function () {
});

Clazz_newMeth(C$, 'paintComponentSafely$java_awt_Graphics', function (g) {
var jsg = this.getJSGraphic2D$java_awt_Graphics(g);
var nSave = (jsg == null  ? 0 : jsg.mark());
this.checkBackgroundPainted$swingjs_JSGraphics2D(null);
this.paintComponent$java_awt_Graphics(g);
if (jsg != null ) {
this.checkBackgroundPainted$swingjs_JSGraphics2D(jsg);
jsg.reset$I(nSave);
}});

Clazz_newMeth(C$, 'printComponentSafely$java_awt_Graphics', function (g) {
var jsg = this.getJSGraphic2D$java_awt_Graphics(g);
var nSave = (jsg == null  ? 0 : jsg.mark());
this.printComponent$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
});

Clazz_newMeth(C$, 'paintBorderSafely$java_awt_Graphics', function (g) {
var jsg = this.getJSGraphic2D$java_awt_Graphics(g);
var nSave = (jsg == null  ? 0 : jsg.mark());
this.printBorder$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
});

Clazz_newMeth(C$, 'printBorderSafely$java_awt_Graphics', function (g) {
var jsg = this.getJSGraphic2D$java_awt_Graphics(g);
var nSave = (jsg == null  ? 0 : jsg.mark());
this.printBorder$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
});
;
(function(){var C$=Clazz_newClass(P$.JComponent, "ActionStandin", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.Action');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.actionListener = null;
this.command = null;
this.action = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_event_ActionListener$S', function (actionListener, command) {
C$.$init$.apply(this);
this.actionListener = actionListener;
if (Clazz_instanceOf(actionListener, "javax.swing.Action")) {
this.action = actionListener;
} else {
this.action = null;
}this.command = command;
}, 1);

Clazz_newMeth(C$, 'getValue$S', function (key) {
if (key != null ) {
if (key.equals$O("ActionCommandKey")) {
return this.command;
}if (this.action != null ) {
return this.action.getValue$S(key);
}if (key.equals$O("Name")) {
return "ActionStandin";
}}return null;
});

Clazz_newMeth(C$, 'isEnabled', function () {
if (this.actionListener == null ) {
return false;
}if (this.action == null ) {
return true;
}return this.action.isEnabled();
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (ae) {
if (this.actionListener != null ) {
this.actionListener.actionPerformed$java_awt_event_ActionEvent(ae);
}});

Clazz_newMeth(C$, 'putValue$S$O', function (key, value) {
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.JComponent, "IntVector", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.array = null;
this.count = 0;
this.capacity = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.array = (null|0);
this.count = 0;
this.capacity = 0;
}, 1);

Clazz_newMeth(C$, 'size', function () {
return this.count;
});

Clazz_newMeth(C$, 'elementAt$I', function (index) {
return this.array[index];
});

Clazz_newMeth(C$, 'addElement$I', function (value) {
if (this.count == this.capacity) {
this.capacity = (this.capacity + 2) * 2;
var newarray = Clazz_array(Integer.TYPE, [this.capacity]);
if (this.count > 0) {
System.arraycopy(this.array, 0, newarray, 0, this.count);
}this.array = newarray;
}this.array[this.count++] = value;
});

Clazz_newMeth(C$, 'setElementAt$I$I', function (value, index) {
this.array[index] = value;
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.JComponent, "KeyboardState", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});
C$.keyCodesKey = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.keyCodesKey = Clazz_getClass(C$);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getKeyCodeArray', function () {
var iv = (I$[1]||$incl$(1)).appContextGet$O(C$.keyCodesKey);
if (iv == null ) {
iv = Clazz_new_((I$[2]||$incl$(2)));
(I$[1]||$incl$(1)).appContextPut$O$O(C$.keyCodesKey, iv);
}return iv;
}, 1);

Clazz_newMeth(C$, 'registerKeyPressed$I', function (keyCode) {
var kca = C$.getKeyCodeArray();
var count = kca.size();
var i;
for (i = 0; i < count; i++) {
if (kca.elementAt$I(i) == -1) {
kca.setElementAt$I$I(keyCode, i);
return;
}}
kca.addElement$I(keyCode);
}, 1);

Clazz_newMeth(C$, 'registerKeyReleased$I', function (keyCode) {
var kca = C$.getKeyCodeArray();
var count = kca.size();
var i;
for (i = 0; i < count; i++) {
if (kca.elementAt$I(i) == keyCode) {
kca.setElementAt$I$I(-1, i);
return;
}}
}, 1);

Clazz_newMeth(C$, 'keyIsPressed$I', function (keyCode) {
var kca = C$.getKeyCodeArray();
var count = kca.size();
var i;
for (i = 0; i < count; i++) {
if (kca.elementAt$I(i) == keyCode) {
return true;
}}
return false;
}, 1);

Clazz_newMeth(C$, 'shouldProcess$java_awt_event_KeyEvent', function (e) {
switch (e.getID()) {
case 401:
if (!C$.keyIsPressed$I(e.getKeyCode())) {
C$.registerKeyPressed$I(e.getKeyCode());
}return true;
case 402:
if (C$.keyIsPressed$I(e.getKeyCode()) || e.getKeyCode() == 154 ) {
C$.registerKeyReleased$I(e.getKeyCode());
return true;
}return false;
case 400:
return true;
default:
return false;
}
}, 1);

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:27
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.SwingUtilities','javax.swing.UIManager']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JLabel", null, 'javax.swing.JComponent', 'javax.swing.SwingConstants');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.mnemonic = 0;
this.mnemonicIndex = 0;
this.text = null;
this.defaultIcon = null;
this.disabledIcon = null;
this.disabledIconSet = false;
this.verticalAlignment = 0;
this.horizontalAlignment = 0;
this.verticalTextPosition = 0;
this.horizontalTextPosition = 0;
this.iconTextGap = 0;
this.labelFor = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.mnemonic = "\u0000".$c();
this.mnemonicIndex = -1;
this.text = "";
this.defaultIcon = null;
this.disabledIcon = null;
this.disabledIconSet = false;
this.verticalAlignment = 0;
this.horizontalAlignment = 10;
this.verticalTextPosition = 0;
this.horizontalTextPosition = 11;
this.iconTextGap = 4;
this.labelFor = null;
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$I', function (text, icon, horizontalAlignment) {
Clazz_super_(C$, this,1);
this.setText$S(text);
this.setIcon$javax_swing_Icon(icon);
this.setHorizontalAlignment$I(horizontalAlignment);
this.uiClassID = "LabelUI";
this.updateUI();
this.setAlignmentX$F(0.0);
}, 1);

Clazz_newMeth(C$, 'c$$S$I', function (text, horizontalAlignment) {
C$.c$$S$javax_swing_Icon$I.apply(this, [text, null, horizontalAlignment]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon$I.apply(this, [text, null, 10]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon$I', function (image, horizontalAlignment) {
C$.c$$S$javax_swing_Icon$I.apply(this, [null, image, horizontalAlignment]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (image) {
C$.c$$S$javax_swing_Icon$I.apply(this, [null, image, 0]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon$I.apply(this, ["", null, 10]);
}, 1);

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_LabelUI', function (ui) {
C$.superclazz.prototype.setUI$javax_swing_plaf_ComponentUI.apply(this, [ui]);
if (!this.disabledIconSet && this.disabledIcon != null  ) {
this.setDisabledIcon$javax_swing_Icon(null);
}});

Clazz_newMeth(C$, 'getText', function () {
return this.text;
});

Clazz_newMeth(C$, 'setText$S', function (text) {
var oldValue = this.text;
this.text = text;
this.firePropertyChange$S$O$O("text", oldValue, text);
this.setDisplayedMnemonicIndex$I((I$[1]||$incl$(1)).findDisplayedMnemonicIndex$S$I(text, this.getDisplayedMnemonic()));
if (text == null  || oldValue == null   || !text.equals$O(oldValue) ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getIcon', function () {
return this.defaultIcon;
});

Clazz_newMeth(C$, 'setIcon$javax_swing_Icon', function (icon) {
var oldValue = this.defaultIcon;
this.defaultIcon = icon;
if ((this.defaultIcon !== oldValue ) && !this.disabledIconSet ) {
this.disabledIcon = null;
}this.firePropertyChange$S$O$O("icon", oldValue, this.defaultIcon);
if (this.defaultIcon !== oldValue ) {
if ((this.defaultIcon == null ) || (oldValue == null ) || (this.defaultIcon.getIconWidth() != oldValue.getIconWidth()) || (this.defaultIcon.getIconHeight() != oldValue.getIconHeight())  ) {
this.revalidate();
}this.repaint();
}});

Clazz_newMeth(C$, 'getDisabledIcon', function () {
if (!this.disabledIconSet && this.disabledIcon == null   && this.defaultIcon != null  ) {
this.disabledIcon = (I$[2]||$incl$(2)).getLookAndFeel().getDisabledIcon$javax_swing_JComponent$javax_swing_Icon(this, this.defaultIcon);
if (this.disabledIcon != null ) {
this.firePropertyChange$S$O$O("disabledIcon", null, this.disabledIcon);
}}return this.disabledIcon;
});

Clazz_newMeth(C$, 'setDisabledIcon$javax_swing_Icon', function (disabledIcon) {
var oldValue = this.disabledIcon;
this.disabledIcon = disabledIcon;
this.disabledIconSet = (disabledIcon != null );
this.firePropertyChange$S$O$O("disabledIcon", oldValue, disabledIcon);
if (disabledIcon !== oldValue ) {
if (disabledIcon == null  || oldValue == null   || disabledIcon.getIconWidth() != oldValue.getIconWidth()  || disabledIcon.getIconHeight() != oldValue.getIconHeight() ) {
this.revalidate();
}if (!this.isEnabled()) {
this.repaint();
}}});

Clazz_newMeth(C$, 'setDisplayedMnemonic$I', function (key) {
var oldKey = this.mnemonic;
this.mnemonic = key;
this.firePropertyChange$S$I$I("displayedMnemonic", oldKey, this.mnemonic);
this.setDisplayedMnemonicIndex$I((I$[1]||$incl$(1)).findDisplayedMnemonicIndex$S$I(this.getText(), this.mnemonic));
if (key != oldKey) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'setDisplayedMnemonic$C', function (aChar) {
var vk = aChar.$c();
if (vk >= 97  && vk <= 122  ) vk = vk-(32);
this.setDisplayedMnemonic$I(vk);
});

Clazz_newMeth(C$, 'getDisplayedMnemonic', function () {
return this.mnemonic;
});

Clazz_newMeth(C$, 'setDisplayedMnemonicIndex$I', function (index) {
var oldValue = this.mnemonicIndex;
if (index == -1) {
this.mnemonicIndex = -1;
} else {
var text = this.getText();
var textLength = (text == null ) ? 0 : text.length$();
if (index < -1 || index >= textLength ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index == " + index]);
}}this.mnemonicIndex = index;
this.firePropertyChange$S$I$I("displayedMnemonicIndex", oldValue, index);
if (index != oldValue) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getDisplayedMnemonicIndex', function () {
return this.mnemonicIndex;
});

Clazz_newMeth(C$, 'checkHorizontalKey$I$S', function (key, message) {
if ((key == 2) || (key == 0) || (key == 4) || (key == 10) || (key == 11)  ) {
return key;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[message]);
}});

Clazz_newMeth(C$, 'checkVerticalKey$I$S', function (key, message) {
if ((key == 1) || (key == 0) || (key == 3)  ) {
return key;
} else {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,[message]);
}});

Clazz_newMeth(C$, 'getIconTextGap', function () {
return this.iconTextGap;
});

Clazz_newMeth(C$, 'setIconTextGap$I', function (iconTextGap) {
var oldValue = this.iconTextGap;
this.iconTextGap = iconTextGap;
this.firePropertyChange$S$I$I("iconTextGap", oldValue, iconTextGap);
if (iconTextGap != oldValue) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getVerticalAlignment', function () {
return this.verticalAlignment;
});

Clazz_newMeth(C$, 'setVerticalAlignment$I', function (alignment) {
if (alignment == this.verticalAlignment) return;
var oldValue = this.verticalAlignment;
this.verticalAlignment = this.checkVerticalKey$I$S(alignment, "verticalAlignment");
this.firePropertyChange$S$I$I("verticalAlignment", oldValue, this.verticalAlignment);
this.repaint();
});

Clazz_newMeth(C$, 'getHorizontalAlignment', function () {
return this.horizontalAlignment;
});

Clazz_newMeth(C$, 'setHorizontalAlignment$I', function (alignment) {
if (alignment == this.horizontalAlignment) return;
var oldValue = this.horizontalAlignment;
this.horizontalAlignment = this.checkHorizontalKey$I$S(alignment, "horizontalAlignment");
this.firePropertyChange$S$I$I("horizontalAlignment", oldValue, this.horizontalAlignment);
this.repaint();
});

Clazz_newMeth(C$, 'getVerticalTextPosition', function () {
return this.verticalTextPosition;
});

Clazz_newMeth(C$, 'setVerticalTextPosition$I', function (textPosition) {
if (textPosition == this.verticalTextPosition) return;
var old = this.verticalTextPosition;
this.verticalTextPosition = this.checkVerticalKey$I$S(textPosition, "verticalTextPosition");
this.firePropertyChange$S$I$I("verticalTextPosition", old, this.verticalTextPosition);
this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'getHorizontalTextPosition', function () {
return this.horizontalTextPosition;
});

Clazz_newMeth(C$, 'setHorizontalTextPosition$I', function (textPosition) {
var old = this.horizontalTextPosition;
this.horizontalTextPosition = this.checkHorizontalKey$I$S(textPosition, "horizontalTextPosition");
this.firePropertyChange$S$I$I("horizontalTextPosition", old, this.horizontalTextPosition);
this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'imageUpdate$java_awt_Image$I$I$I$I$I', function (img, infoflags, x, y, w, h) {
if (!this.isShowing() || !(I$[1]||$incl$(1)).doesIconReferenceImage$javax_swing_Icon$java_awt_Image(this.getIcon(), img) && !(I$[1]||$incl$(1)).doesIconReferenceImage$javax_swing_Icon$java_awt_Image(this.disabledIcon, img)  ) {
return false;
}return C$.superclazz.prototype.imageUpdate$java_awt_Image$I$I$I$I$I.apply(this, [img, infoflags, x, y, w, h]);
});

Clazz_newMeth(C$, 'paramString', function () {
var textString = (this.text != null  ? this.text : "");
var defaultIconString = ((this.defaultIcon != null ) && (this.defaultIcon !== this )  ? this.defaultIcon.toString() : "");
var disabledIconString = ((this.disabledIcon != null ) && (this.disabledIcon !== this )  ? this.disabledIcon.toString() : "");
var labelForString = (this.labelFor != null  ? this.labelFor.toString() : "");
var verticalAlignmentString;
if (this.verticalAlignment == 1) {
verticalAlignmentString = "TOP";
} else if (this.verticalAlignment == 0) {
verticalAlignmentString = "CENTER";
} else if (this.verticalAlignment == 3) {
verticalAlignmentString = "BOTTOM";
} else verticalAlignmentString = "";
var horizontalAlignmentString;
if (this.horizontalAlignment == 2) {
horizontalAlignmentString = "LEFT";
} else if (this.horizontalAlignment == 0) {
horizontalAlignmentString = "CENTER";
} else if (this.horizontalAlignment == 4) {
horizontalAlignmentString = "RIGHT";
} else if (this.horizontalAlignment == 10) {
horizontalAlignmentString = "LEADING";
} else if (this.horizontalAlignment == 11) {
horizontalAlignmentString = "TRAILING";
} else horizontalAlignmentString = "";
var verticalTextPositionString;
if (this.verticalTextPosition == 1) {
verticalTextPositionString = "TOP";
} else if (this.verticalTextPosition == 0) {
verticalTextPositionString = "CENTER";
} else if (this.verticalTextPosition == 3) {
verticalTextPositionString = "BOTTOM";
} else verticalTextPositionString = "";
var horizontalTextPositionString;
if (this.horizontalTextPosition == 2) {
horizontalTextPositionString = "LEFT";
} else if (this.horizontalTextPosition == 0) {
horizontalTextPositionString = "CENTER";
} else if (this.horizontalTextPosition == 4) {
horizontalTextPositionString = "RIGHT";
} else if (this.horizontalTextPosition == 10) {
horizontalTextPositionString = "LEADING";
} else if (this.horizontalTextPosition == 11) {
horizontalTextPositionString = "TRAILING";
} else horizontalTextPositionString = "";
return C$.superclazz.prototype.paramString.apply(this, []) + ",defaultIcon=" + defaultIconString + ",disabledIcon=" + disabledIconString + ",horizontalAlignment=" + horizontalAlignmentString + ",horizontalTextPosition=" + horizontalTextPositionString + ",iconTextGap=" + this.iconTextGap + ",labelFor=" + labelForString + ",text=" + textString + ",verticalAlignment=" + verticalAlignmentString + ",verticalTextPosition=" + verticalTextPositionString ;
});

Clazz_newMeth(C$, 'getLabelFor', function () {
return this.labelFor;
});

Clazz_newMeth(C$, 'setLabelFor$java_awt_Component', function (c) {
var oldC = this.labelFor;
this.labelFor = c;
this.firePropertyChange$S$O$O("labelFor", oldC, c);
if (Clazz_instanceOf(oldC, "javax.swing.JComponent")) {
(oldC).putClientProperty$O$O("labeledBy", null);
}if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
(c).putClientProperty$O$O("labeledBy", this);
}});
})();
//Created 2018-05-15 01:02:29
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.awt.Component','java.awt.Color','java.util.Hashtable','java.util.ArrayList']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JLayeredPane", null, 'javax.swing.JComponent');
C$.DEFAULT_LAYER = null;
C$.PALETTE_LAYER = null;
C$.MODAL_LAYER = null;
C$.POPUP_LAYER = null;
C$.DRAG_LAYER = null;
C$.FRAME_CONTENT_LAYER = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.DEFAULT_LAYER =  new Integer(0);
C$.PALETTE_LAYER =  new Integer(100);
C$.MODAL_LAYER =  new Integer(200);
C$.POPUP_LAYER =  new Integer(300);
C$.DRAG_LAYER =  new Integer(400);
C$.FRAME_CONTENT_LAYER =  new Integer(-30000);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.componentToLayer = null;
this.optimizedDrawingPossible = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.optimizedDrawingPossible = true;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.setLayout$java_awt_LayoutManager(null);
this.uiClassID = "LayeredPaneUI";
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'validateOptimizedDrawing', function () {
var layeredComponentFound = false;
{
var layer = null;
for (var c, $c = 0, $$c = this.getComponents(); $c<$$c.length&&((c=$$c[$c]),1);$c++) {
layer = null;
if ((Clazz_instanceOf(c, "javax.swing.JComponent") && (layer = (c).getClientProperty$O("layeredContainerLayer")) != null  )) {
if (layer != null  && layer.equals(C$.FRAME_CONTENT_LAYER) ) continue;
layeredComponentFound = true;
break;
}}
}if (layeredComponentFound) this.optimizedDrawingPossible = false;
 else this.optimizedDrawingPossible = true;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
var layer = C$.DEFAULT_LAYER.intValue();
var pos;
if (Clazz_instanceOf(constraints, "java.lang.Integer")) {
layer = (constraints).intValue();
this.setLayer$java_awt_Component$I(comp, layer);
} else layer = this.getLayer$java_awt_Component(comp);
pos = this.insertIndexForLayer$I$I(layer, index);
this.addImplCont$java_awt_Component$O$I(comp, constraints, pos);
comp.validate();
comp.repaint();
p$.validateOptimizedDrawing.apply(this, []);
return comp;
});

Clazz_newMeth(C$, 'remove$I', function (index) {
var c = this.getComponent$I(index);
C$.superclazz.prototype.remove$I.apply(this, [index]);
if (c != null  && !(Clazz_instanceOf(c, "javax.swing.JComponent")) ) {
this.getComponentToLayer().remove$O(c);
}p$.validateOptimizedDrawing.apply(this, []);
});

Clazz_newMeth(C$, 'removeAll', function () {
var children = this.getComponents();
var cToL = this.getComponentToLayer();
for (var counter = children.length - 1; counter >= 0; counter--) {
var c = children[counter];
if (c != null  && !(Clazz_instanceOf(c, "javax.swing.JComponent")) ) {
cToL.remove$O(c);
}}
C$.superclazz.prototype.removeAll.apply(this, []);
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled', function () {
return this.optimizedDrawingPossible;
});

Clazz_newMeth(C$, 'putLayer$javax_swing_JComponent$I', function (c, layer) {
var layerObj;
layerObj =  new Integer(layer);
c.putClientProperty$O$O("layeredContainerLayer", layerObj);
}, 1);

Clazz_newMeth(C$, 'getLayer$javax_swing_JComponent', function (c) {
var i;
if ((i = c.getClientProperty$O("layeredContainerLayer")) != null ) return i.intValue();
return C$.DEFAULT_LAYER.intValue();
}, 1);

Clazz_newMeth(C$, 'getLayeredPaneAbove$java_awt_Component', function (c) {
if (c == null ) return null;
var parent = c.getParent();
while (parent != null  && !(Clazz_instanceOf(parent, "javax.swing.JLayeredPane")) )parent = parent.getParent();

return parent;
}, 1);

Clazz_newMeth(C$, 'setLayer$java_awt_Component$I', function (c, layer) {
this.setLayer$java_awt_Component$I$I(c, layer, -1);
});

Clazz_newMeth(C$, 'setLayer$java_awt_Component$I$I', function (c, layer, position) {
var layerObj;
layerObj = this.getObjectForLayer$I(layer);
if (layer == this.getLayer$java_awt_Component(c) && position == this.getPosition$java_awt_Component(c) ) {
this.repaint$java_awt_Rectangle(c.getBounds());
return;
}if (Clazz_instanceOf(c, "javax.swing.JComponent")) (c).putClientProperty$O$O("layeredContainerLayer", layerObj);
 else this.getComponentToLayer().put$TK$TV(c, layerObj);
if (c.getParent() == null  || c.getParent() !== this  ) {
this.repaint$java_awt_Rectangle(c.getBounds());
return;
}var index = p$.insertIndexForLayer$java_awt_Component$I$I.apply(this, [c, layer, position]);
this.setComponentZOrder$java_awt_Component$I(c, index);
this.repaint$java_awt_Rectangle(c.getBounds());
});

Clazz_newMeth(C$, 'getLayer$java_awt_Component', function (c) {
var i;
if (Clazz_instanceOf(c, "javax.swing.JComponent")) i = (c).getClientProperty$O("layeredContainerLayer");
 else i = this.getComponentToLayer().get$O(c);
if (i == null ) return C$.DEFAULT_LAYER.intValue();
return i.intValue();
});

Clazz_newMeth(C$, 'getIndexOf$java_awt_Component', function (c) {
var i;
var count;
count = this.getComponentCount();
for (i = 0; i < count; i++) {
if (c === this.getComponent$I(i) ) return i;
}
return -1;
});

Clazz_newMeth(C$, 'moveToFront$java_awt_Component', function (c) {
this.setPosition$java_awt_Component$I(c, 0);
});

Clazz_newMeth(C$, 'moveToBack$java_awt_Component', function (c) {
this.setPosition$java_awt_Component$I(c, -1);
});

Clazz_newMeth(C$, 'setPosition$java_awt_Component$I', function (c, position) {
this.setLayer$java_awt_Component$I$I(c, this.getLayer$java_awt_Component(c), position);
});

Clazz_newMeth(C$, 'getPosition$java_awt_Component', function (c) {
var i;
var count;
var startLayer;
var curLayer;
var startLocation;
var pos = 0;
count = this.getComponentCount();
startLocation = this.getIndexOf$java_awt_Component(c);
if (startLocation == -1) return -1;
startLayer = this.getLayer$java_awt_Component(c);
for (i = startLocation - 1; i >= 0; i--) {
curLayer = this.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == startLayer) pos++;
 else return pos;
}
return pos;
});

Clazz_newMeth(C$, 'highestLayer', function () {
if (this.getComponentCount() > 0) return this.getLayer$java_awt_Component(this.getComponent$I(0));
return 0;
});

Clazz_newMeth(C$, 'lowestLayer', function () {
var count = this.getComponentCount();
if (count > 0) return this.getLayer$java_awt_Component(this.getComponent$I(count - 1));
return 0;
});

Clazz_newMeth(C$, 'getComponentCountInLayer$I', function (layer) {
var i;
var count;
var curLayer;
var layerCount = 0;
count = this.getComponentCount();
for (i = 0; i < count; i++) {
curLayer = this.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == layer) {
layerCount++;
} else if (layerCount > 0 || curLayer < layer ) {
break;
}}
return layerCount;
});

Clazz_newMeth(C$, 'getComponentsInLayer$I', function (layer) {
var i;
var count;
var curLayer;
var layerCount = 0;
var results;
results = Clazz_array((I$[1]||$incl$(1)), [this.getComponentCountInLayer$I(layer)]);
count = this.getComponentCount();
for (i = 0; i < count; i++) {
curLayer = this.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == layer) {
results[layerCount++] = this.getComponent$I(i);
} else if (layerCount > 0 || curLayer < layer ) {
break;
}}
return results;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
if (this.isOpaque()) {
var r = g.getClipBounds();
var c = this.getBackground();
if (c == null ) c = (I$[2]||$incl$(2)).lightGray;
g.setColor$java_awt_Color(c);
if (r != null ) {
g.fillRect$I$I$I$I(r.x, r.y, r.width, r.height);
} else {
g.fillRect$I$I$I$I(0, 0, this.getWidth(), this.getHeight());
}}C$.superclazz.prototype.paint$java_awt_Graphics.apply(this, [g]);
});

Clazz_newMeth(C$, 'getComponentToLayer', function () {
if (this.componentToLayer == null ) this.componentToLayer = Clazz_new_((I$[3]||$incl$(3)).c$$I,[4]);
return this.componentToLayer;
});

Clazz_newMeth(C$, 'getObjectForLayer$I', function (layer) {
var layerObj;
switch (layer) {
case 0:
layerObj = C$.DEFAULT_LAYER;
break;
case 100:
layerObj = C$.PALETTE_LAYER;
break;
case 200:
layerObj = C$.MODAL_LAYER;
break;
case 300:
layerObj = C$.POPUP_LAYER;
break;
case 400:
layerObj = C$.DRAG_LAYER;
break;
default:
layerObj =  new Integer(layer);
}
return layerObj;
});

Clazz_newMeth(C$, 'insertIndexForLayer$I$I', function (layer, position) {
return p$.insertIndexForLayer$java_awt_Component$I$I.apply(this, [null, layer, position]);
});

Clazz_newMeth(C$, 'insertIndexForLayer$java_awt_Component$I$I', function (comp, layer, position) {
var i;
var count;
var curLayer;
var layerStart = -1;
var layerEnd = -1;
var componentCount = this.getComponentCount();
var compList = Clazz_new_((I$[4]||$incl$(4)).c$$I,[componentCount]);
for (var index = 0; index < componentCount; index++) {
if (this.getComponent$I(index) !== comp ) {
compList.add$TE(this.getComponent$I(index));
}}
count = compList.size();
for (i = 0; i < count; i++) {
curLayer = this.getLayer$java_awt_Component(compList.get$I(i));
if (layerStart == -1 && curLayer == layer ) {
layerStart = i;
}if (curLayer < layer) {
if (i == 0) {
layerStart = 0;
layerEnd = 0;
} else {
layerEnd = i;
}break;
}}
if (layerStart == -1 && layerEnd == -1 ) return count;
if (layerStart != -1 && layerEnd == -1 ) layerEnd = count;
if (layerEnd != -1 && layerStart == -1 ) layerStart = layerEnd;
if (position == -1) return layerEnd;
if (position > -1 && layerStart + position <= layerEnd ) return layerStart + position;
return layerEnd;
});

Clazz_newMeth(C$, 'paramString', function () {
var optimizedDrawingPossibleString = (this.optimizedDrawingPossible ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",optimizedDrawingPossible=" + optimizedDrawingPossibleString ;
});
})();
//Created 2018-05-15 01:02:29
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.lang.Boolean','java.awt.FlowLayout']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JPanel", null, 'javax.swing.JComponent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager$Z', function (layout, isDoubleBuffered) {
Clazz_super_(C$, this,1);
this.setLayout$java_awt_LayoutManager(layout);
this.setUIProperty$S$O("opaque", (I$[1]||$incl$(1)).TRUE);
this.uiClassID = "PanelUI";
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager', function (layout) {
C$.c$$java_awt_LayoutManager$Z.apply(this, [layout, true]);
}, 1);

Clazz_newMeth(C$, 'c$$Z', function (isDoubleBuffered) {
C$.c$$java_awt_LayoutManager$Z.apply(this, [Clazz_new_((I$[2]||$incl$(2))), isDoubleBuffered]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$Z.apply(this, [true]);
}, 1);
})();
//Created 2018-05-15 01:02:31
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.SwingUtilities','java.awt.Dimension','sun.awt.AppContext','javax.swing.JLayeredPane','javax.swing.JPanel','java.awt.BorderLayout',['javax.swing.JRootPane','.RootLayout']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JRootPane", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.windowDecorationStyle = 0;
this.menuBar = null;
this.contentPane = null;
this.layeredPane = null;
this.glassPane = null;
this.defaultButton = null;
this.defaultPressAction = null;
this.defaultReleaseAction = null;
this.useTrueDoubleBuffering = false;
this.paneCount = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.useTrueDoubleBuffering = true;
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (prefix, isApplet) {
Clazz_super_(C$, this,1);
this.uiClassID = "RootPaneUI";
this.setName$S((I$[3]||$incl$(3)).getAppContext().getThreadGroup().getName() + prefix + (++this.paneCount) + ".JRootPane" );
this.setGlassPane$java_awt_Component(this.createGlassPane());
this.setLayeredPane$javax_swing_JLayeredPane(this.createLayeredPane());
this.setContentPane$java_awt_Container(this.createContentPane());
this.setLayout$java_awt_LayoutManager(this.createRootLayout());
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'setDoubleBuffered$Z', function (aFlag) {
});

Clazz_newMeth(C$, 'getWindowDecorationStyle', function () {
return this.windowDecorationStyle;
});

Clazz_newMeth(C$, 'setWindowDecorationStyle$I', function (windowDecorationStyle) {
if (windowDecorationStyle < 0 || windowDecorationStyle > 8 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Invalid decoration style"]);
}var oldWindowDecorationStyle = this.getWindowDecorationStyle();
this.windowDecorationStyle = windowDecorationStyle;
this.firePropertyChange$S$I$I("windowDecorationStyle", oldWindowDecorationStyle, windowDecorationStyle);
});

Clazz_newMeth(C$, 'createLayeredPane', function () {
var p = Clazz_new_((I$[4]||$incl$(4)));
p.setName$S(this.getName() + ".layeredPane");
return p;
});

Clazz_newMeth(C$, 'createContentPane', function () {
var c = Clazz_new_((I$[5]||$incl$(5)));
c.setName$S(this.getName() + ".contentPane");
c.setLayout$java_awt_LayoutManager(((
(function(){var C$=Clazz_newClass(P$, "JRootPane$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.awt.BorderLayout'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O', function (comp, constraints) {
if (constraints == null ) {
constraints = "Center";
}C$.superclazz.prototype.addLayoutComponent$java_awt_Component$O.apply(this, [comp, constraints]);
});
})()
), Clazz_new_((I$[6]||$incl$(6)), [this, null],P$.JRootPane$1)));
return c;
});

Clazz_newMeth(C$, 'createGlassPane', function () {
var c = Clazz_new_((I$[5]||$incl$(5)));
c.setName$S(this.getName() + ".glassPane");
c.setVisible$Z(false);
c.setOpaque$Z(false);
return c;
});

Clazz_newMeth(C$, 'createRootLayout', function () {
return Clazz_new_((I$[7]||$incl$(7)), [this, null]);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar', function (menu) {
if (this.menuBar != null  && this.menuBar.getParent() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.menuBar);
this.menuBar = menu;
if (this.menuBar != null ) this.layeredPane.add$java_awt_Component$O(this.menuBar, (I$[4]||$incl$(4)).FRAME_CONTENT_LAYER);
});

Clazz_newMeth(C$, 'setMenuBar$javax_swing_JMenuBar', function (menu) {
if (this.menuBar != null  && this.menuBar.getParent() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.menuBar);
this.menuBar = menu;
if (this.menuBar != null ) this.layeredPane.add$java_awt_Component$O(this.menuBar, (I$[4]||$incl$(4)).FRAME_CONTENT_LAYER);
});

Clazz_newMeth(C$, 'getJMenuBar', function () {
return this.menuBar;
});

Clazz_newMeth(C$, 'getMenuBar', function () {
return this.menuBar;
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container', function (content) {
if (content == null ) throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["contentPane cannot be set to null."]);
if (this.contentPane != null  && this.contentPane.getParent() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.contentPane);
this.contentPane = content;
content.isContentPane = true;
this.layeredPane.add$java_awt_Component$O(this.contentPane, (I$[4]||$incl$(4)).FRAME_CONTENT_LAYER);
});

Clazz_newMeth(C$, 'getContentPane', function () {
return this.contentPane;
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane', function (layered) {
if (layered == null ) throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["layeredPane cannot be set to null."]);
if (this.layeredPane != null  && this.layeredPane.getParent() === this  ) this.remove$java_awt_Component(this.layeredPane);
this.layeredPane = layered;
this.add$java_awt_Component$I(this.layeredPane, -1);
});

Clazz_newMeth(C$, 'getLayeredPane', function () {
return this.layeredPane;
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component', function (glass) {
if (glass == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["glassPane cannot be set to null."]);
}var visible = false;
if (this.glassPane != null  && this.glassPane.getParent() === this  ) {
this.remove$java_awt_Component(this.glassPane);
visible = this.glassPane.isVisible();
}glass.setVisible$Z(visible);
this.glassPane = glass;
this.add$java_awt_Component$I(this.glassPane, 0);
if (visible) {
this.repaint();
}});

Clazz_newMeth(C$, 'getGlassPane', function () {
return this.glassPane;
});

Clazz_newMeth(C$, 'isValidateRoot', function () {
return true;
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled', function () {
return !this.glassPane.isVisible();
});

Clazz_newMeth(C$, 'addNotify', function () {
C$.superclazz.prototype.addNotify.apply(this, []);
this.enableEvents$J(8);
});

Clazz_newMeth(C$, 'removeNotify', function () {
C$.superclazz.prototype.removeNotify.apply(this, []);
});

Clazz_newMeth(C$, 'setDefaultButton$javax_swing_JButton', function (defaultButton) {
var oldDefault = this.defaultButton;
if (oldDefault !== defaultButton ) {
this.defaultButton = defaultButton;
if (oldDefault != null ) {
oldDefault.repaint();
}if (defaultButton != null ) {
defaultButton.repaint();
}}this.firePropertyChange$S$O$O("defaultButton", oldDefault, defaultButton);
});

Clazz_newMeth(C$, 'getDefaultButton', function () {
return this.defaultButton;
});

Clazz_newMeth(C$, 'setUseTrueDoubleBuffering$Z', function (useTrueDoubleBuffering) {
this.useTrueDoubleBuffering = useTrueDoubleBuffering;
});

Clazz_newMeth(C$, 'getUseTrueDoubleBuffering', function () {
return this.useTrueDoubleBuffering;
});

Clazz_newMeth(C$, 'disableTrueDoubleBuffering', function () {
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
if (this.glassPane != null  && this.glassPane.getParent() === this   && this.getComponent$I(0) !== this.glassPane  ) {
this.add$java_awt_Component$I(this.glassPane, 0);
}return comp;
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});

Clazz_newMeth(C$, 'setFrameViewer$swingjs_JSFrameViewer', function (v) {
this.layeredPane.setFrameViewer$swingjs_JSFrameViewer(v);
this.contentPane.setFrameViewer$swingjs_JSFrameViewer(v);
if (this.glassPane != null ) this.glassPane.setFrameViewer$swingjs_JSFrameViewer(v);
return C$.superclazz.prototype.setFrameViewer$swingjs_JSFrameViewer.apply(this, [v]);
});
;
(function(){var C$=Clazz_newClass(P$.JRootPane, "DefaultAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.AbstractAction');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.owner = null;
this.root = null;
this.press = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JRootPane$Z', function (root, press) {
Clazz_super_(C$, this,1);
this.root = root;
this.press = press;
}, 1);

Clazz_newMeth(C$, 'setOwner$javax_swing_JButton', function (owner) {
this.owner = owner;
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (e) {
if (this.owner != null  && (I$[1]||$incl$(1)).getRootPane$java_awt_Component(this.owner) === this.root  ) {
var model = this.owner.getModel();
if (this.press) {
model.setArmed$Z(true);
model.setPressed$Z(true);
} else {
model.setPressed$Z(false);
}}});

Clazz_newMeth(C$, 'isEnabled', function () {
return this.owner.getModel().isEnabled();
});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.JRootPane, "RootLayout", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.awt.LayoutManager2');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container', function (parent) {
var rd;
var mbd;
var i = this.this$0.getInsets();
if (this.this$0.contentPane != null ) {
rd = this.this$0.contentPane.getPreferredSize();
} else {
rd = parent.getSize();
}if (this.this$0.menuBar != null  && this.this$0.menuBar.isVisible() ) {
mbd = this.this$0.menuBar.getPreferredSize();
} else {
mbd = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[0, 0]);
}return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[Math.max(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ]);
});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container', function (parent) {
var rd;
var mbd;
var i = this.this$0.getInsets();
if (this.this$0.contentPane != null ) {
rd = this.this$0.contentPane.getMinimumSize();
} else {
rd = parent.getSize();
}if (this.this$0.menuBar != null  && this.this$0.menuBar.isVisible() ) {
mbd = this.this$0.menuBar.getMinimumSize();
} else {
mbd = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[0, 0]);
}return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[Math.max(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ]);
});

Clazz_newMeth(C$, 'maximumLayoutSize$java_awt_Container', function (target) {
var rd;
var mbd;
var i = this.this$0.getInsets();
if (this.this$0.menuBar != null  && this.this$0.menuBar.isVisible() ) {
mbd = this.this$0.menuBar.getMaximumSize();
} else {
mbd = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[0, 0]);
}if (this.this$0.contentPane != null ) {
rd = this.this$0.contentPane.getMaximumSize();
} else {
rd = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[2147483647, 2147483647 - i.top - i.bottom - mbd.height - 1 ]);
}return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[Math.min(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ]);
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container', function (parent) {
var b = parent.getBounds();
var i = this.this$0.getInsets();
var contentY = 0;
var w = b.width - i.right - i.left ;
var h = b.height - i.top - i.bottom ;
if (this.this$0.layeredPane != null ) {
this.this$0.layeredPane.setBounds$I$I$I$I(i.left, i.top, w, h);
}if (this.this$0.glassPane != null ) {
this.this$0.glassPane.setBounds$I$I$I$I(i.left, i.top, w, h);
}if (this.this$0.menuBar != null  && this.this$0.menuBar.isVisible() ) {
var mbd = this.this$0.menuBar.getPreferredSize();
this.this$0.menuBar.setBounds$I$I$I$I(0, 0, w, mbd.height);
contentY = contentY+(mbd.height);
}if (this.this$0.contentPane != null ) {
this.this$0.contentPane.setBounds$I$I$I$I(0, contentY, w, h - contentY);
}});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component', function (name, comp) {
});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component', function (comp) {
});

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O', function (comp, constraints) {
});

Clazz_newMeth(C$, 'getLayoutAlignmentX$java_awt_Container', function (target) {
return 0.0;
});

Clazz_newMeth(C$, 'getLayoutAlignmentY$java_awt_Container', function (target) {
return 0.0;
});

Clazz_newMeth(C$, 'invalidateLayout$java_awt_Container', function (target) {
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:32
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.DefaultBoundedRangeModel',['javax.swing.JScrollBar','.ModelListener'],'java.awt.event.AdjustmentListener','java.awt.event.AdjustmentEvent','java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JScrollBar", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent', 'java.awt.Adjustable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.fwdAdjustmentEvents = null;
this.model = null;
this.orientation = 0;
this.unitIncrement = 0;
this.blockIncrement = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'checkOrientation$I', function (orientation) {
switch (orientation) {
case 1:
case 0:
break;
default:
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["orientation must be one of: VERTICAL, HORIZONTAL"]);
}
});

Clazz_newMeth(C$, 'c$$I$I$I$I$I', function (orientation, value, extent, min, max) {
Clazz_super_(C$, this,1);
p$.checkOrientation$I.apply(this, [orientation]);
this.unitIncrement = 1;
this.blockIncrement = (extent == 0) ? 1 : extent;
this.orientation = orientation;
this.model = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[value, extent, min, max]);
this.model.addChangeListener$javax_swing_event_ChangeListener(this.fwdAdjustmentEvents = Clazz_new_((I$[2]||$incl$(2)), [this, null]));
this.setRequestFocusEnabled$Z(false);
this.uiClassID = "ScrollBarUI";
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'c$$I', function (orientation) {
C$.c$$I$I$I$I$I.apply(this, [orientation, 0, 10, 0, 100]);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I.apply(this, [1]);
}, 1);

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener', function (l) {
this.model.addChangeListener$javax_swing_event_ChangeListener(l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener', function (l) {
this.model.removeChangeListener$javax_swing_event_ChangeListener(l);
});

Clazz_newMeth(C$, 'getOrientation', function () {
return this.orientation;
});

Clazz_newMeth(C$, 'setOrientation$I', function (orientation) {
p$.checkOrientation$I.apply(this, [orientation]);
var oldValue = this.orientation;
this.orientation = orientation;
this.firePropertyChange$S$I$I("orientation", oldValue, orientation);
if (orientation != oldValue) {
this.revalidate();
}});

Clazz_newMeth(C$, 'getModel', function () {
return this.model;
});

Clazz_newMeth(C$, 'setModel$javax_swing_BoundedRangeModel', function (newModel) {
var oldModel = this.model;
if (this.model != null ) {
this.model.removeChangeListener$javax_swing_event_ChangeListener(this.fwdAdjustmentEvents);
}this.model = newModel;
if (this.model != null ) {
this.model.addChangeListener$javax_swing_event_ChangeListener(this.fwdAdjustmentEvents);
}this.firePropertyChange$S$O$O("model", oldModel, this.model);
});

Clazz_newMeth(C$, 'getUnitIncrement$I', function (direction) {
return this.unitIncrement;
});

Clazz_newMeth(C$, 'setUnitIncrement$I', function (unitIncrement) {
var oldValue = this.unitIncrement;
this.unitIncrement = unitIncrement;
this.firePropertyChange$S$I$I("unitIncrement", oldValue, unitIncrement);
});

Clazz_newMeth(C$, 'getBlockIncrement$I', function (direction) {
return this.blockIncrement;
});

Clazz_newMeth(C$, 'setBlockIncrement$I', function (blockIncrement) {
var oldValue = this.blockIncrement;
this.blockIncrement = blockIncrement;
this.firePropertyChange$S$I$I("blockIncrement", oldValue, blockIncrement);
});

Clazz_newMeth(C$, 'getUnitIncrement', function () {
return this.unitIncrement;
});

Clazz_newMeth(C$, 'getBlockIncrement', function () {
return this.blockIncrement;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.getModel().getValue();
});

Clazz_newMeth(C$, 'setValue$I', function (value) {
var m = this.getModel();
m.setValue$I(value);
});

Clazz_newMeth(C$, 'getVisibleAmount', function () {
return this.getModel().getExtent();
});

Clazz_newMeth(C$, 'setVisibleAmount$I', function (extent) {
this.getModel().setExtent$I(extent);
});

Clazz_newMeth(C$, 'getMinimum', function () {
return this.getModel().getMinimum();
});

Clazz_newMeth(C$, 'setMinimum$I', function (minimum) {
this.getModel().setMinimum$I(minimum);
});

Clazz_newMeth(C$, 'getMaximum', function () {
return this.getModel().getMaximum();
});

Clazz_newMeth(C$, 'setMaximum$I', function (maximum) {
this.getModel().setMaximum$I(maximum);
});

Clazz_newMeth(C$, 'getValueIsAdjusting', function () {
return this.getModel().getValueIsAdjusting();
});

Clazz_newMeth(C$, 'setValueIsAdjusting$Z', function (b) {
var m = this.getModel();
m.setValueIsAdjusting$Z(b);
});

Clazz_newMeth(C$, 'setValues$I$I$I$I', function (newValue, newExtent, newMin, newMax) {
var m = this.getModel();
m.setRangeProperties$I$I$I$I$Z(newValue, newExtent, newMin, newMax, m.getValueIsAdjusting());
});

Clazz_newMeth(C$, 'addAdjustmentListener$java_awt_event_AdjustmentListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[3]||$incl$(3)),['adjustmentValueChanged$java_awt_event_AdjustmentEvent']), l);
});

Clazz_newMeth(C$, 'removeAdjustmentListener$java_awt_event_AdjustmentListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[3]||$incl$(3)),['adjustmentValueChanged$java_awt_event_AdjustmentEvent']), l);
});

Clazz_newMeth(C$, 'getAdjustmentListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[3]||$incl$(3)),['adjustmentValueChanged$java_awt_event_AdjustmentEvent']));
});

Clazz_newMeth(C$, 'fireAdjustmentValueChanged$I$I$I', function (id, type, value) {
p$.fireAdjustmentValueChanged$I$I$I$Z.apply(this, [id, type, value, this.getValueIsAdjusting()]);
});

Clazz_newMeth(C$, 'fireAdjustmentValueChanged$I$I$I$Z', function (id, type, value, isAdjusting) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[3]||$incl$(3)),['adjustmentValueChanged$java_awt_event_AdjustmentEvent']) ) {
if (e == null ) {
e = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_Adjustable$I$I$I$Z,[this, id, type, value, isAdjusting]);
}(listeners[i + 1]).adjustmentValueChanged$java_awt_event_AdjustmentEvent(e);
}}
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
var pref = this.getPreferredSize();
if (this.orientation == 1) {
return Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[pref.width, 5]);
} else {
return Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[5, pref.height]);
}});

Clazz_newMeth(C$, 'getMaximumSize', function () {
var pref = this.getPreferredSize();
if (this.getOrientation() == 1) {
return Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[pref.width, 32767]);
} else {
return Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[32767, pref.height]);
}});

Clazz_newMeth(C$, 'setEnabled$Z', function (x) {
C$.superclazz.prototype.setEnabled$Z.apply(this, [x]);
var children = this.getComponents();
for (var i = 0; i < children.length; i++) {
children[i].setEnabled$Z(x);
}
});

Clazz_newMeth(C$, 'paramString', function () {
var orientationString = (this.orientation == 0 ? "HORIZONTAL" : "VERTICAL");
return C$.superclazz.prototype.paramString.apply(this, []) + ",blockIncrement=" + this.blockIncrement + ",orientation=" + orientationString + ",unitIncrement=" + this.unitIncrement ;
});
;
(function(){var C$=Clazz_newClass(P$.JScrollBar, "ModelListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.ChangeListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
var obj = e.getSource();
if (Clazz_instanceOf(obj, "javax.swing.BoundedRangeModel")) {
var id = 601;
var type = 5;
var model = obj;
var value = model.getValue();
var isAdjusting = model.getValueIsAdjusting();
this.this$0.fireAdjustmentValueChanged$I$I$I$Z.apply(this.this$0, [id, type, value, isAdjusting]);
}});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:32
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.UIManager','swingjs.JSUtil','javax.swing.plaf.InputMapUIResource','javax.swing.plaf.ComponentInputMapUIResource','javax.swing.KeyStroke','sun.swing.DefaultLayoutStyle']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "LookAndFeel");

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'installColors$javax_swing_JComponent$S$S', function (c, defaultBgName, defaultFgName) {
var bg = c.getBackground();
if (bg == null  || Clazz_instanceOf(bg, "javax.swing.plaf.UIResource") ) c.setBackground$java_awt_Color((I$[1]||$incl$(1)).getColor$O(defaultBgName));
var fg = c.getForeground();
if (fg == null  || Clazz_instanceOf(fg, "javax.swing.plaf.UIResource") ) c.setForeground$java_awt_Color((I$[1]||$incl$(1)).getColor$O(defaultFgName));
}, 1);

Clazz_newMeth(C$, 'installColorsAndFont$javax_swing_JComponent$S$S$S', function (c, defaultBgName, defaultFgName, defaultFontName) {
var f = c.getFont();
if (f == null  || Clazz_instanceOf(f, "javax.swing.plaf.UIResource") ) {
c.setFont$java_awt_Font((I$[1]||$incl$(1)).getFont$O(defaultFontName));
}if (defaultBgName != null ) C$.installColors$javax_swing_JComponent$S$S(c, defaultBgName, defaultFgName);
}, 1);

Clazz_newMeth(C$, 'installBorder$javax_swing_JComponent$S', function (c, defaultBorderName) {
var b = c.getBorder();
if (b == null  || Clazz_instanceOf(b, "javax.swing.plaf.UIResource") ) {
c.setBorder$javax_swing_border_Border((I$[1]||$incl$(1)).getBorder$O(defaultBorderName));
}}, 1);

Clazz_newMeth(C$, 'uninstallBorder$javax_swing_JComponent', function (c) {
if (Clazz_instanceOf(c.getBorder(), "javax.swing.plaf.UIResource")) {
c.setBorder$javax_swing_border_Border(null);
}}, 1);

Clazz_newMeth(C$, 'installProperty$javax_swing_JComponent$S$O', function (c, propertyName, propertyValue) {
if (Clazz_instanceOf(c, "javax.swing.JPasswordField")) {
if (!(c).customSetUIProperty$S$O(propertyName, propertyValue)) {
c.setUIProperty$S$O(propertyName, propertyValue);
}} else {
c.setUIProperty$S$O(propertyName, propertyValue);
}}, 1);

Clazz_newMeth(C$, 'makeKeyBindings$OA', function (keyBindingList) {
(I$[2]||$incl$(2)).notImplemented$S(null);
return null;
}, 1);

Clazz_newMeth(C$, 'makeInputMap$OA', function (keys) {
var retMap = Clazz_new_((I$[3]||$incl$(3)));
C$.loadKeyBindings$javax_swing_InputMap$OA(retMap, keys);
return retMap;
}, 1);

Clazz_newMeth(C$, 'makeComponentInputMap$javax_swing_JComponent$OA', function (c, keys) {
var retMap = Clazz_new_((I$[4]||$incl$(4)).c$$javax_swing_JComponent,[c]);
C$.loadKeyBindings$javax_swing_InputMap$OA(retMap, keys);
return retMap;
}, 1);

Clazz_newMeth(C$, 'loadKeyBindings$javax_swing_InputMap$OA', function (retMap, keys) {
if (keys != null ) {
for (var counter = 0, maxCounter = keys.length; counter < maxCounter; counter++) {
var keyStrokeO = keys[counter++];
var ks = (Clazz_instanceOf(keyStrokeO, "javax.swing.KeyStroke")) ? keyStrokeO : (I$[5]||$incl$(5)).getKeyStroke$S(keyStrokeO);
retMap.put$javax_swing_KeyStroke$O(ks, keys[counter]);
}
}}, 1);

Clazz_newMeth(C$, 'makeIcon$Class$S', function (baseClass, gifFile) {
(I$[2]||$incl$(2)).notImplemented$S(null);
return null;
}, 1);

Clazz_newMeth(C$, 'getLayoutStyle', function () {
return (I$[6]||$incl$(6)).getInstance();
});

Clazz_newMeth(C$, 'provideErrorFeedback$java_awt_Component', function (component) {
(I$[2]||$incl$(2)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'getDesktopPropertyValue$S$O', function (systemPropertyName, fallbackValue) {
(I$[2]||$incl$(2)).notImplemented$S(null);
return fallbackValue;
}, 1);

Clazz_newMeth(C$, 'getDisabledIcon$javax_swing_JComponent$javax_swing_Icon', function (component, icon) {
(I$[2]||$incl$(2)).notImplemented$S(null);
return null;
});

Clazz_newMeth(C$, 'getDisabledSelectedIcon$javax_swing_JComponent$javax_swing_Icon', function (component, icon) {
return this.getDisabledIcon$javax_swing_JComponent$javax_swing_Icon(component, icon);
});

Clazz_newMeth(C$, 'getSupportsWindowDecorations', function () {
return false;
});

Clazz_newMeth(C$, 'initialize', function () {
});

Clazz_newMeth(C$, 'uninitialize', function () {
});

Clazz_newMeth(C$, 'getDefaults', function () {
return null;
});

Clazz_newMeth(C$, 'toString', function () {
return "[" + this.getDescription() + " - " + this.getClass().getName() + "]" ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:38
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newClass(P$, "ActionMapUIResource", null, 'javax.swing.ActionMap', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);
})();
//Created 2018-05-15 01:02:46
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[[['javax.swing.plaf.BorderUIResource','.EtchedBorderUIResource'],['javax.swing.plaf.BorderUIResource','.BevelBorderUIResource'],['javax.swing.plaf.BorderUIResource','.LineBorderUIResource'],'java.awt.Color']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BorderUIResource", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['javax.swing.border.Border', 'javax.swing.plaf.UIResource']);
C$.etched = null;
C$.loweredBevel = null;
C$.raisedBevel = null;
C$.blackLine = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.delegate = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getEtchedBorderUIResource', function () {
if (C$.etched == null ) {
C$.etched = Clazz_new_((I$[1]||$incl$(1)));
}return C$.etched;
}, 1);

Clazz_newMeth(C$, 'getLoweredBevelBorderUIResource', function () {
if (C$.loweredBevel == null ) {
C$.loweredBevel = Clazz_new_((I$[2]||$incl$(2)).c$$I,[1]);
}return C$.loweredBevel;
}, 1);

Clazz_newMeth(C$, 'getRaisedBevelBorderUIResource', function () {
if (C$.raisedBevel == null ) {
C$.raisedBevel = Clazz_new_((I$[2]||$incl$(2)).c$$I,[0]);
}return C$.raisedBevel;
}, 1);

Clazz_newMeth(C$, 'getBlackLineBorderUIResource', function () {
if (C$.blackLine == null ) {
C$.blackLine = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[4]||$incl$(4)).black]);
}return C$.blackLine;
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border', function (delegate) {
C$.$init$.apply(this);
if (delegate == null ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["null border delegate argument"]);
}this.delegate = delegate;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I', function (c, g, x, y, width, height) {
this.delegate.paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I(c, g, x, y, width, height);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component', function (c) {
return this.delegate.getBorderInsets$java_awt_Component(c);
});

Clazz_newMeth(C$, 'isBorderOpaque', function () {
return this.delegate.isBorderOpaque();
});
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "CompoundBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.CompoundBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$javax_swing_border_Border', function (outsideBorder, insideBorder) {
C$.superclazz.c$$javax_swing_border_Border$javax_swing_border_Border.apply(this, [outsideBorder, insideBorder]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "EmptyBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.EmptyBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (top, left, bottom, right) {
C$.superclazz.c$$I$I$I$I.apply(this, [top, left, bottom, right]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Insets', function (insets) {
C$.superclazz.c$$java_awt_Insets.apply(this, [insets]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "LineBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.LineBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color', function (color) {
C$.superclazz.c$$java_awt_Color.apply(this, [color]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$I', function (color, thickness) {
C$.superclazz.c$$java_awt_Color$I.apply(this, [color, thickness]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "BevelBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.BevelBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I', function (bevelType) {
C$.superclazz.c$$I.apply(this, [bevelType]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color', function (bevelType, highlight, shadow) {
C$.superclazz.c$$I$java_awt_Color$java_awt_Color.apply(this, [bevelType, highlight, shadow]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color', function (bevelType, highlightOuter, highlightInner, shadowOuter, shadowInner) {
C$.superclazz.c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color.apply(this, [bevelType, highlightOuter, highlightInner, shadowOuter, shadowInner]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "EtchedBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.EtchedBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (etchType) {
C$.superclazz.c$$I.apply(this, [etchType]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$java_awt_Color', function (highlight, shadow) {
C$.superclazz.c$$java_awt_Color$java_awt_Color.apply(this, [highlight, shadow]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color', function (etchType, highlight, shadow) {
C$.superclazz.c$$I$java_awt_Color$java_awt_Color.apply(this, [etchType, highlight, shadow]);
C$.$init$.apply(this);
}, 1);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "MatteBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.MatteBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I$java_awt_Color', function (top, left, bottom, right, color) {
C$.superclazz.c$$I$I$I$I$java_awt_Color.apply(this, [top, left, bottom, right, color]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I$javax_swing_Icon', function (top, left, bottom, right, tileIcon) {
C$.superclazz.c$$I$I$I$I$javax_swing_Icon.apply(this, [top, left, bottom, right, tileIcon]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (tileIcon) {
C$.superclazz.c$$javax_swing_Icon.apply(this, [tileIcon]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.BorderUIResource, "TitledBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.TitledBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S', function (title) {
C$.superclazz.c$$S.apply(this, [title]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border', function (border) {
C$.superclazz.c$$javax_swing_border_Border.apply(this, [border]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S', function (border, title) {
C$.superclazz.c$$javax_swing_border_Border$S.apply(this, [border, title]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I', function (border, title, titleJustification, titlePosition) {
C$.superclazz.c$$javax_swing_border_Border$S$I$I.apply(this, [border, title, titleJustification, titlePosition]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I$java_awt_Font', function (border, title, titleJustification, titlePosition, titleFont) {
C$.superclazz.c$$javax_swing_border_Border$S$I$I$java_awt_Font.apply(this, [border, title, titleJustification, titlePosition, titleFont]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color', function (border, title, titleJustification, titlePosition, titleFont, titleColor) {
C$.superclazz.c$$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color.apply(this, [border, title, titleJustification, titlePosition, titleFont, titleColor]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:46
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newClass(P$, "ColorUIResource", null, 'java.awt.Color', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I', function (r, g, b) {
C$.superclazz.c$$I$I$I.apply(this, [r, g, b]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (rgb) {
C$.superclazz.c$$I.apply(this, [rgb]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F', function (r, g, b) {
C$.superclazz.c$$F$F$F.apply(this, [r, g, b]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color', function (c) {
C$.superclazz.c$$I$Z.apply(this, [c.getRGB(), (c.getRGB() & -16777216) != -16777216]);
C$.$init$.apply(this);
}, 1);
})();
//Created 2018-05-15 01:02:47
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[['java.lang.Error',['java.awt.Component','.BaselineResizeBehavior']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ComponentUI", null, null, 'java.awt.peer.ComponentPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (component) {
});

Clazz_newMeth(C$, 'installJS', function () {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (c) {
});

Clazz_newMeth(C$, 'uninstallJS', function () {
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics$javax_swing_JComponent', function (g, c) {
});

Clazz_newMeth(C$, 'update$java_awt_Graphics$javax_swing_JComponent', function (g, c) {
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return null;
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
return this.getPreferredSize();
});

Clazz_newMeth(C$, 'getMaximumSize', function () {
return null;
});

Clazz_newMeth(C$, 'contains$javax_swing_JComponent$I$I', function (c, x, y) {
return c.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'createUI$javax_swing_JComponent', function (c) {
throw Clazz_new_((I$[1]||$incl$(1)).c$$S,["ComponentUI.createUI not implemented."]);
}, 1);

Clazz_newMeth(C$, 'getBaseline$javax_swing_JComponent$I$I', function (c, width, height) {
return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$javax_swing_JComponent', function (c) {
return (I$[2]||$incl$(2)).OTHER;
});
})();
//Created 2018-05-15 01:02:47
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newClass(P$, "DimensionUIResource", null, 'java.awt.Dimension', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (width, height) {
C$.superclazz.c$$I$I.apply(this, [width, height]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:47
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newClass(P$, "FontUIResource", null, 'java.awt.Font', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S$I$I', function (name, style, size) {
C$.superclazz.c$$S$I$I.apply(this, [name, style, size]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font', function (font) {
C$.superclazz.c$$java_awt_Font.apply(this, [font]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:47
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newClass(P$, "InsetsUIResource", null, 'java.awt.Insets', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I', function (top, left, bottom, right) {
C$.superclazz.c$$I$I$I$I.apply(this, [top, left, bottom, right]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:48
(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
var C$=Clazz_newInterface(P$, "UIResource");
})();
//Created 2018-05-15 01:02:50
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.HashMap','java.awt.Rectangle','sun.awt.AppContext','javax.swing.SwingUtilities',['javax.swing.RepaintManager','.ProcessingRunnable'],'java.util.IdentityHashMap','javajs.util.Lst','java.awt.Toolkit','java.util.HashSet','sun.awt.AWTAccessor','java.lang.StringBuffer','Thread','sun.awt.SunToolkit','java.awt.event.InvocationEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "RepaintManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.HANDLE_TOP_LEVEL_PAINT = false;
C$.repaintManagerKey = null;
C$.volatileImageBufferEnabled = false;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.HANDLE_TOP_LEVEL_PAINT = false;
C$.repaintManagerKey = Clazz_getClass(C$);
C$.volatileImageBufferEnabled = true;
{
C$.volatileImageBufferEnabled = false;
var headless = false;
if (C$.volatileImageBufferEnabled && headless ) {
C$.volatileImageBufferEnabled = false;
}C$.HANDLE_TOP_LEVEL_PAINT = true;
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.volatileMap = null;
this.hwDirtyComponents = null;
this.dirtyComponents = null;
this.tmpDirtyComponents = null;
this.invalidComponents = null;
this.runnableList = null;
this.paintDepth = 0;
this.painting = false;
this.repaintRoot = null;
this.paintThread = null;
this.processingRunnable = null;
this.myComponent = null;
this.tmp = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.volatileMap = Clazz_new_((I$[1]||$incl$(1)).c$$I,[1]);
this.paintDepth = 0;
this.tmp = Clazz_new_((I$[2]||$incl$(2)));
}, 1);

Clazz_newMeth(C$, 'currentManager$java_awt_Component', function (c) {
return C$.currentManager$java_awt_Component$sun_awt_AppContext(c, (I$[3]||$incl$(3)).getAppContext());
}, 1);

Clazz_newMeth(C$, 'currentManager$java_awt_Component$sun_awt_AppContext', function (c, appContext) {
var rm = appContext.get$O(C$.repaintManagerKey);
if (rm == null ) {
rm = Clazz_new_(C$);
rm.set$java_awt_Component(c);
appContext.put$O$O(C$.repaintManagerKey, rm);
}return rm;
}, 1);

Clazz_newMeth(C$, 'currentManager$javax_swing_JComponent', function (c) {
return C$.currentManager$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'setCurrentManager$javax_swing_RepaintManager', function (aRepaintManager) {
if (aRepaintManager != null ) {
(I$[4]||$incl$(4)).appContextPut$O$O(C$.repaintManagerKey, aRepaintManager);
} else {
(I$[4]||$incl$(4)).appContextRemove$O(C$.repaintManagerKey);
}}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
p$.setMaps.apply(this, []);
this.processingRunnable = Clazz_new_((I$[5]||$incl$(5)), [this, null]);
}, 1);

Clazz_newMeth(C$, 'set$java_awt_Component', function (c) {
this.myComponent = c;
p$.setMaps.apply(this, []);
});

Clazz_newMeth(C$, 'setMaps', function () {
this.dirtyComponents = Clazz_new_((I$[6]||$incl$(6)));
this.tmpDirtyComponents = Clazz_new_((I$[6]||$incl$(6)));
this.hwDirtyComponents = Clazz_new_((I$[6]||$incl$(6)));
});

Clazz_newMeth(C$, 'addInvalidComponent$javax_swing_JComponent', function (invalidComponent) {
var validateRoot = null;
for (var c = invalidComponent; c != null ; c = c.getParent()) {
if ((Clazz_instanceOf(c, "javax.swing.CellRendererPane"))) {
return;
}if ((Clazz_instanceOf(c, "javax.swing.JComponent")) && ((c).isValidateRoot()) ) {
validateRoot = c;
break;
}}
if (validateRoot == null ) {
return;
}var root = null;
for (var c = validateRoot; c != null ; c = c.getParent()) {
if (!c.isVisible()) {
return;
}if ((Clazz_instanceOf(c, "java.awt.Window")) || (Clazz_instanceOf(c, "java.applet.Applet")) ) {
root = c;
break;
}}
if (root == null ) {
return;
}if (this.invalidComponents == null ) {
this.invalidComponents = Clazz_new_((I$[7]||$incl$(7)));
} else {
var n = this.invalidComponents.size();
for (var i = 0; i < n; i++) {
if (validateRoot === this.invalidComponents.get$I(i) ) {
return;
}}
}this.invalidComponents.add$TE(validateRoot);
p$.scheduleProcessingRunnable$java_awt_Component.apply(this, [root]);
});

Clazz_newMeth(C$, 'removeInvalidComponent$javax_swing_JComponent', function (component) {
if (this.invalidComponents != null ) {
var index = this.invalidComponents.indexOf$O(component);
if (index != -1) {
this.invalidComponents.removeItemAt$I(index);
}}});

Clazz_newMeth(C$, 'addDirtyRegion0$java_awt_Container$I$I$I$I', function (c, x, y, w, h) {
if (w <= 0 || h <= 0  || c == null   || c.getWidth() <= 0  || c.getHeight() <= 0 ) return;
if (p$.extendDirtyRegion$java_awt_Component$I$I$I$I.apply(this, [c, x, y, w, h])) {
return;
}var root = null;
for (var p = c; p != null ; p = p.getParent()) {
if (!p.isVisible() || p.getPeer() == null  ) {
return;
}if ((Clazz_instanceOf(p, "java.awt.Window")) || (Clazz_instanceOf(p, "java.applet.Applet")) ) {
if (Clazz_instanceOf(p, "java.awt.Frame") && ((p).getExtendedState() & 1) == 1 ) {
return;
}root = p;
break;
}}
if (root == null ) return;
{
if (p$.extendDirtyRegion$java_awt_Component$I$I$I$I.apply(this, [c, x, y, w, h])) {
return;
}this.dirtyComponents.put$TK$TV(c, Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[x, y, w, h]));
}p$.scheduleProcessingRunnable$java_awt_Component.apply(this, [c]);
});

Clazz_newMeth(C$, 'addDirtyRegion$javax_swing_JComponent$I$I$I$I', function (c, x, y, w, h) {
p$.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [c, x, y, w, h]);
});

Clazz_newMeth(C$, 'addDirtyRegion$java_awt_Window$I$I$I$I', function (window, x, y, w, h) {
p$.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [window, x, y, w, h]);
});

Clazz_newMeth(C$, 'addDirtyRegion$java_applet_Applet$I$I$I$I', function (applet, x, y, w, h) {
p$.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [applet, x, y, w, h]);
});

Clazz_newMeth(C$, 'scheduleHeavyWeightPaints', function () {
var hws;
{
if (this.hwDirtyComponents.size() == 0) {
return;
}hws = this.hwDirtyComponents;
this.hwDirtyComponents = Clazz_new_((I$[6]||$incl$(6)));
}for (var hw, $hw = hws.keySet().iterator(); $hw.hasNext()&&((hw=$hw.next()),1);) {
var dirty = hws.get$O(hw);
if (Clazz_instanceOf(hw, "java.awt.Window")) {
this.addDirtyRegion$java_awt_Window$I$I$I$I(hw, dirty.x, dirty.y, dirty.width, dirty.height);
} else if (Clazz_instanceOf(hw, "java.applet.Applet")) {
this.addDirtyRegion$java_applet_Applet$I$I$I$I(hw, dirty.x, dirty.y, dirty.width, dirty.height);
} else {
p$.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [hw, dirty.x, dirty.y, dirty.width, dirty.height]);
}}
});

Clazz_newMeth(C$, 'nativeAddDirtyRegion$sun_awt_AppContext$java_awt_Container$I$I$I$I', function (appContext, c, x, y, w, h) {
if (w > 0 && h > 0 ) {
{
var dirty = this.hwDirtyComponents.get$O(c);
if (dirty == null ) {
this.hwDirtyComponents.put$TK$TV(c, Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[x, y, w, h]));
} else {
this.hwDirtyComponents.put$TK$TV(c, (I$[4]||$incl$(4)).computeUnion$I$I$I$I$java_awt_Rectangle(x, y, w, h, dirty));
}}p$.scheduleProcessingRunnable$sun_awt_AppContext.apply(this, [appContext]);
}});

Clazz_newMeth(C$, 'extendDirtyRegion$java_awt_Component$I$I$I$I', function (c, x, y, w, h) {
var r = this.dirtyComponents.get$O(c);
if (r != null ) {
(I$[4]||$incl$(4)).computeUnion$I$I$I$I$java_awt_Rectangle(x, y, w, h, r);
return true;
}return false;
});

Clazz_newMeth(C$, 'getDirtyRegion$javax_swing_JComponent', function (aComponent) {
var r = null;
{
r = this.dirtyComponents.get$O(aComponent);
}if (r == null ) return Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[0, 0, 0, 0]);
 else return Clazz_new_((I$[2]||$incl$(2)).c$$java_awt_Rectangle,[r]);
});

Clazz_newMeth(C$, 'markCompletelyDirty$javax_swing_JComponent', function (aComponent) {
this.addDirtyRegion$javax_swing_JComponent$I$I$I$I(aComponent, 0, 0, 2147483647, 2147483647);
});

Clazz_newMeth(C$, 'markCompletelyClean$javax_swing_JComponent', function (aComponent) {
{
this.dirtyComponents.remove$O(aComponent);
}});

Clazz_newMeth(C$, 'isCompletelyDirty$javax_swing_JComponent', function (aComponent) {
var r;
r = this.getDirtyRegion$javax_swing_JComponent(aComponent);
if (r.width == 2147483647 && r.height == 2147483647 ) return true;
 else return false;
});

Clazz_newMeth(C$, 'validateInvalidComponents', function () {
var ic;
{
if (this.invalidComponents == null ) {
return;
}ic = this.invalidComponents;
this.invalidComponents = null;
}var n = ic.size();
for (var i = 0; i < n; i++) {
var c = ic.get$I(i);
c.validate();
}
});

Clazz_newMeth(C$, 'prePaintDirtyRegions', function () {
var dirtyComponents;
var runnableList;
{
dirtyComponents = this.dirtyComponents;
runnableList = this.runnableList;
this.runnableList = null;
}if (runnableList != null ) {
for (var runnable, $runnable = runnableList.iterator(); $runnable.hasNext()&&((runnable=$runnable.next()),1);) {
runnable.run();
}
}this.paintDirtyRegions();
if (dirtyComponents.size() > 0) {
p$.paintDirtyRegions1$java_util_Map.apply(this, [dirtyComponents]);
}});

Clazz_newMeth(C$, 'updateWindows$java_util_Map', function (dirtyComponents) {
var toolkit = (I$[8]||$incl$(8)).getDefaultToolkit();
if (!(Clazz_instanceOf(toolkit, "sun.awt.SunToolkit") && (toolkit).needUpdateWindow() )) {
return dirtyComponents;
}var windows = Clazz_new_((I$[9]||$incl$(9)));
var dirtyComps = dirtyComponents.keySet();
for (var it = dirtyComps.iterator(); it.hasNext(); ) {
var dirty = it.next();
var window = Clazz_instanceOf(dirty, "java.awt.Window") ? dirty : (I$[4]||$incl$(4)).getWindowAncestor$java_awt_Component(dirty);
if (window != null  && !(I$[10]||$incl$(10)).getWindowAccessor().isOpaque$java_awt_Window(window) ) {
it.remove();
windows.add$TE(window);
}}
for (var window, $window = windows.iterator(); $window.hasNext()&&((window=$window.next()),1);) {
(I$[10]||$incl$(10)).getWindowAccessor().updateWindow$java_awt_Window$java_awt_image_BufferedImage(window, null);
}
return dirtyComponents;
});

Clazz_newMeth(C$, 'paintDirtyRegions', function () {
{
var tmp = this.tmpDirtyComponents;
this.tmpDirtyComponents = this.dirtyComponents;
this.dirtyComponents = tmp;
this.dirtyComponents.clear();
}p$.paintDirtyRegions1$java_util_Map.apply(this, [this.tmpDirtyComponents]);
});

Clazz_newMeth(C$, 'paintDirtyRegions1$java_util_Map', function (tmpDirtyComponents) {
if (tmpDirtyComponents.isEmpty()) {
return;
}p$.updateWindows$java_util_Map.apply(this, [tmpDirtyComponents]);
var roots = Clazz_new_((I$[7]||$incl$(7)));
for (var dirty, $dirty = tmpDirtyComponents.keySet().iterator(); $dirty.hasNext()&&((dirty=$dirty.next()),1);) {
this.collectDirtyComponents$java_util_Map$java_awt_Component$java_util_List(tmpDirtyComponents, dirty, roots);
}
var count = roots.size();
this.painting = true;
try {
for (var j = 0; j < count; j++) {
var i = j;
var dirtyComponent = roots.get$I(j);
var rect = tmpDirtyComponents.get$O(dirtyComponent);
var localBoundsH = dirtyComponent.getHeight();
var localBoundsW = dirtyComponent.getWidth();
(I$[4]||$incl$(4)).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, localBoundsW, localBoundsH, rect);
if (Clazz_instanceOf(dirtyComponent, "javax.swing.JComponent")) {
(dirtyComponent).paintImmediately$I$I$I$I(rect.x, rect.y, rect.width, rect.height);
} else if (dirtyComponent.isShowing()) {
var g = dirtyComponent.getGraphics();
if (g != null ) {
try {
(dirtyComponent).paint$java_awt_Graphics(g);
} finally {
g.dispose();
}
}}if (this.repaintRoot != null ) {
p$.adjustRoots$javax_swing_JComponent$javajs_util_Lst$I.apply(this, [this.repaintRoot, roots, i + 1]);
count = roots.size();
this.repaintRoot.paintImmediately$I$I$I$I(0, 0, this.repaintRoot.getWidth(), this.repaintRoot.getHeight());
this.repaintRoot = null;
}}
} finally {
this.painting = false;
}
tmpDirtyComponents.clear();
});

Clazz_newMeth(C$, 'adjustRoots$javax_swing_JComponent$javajs_util_Lst$I', function (root, roots, index) {
for (var i = roots.size() - 1; i >= index; i--) {
var c = roots.get$I(i);
for (; ; ) {
if (c === root  || c == null   || !(Clazz_instanceOf(c, "javax.swing.JComponent")) ) {
break;
}c = c.getParent();
}
if (c === root ) {
roots.removeItemAt$I(i);
}}
});

Clazz_newMeth(C$, 'collectDirtyComponents$java_util_Map$java_awt_Component$java_util_List', function (dirtyComponents, dirtyComponent, roots) {
var dx;
var dy;
var rootDx;
var rootDy;
var component;
var rootDirtyComponent;
var parent;
component = rootDirtyComponent = dirtyComponent;
var x = dirtyComponent.getX();
var y = dirtyComponent.getY();
var w = dirtyComponent.getWidth();
var h = dirtyComponent.getHeight();
dx = rootDx = 0;
dy = rootDy = 0;
this.tmp.setBounds$java_awt_Rectangle(dirtyComponents.get$O(dirtyComponent));
(I$[4]||$incl$(4)).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, w, h, this.tmp);
if (this.tmp.isEmpty()) {
return;
}for (; ; ) {
if (!(Clazz_instanceOf(component, "javax.swing.JComponent"))) break;
parent = component.getParent();
if (parent == null ) break;
component = parent;
dx = dx+(x);
dy = dy+(y);
this.tmp.x = this.tmp.x+(x);
this.tmp.y = this.tmp.y+(y);
x = component.getX();
y = component.getY();
w = component.getWidth();
h = component.getHeight();
this.tmp = (I$[4]||$incl$(4)).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, w, h, this.tmp);
if (this.tmp.isEmpty()) {
return;
}if (dirtyComponents.get$O(component) != null ) {
rootDirtyComponent = component;
rootDx = dx;
rootDy = dy;
}}
if (dirtyComponent !== rootDirtyComponent ) {
var r;
this.tmp.x = this.tmp.x+(rootDx - dx);
this.tmp.y = this.tmp.y+(rootDy - dy);
r = dirtyComponents.get$O(rootDirtyComponent);
(I$[4]||$incl$(4)).computeUnion$I$I$I$I$java_awt_Rectangle(this.tmp.x, this.tmp.y, this.tmp.width, this.tmp.height, r);
}if (!roots.contains$O(rootDirtyComponent)) roots.add$TE(rootDirtyComponent);
});

Clazz_newMeth(C$, 'toString', function () {
var sb = Clazz_new_((I$[11]||$incl$(11)));
if (this.dirtyComponents != null ) sb.append$S("" + this.dirtyComponents);
return sb.toString();
});

Clazz_newMeth(C$, 'getOffscreenBuffer$java_awt_Component$I$I', function (c, proposedWidth, proposedHeight) {
return null;
});

Clazz_newMeth(C$, 'getVolatileOffscreenBuffer$java_awt_Component$I$I', function (c, proposedWidth, proposedHeight) {
var config = c.getGraphicsConfiguration();
var maxSize = this.getDoubleBufferMaximumSize();
var width = proposedWidth < 1 ? 1 : (proposedWidth > maxSize.width ? maxSize.width : proposedWidth);
var height = proposedHeight < 1 ? 1 : (proposedHeight > maxSize.height ? maxSize.height : proposedHeight);
var image = this.volatileMap.get$O(config);
if (image == null  || image.getWidth() < width  || image.getHeight() < height ) {
if (image != null ) {
image.flush();
}image = config.createCompatibleVolatileImage$I$I(width, height);
this.volatileMap.put$TK$TV(config, image);
}return image;
});

Clazz_newMeth(C$, 'setDoubleBufferMaximumSize$java_awt_Dimension', function (d) {
});

Clazz_newMeth(C$, 'getDoubleBufferMaximumSize', function () {
return null;
});

Clazz_newMeth(C$, 'setDoubleBufferingEnabled$Z', function (aFlag) {
});

Clazz_newMeth(C$, 'resetDoubleBuffer', function () {
});

Clazz_newMeth(C$, 'resetVolatileDoubleBuffer$java_awt_GraphicsConfiguration', function (gc) {
var image = this.volatileMap.remove$O(gc);
if (image != null ) {
image.flush();
}});

Clazz_newMeth(C$, 'useVolatileDoubleBuffer', function () {
return C$.volatileImageBufferEnabled;
});

Clazz_newMeth(C$, 'isPaintingThread', function () {
return ((I$[12]||$incl$(12)).currentThread() === this.paintThread );
});

Clazz_newMeth(C$, 'paint$javax_swing_JComponent$javax_swing_JComponent$java_awt_Graphics$I$I$I$I', function (paintingComponent, bufferComponent, g, x, y, w, h) {
paintingComponent.paintToOffscreen$java_awt_Graphics$I$I$I$I$I$I(g, x, y, w, h, x + w, y + h);
});

Clazz_newMeth(C$, 'beginPaint', function () {
var multiThreadedPaint = false;
var paintDepth = 0;
var currentThread = (I$[12]||$incl$(12)).currentThread();
{
paintDepth = this.paintDepth;
if (this.paintThread == null  || currentThread === this.paintThread  ) {
this.paintThread = currentThread;
this.paintDepth++;
} else {
multiThreadedPaint = true;
}}});

Clazz_newMeth(C$, 'endPaint', function () {
if (p$.isPaintingThread.apply(this, [])) {
}});

Clazz_newMeth(C$, 'doubleBufferingChanged$javax_swing_JRootPane', function (rootPane) {
});

Clazz_newMeth(C$, 'scheduleProcessingRunnable$java_awt_Component', function (c) {
p$.scheduleProcessingRunnable$sun_awt_AppContext.apply(this, [c.getAppContext()]);
});

Clazz_newMeth(C$, 'scheduleProcessingRunnable$sun_awt_AppContext', function (context) {
if (this.processingRunnable.markPending()) {
(I$[13]||$incl$(13)).getSystemEventQueueImplPP$sun_awt_AppContext(context).postEvent$java_awt_AWTEvent(Clazz_new_((I$[14]||$incl$(14)).c$$O$I$Runnable$O$Z,[(I$[8]||$incl$(8)).getDefaultToolkit(), 1200, this.processingRunnable, null, false]));
}});
;
(function(){var C$=Clazz_newClass(P$.RepaintManager, "ProcessingRunnable", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'Runnable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.pending = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'markPending', function () {
if (!this.pending) {
this.pending = true;
return true;
}return false;
});

Clazz_newMeth(C$, 'run', function () {
{
this.pending = false;
}this.this$0.scheduleHeavyWeightPaints();
this.this$0.validateInvalidComponents();
this.this$0.prePaintDirtyRegions();
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:39
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "RootPaneContainer");
})();
//Created 2018-05-15 01:02:39
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "SwingConstants");
})();
//Created 2018-05-15 01:02:41
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newClass(P$, "SwingPaintEventDispatcher", null, 'sun.awt.PaintEventDispatcher');
C$.ERASE_BACKGROUND = false;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.ERASE_BACKGROUND = false;
{
C$.ERASE_BACKGROUND = true;
}
;
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'createPaintEvent$java_awt_Component$I$I$I$I', function (component, x, y, w, h) {
return C$.superclazz.prototype.createPaintEvent$java_awt_Component$I$I$I$I.apply(this, [component, x, y, w, h]);
});

Clazz_newMeth(C$, 'shouldDoNativeBackgroundErase$java_awt_Component', function (c) {
return C$.ERASE_BACKGROUND || !(Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) ;
});

Clazz_newMeth(C$, 'queueSurfaceDataReplacing$java_awt_Component$Runnable', function (c, r) {
if (Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) {
return true;
}return C$.superclazz.prototype.queueSurfaceDataReplacing$java_awt_Component$Runnable.apply(this, [c, r]);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:41
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.awt.Rectangle','java.awt.Point','java.lang.Error','java.awt.event.MouseWheelEvent','javax.swing.event.MenuDragMouseEvent','java.awt.event.MouseEvent','swingjs.api.Interface','java.awt.EventQueue','javax.swing.JComponent','java.awt.event.ActionEvent','swingjs.JSUtil',['javax.swing.SwingUtilities','.SharedOwnerFrame'],'sun.awt.AppContext','Thread']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "SwingUtilities", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'javax.swing.SwingConstants');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler', function (c, t) {
}, 1);

Clazz_newMeth(C$, 'isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle', function (a, b) {
if (b.x >= a.x && (b.x + b.width) <= (a.x + a.width)  && b.y >= a.y  && (b.y + b.height) <= (a.y + a.height) ) {
return true;
}return false;
}, 1);

Clazz_newMeth(C$, 'getLocalBounds$java_awt_Component', function (aComponent) {
var b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[aComponent.getBounds()]);
b.x = b.y = 0;
return b;
}, 1);

Clazz_newMeth(C$, 'getWindowAncestor$java_awt_Component', function (c) {
for (var p = c.getParent(); p != null ; p = p.getParent()) {
if (Clazz_instanceOf(p, "java.awt.Window")) {
return p;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'convertScreenLocationToParent$java_awt_Container$I$I', function (parent, x, y) {
for (var p = parent; p != null ; p = p.getParent()) {
if (Clazz_instanceOf(p, "java.awt.Window")) {
var point = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[x, y]);
C$.convertPointFromScreen$java_awt_Point$java_awt_Component(point, parent);
return point;
}}
throw Clazz_new_((I$[3]||$incl$(3)).c$$S,["convertScreenLocationToParent: no window ancestor"]);
}, 1);

Clazz_newMeth(C$, 'convertPoint$java_awt_Component$java_awt_Point$java_awt_Component', function (source, aPoint, destination) {
var p;
if (source == null  && destination == null  ) return aPoint;
if (source == null ) {
source = C$.getWindowAncestor$java_awt_Component(destination);
if (source == null ) throw Clazz_new_((I$[3]||$incl$(3)).c$$S,["Source component not connected to component tree hierarchy"]);
}p = Clazz_new_((I$[2]||$incl$(2)).c$$java_awt_Point,[aPoint]);
C$.convertPointToScreen$java_awt_Point$java_awt_Component(p, source);
if (destination == null ) {
destination = C$.getWindowAncestor$java_awt_Component(source);
if (destination == null ) throw Clazz_new_((I$[3]||$incl$(3)).c$$S,["Destination component not connected to component tree hierarchy"]);
}C$.convertPointFromScreen$java_awt_Point$java_awt_Component(p, destination);
return p;
}, 1);

Clazz_newMeth(C$, 'convertPoint$java_awt_Component$I$I$java_awt_Component', function (source, x, y, destination) {
var point = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[x, y]);
return C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, point, destination);
}, 1);

Clazz_newMeth(C$, 'convertRectangle$java_awt_Component$java_awt_Rectangle$java_awt_Component', function (source, aRectangle, destination) {
var point = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[aRectangle.x, aRectangle.y]);
point = C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, point, destination);
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[point.x, point.y, aRectangle.width, aRectangle.height]);
}, 1);

Clazz_newMeth(C$, 'getAncestorOfClass$Class$java_awt_Component', function (c, comp) {
if (comp == null  || c == null  ) return null;
var parent = comp.getParent();
while (parent != null  && !(c.isInstance$O(parent)) )parent = parent.getParent();

return parent;
}, 1);

Clazz_newMeth(C$, 'getAncestorNamed$S$java_awt_Component', function (name, comp) {
if (comp == null  || name == null  ) return null;
var parent = comp.getParent();
while (parent != null  && !(name.equals$O(parent.getName())) )parent = parent.getParent();

return parent;
}, 1);

Clazz_newMeth(C$, 'getDeepestComponentAt$java_awt_Component$I$I', function (parent, x, y) {
if (!parent.contains$I$I(x, y)) {
return null;
}if (Clazz_instanceOf(parent, "java.awt.Container")) {
var components = (parent).getComponents();
for (var i = 0; i < components.length; i++) {
var comp = components[i];
if (comp != null  && comp.isVisible() ) {
var loc = comp.getLocation();
if (Clazz_instanceOf(comp, "java.awt.Container")) {
comp = C$.getDeepestComponentAt$java_awt_Component$I$I(comp, x - loc.x, y - loc.y);
} else {
comp = comp.getComponentAt$I$I(x - loc.x, y - loc.y);
}if (comp != null  && comp.isVisible() ) {
return comp;
}}}
}return parent;
}, 1);

Clazz_newMeth(C$, 'convertMouseEvent$java_awt_Component$java_awt_event_MouseEvent$java_awt_Component', function (source, sourceEvent, destination) {
var p = C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[sourceEvent.getX(), sourceEvent.getY()]), destination);
var newSource;
if (destination != null ) newSource = destination;
 else newSource = source;
var newEvent;
if (Clazz_instanceOf(sourceEvent, "java.awt.event.MouseWheelEvent")) {
var sourceWheelEvent = sourceEvent;
newEvent = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I,[newSource, sourceWheelEvent.getID(), sourceWheelEvent.getWhen(), sourceWheelEvent.getModifiers(), p.x, p.y, sourceWheelEvent.getXOnScreen(), sourceWheelEvent.getYOnScreen(), sourceWheelEvent.getClickCount(), sourceWheelEvent.isPopupTrigger(), sourceWheelEvent.getScrollType(), sourceWheelEvent.getScrollAmount(), sourceWheelEvent.getWheelRotation()]);
} else if (Clazz_instanceOf(sourceEvent, "javax.swing.event.MenuDragMouseEvent")) {
var sourceMenuDragEvent = sourceEvent;
newEvent = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$javax_swing_MenuElementA$javax_swing_MenuSelectionManager,[newSource, sourceMenuDragEvent.getID(), sourceMenuDragEvent.getWhen(), sourceMenuDragEvent.getModifiers(), p.x, p.y, sourceMenuDragEvent.getXOnScreen(), sourceMenuDragEvent.getYOnScreen(), sourceMenuDragEvent.getClickCount(), sourceMenuDragEvent.isPopupTrigger(), sourceMenuDragEvent.getPath(), sourceMenuDragEvent.getMenuSelectionManager()]);
} else {
newEvent = Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I,[newSource, sourceEvent.getID(), sourceEvent.getWhen(), sourceEvent.getModifiers(), p.x, p.y, sourceEvent.getXOnScreen(), sourceEvent.getYOnScreen(), sourceEvent.getClickCount(), sourceEvent.isPopupTrigger(), 0]);
}return newEvent;
}, 1);

Clazz_newMeth(C$, 'convertPointToScreen$java_awt_Point$java_awt_Component', function (p, c) {
var x;
var y;
do {
if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
x = (c).getX();
y = (c).getY();
} else if (Clazz_instanceOf(c, "java.applet.Applet") || Clazz_instanceOf(c, "java.awt.Window") ) {
try {
var pp = c.getLocationOnScreen();
x = pp.x;
y = pp.y;
} catch (icse) {
if (Clazz_exceptionOf(icse, "java.awt.IllegalComponentStateException")){
x = c.getX();
y = c.getY();
} else {
throw icse;
}
}
} else {
x = c.getX();
y = c.getY();
}p.x = p.x+(x);
p.y = p.y+(y);
if (Clazz_instanceOf(c, "java.awt.Window") || Clazz_instanceOf(c, "java.applet.Applet") ) break;
c = c.getParent();
} while (c != null );
}, 1);

Clazz_newMeth(C$, 'convertPointFromScreen$java_awt_Point$java_awt_Component', function (p, c) {
var x;
var y;
do {
if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
x = (c).getX();
y = (c).getY();
} else if (Clazz_instanceOf(c, "java.applet.Applet") || Clazz_instanceOf(c, "java.awt.Window") ) {
try {
var pp = c.getLocationOnScreen();
x = pp.x;
y = pp.y;
} catch (icse) {
if (Clazz_exceptionOf(icse, "java.awt.IllegalComponentStateException")){
x = c.getX();
y = c.getY();
} else {
throw icse;
}
}
} else {
x = c.getX();
y = c.getY();
}p.x = p.x-(x);
p.y = p.y-(y);
if (Clazz_instanceOf(c, "java.awt.Window") || Clazz_instanceOf(c, "java.applet.Applet") ) break;
c = c.getParent();
} while (c != null );
}, 1);

Clazz_newMeth(C$, 'windowForComponent$java_awt_Component', function (c) {
return C$.getWindowAncestor$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'isDescendingFrom$java_awt_Component$java_awt_Component', function (a, b) {
if (a === b ) return true;
for (var p = a.getParent(); p != null ; p = p.getParent()) if (p === b ) return true;

return false;
}, 1);

Clazz_newMeth(C$, 'computeIntersection$I$I$I$I$java_awt_Rectangle', function (x, y, width, height, dest) {
var x1 = (x > dest.x) ? x : dest.x;
var x2 = ((x + width) < (dest.x + dest.width)) ? (x + width) : (dest.x + dest.width);
var y1 = (y > dest.y) ? y : dest.y;
var y2 = ((y + height) < (dest.y + dest.height) ? (y + height) : (dest.y + dest.height));
dest.x = x1;
dest.y = y1;
dest.width = x2 - x1;
dest.height = y2 - y1;
if (dest.width < 0 || dest.height < 0 ) {
dest.x = dest.y = dest.width = dest.height = 0;
}return dest;
}, 1);

Clazz_newMeth(C$, 'computeUnion$I$I$I$I$java_awt_Rectangle', function (x, y, width, height, dest) {
var x1 = (x < dest.x) ? x : dest.x;
var x2 = ((x + width) > (dest.x + dest.width)) ? (x + width) : (dest.x + dest.width);
var y1 = (y < dest.y) ? y : dest.y;
var y2 = ((y + height) > (dest.y + dest.height)) ? (y + height) : (dest.y + dest.height);
dest.x = x1;
dest.y = y1;
dest.width = (x2 - x1);
dest.height = (y2 - y1);
return dest;
}, 1);

Clazz_newMeth(C$, 'computeDifference$java_awt_Rectangle$java_awt_Rectangle', function (rectA, rectB) {
if (rectB == null  || !rectA.intersects$java_awt_Rectangle(rectB)  || C$.isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle(rectB, rectA) ) {
return Clazz_array((I$[1]||$incl$(1)), [0]);
}var t = Clazz_new_((I$[1]||$incl$(1)));
var a = null;
var b = null;
var c = null;
var d = null;
var result;
var rectCount = 0;
if (C$.isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle(rectA, rectB)) {
t.x = rectA.x;
t.y = rectA.y;
t.width = rectB.x - rectA.x;
t.height = rectA.height;
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.x = rectB.x;
t.y = rectA.y;
t.width = rectB.width;
t.height = rectB.y - rectA.y;
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.x = rectB.x;
t.y = rectB.y + rectB.height;
t.width = rectB.width;
t.height = rectA.y + rectA.height - (rectB.y + rectB.height);
if (t.width > 0 && t.height > 0 ) {
c = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.x = rectB.x + rectB.width;
t.y = rectA.y;
t.width = rectA.x + rectA.width - (rectB.x + rectB.width);
t.height = rectA.height;
if (t.width > 0 && t.height > 0 ) {
d = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else {
if (rectB.x <= rectA.x && rectB.y <= rectA.y ) {
if ((rectB.x + rectB.width) > (rectA.x + rectA.width)) {
t.x = rectA.x;
t.y = rectB.y + rectB.height;
t.width = rectA.width;
t.height = rectA.y + rectA.height - (rectB.y + rectB.height);
if (t.width > 0 && t.height > 0 ) {
a = t;
rectCount++;
}} else if ((rectB.y + rectB.height) > (rectA.y + rectA.height)) {
t.setBounds$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
a = t;
rectCount++;
}} else {
t.setBounds$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), (rectB.y + rectB.height) - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.setBounds$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}}} else if (rectB.x <= rectA.x && (rectB.y + rectB.height) >= (rectA.y + rectA.height) ) {
if ((rectB.x + rectB.width) > (rectA.x + rectA.width)) {
t.setBounds$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = t;
rectCount++;
}} else {
t.setBounds$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectB.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), (rectA.y + rectA.height) - rectB.y);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}}} else if (rectB.x <= rectA.x) {
if ((rectB.x + rectB.width) >= (rectA.x + rectA.width)) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectB.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectB.height);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
c = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}}} else if (rectB.x <= (rectA.x + rectA.width) && (rectB.x + rectB.width) > (rectA.x + rectA.width) ) {
if (rectB.y <= rectA.y && (rectB.y + rectB.height) > (rectA.y + rectA.height) ) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a = t;
rectCount++;
}} else if (rectB.y <= rectA.y) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, (rectB.y + rectB.height) - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else if ((rectB.y + rectB.height) > (rectA.y + rectA.height)) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, rectB.y, rectB.x - rectA.x, (rectA.y + rectA.height) - rectB.y);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, rectB.y, rectB.x - rectA.x, rectB.height);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
c = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}}} else if (rectB.x >= rectA.x && (rectB.x + rectB.width) <= (rectA.x + rectA.width) ) {
if (rectB.y <= rectA.y && (rectB.y + rectB.height) > (rectA.y + rectA.height) ) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else if (rectB.y <= rectA.y) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectB.x, (rectB.y + rectB.height), rectB.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
c = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I(rectB.x, rectA.y, rectB.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
b = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
c = Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Rectangle,[t]);
rectCount++;
}}}}result = Clazz_array((I$[1]||$incl$(1)), [rectCount]);
rectCount = 0;
if (a != null ) result[rectCount++] = a;
if (b != null ) result[rectCount++] = b;
if (c != null ) result[rectCount++] = c;
if (d != null ) result[rectCount++] = d;
return result;
}, 1);

Clazz_newMeth(C$, 'isLeftMouseButton$java_awt_event_MouseEvent', function (anEvent) {
return ((anEvent.getModifiers() & 16) != 0);
}, 1);

Clazz_newMeth(C$, 'isMiddleMouseButton$java_awt_event_MouseEvent', function (anEvent) {
return ((anEvent.getModifiers() & 8) == 8);
}, 1);

Clazz_newMeth(C$, 'isRightMouseButton$java_awt_event_MouseEvent', function (anEvent) {
return ((anEvent.getModifiers() & 4) == 4);
}, 1);

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I', function (g, c, p, x, y, w, h) {
C$.getCellRendererPane$java_awt_Component$java_awt_Container(c, p).paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I$Z(g, c, p, x, y, w, h, false);
}, 1);

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$java_awt_Rectangle', function (g, c, p, r) {
C$.paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I(g, c, p, r.x, r.y, r.width, r.height);
}, 1);

Clazz_newMeth(C$, 'getCellRendererPane$java_awt_Component$java_awt_Container', function (c, p) {
var shell = c.getParent();
if (Clazz_instanceOf(shell, "javax.swing.CellRendererPane")) {
if (shell.getParent() !== p ) {
p.add$java_awt_Component(shell);
}} else {
shell = (I$[7]||$incl$(7)).getInstance$S$Z("javax.swing.CellRendererPane", false);
shell.add$java_awt_Component(c);
p.add$java_awt_Component(shell);
}return shell;
}, 1);

Clazz_newMeth(C$, 'updateComponentTreeUI$java_awt_Component', function (c) {
C$.updateComponentTreeUI0$java_awt_Component(c);
c.invalidate();
c.validate();
c.repaint();
}, 1);

Clazz_newMeth(C$, 'updateComponentTreeUI0$java_awt_Component', function (c) {
if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
var jc = c;
jc.updateUI();
var jpm = jc.getComponentPopupMenu();
if (jpm != null ) {
C$.updateComponentTreeUI$java_awt_Component(jpm);
}}var children = null;
if (Clazz_instanceOf(c, "javax.swing.JMenu")) {
children = (c).getMenuComponents();
} else if (Clazz_instanceOf(c, "java.awt.Container")) {
children = (c).getComponents();
}if (children != null ) {
for (var i = 0; i < children.length; i++) {
C$.updateComponentTreeUI0$java_awt_Component(children[i]);
}
}}, 1);

Clazz_newMeth(C$, 'invokeLater$Runnable', function (doRun) {
(I$[8]||$incl$(8)).invokeLater$Runnable(doRun);
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$Runnable', function (doRun) {
(I$[8]||$incl$(8)).invokeAndWait$Runnable(doRun);
}, 1);

Clazz_newMeth(C$, 'isEventDispatchThread', function () {
return (I$[8]||$incl$(8)).isDispatchThread();
}, 1);

Clazz_newMeth(C$, 'getRootPane$java_awt_Component', function (c) {
if (Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) {
return (c).getRootPane();
}for (; c != null ; c = c.getParent()) {
if (Clazz_instanceOf(c, "javax.swing.JRootPane")) {
return c;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'getRoot$java_awt_Component', function (c) {
var applet = null;
for (var p = c; p != null ; p = p.getParent()) {
if (Clazz_instanceOf(p, "java.awt.Window")) {
return p;
}if (Clazz_instanceOf(p, "java.applet.Applet")) {
applet = p;
}}
return applet;
}, 1);

Clazz_newMeth(C$, 'processKeyBindings$java_awt_event_KeyEvent', function (event) {
if (event != null ) {
if (event.isConsumed()) {
return false;
}var component = event.getComponent();
var pressed = (event.getID() == 401);
if (!C$.isValidKeyEventForKeyBindings$java_awt_event_KeyEvent(event)) {
return false;
}while (component != null ){
if (Clazz_instanceOf(component, "javax.swing.JComponent")) {
return (component).processKeyBindings$java_awt_event_KeyEvent$Z(event, pressed);
}if ((Clazz_instanceOf(component, "java.applet.Applet")) || (Clazz_instanceOf(component, "java.awt.Window")) ) {
return (I$[9]||$incl$(9)).processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z(event, component, pressed);
}component = component.getParent();
}
}return false;
}, 1);

Clazz_newMeth(C$, 'isValidKeyEventForKeyBindings$java_awt_event_KeyEvent', function (e) {
if (e.getID() == 400) {
var mod = e.getModifiers();
if (((mod & 8) != 0) && ((mod & 2) == 0) ) {
return false;
}}return true;
}, 1);

Clazz_newMeth(C$, 'notifyAction$javax_swing_Action$javax_swing_KeyStroke$java_awt_event_KeyEvent$O$I', function (action, ks, event, sender, modifiers) {
if (action == null ) {
return false;
}if (Clazz_instanceOf(action, "sun.swing.UIAction")) {
if (!(action).isEnabled$O(sender)) {
return false;
}} else if (!action.isEnabled()) {
return false;
}var commandO;
var stayNull;
commandO = action.getValue$S("ActionCommandKey");
if (commandO == null  && (I$[9]||$incl$(9)).isActionStandin$javax_swing_Action(action) ) {
stayNull = true;
} else {
stayNull = false;
}var command;
if (commandO != null ) {
command = commandO.toString();
} else if (!stayNull && event.getKeyChar() != "\uffff" ) {
command = String.valueOf(event.getKeyChar());
} else {
command = null;
}action.actionPerformed$java_awt_event_ActionEvent(Clazz_new_((I$[10]||$incl$(10)).c$$O$I$S$J$I,[sender, 1001, command, event.getWhen(), modifiers]));
return true;
}, 1);

Clazz_newMeth(C$, 'replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap', function (component, type, uiInputMap) {
var map = component.getInputMap$I$Z(type, (uiInputMap != null ));
while (map != null ){
var parent = map.getParent();
if (parent == null  || (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) ) {
map.setParent$javax_swing_InputMap(uiInputMap);
return;
}map = parent;
}
}, 1);

Clazz_newMeth(C$, 'replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap', function (component, uiActionMap) {
var map = component.getActionMap$Z((uiActionMap != null ));
while (map != null ){
var parent = map.getParent();
if (parent == null  || (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) ) {
map.setParent$javax_swing_ActionMap(uiActionMap);
return;
}map = parent;
}
}, 1);

Clazz_newMeth(C$, 'getUIInputMap$javax_swing_JComponent$I', function (component, condition) {
var map = component.getInputMap$I$Z(condition, false);
while (map != null ){
var parent = map.getParent();
if (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) {
return parent;
}map = parent;
}
return null;
}, 1);

Clazz_newMeth(C$, 'getUIActionMap$javax_swing_JComponent', function (component) {
var map = component.getActionMap$Z(false);
while (map != null ){
var parent = map.getParent();
if (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) {
return parent;
}map = parent;
}
return null;
}, 1);

Clazz_newMeth(C$, 'getSharedOwnerFrame', function () {
var p = (I$[11]||$incl$(11)).getAppletViewer();
var f = p.sharedOwnerFrame;
return (f == null  ? (p.sharedOwnerFrame = Clazz_new_((I$[12]||$incl$(12)))) : f);
}, 1);

Clazz_newMeth(C$, 'getSharedOwnerFrameShutdownListener', function () {
var sharedOwnerFrame = C$.getSharedOwnerFrame();
return sharedOwnerFrame;
}, 1);

Clazz_newMeth(C$, 'appContextGet$O', function (key) {
return (I$[13]||$incl$(13)).getAppContext().get$O(key);
}, 1);

Clazz_newMeth(C$, 'appContextPut$O$O', function (key, value) {
(I$[13]||$incl$(13)).getAppContext().put$O$O(key, value);
}, 1);

Clazz_newMeth(C$, 'appContextRemove$O', function (key) {
(I$[13]||$incl$(13)).getAppContext().remove$O(key);
}, 1);

Clazz_newMeth(C$, 'loadSystemClass$S', function (className) {
return Clazz_forName(className, true, (I$[14]||$incl$(14)).currentThread().getContextClassLoader());
}, 1);

Clazz_newMeth(C$, 'isLeftToRight$java_awt_Component', function (c) {
return c.getComponentOrientation().isLeftToRight();
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
throw Clazz_new_((I$[3]||$incl$(3)).c$$S,["SwingUtilities is just a container for static methods"]);
}, 1);

Clazz_newMeth(C$, 'doesIconReferenceImage$javax_swing_Icon$java_awt_Image', function (icon, image) {
var iconImage = (icon != null  && (Clazz_instanceOf(icon, "javax.swing.ImageIcon")) ) ? (icon).getImage() : null;
return (iconImage === image );
}, 1);

Clazz_newMeth(C$, 'findDisplayedMnemonicIndex$S$I', function (text, mnemonic) {
if (text == null  || mnemonic == 0  ) {
return -1;
}var uc = Character.toUpperCase(String.fromCharCode(mnemonic));
var lc = Character.toLowerCase(String.fromCharCode(mnemonic));
var uci = text.indexOf(uc);
var lci = text.indexOf(lc);
if (uci == -1) {
return lci;
} else if (lci == -1) {
return uci;
} else {
return (lci < uci) ? lci : uci;
}}, 1);

Clazz_newMeth(C$, 'calculateInnerArea$javax_swing_JComponent$java_awt_Rectangle', function (c, r) {
if (c == null ) {
return null;
}var rect = r;
var insets = c.getInsets();
if (rect == null ) {
rect = Clazz_new_((I$[1]||$incl$(1)));
}rect.x = insets.left;
rect.y = insets.top;
rect.width = c.getWidth() - insets.left - insets.right ;
rect.height = c.getHeight() - insets.top - insets.bottom ;
return rect;
}, 1);

Clazz_newMeth(C$, 'updateRendererOrEditorUI$O', function (rendererOrEditor) {
if (rendererOrEditor == null ) {
return;
}var component = null;
if (Clazz_instanceOf(rendererOrEditor, "java.awt.Component")) {
component = rendererOrEditor;
}if (Clazz_instanceOf(rendererOrEditor, "javax.swing.DefaultCellEditor")) {
component = (rendererOrEditor).getComponent();
}if (component != null ) {
C$.updateComponentTreeUI$java_awt_Component(component);
}}, 1);
;
(function(){var C$=Clazz_newClass(P$.SwingUtilities, "SharedOwnerFrame", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.JFrame', 'java.awt.event.WindowListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'addNotify', function () {
this.updateUI();
this.getOrCreatePeer();
C$.superclazz.prototype.addNotify.apply(this, []);
this.installListeners();
});

Clazz_newMeth(C$, 'installListeners', function () {
var windows = this.getOwnedWindows();
for (var ind = 0; ind < windows.length; ind++) {
var window = windows[ind];
if (window != null ) {
window.removeWindowListener$java_awt_event_WindowListener(this);
window.addWindowListener$java_awt_event_WindowListener(this);
}}
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent', function (e) {
var windows = this.getOwnedWindows();
for (var ind = 0; ind < windows.length; ind++) {
var window = windows[ind];
if (window != null ) {
if (window.isDisplayable()) {
return;
}window.removeWindowListener$java_awt_event_WindowListener(this);
}this.dispose();
}
});

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'show', function () {
});

Clazz_newMeth(C$, 'dispose', function () {
});
})()
})();
//Created 2018-05-15 01:02:41
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.LookAndFeel','java.util.Locale','java.util.HashMap','javax.swing.SwingUtilities','java.lang.Error','swingjs.JSToolkit','javax.swing.event.SwingPropertyChangeSupport','java.beans.PropertyChangeListener','java.util.Vector']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "UIDefaults", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.Hashtable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.changeSupport = null;
this.resourceBundles = null;
this.defaultLocale = null;
this.resourceCache = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.defaultLocale = (I$[2]||$incl$(2)).getDefault();
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$F.apply(this, [700, 0.75]);
}, 1);

Clazz_newMeth(C$, 'c$$I$F', function (initialCapacity, loadFactor) {
C$.superclazz.c$$I$F.apply(this, [initialCapacity, loadFactor]);
C$.$init$.apply(this);
this.resourceCache = Clazz_new_((I$[3]||$incl$(3)));
}, 1);

Clazz_newMeth(C$, 'c$$OA', function (keyValueList) {
C$.superclazz.c$$I.apply(this, [(keyValueList.length/2|0)]);
C$.$init$.apply(this);
for (var i = 0; i < keyValueList.length; i = i+(2)) {
C$.superclazz.prototype.put$TK$TV.apply(this, [keyValueList[i], keyValueList[i + 1]]);
}
}, 1);

Clazz_newMeth(C$, 'get$O', function (key) {
var value = p$.getFromHashtable$O.apply(this, [key]);
return (value != null ) ? value : p$.getFromResourceBundle$O$java_util_Locale.apply(this, [key, null]);
});

Clazz_newMeth(C$, 'getFromHashtable$O', function (key) {
var value = C$.superclazz.prototype.get$O.apply(this, [key]);
if (value == null  && (Clazz_instanceOf(key, "java.lang.String")) ) {
var skey = key;
if (skey.endsWith$S(".font") || skey.endsWith$S(".background") || skey.endsWith$S(".foreground")  ) value = C$.superclazz.prototype.get$O.apply(this, ["*" + skey.substring(skey.lastIndexOf("."))]);
}if (!(Clazz_instanceOf(value, "javax.swing.UIDefaults.ActiveValue")) && !(Clazz_instanceOf(value, "javax.swing.UIDefaults.LazyValue")) ) {
return value;
}if (Clazz_instanceOf(value, "javax.swing.UIDefaults.LazyValue")) {
try {
value = (value).createValue$javax_swing_UIDefaults(this);
} finally {
if (value == null ) {
C$.superclazz.prototype.remove$O.apply(this, [key]);
} else {
C$.superclazz.prototype.put$TK$TV.apply(this, [key, value]);
}}
} else {
value = (value).createValue$javax_swing_UIDefaults(this);
}return value;
});

Clazz_newMeth(C$, 'get$O$java_util_Locale', function (key, l) {
var value = p$.getFromHashtable$O.apply(this, [key]);
return (value != null ) ? value : p$.getFromResourceBundle$O$java_util_Locale.apply(this, [key, l]);
});

Clazz_newMeth(C$, 'getFromResourceBundle$O$java_util_Locale', function (key, l) {
if (this.resourceBundles == null  || this.resourceBundles.isEmpty()  || !(Clazz_instanceOf(key, "java.lang.String")) ) {
return null;
}if (l == null ) {
if (this.defaultLocale == null ) return null;
 else l = this.defaultLocale;
}{
return p$.getResourceCache$java_util_Locale.apply(this, [l]).get$O(key);
}});

Clazz_newMeth(C$, 'getResourceCache$java_util_Locale', function (l) {
return null;
});

Clazz_newMeth(C$, ['put$O$O','put$TK$TV'], function (key, value) {
var oldValue = (value == null ) ? C$.superclazz.prototype.remove$O.apply(this, [key]) : C$.superclazz.prototype.put$TK$TV.apply(this, [key, value]);
if (Clazz_instanceOf(key, "java.lang.String")) {
this.firePropertyChange$S$O$O(key, oldValue, value);
}return oldValue;
});

Clazz_newMeth(C$, 'putDefaults$OA', function (keyValueList) {
for (var i = 0, max = keyValueList.length; i < max; i = i+(2)) {
var value = keyValueList[i + 1];
if (value == null ) {
C$.superclazz.prototype.remove$O.apply(this, [keyValueList[i]]);
} else {
C$.superclazz.prototype.put$TK$TV.apply(this, [keyValueList[i], value]);
}}
this.firePropertyChange$S$O$O("UIDefaults", null, null);
});

Clazz_newMeth(C$, 'getFont$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Font")) ? value : null;
});

Clazz_newMeth(C$, 'getFont$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Font")) ? value : null;
});

Clazz_newMeth(C$, 'getColor$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Color")) ? value : null;
});

Clazz_newMeth(C$, 'getColor$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Color")) ? value : null;
});

Clazz_newMeth(C$, 'getIcon$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "javax.swing.Icon")) ? value : null;
});

Clazz_newMeth(C$, 'getIcon$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "javax.swing.Icon")) ? value : null;
});

Clazz_newMeth(C$, 'getBorder$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "javax.swing.border.Border")) ? value : null;
});

Clazz_newMeth(C$, 'getBorder$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "javax.swing.border.Border")) ? value : null;
});

Clazz_newMeth(C$, 'getString$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.String")) ? value : null;
});

Clazz_newMeth(C$, 'getString$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.String")) ? value : null;
});

Clazz_newMeth(C$, 'getInt$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.Integer")) ? (value).intValue() : 0;
});

Clazz_newMeth(C$, 'getInt$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.Integer")) ? (value).intValue() : 0;
});

Clazz_newMeth(C$, 'getBoolean$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.Boolean")) ? (value).booleanValue() : false;
});

Clazz_newMeth(C$, 'getBoolean$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.Boolean")) ? (value).booleanValue() : false;
});

Clazz_newMeth(C$, 'getInsets$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Insets")) ? value : null;
});

Clazz_newMeth(C$, 'getInsets$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Insets")) ? value : null;
});

Clazz_newMeth(C$, 'getDimension$O', function (key) {
var value = this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Dimension")) ? value : null;
});

Clazz_newMeth(C$, 'getDimension$O$java_util_Locale', function (key, l) {
var value = this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Dimension")) ? value : null;
});

Clazz_newMeth(C$, 'getUIClass$S$ClassLoader', function (uiClassID, uiClassLoader) {
try {
var className = this.get$O(uiClassID);
if (className != null ) {
var cls = this.get$O(className);
if (cls == null ) {
if (uiClassLoader == null ) {
cls = (I$[4]||$incl$(4)).loadSystemClass$S(className);
} else {
cls = uiClassLoader.loadClass$S(className);
}if (cls != null ) {
this.put$O$O(className, cls);
}}return cls;
}} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.lang.ClassNotFoundException")){
var e = e$$;
{
return null;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.ClassCastException")){
var e = e$$;
{
return null;
}
} else {
throw e$$;
}
}
return null;
});

Clazz_newMeth(C$, 'getUIClass$S', function (uiClassID) {
return this.getUIClass$S$ClassLoader(uiClassID, null);
});

Clazz_newMeth(C$, 'getUIError$S', function (msg) {
System.err.println$S("UIDefaults.getUI() failed: " + msg);
try {
throw Clazz_new_((I$[5]||$incl$(5)));
} catch (e) {
e.printStackTrace();
}
});

Clazz_newMeth(C$, 'getUI$javax_swing_JComponent', function (target) {
return (I$[6]||$incl$(6)).getComponentUI$javax_swing_JComponent(target);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
if (this.changeSupport == null ) {
this.changeSupport = Clazz_new_((I$[7]||$incl$(7)).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
if (this.changeSupport != null ) {
this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
if (this.changeSupport == null ) {
return Clazz_array((I$[8]||$incl$(8)), [0]);
}return this.changeSupport.getPropertyChangeListeners();
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O', function (propertyName, oldValue, newValue) {
if (this.changeSupport != null ) {
this.changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
}});

Clazz_newMeth(C$, 'addResourceBundle$S', function (bundleName) {
if (bundleName == null ) {
return;
}if (this.resourceBundles == null ) {
this.resourceBundles = Clazz_new_((I$[9]||$incl$(9)).c$$I,[5]);
}if (!this.resourceBundles.contains$O(bundleName)) {
this.resourceBundles.add$TE(bundleName);
this.resourceCache.clear();
}});

Clazz_newMeth(C$, 'removeResourceBundle$S', function (bundleName) {
if (this.resourceBundles != null ) {
this.resourceBundles.remove$O(bundleName);
}this.resourceCache.clear();
});

Clazz_newMeth(C$, 'setDefaultLocale$java_util_Locale', function (l) {
this.defaultLocale = l;
});

Clazz_newMeth(C$, 'getDefaultLocale', function () {
return this.defaultLocale;
});
;
(function(){var C$=Clazz_newInterface(P$.UIDefaults, "LazyValue", function(){
});
})()
;
(function(){var C$=Clazz_newInterface(P$.UIDefaults, "ActiveValue", function(){
});
})()
;
(function(){var C$=Clazz_newClass(P$.UIDefaults, "LazyInputMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.LazyValue']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.bindings = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$OA', function (bindings) {
C$.$init$.apply(this);
this.bindings = bindings;
}, 1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults', function (table) {
if (this.bindings != null ) {
var km = (I$[1]||$incl$(1)).makeInputMap$OA(this.bindings);
return km;
}return null;
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.ArrayList',['javax.swing.UIManager','.LookAndFeelInfo'],'swingjs.JSUtil','javax.swing.SwingUtilities','java.util.Locale','java.beans.PropertyChangeListener','swingjs.JSToolkit','javax.swing.RepaintManager','sun.awt.PaintEventDispatcher','javax.swing.SwingPaintEventDispatcher']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "UIManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.installedLAFs = null;
C$.laf = null;
C$.uid = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
var iLAFs = Clazz_new_((I$[1]||$incl$(1)).c$$I,[4]);
iLAFs.add$TE(Clazz_new_((I$[2]||$incl$(2)).c$$S$S,["HTML5", "swingjs.plaf.HTML5LookAndFeel"]));
C$.installedLAFs = iLAFs.toArray$TTA(Clazz_array((I$[2]||$incl$(2)), [iLAFs.size()]));
}
;
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getLookAndFeelDefaults', function () {
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getInstalledLookAndFeels', function () {
return C$.installedLAFs;
}, 1);

Clazz_newMeth(C$, 'setInstalledLookAndFeels$javax_swing_UIManager_LookAndFeelInfoA', function (infos) {
(I$[3]||$incl$(3)).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'installLookAndFeel$javax_swing_UIManager_LookAndFeelInfo', function (info) {
(I$[3]||$incl$(3)).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'installLookAndFeel$S$S', function (name, className) {
(I$[3]||$incl$(3)).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'getLookAndFeel', function () {
return (C$.laf == null  ? (C$.laf = (I$[3]||$incl$(3)).getInstance$S("swingjs.plaf.HTML5LookAndFeel")) : C$.laf);
}, 1);

Clazz_newMeth(C$, 'setLookAndFeel$javax_swing_LookAndFeel', function (newLookAndFeel) {
}, 1);

Clazz_newMeth(C$, 'setLookAndFeel$S', function (className) {
var lnfClass = (I$[4]||$incl$(4)).loadSystemClass$S(className);
C$.setLookAndFeel$javax_swing_LookAndFeel((lnfClass.newInstance()));
}, 1);

Clazz_newMeth(C$, 'getSystemLookAndFeelClassName', function () {
return C$.getCrossPlatformLookAndFeelClassName();
}, 1);

Clazz_newMeth(C$, 'getCrossPlatformLookAndFeelClassName', function () {
return "swingjs.plaf.HTML5LookAndFeel";
}, 1);

Clazz_newMeth(C$, 'getDefaults', function () {
C$.maybeInitialize();
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getFont$O', function (key) {
return C$.getDefaults().getFont$O(key);
}, 1);

Clazz_newMeth(C$, 'getFont$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getFont$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getColor$O', function (key) {
return C$.getDefaults().getColor$O(key);
}, 1);

Clazz_newMeth(C$, 'getColor$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getColor$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getIcon$O', function (key) {
return C$.getDefaults().getIcon$O(key);
}, 1);

Clazz_newMeth(C$, 'getIcon$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getIcon$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getBorder$O', function (key) {
return C$.getDefaults().getBorder$O(key);
}, 1);

Clazz_newMeth(C$, 'getBorder$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getBorder$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getString$O', function (key) {
return C$.getDefaults().getString$O(key);
}, 1);

Clazz_newMeth(C$, 'getString$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getString$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getString$O$java_awt_Component', function (key, c) {
var l = (c == null ) ? (I$[5]||$incl$(5)).getDefault() : c.getLocale();
return C$.getString$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getInt$O', function (key) {
return C$.getDefaults().getInt$O(key);
}, 1);

Clazz_newMeth(C$, 'getInt$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getInt$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getBoolean$O', function (key) {
return C$.getDefaults().getBoolean$O(key);
}, 1);

Clazz_newMeth(C$, 'getBoolean$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getBoolean$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getInsets$O', function (key) {
return C$.getDefaults().getInsets$O(key);
}, 1);

Clazz_newMeth(C$, 'getInsets$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getInsets$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getDimension$O', function (key) {
return C$.getDefaults().getDimension$O(key);
}, 1);

Clazz_newMeth(C$, 'getDimension$O$java_util_Locale', function (key, l) {
return C$.getDefaults().getDimension$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'get$O', function (key) {
return C$.getDefaults().get$O(key);
}, 1);

Clazz_newMeth(C$, 'get$O$java_util_Locale', function (key, l) {
return C$.getDefaults().get$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'put$O$O', function (key, value) {
return C$.getDefaults().put$O$O(key, value);
}, 1);

Clazz_newMeth(C$, 'getUI$java_awt_Component', function (target) {
C$.maybeInitialize();
var ui = C$.getDefaults().getUI$javax_swing_JComponent(target);
if (ui == null ) System.out.println$S("SwingJS interface has not been implemented for " + target.getClass().getName());
return ui;
}, 1);

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
}, 1);

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
}, 1);

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
return Clazz_array((I$[6]||$incl$(6)), [0]);
}, 1);

Clazz_newMeth(C$, 'maybeInitialize', function () {
if (C$.uid == null ) {
C$.uid = (I$[7]||$incl$(7)).getLookAndFeelDefaults();
C$.initialize();
}}, 1);

Clazz_newMeth(C$, 'initialize', function () {
if ((I$[8]||$incl$(8)).HANDLE_TOP_LEVEL_PAINT) {
(I$[9]||$incl$(9)).setPaintEventDispatcher$sun_awt_PaintEventDispatcher(Clazz_new_((I$[10]||$incl$(10))));
}}, 1);
;
(function(){var C$=Clazz_newClass(P$.UIManager, "LookAndFeelInfo", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.name = null;
this.className = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S$S', function (name, className) {
C$.$init$.apply(this);
this.name = name;
this.className = className;
}, 1);

Clazz_newMeth(C$, 'getName', function () {
return this.name;
});

Clazz_newMeth(C$, 'getClassName', function () {
return this.className;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[" + this.getName() + " " + this.getClassName() + "]" ;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[['java.lang.StringBuffer','java.util.Collections','java.util.IdentityHashMap','java.util.HashMap','java.util.HashSet','Thread','sun.awt.SunToolkit','sun.awt.MostRecentThreadAppContext','sun.awt.MostRecentKeyValue','java.beans.PropertyChangeListener','java.beans.PropertyChangeSupport']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AppContext");
C$.EVENT_QUEUE_KEY = null;
C$.threadGroup2appContext = null;
C$.numAppContexts = 0;
C$.mostRecentThreadAppContext = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.EVENT_QUEUE_KEY = Clazz_new_((I$[1]||$incl$(1)).c$$S,["EventQueue"]);
C$.threadGroup2appContext = (I$[2]||$incl$(2)).synchronizedMap$java_util_Map(Clazz_new_((I$[3]||$incl$(3))));
C$.numAppContexts = 0;
C$.mostRecentThreadAppContext = null;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.table = null;
this.threadGroup = null;
this.changeSupport = null;
this.$isDisposed = false;
this.mostRecentKeyValue = null;
this.shadowMostRecentKeyValue = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.table = Clazz_new_((I$[4]||$incl$(4)));
this.changeSupport = null;
this.$isDisposed = false;
this.mostRecentKeyValue = null;
this.shadowMostRecentKeyValue = null;
}, 1);

Clazz_newMeth(C$, 'getAppContexts', function () {
return Clazz_new_((I$[5]||$incl$(5)).c$$java_util_Collection,[C$.threadGroup2appContext.values()]);
}, 1);

Clazz_newMeth(C$, 'isDisposed', function () {
return this.$isDisposed;
});

Clazz_newMeth(C$, 'c$$ThreadGroup', function (threadGroup) {
C$.$init$.apply(this);
C$.numAppContexts++;
this.threadGroup = threadGroup;
C$.threadGroup2appContext.put$TK$TV(threadGroup, this);

this.contextClassLoader = this;
}, 1);

Clazz_newMeth(C$, 'getAppContext', function () {
var currentThread = (I$[6]||$incl$(6)).currentThread();
var appContext = null;
var recent = C$.mostRecentThreadAppContext;
if ((recent != null ) && (recent.thread === currentThread ) ) {
appContext = recent.appContext;
} else {
var currentThreadGroup = currentThread.getThreadGroup();
var threadGroup = currentThreadGroup;
appContext = C$.threadGroup2appContext.get$O(threadGroup);
while (appContext == null ){
threadGroup = threadGroup.getParent();
if (threadGroup == null ) {
appContext = (I$[7]||$incl$(7)).createNewAppContext();
break;
}appContext = C$.threadGroup2appContext.get$O(threadGroup);
}
for (var tg = currentThreadGroup; tg !== threadGroup ; tg = tg.getParent()) {
C$.threadGroup2appContext.put$TK$TV(tg, appContext);
}
C$.mostRecentThreadAppContext = Clazz_new_((I$[8]||$incl$(8)).c$$Thread$sun_awt_AppContext,[currentThread, appContext]);
}return appContext;
}, 1);

Clazz_newMeth(C$, 'isMainContext$sun_awt_AppContext', function (ctx) {
return false;
}, 1);

Clazz_newMeth(C$, 'dispose', function () {
});

Clazz_newMeth(C$, 'get$O', function (key) {
{
var recent = this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) {
return recent.value;
}var value = this.table.get$O(key);
if (this.mostRecentKeyValue == null ) {
this.mostRecentKeyValue = Clazz_new_((I$[9]||$incl$(9)).c$$O$O,[key, value]);
this.shadowMostRecentKeyValue = Clazz_new_((I$[9]||$incl$(9)).c$$O$O,[key, value]);
} else {
var auxKeyValue = this.mostRecentKeyValue;
this.shadowMostRecentKeyValue.setPair$O$O(key, value);
this.mostRecentKeyValue = this.shadowMostRecentKeyValue;
this.shadowMostRecentKeyValue = auxKeyValue;
}return value;
}});

Clazz_newMeth(C$, 'put$O$O', function (key, value) {
{
var recent = this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) recent.value = value;
return this.table.put$TK$TV(key, value);
}});

Clazz_newMeth(C$, 'remove$O', function (key) {
{
var recent = this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) recent.value = null;
return this.table.remove$O(key);
}});

Clazz_newMeth(C$, 'getThreadGroup', function () {
return this.threadGroup;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[threadGroup=" + this.threadGroup.getName() + "]" ;
});

Clazz_newMeth(C$, 'getPropertyChangeListeners', function () {
if (this.changeSupport == null ) {
return Clazz_array((I$[10]||$incl$(10)), [0]);
}return this.changeSupport.getPropertyChangeListeners();
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport = Clazz_new_((I$[11]||$incl$(11)).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S', function (propertyName) {
if (this.changeSupport == null ) {
return Clazz_array((I$[10]||$incl$(10)), [0]);
}return this.changeSupport.getPropertyChangeListeners$S(propertyName);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[['java.util.HashSet','java.util.IdentityHashMap','java.awt.AWTEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AWTAutoShutdown", null, null, 'Runnable');
C$.theInstance = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.busyThreadSet = null;
this.toolkitThreadBusy = false;
this.peerMap = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.busyThreadSet = Clazz_new_((I$[1]||$incl$(1)).c$$I,[7]);
this.toolkitThreadBusy = false;
this.peerMap = Clazz_new_((I$[2]||$incl$(2)));
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getInstance', function () {
return (C$.theInstance == null  ? (C$.theInstance = Clazz_new_(C$)) : C$.theInstance);
}, 1);

Clazz_newMeth(C$, 'notifyToolkitThreadBusy', function () {
C$.getInstance().setToolkitBusy$Z(true);
}, 1);

Clazz_newMeth(C$, 'notifyToolkitThreadFree', function () {
C$.getInstance().setToolkitBusy$Z(false);
}, 1);

Clazz_newMeth(C$, 'notifyThreadBusy$Thread', function (thread) {
this.busyThreadSet.add$TE(thread);
});

Clazz_newMeth(C$, 'notifyThreadFree$Thread', function (thread) {
this.busyThreadSet.remove$O(thread);
});

Clazz_newMeth(C$, 'notifyPeerMapUpdated', function () {
if (!p$.isReadyToShutdown.apply(this, [])) {
p$.activateBlockerThread.apply(this, []);
}});

Clazz_newMeth(C$, 'isReadyToShutdown', function () {
return (!this.toolkitThreadBusy && this.peerMap.isEmpty() && this.busyThreadSet.isEmpty()  );
});

Clazz_newMeth(C$, 'setToolkitBusy$Z', function (busy) {
if (busy != this.toolkitThreadBusy ) {
if (busy != this.toolkitThreadBusy ) {
if (busy) {
this.toolkitThreadBusy = busy;
} else {
this.toolkitThreadBusy = busy;
}}}});

Clazz_newMeth(C$, 'run', function () {
});

Clazz_newMeth(C$, 'getShutdownEvent', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "AWTAutoShutdown$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.awt.AWTEvent'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);
})()
), Clazz_new_((I$[3]||$incl$(3)).c$$O$I, [this, null, C$.getInstance(), 0],P$.AWTAutoShutdown$1));
}, 1);

Clazz_newMeth(C$, 'activateBlockerThread', function () {
});

Clazz_newMeth(C$, 'registerPeer$O$O', function (target, peer) {
this.peerMap.put$TK$TV(target, peer);
this.notifyPeerMapUpdated();
});

Clazz_newMeth(C$, 'unregisterPeer$O$O', function (target, peer) {
if (this.peerMap.get$O(target) === peer ) {
this.peerMap.remove$O(target);
}});

Clazz_newMeth(C$, 'getPeer$O', function (target) {
return this.peerMap.get$O(target);
});

Clazz_newMeth(C$, 'dumpPeers$java_util_logging_Logger', function (aLog) {
aLog.fine$S("Mapped peers:");
for (var key, $key = this.peerMap.keySet().iterator(); $key.hasNext()&&((key=$key.next()),1);) {
aLog.fine$S(key + "->" + this.peerMap.get$O(key) );
}
});
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newInterface(P$, "ComponentFactory");
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newClass(P$, "MostRecentKeyValue");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.key = null;
this.value = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$O$O', function (k, v) {
C$.$init$.apply(this);
this.key = k;
this.value = v;
}, 1);

Clazz_newMeth(C$, 'setPair$O$O', function (k, v) {
this.key = k;
this.value = v;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newClass(P$, "MostRecentThreadAppContext");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.thread = null;
this.appContext = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$Thread$sun_awt_AppContext', function (key, value) {
C$.$init$.apply(this);
this.thread = key;
this.appContext = value;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[['java.awt.event.PaintEvent','java.awt.Rectangle']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "PaintEventDispatcher");
C$.dispatcher = null;

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'setPaintEventDispatcher$sun_awt_PaintEventDispatcher', function (dispatcher) {
{
C$.dispatcher = dispatcher;
}}, 1);

Clazz_newMeth(C$, 'getPaintEventDispatcher', function () {
{
if (C$.dispatcher == null ) {
C$.dispatcher = Clazz_new_(C$);
}return C$.dispatcher;
}}, 1);

Clazz_newMeth(C$, 'createPaintEvent$java_awt_Component$I$I$I$I', function (target, x, y, w, h) {
return Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_Component$I$java_awt_Rectangle,[target, 800, Clazz_new_((I$[2]||$incl$(2)).c$$I$I$I$I,[x, y, w, h])]);
});

Clazz_newMeth(C$, 'shouldDoNativeBackgroundErase$java_awt_Component', function (c) {
return true;
});

Clazz_newMeth(C$, 'queueSurfaceDataReplacing$java_awt_Component$Runnable', function (c, r) {
return false;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[['swingjs.JSUtil','sun.awt.EventQueueItem','sun.awt.SunToolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "PostEventQueue");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.queueHead = null;
this.queueTail = null;
this.eventQueue = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.queueHead = null;
this.queueTail = null;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_EventQueue', function (eq) {
C$.$init$.apply(this);
this.eventQueue = eq;
}, 1);

Clazz_newMeth(C$, 'noEvents', function () {
return this.queueHead == null ;
});

Clazz_newMeth(C$, 'flush', function () {
if (this.queueHead != null ) {
var tempQueue;
{
tempQueue = this.queueHead;
this.queueHead = this.queueTail = null;
while (tempQueue != null ){
(I$[1]||$incl$(1)).alert$O("postevent IS NOT IMPLEMENTED " + tempQueue.event);
this.eventQueue.postEvent$java_awt_AWTEvent(tempQueue.event);
tempQueue = tempQueue.next;
}
}}});

Clazz_newMeth(C$, 'postEvent$java_awt_AWTEvent', function (event) {
var item = Clazz_new_((I$[2]||$incl$(2)).c$$java_awt_AWTEvent,[event]);
{
if (this.queueHead == null ) {
this.queueHead = this.queueTail = item;
} else {
this.queueTail.next = item;
this.queueTail = item;
}}(I$[3]||$incl$(3)).wakeupEventQueue$java_awt_EventQueue$Z(this.eventQueue, false);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newInterface(P$, "RequestFocusController");
})();
//Created 2018-05-15 01:03:05
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[['java.util.HashMap','java.awt.EventQueue','sun.awt.AppContext','sun.awt.PostEventQueue','Thread','sun.awt.AWTAutoShutdown','sun.awt.AWTAccessor','sun.awt.PeerEvent','java.awt.Toolkit','sun.awt.SunToolkit$1','java.awt.Dimension','sun.font.FontDesignMetrics']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "SunToolkit", null, 'java.awt.Toolkit', ['sun.awt.WindowClosingSupport', 'sun.awt.WindowClosingListener', 'sun.awt.ComponentFactory']);
C$.appContextMap = null;
var p$=C$.prototype;
C$.imgCache = null;
C$.startupLocale = null;
C$.dataTransfererClassName = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.appContextMap = Clazz_new_((I$[1]||$incl$(1)));
C$.imgCache = Clazz_new_((I$[1]||$incl$(1)));
C$.startupLocale = null;
C$.dataTransfererClassName = null;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.windowClosingListener = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.windowClosingListener = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
var eventQueue;
eventQueue = Clazz_new_((I$[2]||$incl$(2)));
var appContext = (I$[3]||$incl$(3)).getAppContext();
if (appContext != null ) {
appContext.put$O$O((I$[3]||$incl$(3)).EVENT_QUEUE_KEY, eventQueue);
var postEventQueue = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_EventQueue,[eventQueue]);
appContext.put$O$O("PostEventQueue", postEventQueue);
}}, 1);

Clazz_newMeth(C$, 'useBufferPerWindow', function () {
return false;
});

Clazz_newMeth(C$, 'createNewAppContext', function () {
var threadGroup = (I$[5]||$incl$(5)).currentThread().getThreadGroup();
return C$.createNewAppContext$ThreadGroup(threadGroup);
}, 1);

Clazz_newMeth(C$, 'createNewAppContext$ThreadGroup', function (threadGroup) {
var eventQueue;
var eqName = System.getProperty("AWT.EventQueueClass", "java.awt.EventQueue");
try {
eventQueue = Clazz_forName(eqName).newInstance();
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
System.err.println$S("Failed loading " + eqName + ": " + e );
eventQueue = Clazz_new_((I$[2]||$incl$(2)));
} else {
throw e;
}
}
var appContext = Clazz_new_((I$[3]||$incl$(3)).c$$ThreadGroup,[threadGroup]);
appContext.put$O$O((I$[3]||$incl$(3)).EVENT_QUEUE_KEY, eventQueue);
var postEventQueue = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_EventQueue,[eventQueue]);
appContext.put$O$O("PostEventQueue", postEventQueue);
return appContext;
}, 1);

Clazz_newMeth(C$, 'wakeupEventQueue$java_awt_EventQueue$Z', function (q, isShutdown) {
q.wakeup$Z(isShutdown);
}, 1);

Clazz_newMeth(C$, 'targetToPeer$O', function (target) {
if (target != null ) {
return (I$[6]||$incl$(6)).getInstance().getPeer$O(target);
}return null;
}, 1);

Clazz_newMeth(C$, 'targetCreatedPeer$O$O', function (target, peer) {
if (target != null  && peer != null  ) {
(I$[6]||$incl$(6)).getInstance().registerPeer$O$O(target, peer);
}}, 1);

Clazz_newMeth(C$, 'targetDisposedPeer$O$O', function (target, peer) {
if (target != null  && peer != null  ) {
(I$[6]||$incl$(6)).getInstance().unregisterPeer$O$O(target, peer);
}}, 1);

Clazz_newMeth(C$, 'setAppContext$O$sun_awt_AppContext', function (target, context) {
if (Clazz_instanceOf(target, "java.awt.Component")) {
(I$[7]||$incl$(7)).getComponentAccessor().setAppContext$java_awt_Component$sun_awt_AppContext(target, context);
} else {
return false;
}return true;
}, 1);

Clazz_newMeth(C$, 'getAppContext$O', function (target) {
if (Clazz_instanceOf(target, "java.awt.Component")) {
{
return target.appContext;
}
} else {
return null;
}}, 1);

Clazz_newMeth(C$, 'targetToAppContext$O', function (target) {
if (target == null ) {
return null;
}var context = C$.getAppContext$O(target);
if (context == null ) {
context = C$.appContextMap.get$O(target);
}return context;
}, 1);

Clazz_newMeth(C$, 'setLWRequestStatus$java_awt_Window$Z', function (changed, status) {
(I$[7]||$incl$(7)).getWindowAccessor().setLWRequestStatus$java_awt_Window$Z(changed, status);
}, 1);

Clazz_newMeth(C$, 'checkAndSetPolicy$java_awt_Container$Z', function (cont, isSwingCont) {
}, 1);

Clazz_newMeth(C$, 'insertTargetMapping$O$sun_awt_AppContext', function (target, appContext) {
if (!C$.setAppContext$O$sun_awt_AppContext(target, appContext)) {
C$.appContextMap.put$TK$TV(target, appContext);
}}, 1);

Clazz_newMeth(C$, 'postEvent$sun_awt_AppContext$java_awt_AWTEvent', function (appContext, event) {
if (event == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException'));
}var postEventQueue = appContext.get$O("PostEventQueue");
if (postEventQueue != null ) {
postEventQueue.postEvent$java_awt_AWTEvent(event);
}}, 1);

Clazz_newMeth(C$, 'postPriorityEvent$java_awt_AWTEvent', function (e) {
var pe = Clazz_new_((I$[8]||$incl$(8)).c$$O$Runnable$J,[(I$[9]||$incl$(9)).getDefaultToolkit(), ((
(function(){var C$=Clazz_newClass(P$, "SunToolkit$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
(I$[7]||$incl$(7)).getAWTEventAccessor().setPosted$java_awt_AWTEvent(this.$finals.e);
(this.$finals.e.getSource()).dispatchEvent$java_awt_AWTEvent(this.$finals.e);
});
})()
), Clazz_new_((I$[10]||$incl$(10)).$init$, [this, {e: e}])), 2]);
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(C$.targetToAppContext$O(e.getSource()), pe);
}, 1);

Clazz_newMeth(C$, 'flushPendingEvents', function () {
var appContext = (I$[3]||$incl$(3)).getAppContext();
var postEventQueue = appContext.get$O("PostEventQueue");
if (postEventQueue != null ) {
postEventQueue.flush();
}}, 1);

Clazz_newMeth(C$, 'isPostEventQueueEmpty', function () {
var appContext = (I$[3]||$incl$(3)).getAppContext();
var postEventQueue = appContext.get$O("PostEventQueue");
return (postEventQueue == null  || postEventQueue.noEvents() );
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$O$Runnable', function (target, runnable) {
C$.executeOnEventHandlerThread$sun_awt_PeerEvent(Clazz_new_((I$[8]||$incl$(8)).c$$O$Runnable$J,[target, runnable, 1]));
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$O$Runnable$J', function (target, runnable, when) {
C$.executeOnEventHandlerThread$sun_awt_PeerEvent(((
(function(){var C$=Clazz_newClass(P$, "SunToolkit$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('sun.awt.PeerEvent'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getWhen', function () {
return this.$finals.when;
});
})()
), Clazz_new_((I$[8]||$incl$(8)).c$$O$Runnable$J, [this, {when: when}, target, runnable, 1],P$.SunToolkit$2)));
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$sun_awt_PeerEvent', function (peerEvent) {
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(C$.targetToAppContext$O(peerEvent.getSource()), peerEvent);
}, 1);

Clazz_newMeth(C$, 'invokeLaterOnAppContext$sun_awt_AppContext$Runnable', function (appContext, dispatcher) {
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(appContext, Clazz_new_((I$[8]||$incl$(8)).c$$O$Runnable$J,[(I$[9]||$incl$(9)).getDefaultToolkit(), dispatcher, 1]));
}, 1);

Clazz_newMeth(C$, 'isDispatchThreadForAppContext$O', function (target) {
var appContext = C$.targetToAppContext$O(target);
var eq = appContext.get$O((I$[3]||$incl$(3)).EVENT_QUEUE_KEY);
var next = (I$[7]||$incl$(7)).getEventQueueAccessor().getNextQueue$java_awt_EventQueue(eq);
while (next != null ){
eq = next;
next = (I$[7]||$incl$(7)).getEventQueueAccessor().getNextQueue$java_awt_EventQueue(eq);
}
return ((I$[5]||$incl$(5)).currentThread() === (I$[7]||$incl$(7)).getEventQueueAccessor().getDispatchThread$java_awt_EventQueue(eq) );
}, 1);

Clazz_newMeth(C$, 'getScreenSize', function () {
return Clazz_new_((I$[11]||$incl$(11)).c$$I$I,[this.getScreenWidth(), this.getScreenHeight()]);
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return (I$[12]||$incl$(12)).getMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'getFontList', function () {
var hardwiredFontList = Clazz_array(java.lang.String, -1, ["Dialog", "SansSerif", "Serif", "Monospaced", "DialogInput"]);
return hardwiredFontList;
});

Clazz_newMeth(C$, 'createPanel$java_awt_Panel', function (target) {
return this.createComponent$java_awt_Component(target);
});

Clazz_newMeth(C$, 'disableBackgroundErase$java_awt_Component', function (component) {
p$.disableBackgroundEraseImpl$java_awt_Component.apply(this, [component]);
});

Clazz_newMeth(C$, 'disableBackgroundEraseImpl$java_awt_Component', function (component) {
(I$[7]||$incl$(7)).getComponentAccessor().setBackgroundEraseDisabled$java_awt_Component$Z(component, true);
});

Clazz_newMeth(C$, 'getSunAwtNoerasebackground', function () {
return false;
}, 1);

Clazz_newMeth(C$, 'getSunAwtErasebackgroundonresize', function () {
return true;
}, 1);

Clazz_newMeth(C$, 'setOverrideRedirect$java_awt_Window', function (target) {
});

Clazz_newMeth(C$, 'getImageFromHash$java_awt_Toolkit$java_net_URL', function (tk, url) {
var img = C$.imgCache.get$O(url);
if (img == null ) {
try {
img = tk.createImage$java_net_URL(url);
C$.imgCache.put$TK$TV(url, img);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
}return img;
}, 1);

Clazz_newMeth(C$, 'getImageFromHash$java_awt_Toolkit$S', function (tk, filename) {
var img = C$.imgCache.get$O(filename);
if (img == null ) {
try {
tk.createImage$S(filename);
C$.imgCache.put$TK$TV(filename, img);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
}return img;
}, 1);

Clazz_newMeth(C$, 'getImage$S', function (filename) {
return C$.getImageFromHash$java_awt_Toolkit$S(this, filename);
});

Clazz_newMeth(C$, 'getImage$java_net_URL', function (url) {
return C$.getImageFromHash$java_awt_Toolkit$java_net_URL(this, url);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
return 0;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
if (w == 0 || h == 0 ) {
return true;
}return true;
});

Clazz_newMeth(C$, 'getSystemEventQueueImpl', function () {
return C$.getSystemEventQueueImplPP$sun_awt_AppContext((I$[3]||$incl$(3)).getAppContext());
});

Clazz_newMeth(C$, 'getSystemEventQueueImplPPS', function () {
return C$.getSystemEventQueueImplPP$sun_awt_AppContext((I$[3]||$incl$(3)).getAppContext());
}, 1);

Clazz_newMeth(C$, 'getSystemEventQueueImplPP$sun_awt_AppContext', function (appContext) {
var theEventQueue = appContext.get$O((I$[3]||$incl$(3)).EVENT_QUEUE_KEY);
return theEventQueue;
}, 1);

Clazz_newMeth(C$, 'getNativeContainer$java_awt_Component', function (c) {
return (I$[9]||$incl$(9)).getNativeContainer$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'enableInputMethodsForTextComponent', function () {
return false;
});

Clazz_newMeth(C$, 'getStartupLocale', function () {
if (C$.startupLocale == null ) {
{

}
}return C$.startupLocale;
}, 1);

Clazz_newMeth(C$, 'getDefaultKeyboardLocale', function () {
return C$.getStartupLocale();
});

Clazz_newMeth(C$, 'setDataTransfererClassName$S', function (className) {
C$.dataTransfererClassName = className;
}, 1);

Clazz_newMeth(C$, 'getDataTransfererClassName', function () {
if (C$.dataTransfererClassName == null ) {
(I$[9]||$incl$(9)).getDefaultToolkit();
}return C$.dataTransfererClassName;
}, 1);

Clazz_newMeth(C$, 'getWindowClosingListener', function () {
return this.windowClosingListener;
});

Clazz_newMeth(C$, 'setWindowClosingListener$sun_awt_WindowClosingListener', function (wcl) {
this.windowClosingListener = wcl;
});

Clazz_newMeth(C$, 'windowClosingNotify$java_awt_event_WindowEvent', function (event) {
if (this.windowClosingListener != null ) {
return this.windowClosingListener.windowClosingNotify$java_awt_event_WindowEvent(event);
} else {
return null;
}});

Clazz_newMeth(C$, 'windowClosingDelivered$java_awt_event_WindowEvent', function (event) {
if (this.windowClosingListener != null ) {
return this.windowClosingListener.windowClosingDelivered$java_awt_event_WindowEvent(event);
} else {
return null;
}});

Clazz_newMeth(C$, 'isModalExcluded$java_awt_Window', function (window) {
return true;
}, 1);

Clazz_newMeth(C$, 'isLightweightOrUnknown$java_awt_Component', function (comp) {
if (comp.isLightweight() || !(Clazz_instanceOf(java.awt.Toolkit.getDefaultToolkit(), "sun.awt.SunToolkit")) ) {
return true;
}return !(Clazz_instanceOf(comp, "java.awt.Panel") || Clazz_instanceOf(comp, "java.awt.Window") );
}, 1);

Clazz_newMeth(C$, 'getDesktopAAHints', function () {
return null;
});

Clazz_newMeth(C$, 'getContainingWindow$java_awt_Component', function (comp) {
while (comp != null  && !(Clazz_instanceOf(comp, "java.awt.Window")) ){
comp = comp.getParent();
}
return comp;
}, 1);

Clazz_newMeth(C$, 'isNativeGTKAvailable', function () {
return false;
});

Clazz_newMeth(C$, 'isWindowOpacitySupported', function () {
return false;
});

Clazz_newMeth(C$, 'isWindowShapingSupported', function () {
return false;
});

Clazz_newMeth(C$, 'isWindowTranslucencySupported', function () {
return false;
});

Clazz_newMeth(C$, 'isTranslucencyCapable$java_awt_GraphicsConfiguration', function (gc) {
return false;
});

Clazz_newMeth(C$, 'needUpdateWindow', function () {
return false;
});
})();
//Created 2018-05-15 01:03:06
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newInterface(P$, "WindowClosingListener");
})();
//Created 2018-05-15 01:03:06
(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
var C$=Clazz_newInterface(P$, "WindowClosingSupport");
})();
//Created 2018-05-15 01:03:06
(function(){var P$=Clazz_newPackage("sun.swing"),I$=[['java.lang.Boolean','java.awt.Color']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "SwingLazyValue", null, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.LazyValue']]);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.className = null;
this.methodName = null;
this.args = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S', function (c) {
C$.c$$S$S$OA.apply(this, [c, null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S', function (c, m) {
C$.c$$S$S$OA.apply(this, [c, m, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$OA', function (c, o) {
C$.c$$S$S$OA.apply(this, [c, null, o]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$OA', function (c, m, o) {
C$.$init$.apply(this);
this.className = c;
this.methodName = m;
if (o != null ) {
this.args = o.clone();
}}, 1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults', function (table) {
try {
var c = Clazz_forName(this.className, true, null);
if (this.methodName != null ) {
var types = p$.getClassArray$OA.apply(this, [this.args]);
var m = c.getMethod$S$ClassA(this.methodName, types);
return m.invoke$O$OA(c, this.args);
} else {
var types = p$.getClassArray$OA.apply(this, [this.args]);
var constructor = c.getConstructor$ClassA(types);
return constructor.newInstance$OA(this.args);
}} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
return null;
});

Clazz_newMeth(C$, 'getClassArray$OA', function (args) {
var types = null;
if (args != null ) {
types = Clazz_array(java.lang.Class, [args.length]);
for (var i = 0; i < args.length; i++) {
if (Clazz_instanceOf(args[i], "java.lang.Integer")) {
types[i] = Integer.TYPE;
} else if (Clazz_instanceOf(args[i], "java.lang.Boolean")) {
types[i] = (I$[1]||$incl$(1)).TYPE;
} else if (Clazz_instanceOf(args[i], "javax.swing.plaf.ColorUIResource")) {
types[i] = Clazz_getClass((I$[2]||$incl$(2)));
} else {
types[i] = args[i].getClass();
}}
}return types;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:11
(function(){var P$=Clazz_newPackage("swingjs.api"),I$=[];
var C$=Clazz_newClass(P$, "Interface");
C$.instances = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.instances = "";
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getInstanceWithParams$S$ClassA$OA', function (name, classes, params) {
try {
var cl = Clazz_forName(name);
return cl.getConstructor$ClassA(classes).newInstance$OA(params);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
return null;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getInstance$S$Z', function (name, isQuiet) {
var x = null;
{
Clazz._isQuiet = isQuiet;
}
try {
if (!isQuiet && C$.instances.indexOf(name + ";") <= 0 ) {
System.out.println$S("swingjs.api.Interface creating instance of " + name);
C$.instances += name + ";";
}var y = Clazz_forName(name);
if (y != null ) x = y.newInstance();
} catch (e) {
System.out.println$S("Swingjs.api.Interface Error creating instance for " + name + ": \n" + e );
{
if (e.stack)System.out.println(e.stack);
}
} finally {
{
Clazz._isQuiet = false;
}
}
return x;
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[['swingjs.JSUtil']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DOMNode");

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'createElement', function (key, id) {
var node = null;
{
node = document.createElement(key);
node.__CLASS_NAME__ = "swingjs.api.DOMNode";
if(id)node.id = id;
}
return node;
}, 1);

Clazz_newMeth(C$, 'createTextNode', function (text) {
var node = null;
{
node = document.createTextNode(text);
}
return node;
}, 1);

Clazz_newMeth(C$, 'getParent', function (node) {
{
return node.parentNode;
}
}, 1);

Clazz_newMeth(C$, 'remove', function (node) {
if (node == null ) return null;
{
try { var p = node.parentElement;
p.removeChild(node);
$(body).remove(node);
} catch(e) { };
return p;
}
}, 1);

Clazz_newMeth(C$, 'getAttr', function (node, attr) {
{
if (node)return node[attr];
}
}, 1);

Clazz_newMeth(C$, 'getStyle', function (node, style) {
{
if (node)return node.style[style];
}
}, 1);

Clazz_newMeth(C$, 'getRectangle', function (node, r) {
{
r.x = parseInt(node.style.left.split("p")[0]);
r.y = parseInt(node.style.top.split("p")[0]);
r.width = parseInt(node.style.width.split("p")[0]);
r.height = parseInt(node.style.height.split("p")[0]);
}
}, 1);

Clazz_newMeth(C$, 'setAttr', function (node, attr, val) {

node[attr] = (val == "TRUE" ? true : val);
return node;
}, 1);

Clazz_newMeth(C$, 'setAttrs', function (node, attr) {
{
for (var i = 0; i < attr.length;) { var key = attr[i++];
var val = attr[i++];
key && (node[key] = val);
}
}
return node;
}, 1);

Clazz_newMeth(C$, 'setStyles', function (node, attr) {
if (node != null ) {
for (var i = 0; i < attr.length;) { node.style[attr[i++]] = attr[i++]; }
}
return node;
}, 1);

Clazz_newMeth(C$, 'setSize', function (node, width, height) {
return C$.setStyles(node, ["width", width + "px", "height", height + "px"]);
}, 1);

Clazz_newMeth(C$, 'setPositionAbsolute', function (node, top, left) {
if (top != -2147483648) {
C$.setStyles(node, ["top", top + "px"]);
C$.setStyles(node, ["left", left + "px"]);
}return C$.setStyles(node, ["position", "absolute"]);
}, 1);

Clazz_newMeth(C$, 'firstChild', function (node) {
{
return node.firstChild;
}
}, 1);

Clazz_newMeth(C$, 'lastChild', function (node) {
{
return node.lastChild;
}
}, 1);

Clazz_newMeth(C$, 'addJqueryHandledEvent', function (me, node, event) {
var f = null;
{
f = function(ev) {me.handleJSEvent$O$I$O(node, -1, ev)};
}
(I$[1]||$incl$(1)).getJQuery().$(node).on(event, f);
}, 1);

Clazz_newMeth(C$, 'setZ', function (node, z) {
return C$.setStyles(node, ["z-index", "" + z]);
}, 1);

Clazz_newMeth(C$, 'getAudioElement', function (filePath, isLoop) {
return C$.setAttrs(C$.createElement("audio", null), ["controls", "true", (isLoop ? "loop" : null), (isLoop ? "true" : null), "src", filePath]);
}, 1);

Clazz_newMeth(C$, 'setCursor', function (c) {
{
document.body.style.cursor = c;
}
}, 1);

Clazz_newMeth(C$, 'getImageNode', function (img) {
{
return (img._canvas || img._imgNode);
}
}, 1);

Clazz_newMeth(C$, 'addHorizontalGap', function (domNode, gap) {
var label = C$.setStyles(C$.createElement("label", null), ["letter-spacing", gap + "px", "font-size", "0pt"]);
label.appendChild(C$.createTextNode("."));
domNode.appendChild(label);
}, 1);

Clazz_newMeth(C$, 'removeAllChildren', function (node) {
{
while (node.hasChildNodes()) { node.removeChild(node.lastChild); }
}
}, 1);

Clazz_newMeth(C$, 'seTabIndex', function (node, i) {
{
node.tabIndex = i;
}
}, 1);

Clazz_newMeth(C$, 'setVisible', function (node, visible) {
C$.setStyles(node, ["display", visible ? "block" : "none"]);
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[];
var C$=Clazz_newClass(P$, "HTML5CanvasContext2D");

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getBuf8', function (imageData) {
{
return imageData.data
}
}, 1);

Clazz_newMeth(C$, 'putImageData', function (ctx, imageData, x, y) {
{
ctx.putImageData(imageData, x, y);
}
}, 1);

Clazz_newMeth(C$, 'push', function (ctx, map) {
{
(ctx._aSaved || (ctx._aSaved = [])).push(map);
return ctx._aSaved.length;
}
}, 1);

Clazz_newMeth(C$, 'pop', function (ctx) {
{
return (ctx._aSaved && ctx._aSaved.length > 0 ? ctx._aSaved.pop() : null);
}
return null;
}, 1);

Clazz_newMeth(C$, 'getSavedLevel', function (ctx) {
{
return (ctx._aSaved ? ctx._aSaved.length : 0);
}
}, 1);

Clazz_newMeth(C$, 'stretchImage', function (ctx, img, sx, sy, swidth, sheight, dx, dy, dwidth, dheight) {
{
ctx.drawImage(img, sx, sy, swidth, sheight, dx, dy, dwidth, dheight);
}
}, 1);

Clazz_newMeth(C$, 'getImageData', function (ctx, x, y, width, height) {
{
return ctx.getImageData(x, y, width, height);
}
}, 1);

Clazz_newMeth(C$, 'setLineWidth', function (ctx, d) {
{
ctx.lineWidth = d;
}
}, 1);

Clazz_newMeth(C$, 'setFont', function (ctx, canvasFont) {
{
ctx.font = canvasFont;
}
}, 1);

Clazz_newMeth(C$, 'setColor', function (ctx, s) {
{
ctx.fillStyle = ctx.strokeStyle = s;
}
}, 1);

Clazz_newMeth(C$, 'setFillStyle', function (ctx, s) {
{
ctx.fillStyle = s;
}
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[];
var C$=Clazz_newInterface(P$, "JSInterface");
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs.jquery"),I$=[];
var C$=Clazz_newClass(P$, "JQueryUI");

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
{
if (!jQuery.ui) try{ (function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(n){return arguments.length?t.call(this,e.camelCase(n)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}}) })(jQuery);
}catch (e) { System.out.println("coremenu failed to load jQuery.ui.core -- jQuery version conflict?");
} if (!jQuery.ui.widget) try{ (function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:s?u.widgetEventPrefix:t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName||n;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():e.data(this,s,new i(o,this))}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n,r){var i,s=this;typeof t!="boolean"&&(r=n,n=t,t=!1),r?(n=i=e(n),this.bindings=this.bindings.add(n)):(r=n,n=this.element,i=this.widget()),e.each(r,function(r,o){function u(){if(!t&&(s.options.disabled===!0||e(this).hasClass("ui-state-disabled")))return;return(typeof o=="string"?s[o]:o).apply(s,arguments)}typeof o!="string"&&(u.guid=o.guid=o.guid||u.guid||e.guid++);var a=r.match(/^(\w+)\s*(.*)$/),f=a[1]+s.eventNamespace,l=a[2];l?i.delegate(l,f,u):n.bind(f,u)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]}) })(jQuery);
}catch (e) { System.out.println("coremenu failed to load jQuery.ui.widget -- jQuery version conflict?");
} if (!jQuery.ui.mouse) try{ (function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}}) })(jQuery);
}catch (e) { System.out.println("coremenu failed to load jQuery.ui.mouse -- jQuery version conflict?");
} if (!jQuery.ui.position) try{ (function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\+\-]\d+%?/,f=/^\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return e("body").append(s),r=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?"":t.element.css("overflow-x"),r=t.isWindow?"":t.element.css("overflow-y"),i=n==="scroll"||n==="auto"&&t.width<t.element[0].scrollWidth,s=r==="scroll"||r==="auto"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||"flip").split(" "),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at="left top",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each(["my","at"],function(){var e=(t[this]||"").split(" "),n,r;e.length===1&&(e=o.test(e[0])?e.concat(["center"]):u.test(e[0])?["center"].concat(e):["center","center"]),e[0]=o.test(e[0])?e[0]:"center",e[1]=u.test(e[1])?e[1]:"center",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]==="right"?m.left+=l:t.at[0]==="center"&&(m.left+=l/2),t.at[1]==="bottom"?m.top+=d:t.at[1]==="center"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,"marginLeft"),x=p(this,"marginTop"),T=f+w+p(this,"marginRight")+b.width,N=c+x+p(this,"marginBottom")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]==="right"?C.left-=f:t.my[0]==="center"&&(C.left-=f/2),t.my[1]==="bottom"?C.top-=c:t.my[1]==="center"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each(["left","top"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?"left":n>0?"right":"center",vertical:u<0?"top":o>0?"bottom":"middle"};l<f&&i(n+s)<l&&(h.horizontal="center"),d<c&&i(o+u)<d&&(h.vertical="middle"),r(i(n),i(s))>r(i(o),i(u))?h.important="horizontal":h.important="vertical",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]==="left"?-t.elemWidth:t.my[0]==="right"?t.elemWidth:0,c=t.at[0]==="left"?t.targetWidth:t.at[0]==="right"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]==="top",c=l?-t.elemHeight:t.my[1]==="bottom"?t.elemHeight:0,h=t.at[1]==="top"?t.targetHeight:t.at[1]==="bottom"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName("body")[0],u=document.createElement("div");t=document.createElement(o?"div":"body"),r={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(r,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText="position: absolute; left: 10.7432222px;",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML="",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(" "),s=r.at.split(" ");return i.length===1&&(i[1]=i[0]),/^\d/.test(i[0])&&(i[0]="+"+i[0]),/^\d/.test(i[1])&&(i[1]="+"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]="center":(s[1]=s[0],s[0]="center")),n.call(this,e.extend(r,{at:s[0]+i[0]+" "+s[1]+i[1],offset:t}))}}(jQuery) })(jQuery);
}catch (e) { System.out.println("coremenu failed to load jQuery.ui.position -- jQuery version conflict?");
}
}
}
;
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);
})();
//Created 2018-05-15 01:03:18
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['swingjs.JSUtil','java.util.Locale']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSApp");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.params = null;
this.appletCodeBase = null;
this.appletIdiomaBase = null;
this.appletDocumentBase = null;
this.appletName = null;
this.htmlName = null;
this.main = null;
this.syncId = null;
this.testAsync = false;
this.async = false;
this.strJavaVersion = null;
this.strJavaVendor = null;
this.isApplet = false;
this.isFrame = false;
this.html5Applet = null;
this.fullName = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.fullName = "Main";
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Hashtable', function (params) {
C$.$init$.apply(this);
this.setAppParams$java_util_Hashtable(params);
}, 1);

Clazz_newMeth(C$, 'getParameter$S', function (name) {
var s = this.params.get$O(name);
System.out.println$S("get parameter: " + name + " = " + s );
return (s == null  ? null : "" + s);
});

Clazz_newMeth(C$, 'setAppParams$java_util_Hashtable', function (params) {
this.params = params;
var language = this.getParameter$S("language");
if (language == null ) language = (I$[1]||$incl$(1)).J2S._getDefaultLanguage(false);
(I$[2]||$incl$(2)).setDefault$java_util_Locale((I$[1]||$incl$(1)).getDefaultLocale$S(language));
this.htmlName = p$.extract$S$S.apply(this, ["" + this.getParameter$S("name"), "_object"]);
this.appletName = p$.extract$S$S.apply(this, [this.htmlName + "_", "_"]);
this.syncId = this.getParameter$S("syncId");
this.fullName = this.htmlName + "__" + this.syncId + "__" ;
params.put$TK$TV("fullName", this.fullName);
var o = params.get$O("codePath");
if (o == null ) o = "../java/";
this.appletCodeBase = o.toString();
this.appletIdiomaBase = this.appletCodeBase.substring(0, this.appletCodeBase.lastIndexOf("/", this.appletCodeBase.length$() - 2) + 1) + "idioma";
o = params.get$O("documentBase");
this.appletDocumentBase = (o == null  ? "" : o.toString());
if (params.containsKey$O("maximumSize")) Math.max((params.get$O("maximumSize")).intValue(), 100);
this.async = (this.testAsync || params.containsKey$O("async") );
var applet = (I$[1]||$incl$(1)).J2S._findApplet(this.htmlName);
var javaver = (I$[1]||$incl$(1)).J2S._getJavaVersion();
this.html5Applet = applet;
this.strJavaVersion = javaver;
this.strJavaVendor = "Java2Script/Java 1.6 (HTML5)";
o = params.get$O("assets");
if (o != null ) (I$[1]||$incl$(1)).loadJavaResourcesFromZip$ClassLoader$S$java_util_Map(this.getClass().getClassLoader(), o, null);
System.out.println$S("JSApp initialized");
});

Clazz_newMeth(C$, 'extract$S$S', function (string, key) {
{
return string.split(key)[0];
}
return null;
});
})();
//Created 2018-05-15 01:03:13
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['swingjs.JSUtil']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSApplet", null, 'javax.swing.JApplet');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, ['runMain$S$SA','runMain'], function (className, args) {
var theClass = null;
try {
theClass = Clazz_forName(className);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.ClassNotFoundException")){
System.out.println$S("Running main but cannot find class " + className);
(I$[1]||$incl$(1)).alert$O("Cannot find class " + className + " for running main(args)" );
e.printStackTrace();
return null;
} else {
throw e;
}
}
System.out.println$S("Running main(args) in class " + className);
{
setTimeout(function(){theClass.$clazz$.main.call(null, args || []);},1);
}
return theClass;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:13
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['javax.swing.SwingUtilities','swingjs.JSAppletThread$1']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSAppletThread", null, 'javajs.util.JSThread');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.appletViewer = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$swingjs_JSAppletViewer$ThreadGroup$S', function (ap, group, name) {
C$.superclazz.c$$ThreadGroup$S.apply(this, [group, name]);
C$.$init$.apply(this);
this.appletViewer = ap;
}, 1);

Clazz_newMeth(C$, 'run1$I', function (mode) {
mode = this.appletViewer.run1$I(mode);
if (mode != 2) this.dispatchAndReturn$Runnable$I(null, mode);
});

Clazz_newMeth(C$, 'dispatchAndReturn$Runnable$I', function (r, mode) {
var m = mode;
(I$[1]||$incl$(1)).invokeLater$Runnable(((
(function(){var C$=Clazz_newClass(P$, "JSAppletThread$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
this.b$['swingjs.JSAppletThread'].run1$I(this.$finals.m);
});
})()
), Clazz_new_((I$[2]||$incl$(2)).$init$, [this, {m: m}])));
});

Clazz_newMeth(C$, 'myInit', function () {
return false;
});

Clazz_newMeth(C$, 'isLooping', function () {
return false;
});

Clazz_newMeth(C$, 'myLoop', function () {
return false;
});

Clazz_newMeth(C$, 'whenDone', function () {
});

Clazz_newMeth(C$, 'getDelayMillis', function () {
return 0;
});

Clazz_newMeth(C$, 'onException$Exception', function (e) {
});

Clazz_newMeth(C$, 'doFinally', function () {
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:13
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.net.URL','swingjs.api.Interface','java.awt.Dimension','javajs.util.Lst','java.awt.Insets','swingjs.JSThreadGroup','swingjs.JSAppletThread','java.lang.Thread','sun.awt.SunToolkit','java.awt.Toolkit','swingjs.JSGraphicsConfiguration','sun.applet.AppletEventMulticaster','sun.applet.AppletEvent','javax.swing.JFrame','javax.imageio.ImageIO','swingjs.JSUtil','java.awt.Font','javajs.util.PT','swingjs.JSFrameViewer','java.util.ArrayList','swingjs.JSToolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSAppletViewer", null, 'swingjs.JSFrameViewer', ['java.applet.AppletStub', 'java.applet.AppletContext']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
try {
(I$[1]||$incl$(1)).setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory((I$[2]||$incl$(2)).getInstance$S$Z("javajs.util.AjaxURLStreamHandlerFactory", false));
} catch (e) {
}
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.maximumSize = 0;
this.graphicsConfig = null;
this.threadGroup = null;
this.myThread = null;
this.haveFrames = false;
this.defaultAppletSize = null;
this.currentAppletSize = null;
this.nextStatus = 0;
this.status = 0;
this.listeners = null;
this.allWindows = null;
this.sharedOwnerFrame = null;
this.appContext = null;
this.timerQueue = null;
this.$isResizable = false;
this.haveResizable = false;
this.addFrame = false;
this.jAppletFrame = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.maximumSize = 2147483647;
this.haveFrames = false;
this.defaultAppletSize = Clazz_new_((I$[3]||$incl$(3)).c$$I$I,[10, 10]);
this.currentAppletSize = Clazz_new_((I$[3]||$incl$(3)).c$$I$I,[10, 10]);
this.status = 0;
this.allWindows = Clazz_new_((I$[4]||$incl$(4)));
}, 1);

Clazz_newMeth(C$, 'addWindow$java_awt_Window', function (window) {
this.allWindows.removeObj$O(window);
this.allWindows.addLast$TV(window);
});

Clazz_newMeth(C$, 'c$$java_util_Hashtable', function (params) {
C$.superclazz.c$$java_util_Hashtable.apply(this, [params]);
C$.$init$.apply(this);
System.out.println$S("JSAppletViewer initializing2");
this.isApplet = true;
this.appletViewer = this;
p$.setDisplayParams$java_util_Hashtable.apply(this, [params]);
}, 1);

Clazz_newMeth(C$, 'setDisplayParams$java_util_Hashtable', function (params) {
this.display = params.get$O("display");
var s = "" + params.get$O("isResizable");
this.$isResizable = "true".equalsIgnoreCase$S(s);
this.haveResizable = (this.$isResizable || "false".equalsIgnoreCase$S(s) );
this.addFrame = "true".equalsIgnoreCase$S("" + params.get$O("addFrame"));
this.insets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[0, 0, 0, 0]);
this.threadGroup = Clazz_new_((I$[6]||$incl$(6)).c$$S,[this.appletName]);
this.myThread = Clazz_new_((I$[7]||$incl$(7)).c$$swingjs_JSAppletViewer$ThreadGroup$S,[this, this.threadGroup, this.appletName]);
(I$[8]||$incl$(8)).thisThread = (this.myThread);
this.appContext = (I$[9]||$incl$(9)).createNewAppContext();
(I$[10]||$incl$(10)).getDefaultToolkit();
Clazz_new_((I$[11]||$incl$(11))).getDevice();
});

Clazz_newMeth(C$, 'start', function () {
if (this.status == 0) this.myThread.start();
 else this.showStatus$S("already started");
});

Clazz_newMeth(C$, 'addAppletListener$sun_applet_AppletListener', function (l) {
this.listeners = (I$[12]||$incl$(12)).add$sun_applet_AppletListener$sun_applet_AppletListener(this.listeners, l);
});

Clazz_newMeth(C$, 'removeAppletListener$sun_applet_AppletListener', function (l) {
this.listeners = (I$[12]||$incl$(12)).remove$sun_applet_AppletListener$sun_applet_AppletListener(this.listeners, l);
});

Clazz_newMeth(C$, 'dispatchAppletEvent$I$O', function (id, argument) {
if (this.listeners != null ) {
var evt = Clazz_new_((I$[13]||$incl$(13)).c$$O$I$O,[this, id, argument]);
this.listeners.appletStateChanged$sun_applet_AppletEvent(evt);
}});

Clazz_newMeth(C$, 'isActive', function () {
return true;
});

Clazz_newMeth(C$, 'appletResize$I$I', function (width, height) {
var currentSize = Clazz_new_((I$[3]||$incl$(3)).c$$I$I,[this.currentAppletSize.width, this.currentAppletSize.height]);
this.currentAppletSize.width = width;
this.currentAppletSize.height = height;
this.japplet.setBounds$I$I$I$I(0, 0, width, height);
this.japplet.getRootPane().setBounds$I$I$I$I(0, 0, this.getWidth(), this.getHeight());
this.japplet.getContentPane().setBounds$I$I$I$I(0, 0, this.getWidth(), this.getHeight());
(this.japplet.getContentPane()).revalidate();
if (this.addFrame) {
this.jAppletFrame = Clazz_new_((I$[14]||$incl$(14)).c$$S,["SwingJS Applet Viewer"]);
var pane = this.japplet.getContentPane();
this.jAppletFrame.setContentPane$java_awt_Container(pane);
this.japplet.setVisible$Z(false);
this.jAppletFrame.pack();
this.jAppletFrame.setDefaultCloseOperation$I(2);
}this.japplet.repaint$I$I$I$I(0, 0, this.getWidth(), this.getHeight());
this.dispatchAppletEvent$I$O(51234, currentSize);
});

Clazz_newMeth(C$, 'getDocumentBase', function () {
try {
return Clazz_new_((I$[1]||$incl$(1)).c$$S,[this.params.get$O("documentBase")]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getCodeBase', function () {
try {
return Clazz_new_((I$[1]||$incl$(1)).c$$S,[this.params.get$O("codePath")]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getParameter$S', function (name) {
var s = this.params.get$O(name);
System.out.println$S("get parameter: " + name + " = " + s );
return (s == null  ? null : "" + s);
});

Clazz_newMeth(C$, 'getAppletContext', function () {
return this;
});

Clazz_newMeth(C$, 'getHeight', function () {
return this.html5Applet._getHeight();
});

Clazz_newMeth(C$, 'getWidth', function () {
return this.html5Applet._getWidth();
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I', function (x, y, width, height) {
this.japplet.reshape$I$I$I$I(x, y, width, height);
this.currentAppletSize.width = width;
this.currentAppletSize.height = height;
});

Clazz_newMeth(C$, 'getImage$java_net_URL', function (url) {
try {
return (I$[15]||$incl$(15)).read$java_net_URL(url);
} catch (t) {
return null;
}
});

Clazz_newMeth(C$, 'getApplet$S', function (name) {
var applet = null;
{
applet = SwingJS._applets[name]; applet && (applet = applet._applet);
}
return applet;
});

Clazz_newMeth(C$, 'getApplets', function () {
return null;
});

Clazz_newMeth(C$, 'showDocument$java_net_URL', function (url) {
(I$[16]||$incl$(16)).showWebPage$java_net_URL$O(url, null);
});

Clazz_newMeth(C$, 'showDocument$java_net_URL$S', function (url, target) {
(I$[16]||$incl$(16)).showWebPage$java_net_URL$O(url, target);
});

Clazz_newMeth(C$, 'showStatus$S', function (status) {
(I$[16]||$incl$(16)).log$S(status);
{
Clazz._LoaderProgressMonitor.showStatus(status, true);
}
});

Clazz_newMeth(C$, 'showAppletStatus$S', function (status) {
this.getAppletContext().showStatus$S(this.htmlName + " " + status );
});

Clazz_newMeth(C$, 'showAppletException$Throwable', function (t) {
{
this.showAppletStatus("error " + (t.getMessage ? t.getMessage() : t));
if (t.printStackTrace) t.printStackTrace();
else System.out.println(t.stack);
}
});

Clazz_newMeth(C$, 'run1$I', function (mode) {
System.out.println$S("JSAppletViewer thread run1 mode=" + mode + " status=" + this.nextStatus );
var ok = false;
switch (mode) {
case 0:
this.currentAppletSize.width = this.defaultAppletSize.width = this.getWidth();
this.currentAppletSize.height = this.defaultAppletSize.height = this.getHeight();
this.nextStatus = 1;
ok = true;
break;
case 1:
switch (this.nextStatus) {
case 1:
if (this.status != 0) {
p$.showAppletStatus$S.apply(this, ["notdisposed"]);
this.status = 7;
break;
}System.out.println$S("JSAppletViewer runloader");
p$.runLoader.apply(this, []);
this.nextStatus = (this.main == null  ? 2 : 76);
ok = true;
break;
case 2:
if (this.status != 1 && this.status != 5 ) {
p$.showAppletStatus$S.apply(this, ["notloaded"]);
break;
}System.out.println$S("JSAppletViewer init");
this.japplet.setFont$java_awt_Font(Clazz_new_((I$[17]||$incl$(17)).c$$S$I$I,["Dialog", 0, 12]));
this.japplet.resizeOriginal$I$I(this.defaultAppletSize.width, this.defaultAppletSize.height);
this.japplet.init();
this.japplet.validate();
this.status = 2;
p$.showAppletStatus$S.apply(this, ["initialized"]);
this.nextStatus = 3;
ok = true;
break;
case 3:
if (this.status != 2 && this.status != 4 ) {
p$.showAppletStatus$S.apply(this, ["notstarted"]);
this.status = 7;
break;
}this.japplet.getRootPane().addNotify();
System.out.println$S("JSAppletViewer start" + this.currentAppletSize);
this.japplet.resizeOriginal$I$I(this.currentAppletSize.width, this.currentAppletSize.height);
this.japplet.start();
this.status = 3;
p$.showAppletStatus$S.apply(this, ["started"]);
this.nextStatus = 35;
ok = true;
break;
case 35:
this.japplet.getContentPane().setBounds$java_awt_Rectangle(this.japplet.getBounds());
this.japplet.setVisible$Z(true);
this.japplet.validate();
p$.showAppletStatus$S.apply(this, ["ready"]);
(I$[16]||$incl$(16)).readyCallback$S$S$java_awt_Container$swingjs_JSAppletViewer(this.appletName, this.fullName, this.applet, this);
if (this.$isResizable && !this.addFrame ) {
this.resizer = ((I$[16]||$incl$(16)).getInstance$S("swingjs.plaf.Resizer")).set$swingjs_JSFrameViewer(this);
if (this.resizer != null ) this.resizer.show();
}this.japplet.repaint();
break;
case 4:
if (this.status == 3) {
this.status = 4;
this.japplet.setVisible$Z(false);
this.japplet.stop();
p$.showAppletStatus$S.apply(this, ["stopped"]);
} else {
p$.showAppletStatus$S.apply(this, ["notstopped"]);
this.status = 7;
}break;
case 5:
if (this.status == 4 || this.status == 2 ) {
this.status = 5;
this.japplet.destroy();
p$.showAppletStatus$S.apply(this, ["destroyed"]);
} else {
p$.showAppletStatus$S.apply(this, ["notdestroyed"]);
this.status = 7;
}break;
case 75:
if (this.status == 5 || this.status == 1 ) {
p$.showAppletStatus$S.apply(this, ["notdisposed"]);
this.status = 7;
} else {
this.status = 0;
this.applet = null;
p$.showAppletStatus$S.apply(this, ["disposed"]);
}break;
case 76:
p$.showAppletStatus$S.apply(this, ["running " + this.main]);
var args = this.params.get$O("args");
if (Clazz_instanceOf(args, "java.lang.String")) args = (I$[18]||$incl$(18)).split$S$S(args, " ");
(this.applet).runMain$S$SA(this.main, args);
(I$[16]||$incl$(16)).readyCallback$S$S$java_awt_Container$swingjs_JSAppletViewer(this.appletName, this.fullName, this.applet, this);
break;
case 6:
break;
default:
System.out.println$S("unrecognized JSAppletViewer status: " + this.nextStatus);
break;
}
break;
default:
System.out.println$S("unrecognized JSAppletThread mode: " + mode);
break;
}
return (ok ? 1 : 2);
});

Clazz_newMeth(C$, 'runLoader', function () {
this.dispatchAppletEvent$I$O(51235, null);
this.status = 1;
this.main = this.getParameter$S("main");
var code = (this.main == null  ? this.getParameter$S("code") : null);
try {
if (code == null  && this.main == null  ) {
System.err.println$S("runloader.err-- \"code\" or \"main\" must be specified.");
throw Clazz_new_(Clazz_load('java.lang.InstantiationException').c$$S,["\"code\" or \"main\" must be specified."]);
}if (code == null ) code = "swingjs.JSApplet";
this.top = this.applet = this.japplet = (I$[16]||$incl$(16)).getInstance$S(code);
if (this.applet == null ) {
System.out.println$S(code + " could not be launched");
this.status = 7;
} else if (!(Clazz_instanceOf(this.applet, "javax.swing.JApplet"))) {
(I$[16]||$incl$(16)).alert$O(code + " is not a JApplet!?");
this.status = 7;
}} catch (e$$) {
if (Clazz_exceptionOf(e$$, "java.lang.InstantiationException")){
var e = e$$;
{
this.status = 7;
p$.showAppletException$Throwable.apply(this, [e]);
return;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.Exception")){
var e = e$$;
{
this.status = 7;
p$.showAppletException$Throwable.apply(this, [e]);
return;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.ThreadDeath")){
var e = e$$;
{
this.status = 7;
p$.showAppletStatus$S.apply(this, ["death"]);
return;
}
} else if (Clazz_exceptionOf(e$$, "java.lang.Error")){
var e = e$$;
{
this.status = 7;
p$.showAppletException$Throwable.apply(this, [e]);
return;
}
} else {
throw e$$;
}
} finally {
this.dispatchAppletEvent$I$O(51236, null);
}
if (this.applet != null ) {
this.japplet.setStub$java_applet_AppletStub(this);
this.japplet.setVisible$Z(false);
this.japplet.setDispatcher();
p$.showAppletStatus$S.apply(this, ["loaded"]);
}});

Clazz_newMeth(C$, 'newFrameViewer$Z', function (forceNew) {
return (this.haveFrames || forceNew  ? Clazz_new_((I$[19]||$incl$(19))) : null);
});

Clazz_newMeth(C$, 'getTimerQueue', function () {
return (this.timerQueue == null  ? (this.timerQueue = Clazz_new_((I$[20]||$incl$(20)))) : this.timerQueue);
});

Clazz_newMeth(C$, 'exit', function () {
for (var i = this.allWindows.size(); --i >= 0; ) try {
this.allWindows.get$I(i).dispose();
} catch (e) {
}

});

Clazz_newMeth(C$, 'getAudioClip$java_net_URL', function (url) {
return (I$[21]||$incl$(21)).getAudioClip$java_net_URL(url);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:14
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['swingjs.JSToolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSFontMetrics", null, 'java.awt.FontMetrics');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.fwidths = null;
this.iwidths = null;
this.FIRST_PRINTABLE = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.FIRST_PRINTABLE = 32;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$$java_awt_Font.apply(this, [null]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (f) {
this.font = f;
});

Clazz_newMeth(C$, 'getLeading', function () {
return (this.font.getSize()/20|0) + 1;
});

Clazz_newMeth(C$, 'getAscent', function () {
return this.font.getSize();
});

Clazz_newMeth(C$, 'getDescent', function () {
return (this.font.getSize()/4|0) + 1;
});

Clazz_newMeth(C$, 'charWidth$C', function (pt) {
return (pt.$c() < 256  ? (this.getWidthsFloat()[pt.$c()]|0) : this.stringWidth$S("" + pt));
});

Clazz_newMeth(C$, 'charWidth$I', function (pt) {
{
var spt;
return ((pt + 0 == pt ? pt : (pt = (spt = pt).charCodeAt(0))) < 256 ? (this.getWidthsFloat()[pt] | 0) : this.stringWidth$S(isChar ? spt : String.fromCharCode (pt)));
}
});

Clazz_newMeth(C$, 'stringWidth$S', function (s) {
return ((I$[1]||$incl$(1)).getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S(null, this.font, s)|0);
});

Clazz_newMeth(C$, 'getWidths', function () {
if (this.iwidths != null ) return this.iwidths;
this.iwidths = Clazz_array(Integer.TYPE, [256]);
this.getWidthsFloat();
for (var ch = this.FIRST_PRINTABLE; ch < 256; ch++) {
this.iwidths[ch] = (this.fwidths[ch]|0);
}
return this.iwidths;
});

Clazz_newMeth(C$, 'getWidthsFloat', function () {
if (this.fwidths != null ) return this.fwidths;
this.fwidths = Clazz_array(Float.TYPE, [256]);
for (var ch = this.FIRST_PRINTABLE; ch < 256; ch++) {
this.fwidths[ch] = (I$[1]||$incl$(1)).getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S(null, this.font, "" + String.fromCharCode(ch));
}
return this.fwidths;
});
})();
//Created 2018-05-15 01:03:14
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.awt.Insets','swingjs.JSMouse','swingjs.JSGraphics2D','swingjs.api.js.DOMNode','swingjs.plaf.Resizer']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSFrameViewer", null, 'swingjs.JSApp', 'swingjs.api.js.JSInterface');
var p$=C$.prototype;
C$.canvasCount = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.jsgraphics = null;
this.top = null;
this.appletViewer = null;
this.resizer = null;
this.insets = null;
this.display = null;
this.applet = null;
this.japplet = null;
this.mouse = null;
this.canvas = null;
this.frameID = null;
this.canvasId = null;
this.topApp = null;
this.resizable = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.resizable = true;
}, 1);

Clazz_newMeth(C$, 'getInsets', function () {
return this.insets;
});

Clazz_newMeth(C$, 'c$$java_util_Hashtable', function (params) {
C$.superclazz.c$$java_util_Hashtable.apply(this, [params]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setForWindow$java_awt_Container', function (window) {
this.isFrame = true;
this.appletViewer = window.appletViewer;
this.top = window;
this.applet = window;
this.fullName = this.appletViewer.fullName;
this.canvas = null;
this.jsgraphics = null;
this.insets = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[20, 0, 0, 0]);
this.getGraphics$I$I(0, 0);
return this;
});

Clazz_newMeth(C$, 'getTop', function () {
return this.top;
});

Clazz_newMeth(C$, 'cacheFileByName$S$Z', function (fileName, isAdd) {
return 0;
});

Clazz_newMeth(C$, 'cachePut$S$O', function (key, data) {
});

Clazz_newMeth(C$, 'destroy', function () {
});

Clazz_newMeth(C$, 'getFullName', function () {
return this.fullName;
});

Clazz_newMeth(C$, 'openFileAsyncSpecial$S$I', function (fileName, flags) {
});

Clazz_newMeth(C$, 'processMouseEvent$I$I$I$I$J$O$I', function (id, x, y, modifiers, time, jqevent, scroll) {
p$.getMouse.apply(this, []).processEvent$I$I$I$I$J$O$I(id, x, y, modifiers, time, jqevent, scroll);
return false;
});

Clazz_newMeth(C$, 'getMouse', function () {
return (this.mouse == null  ? this.mouse = Clazz_new_((I$[2]||$incl$(2)).c$$swingjs_JSFrameViewer,[this]) : this.mouse);
});

Clazz_newMeth(C$, 'processTwoPointGesture$FAAA', function (touches) {
p$.getMouse.apply(this, []).processTwoPointGesture$FAAA(touches);
});

Clazz_newMeth(C$, 'setDisplay$swingjs_api_js_HTML5Canvas', function (canvas) {
this.canvas = canvas;
this.jsgraphics = null;
});

Clazz_newMeth(C$, 'setScreenDimension$I$I', function (width, height) {
this.setGraphics$java_awt_Graphics$I$I((this.jsgraphics = null), width, height);
if (this.top != null ) this.top.resizeOriginal$I$I(width, height);
});

Clazz_newMeth(C$, 'setGraphics$java_awt_Graphics$I$I', function (g, width, height) {
return (g == null  ? this.getGraphics$I$I(width, height) : g);
});

Clazz_newMeth(C$, 'setStatusDragDropped$I$I$I$S', function (mode, x, y, fileName) {
return false;
});

Clazz_newMeth(C$, 'startHoverWatcher$Z', function (enable) {
});

Clazz_newMeth(C$, 'getGraphics$I$I', function (wNew, hNew) {
if (wNew == 0 && this.top != null  ) {
if (this.topApp == null ) this.topApp = this.top;
wNew = Math.max(0, (this.topApp).getContentPane().getWidth());
hNew = Math.max(0, (this.topApp).getContentPane().getHeight());
}var wOld = 0;
var hOld = 0;
{
wOld = (this.canvas == null ? 0 : this.canvas.width); hOld = (this.canvas == null ? 0 : this.canvas.height)
}
if (wNew >= 0 && hNew >= 0  && (wOld != wNew || hOld != hNew  || this.canvas == null   || this.jsgraphics == null  ) ) {
this.jsgraphics = Clazz_new_((I$[3]||$incl$(3)).c$$O,[this.canvas = this.newCanvas$I$I(wNew, hNew)]);
}return this.jsgraphics;
});

Clazz_newMeth(C$, 'newCanvas$I$I', function (width, height) {
if (this.isApplet) {
var c = this.html5Applet._getHtml5Canvas();
if (c != null ) {
return this.canvas = c;
}}if (this.topApp == null ) this.topApp = this.top;
var root = (this.topApp.getComponentCount() > 0 ? this.topApp.getComponent$I(0) : null);
var userFramedApplet = null;
var app = null;
if (root != null  && root.getContentPane().getComponentCount() > 0 ) {
var appletInFrame = false;
app = root.getContentPane().getComponent$I(0);

appletInFrame = (app.uiClassID == "AppletUI");
if (appletInFrame) {
userFramedApplet = app;
root = userFramedApplet.getComponent$I(0);
}}var parent = (root == null  ? null : (root.getUI()).domNode);
if (parent != null ) (I$[4]||$incl$(4)).remove(this.canvas);
this.display = this.canvasId = this.appletViewer.appletName + "_canvas" + ++C$.canvasCount ;
System.out.println$S("JSFrameViewer creating new canvas " + this.canvasId + ": " + width + "  " + height );
this.canvas = (I$[4]||$incl$(4)).createElement("canvas", this.canvasId);
if (userFramedApplet != null ) {
var appViewer = userFramedApplet.getFrameViewer();
appViewer.setDisplay$swingjs_api_js_HTML5Canvas(this.canvas);
appViewer.topApp = app;
}var iTop = (root == null  ? 0 : root.getContentPane().getY());
(I$[4]||$incl$(4)).setPositionAbsolute(this.canvas, iTop, 0);
(I$[4]||$incl$(4)).setStyles(this.canvas, ["width", width + "px", "height", height + "px"]);
if (this.resizer != null ) this.resizer.setPosition$I$I(0, 0);
if (parent != null ) {
parent.appendChild(this.canvas);
}{
this.canvas.width = width; this.canvas.height = height;
}
return this.canvas;
});

Clazz_newMeth(C$, 'setResizable$Z', function (tf) {
this.resizable = tf;
if (!this.isResizable()) this.resizable = false;
if (this.resizer != null ) this.resizer.setEnabled$Z(this.resizable);
 else if (this.resizable && p$.newResizer.apply(this, []) != null  ) this.resizer.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, 'isResizable', function () {
return this.resizable && (!this.appletViewer.haveResizable || this.appletViewer.$isResizable ) ;
});

Clazz_newMeth(C$, 'getResizer', function () {
return (this.resizer != null  || !this.isResizable()  ? this.resizer : p$.newResizer.apply(this, []));
});

Clazz_newMeth(C$, 'newResizer', function () {
this.resizer = Clazz_new_((I$[5]||$incl$(5))).set$swingjs_JSFrameViewer(this);
if (this.resizer != null ) this.resizer.show();
return this.resizer;
});

Clazz_newMeth(C$, 'getDiv$S', function (id) {
{
return J2S.$(this.html5Applet, id)[0];
}
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
this.top.paint$java_awt_Graphics(this.setGraphics$java_awt_Graphics$I$I(g, 0, 0));
});
})();
//Created 2018-05-15 01:03:15
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.awt.RenderingHints','java.util.Hashtable','java.awt.geom.AffineTransform','java.awt.BasicStroke','swingjs.api.js.HTML5CanvasContext2D','swingjs.JSToolkit','swingjs.api.js.DOMNode','swingjs.JSGraphicsCompositor','swingjs.JSUtil','java.awt.Font','java.awt.Toolkit','java.awt.Rectangle','java.awt.Color','java.awt.AlphaComposite','java.lang.Boolean']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSGraphics2D", null, null, 'Cloneable');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.backgroundPainted = false;
this.constrainX = 0;
this.constrainY = 0;
this.width = 0;
this.height = 0;
this.canvas = null;
this.ctx = null;
this.gc = null;
this.currentStroke = null;
this.currentClip = null;
this.currentComposite = null;
this.initialState = 0;
this.isShifted = false;
this.font = null;
this.hints = null;
this.$transform = null;
this.backgroundColor = null;
this.inPath = false;
this.foregroundColor = null;
this.imageData = null;
this.buf8 = null;
this.lastx = 0;
this.lasty = 0;
this.nx = 0;
this.ny = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$O', function (canvas) {
C$.$init$.apply(this);
this.hints = Clazz_new_((I$[1]||$incl$(1)).c$$java_util_Map,[Clazz_new_((I$[2]||$incl$(2)))]);
this.canvas = canvas;
this.ctx = this.canvas.getContext("2d");
this.$transform = Clazz_new_((I$[3]||$incl$(3)));
this.setStroke$java_awt_Stroke(Clazz_new_((I$[4]||$incl$(4))));
{
this.gc = SwingJS;
this.width = canvas.width;
this.height = canvas.height;
}
}, 1);

Clazz_newMeth(C$, 'getDeviceConfiguration', function () {
return this.gc;
});

Clazz_newMeth(C$, 'drawLine$I$I$I$I', function (x0, y0, x1, y1) {
var inPath = this.inPath;
if (!inPath) this.ctx.beginPath();
this.ctx.moveTo(x0, y0);
this.ctx.lineTo(x1, y1);
if (!inPath) this.ctx.stroke();
});

Clazz_newMeth(C$, 'drawOval$I$I$I$I', function (left, top, width, height) {
if (width == height) p$.doCirc$I$I$I$Z.apply(this, [left, top, width, false]);
 else p$.doArc$D$D$D$D$D$D$Z.apply(this, [left, top, width, height, 0, 360, false]);
});

Clazz_newMeth(C$, 'fillOval$I$I$I$I', function (left, top, width, height) {
if (width == height) p$.doCirc$I$I$I$Z.apply(this, [left, top, width, true]);
 else p$.doArc$D$D$D$D$D$D$Z.apply(this, [left, top, width, height, 0, 360, true]);
});

Clazz_newMeth(C$, 'drawArc$I$I$I$I$I$I', function (x, y, width, height, startAngle, arcAngle) {
p$.doArc$D$D$D$D$D$D$Z.apply(this, [x, y, width, height, startAngle, arcAngle, false]);
});

Clazz_newMeth(C$, 'fillArc$I$I$I$I$I$I', function (centerX, centerY, width, height, startAngle, arcAngle) {
p$.doArc$D$D$D$D$D$D$Z.apply(this, [centerX, centerY, width, height, startAngle, arcAngle, true]);
});

Clazz_newMeth(C$, 'doCirc$I$I$I$Z', function (left, top, diameter, fill) {
var r = diameter / 2.0;
this.ctx.beginPath();
this.ctx.arc(left + r, top + r, r, 0, 6.283185307179586, false);
this.ctx.closePath();
if (fill) this.ctx.fill();
 else this.ctx.stroke();
});

Clazz_newMeth(C$, 'doArc$D$D$D$D$D$D$Z', function (x, y, width, height, startAngle, arcAngle, fill) {
this.ctx.save();
{
if (arcAngle < 0 ) {
startAngle += arcAngle;
arcAngle = -arcAngle;
}this.ctx.translate(x, y);
this.ctx.scale(width / 2, height / 2);
this.ctx.beginPath();
this.ctx.arc(1, 1, 1, p$.toRad$D.apply(this, [360 - startAngle]), p$.toRad$D.apply(this, [360 - arcAngle - startAngle ]), true);
if (fill) this.ctx.lineTo(1, 1);
}this.ctx.restore();
if (fill) this.ctx.fill();
 else this.ctx.stroke();
});

Clazz_newMeth(C$, 'toRad$D', function (a) {
return a * 0.017453292519943295;
});

Clazz_newMeth(C$, 'background$java_awt_Color', function (bgcolor) {
this.backgroundColor = bgcolor;
if (bgcolor == null ) {
if (!this.isShifted) this.ctx.translate(-0.5, -0.5);
this.isShifted = true;
return;
}this.clearRect$I$I$I$I(0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'drawPolygon$java_awt_Polygon', function (p) {
p$.doPoly$IA$IA$I$Z.apply(this, [p.xpoints, p.ypoints, p.npoints, false]);
});

Clazz_newMeth(C$, 'drawPolygon$IA$IA$I', function (axPoints, ayPoints, nPoints) {
p$.doPoly$IA$IA$I$Z.apply(this, [axPoints, ayPoints, nPoints, false]);
});

Clazz_newMeth(C$, 'doPoly$IA$IA$I$Z', function (axPoints, ayPoints, nPoints, doFill) {
this.ctx.beginPath();
this.ctx.moveTo(axPoints[0], ayPoints[0]);
for (var i = 1; i < nPoints; i++) this.ctx.lineTo(axPoints[i], ayPoints[i]);

if (doFill) {
this.ctx.fill();
} else {
this.ctx.lineTo(axPoints[0], ayPoints[0]);
this.ctx.stroke();
}});

Clazz_newMeth(C$, 'drawRect$I$I$I$I', function (x, y, width, height) {
this.ctx.beginPath();
this.ctx.rect(x, y, width, height);
this.ctx.stroke();
});

Clazz_newMeth(C$, 'fillPolygon$java_awt_Polygon', function (p) {
p$.doPoly$IA$IA$I$Z.apply(this, [p.xpoints, p.ypoints, p.npoints, true]);
});

Clazz_newMeth(C$, 'fillPolygon$IA$IA$I', function (axPoints, ayPoints, nPoints) {
p$.doPoly$IA$IA$I$Z.apply(this, [axPoints, ayPoints, nPoints, true]);
});

Clazz_newMeth(C$, 'fillRect$I$I$I$I', function (x, y, width, height) {
this.backgroundPainted = true;
this.ctx.fillRect(x, y, width, height);
});

Clazz_newMeth(C$, 'fill3DRect$I$I$I$I$Z', function (x, y, width, height, raised) {
var p = this.getPaint();
var c = this.getColor();
var brighter = c.brighter();
var darker = c.darker();
if (!raised) {
this.setColor$java_awt_Color(darker);
} else if (p !== c ) {
this.setColor$java_awt_Color(c);
}this.fillRect$I$I$I$I(x + 1, y + 1, width - 2, height - 2);
this.setColor$java_awt_Color(raised ? brighter : darker);
this.fillRect$I$I$I$I(x, y, 1, height);
this.fillRect$I$I$I$I(x + 1, y, width - 2, 1);
this.setColor$java_awt_Color(raised ? darker : brighter);
this.fillRect$I$I$I$I(x + 1, y + height - 1, width - 1, 1);
this.fillRect$I$I$I$I(x + width - 1, y, 1, height - 1);
this.setPaint$java_awt_Paint(p);
});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (font) {
if (font === this.font ) return;
this.font = font;
if (font != null ) (I$[5]||$incl$(5)).setFont(this.ctx, (I$[6]||$incl$(6)).getCanvasFont$java_awt_Font(font));
});

Clazz_newMeth(C$, 'setStrokeBold$Z', function (tf) {
p$.setLineWidth$D.apply(this, [tf ? 2.0 : 1.0]);
});

Clazz_newMeth(C$, 'setLineWidth$D', function (d) {
(I$[5]||$incl$(5)).setLineWidth(this.ctx, d);
});

Clazz_newMeth(C$, 'canDoLineTo', function () {
return true;
});

Clazz_newMeth(C$, 'doStroke$Z', function (isBegin) {
this.inPath = isBegin;
if (isBegin) {
this.ctx.beginPath();
} else {
this.ctx.stroke();
}});

Clazz_newMeth(C$, 'lineTo$I$I', function (x2, y2) {
this.ctx.lineTo(x2, y2);
});

Clazz_newMeth(C$, 'clip$java_awt_Shape', function (s) {
p$.doShape$java_awt_Shape.apply(this, [s]);
this.currentClip = s;
this.ctx.clip();
});

Clazz_newMeth(C$, 'draw$java_awt_Shape', function (s) {
p$.doShape$java_awt_Shape.apply(this, [s]);
this.ctx.stroke();
});

Clazz_newMeth(C$, 'doShape$java_awt_Shape', function (s) {
this.ctx.beginPath();
var pts = Clazz_array(Double.TYPE, [6]);
var pi = s.getPathIterator$java_awt_geom_AffineTransform(null);
while (!pi.isDone()){
switch (pi.currentSegment$DA(pts)) {
case 0:
this.ctx.moveTo(pts[0], pts[1]);
break;
case 1:
this.ctx.lineTo(pts[0], pts[1]);
break;
case 2:
this.ctx.quadraticCurveTo(pts[0], pts[1], pts[2], pts[3]);
break;
case 3:
this.ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
break;
case 4:
this.ctx.closePath();
break;
}
pi.next();
}
return pi.getWindingRule();
});

Clazz_newMeth(C$, 'fill$java_awt_Shape', function (s) {
if (p$.doShape$java_awt_Shape.apply(this, [s]) == 0) {
this.ctx.fill("evenodd");
}
 else this.ctx.fill();
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, x, y, observer) {
return this.drawImagePriv$java_awt_Image$I$I$java_awt_image_ImageObserver(img, x, y, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver', function (img, x, y, width, height, observer) {
this.backgroundPainted = true;
if (img != null ) {
var imgNode = p$.getImageNode$java_awt_Image.apply(this, [img]);
if (imgNode != null ) this.ctx.drawImage(imgNode, x, y, width, height);
if (observer != null ) p$.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null ]);
}return true;
});

Clazz_newMeth(C$, 'getImageNode$java_awt_Image', function (img) {
this.backgroundPainted = true;
var imgNode = (I$[7]||$incl$(7)).getImageNode(img);
return (imgNode == null  ? (I$[8]||$incl$(8)).createImageNode$java_awt_Image(img) : imgNode);
});

Clazz_newMeth(C$, 'observe$java_awt_Image$java_awt_image_ImageObserver$Z', function (img, observer, isOK) {
observer.imageUpdate$java_awt_Image$I$I$I$I$I(img, (isOK ? 0 : 192), -1, -1, -1, -1);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$java_awt_Color$java_awt_image_ImageObserver', function (img, x, y, bgcolor, observer) {
this.backgroundPainted = true;
(I$[9]||$incl$(9)).notImplemented$S(null);
return this.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(img, x, y, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$java_awt_Color$java_awt_image_ImageObserver', function (img, x, y, width, height, bgcolor, observer) {
this.backgroundPainted = true;
(I$[9]||$incl$(9)).notImplemented$S(null);
return this.drawImage$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver(img, x, y, width, height, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_image_ImageObserver', function (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer) {
this.backgroundPainted = true;
if (img != null ) {
var bytes = null;
var imgNode = p$.getImageNode$java_awt_Image.apply(this, [img]);
if (imgNode != null ) (I$[5]||$incl$(5)).stretchImage(this.ctx, imgNode, sx1, sy1, sx2 - sx1, sy2 - sy1, dx1, dy1, dx2 - dx1, dy2 - dy1);
if (observer != null ) p$.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null ]);
}return true;
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_Color$java_awt_image_ImageObserver', function (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, bgcolor, observer) {
(I$[9]||$incl$(9)).notImplemented$S(null);
return this.drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_image_ImageObserver(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver', function (img, xform, obs) {
return p$.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, obs]);
});

Clazz_newMeth(C$, 'drawRenderedImage$java_awt_image_RenderedImage$java_awt_geom_AffineTransform', function (img, xform) {
p$.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, null]);
});

Clazz_newMeth(C$, 'drawRenderableImage$java_awt_image_renderable_RenderableImage$java_awt_geom_AffineTransform', function (img, xform) {
p$.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, null]);
});

Clazz_newMeth(C$, 'drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver', function (img, xform, obs) {
this.ctx.save();
p$.transformCTX$java_awt_geom_AffineTransform.apply(this, [xform]);
var ret = this.drawImagePriv$java_awt_Image$I$I$java_awt_image_ImageObserver(img, 0, 0, obs);
this.ctx.restore();
return ret;
});

Clazz_newMeth(C$, 'drawImagePriv$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, x, y, observer) {
this.backgroundPainted = true;
if (img != null ) {
var pixels = null;
var isRGB = false;
{
pixels = img._pix;
isRGB = (img.imageType == 1);
}
var imgNode = null;
var width = (img).getRaster().getWidth();
var height = (img).getRaster().getHeight();
if (pixels == null ) {
if ((imgNode = p$.getImageNode$java_awt_Image.apply(this, [img])) != null ) this.ctx.drawImage(imgNode, x, y, width, height);
} else {
if (this.buf8 == null  || x != this.lastx  || y != this.lasty  || this.nx != width  || this.ny != height ) {
this.imageData = (I$[5]||$incl$(5)).getImageData(this.ctx, x, y, width, height);
this.buf8 = (I$[5]||$incl$(5)).getBuf8(this.imageData);
this.lastx = x;
this.lasty = y;
this.nx = width;
this.ny = height;
}for (var pt = 0, i = 0, n = Math.min((this.buf8.length/4|0), pixels.length); i < n; i++) {
var argb = pixels[i];
this.buf8[pt++] = (argb >> 16) & 255;
this.buf8[pt++] = (argb >> 8) & 255;
this.buf8[pt++] = argb & 255;
this.buf8[pt++] = (isRGB ? 255 : (argb >> 24) & 255);
}
(I$[5]||$incl$(5)).putImageData(this.ctx, this.imageData, x, y);
}if (observer != null ) p$.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null ]);
}return true;
});

Clazz_newMeth(C$, 'hit$java_awt_Rectangle$java_awt_Shape$Z', function (rect, s, onStroke) {
(I$[9]||$incl$(9)).notImplemented$S(null);
return false;
});

Clazz_newMeth(C$, 'getStroke', function () {
return this.currentStroke;
});

Clazz_newMeth(C$, 'setStroke$java_awt_Stroke', function (s) {
if (!(Clazz_instanceOf(s, "java.awt.BasicStroke"))) return;
var b = this.currentStroke = s;
var dash = b.getDashArray();
var idash = Clazz_array(Integer.TYPE, [dash == null  ? 0 : dash.length]);
for (var i = idash.length; --i >= 0; ) idash[i] = (dash[i]|0);

this.ctx.setLineDash(idash);
p$.setLineWidth$D.apply(this, [b.getLineWidth()]);
var lineCap;
var lineJoin;
var miterLimit = -1;
switch (b.getEndCap()) {
case 0:
lineCap = "butt";
break;
case 2:
lineCap = "square";
break;
case 1:
default:
lineCap = "round";
}
switch (b.getLineJoin()) {
case 2:
lineJoin = "bevel";
break;
case 0:
lineJoin = "miter";
miterLimit = b.getMiterLimit();
break;
case 1:
lineJoin = "round";
}
{
this.ctx.lineCap = lineCap; this.ctx.lineJoin = lineJoin; if (miterLimit >= 0) this.ctx.miterLimit = miterLimit;
}
});

Clazz_newMeth(C$, 'setRenderingHint$java_awt_RenderingHints_Key$O', function (hintKey, hintValue) {
this.hints.put$O$O(hintKey, hintValue);
});

Clazz_newMeth(C$, 'getRenderingHint$java_awt_RenderingHints_Key', function (hintKey) {
return this.hints.get$O(hintKey);
});

Clazz_newMeth(C$, 'setRenderingHints$java_util_Map', function (hints) {
this.hints = Clazz_new_((I$[1]||$incl$(1)).c$$java_util_Map,[hints]);
});

Clazz_newMeth(C$, 'addRenderingHints$java_util_Map', function (hints) {
for (var e, $e = hints.entrySet().iterator(); $e.hasNext()&&((e=$e.next()),1);) this.hints.put$O$O(e.getKey(), e.getValue());

});

Clazz_newMeth(C$, 'getRenderingHints', function () {
return this.hints;
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color', function (color) {
this.background$java_awt_Color(color);
});

Clazz_newMeth(C$, 'getBackground', function () {
return this.backgroundColor;
});

Clazz_newMeth(C$, 'getColor', function () {
return this.foregroundColor;
});

Clazz_newMeth(C$, 'setColor$java_awt_Color', function (c) {
this.foregroundColor = c;
p$.setGraphicsColor$java_awt_Color.apply(this, [c]);
});

Clazz_newMeth(C$, 'setPaint$java_awt_Paint', function (paint) {
this.setColor$java_awt_Color(paint);
});

Clazz_newMeth(C$, 'getFont', function () {
if (this.font == null ) this.font = Clazz_new_((I$[10]||$incl$(10)).c$$S$I$I,["Arial", 0, 12]);
return this.font;
});

Clazz_newMeth(C$, 'getFontMetrics', function () {
return this.getFontMetrics$java_awt_Font(this.getFont());
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (f) {
return (I$[11]||$incl$(11)).getDefaultToolkit().getFontMetrics$java_awt_Font(f);
});

Clazz_newMeth(C$, 'clipRect$I$I$I$I', function (x, y, width, height) {
this.ctx.beginPath();
this.ctx.rect(x, y, width, height);
p$.setCurrentClip$I$I$I$I.apply(this, [x, y, width, height]);
this.ctx.clip();
});

Clazz_newMeth(C$, 'setClip$I$I$I$I', function (x, y, width, height) {
p$.setCurrentClip$I$I$I$I.apply(this, [x, y, width, height]);
this.ctx.beginPath();
this.ctx.rect(x, y, width, height);
this.ctx.clip();
});

Clazz_newMeth(C$, 'setCurrentClip$I$I$I$I', function (x, y, width, height) {
var r = (Clazz_instanceOf(this.currentClip, "java.awt.Rectangle") ? this.currentClip : null);
if (r == null  || r.x != x  || r.y != y  || r.width != width  || r.height != height ) this.currentClip = Clazz_new_((I$[12]||$incl$(12)).c$$I$I$I$I,[x, y, width, height]);
});

Clazz_newMeth(C$, 'setClip$java_awt_Shape', function (clip) {
this.currentClip = clip;
this.ctx.beginPath();
p$.doShape$java_awt_Shape.apply(this, [clip]);
this.ctx.clip();
});

Clazz_newMeth(C$, 'clearRect$I$I$I$I', function (x, y, width, height) {
this.ctx.clearRect(x, y, width, height);
p$.setGraphicsColor$java_awt_Color.apply(this, [this.backgroundColor == null  ? (I$[13]||$incl$(13)).WHITE : this.backgroundColor]);
this.fillRect$I$I$I$I(x, y, width, height);
p$.setGraphicsColor$java_awt_Color.apply(this, [this.foregroundColor]);
});

Clazz_newMeth(C$, 'setGraphicsColor$java_awt_Color', function (c) {
if (c == null ) return;
(I$[5]||$incl$(5)).setColor(this.ctx, (I$[6]||$incl$(6)).getCSSColor$java_awt_Color(c));
});

Clazz_newMeth(C$, 'drawPolyline$IA$IA$I', function (xPoints, yPoints, nPoints) {
if (nPoints < 2) return;
this.ctx.moveTo(xPoints[0], yPoints[0]);
for (var i = 1; i < nPoints; i++) {
this.ctx.lineTo(xPoints[i], yPoints[i]);
}
this.ctx.stroke();
});

Clazz_newMeth(C$, 'copyArea$I$I$I$I$I$I', function (x, y, width, height, dx, dy) {
(I$[9]||$incl$(9)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'drawRoundRect$I$I$I$I$I$I', function (x, y, width, height, arcWidth, arcHeight) {
(I$[9]||$incl$(9)).notImplemented$S(null);
this.drawRect$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'fillRoundRect$I$I$I$I$I$I', function (x, y, width, height, arcWidth, arcHeight) {
(I$[9]||$incl$(9)).notImplemented$S(null);
this.fillRect$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'getClip', function () {
return this.currentClip == null  ? p$.getClipBoundsImpl.apply(this, []) : this.currentClip;
});

Clazz_newMeth(C$, 'drawString$S$I$I', function (s, x, y) {
this.ctx.fillText(s, x, y);
});

Clazz_newMeth(C$, 'drawString$S$F$F', function (str, x, y) {
this.ctx.fillText(str, x, y);
});

Clazz_newMeth(C$, 'drawString$java_text_AttributedCharacterIterator$I$I', function (iterator, x, y) {
(I$[9]||$incl$(9)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'drawString$java_text_AttributedCharacterIterator$F$F', function (iterator, x, y) {
(I$[9]||$incl$(9)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'translate$D$D', function (tx, ty) {
(I$[9]||$incl$(9)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'shear$D$D', function (shx, shy) {
(I$[9]||$incl$(9)).notImplemented$S(null);
});

Clazz_newMeth(C$, 'translate$I$I', function (x, y) {
this.ctx.translate(x, y);
this.$transform.translate$D$D(x, y);
});

Clazz_newMeth(C$, 'rotate$D', function (radians) {
this.ctx.rotate(radians);
this.$transform.rotate$D(radians);
});

Clazz_newMeth(C$, 'rotate$D$D$D', function (theta, x, y) {
this.ctx.translate(x, y);
this.ctx.rotate(theta);
this.ctx.translate(-x, -y);
this.$transform.rotate$D$D$D(theta, x, y);
});

Clazz_newMeth(C$, 'scale$D$D', function (sx, sy) {
this.ctx.scale(sx, sy);
this.$transform.scale$D$D(sx, sy);
});

Clazz_newMeth(C$, 'transform$java_awt_geom_AffineTransform', function (t) {
p$.transformCTX$java_awt_geom_AffineTransform.apply(this, [t]);
this.$transform.concatenate$java_awt_geom_AffineTransform(t);
});

Clazz_newMeth(C$, 'transformCTX$java_awt_geom_AffineTransform', function (t) {
{
this.ctx.transform (t.m00, t.m10, t.m01, t.m11, t.m02, t.m12);
}
});

Clazz_newMeth(C$, 'setTransform$java_awt_geom_AffineTransform', function (t) {
{
this.ctx.setTransform (t.m00, t.m10, t.m01, t.m11, t.m02, t.m12);
}
this.$transform.setTransform$java_awt_geom_AffineTransform(t);
});

Clazz_newMeth(C$, 'getTransform', function () {
return this.$transform.clone();
});

Clazz_newMeth(C$, 'getPaint', function () {
return this.getColor();
});

Clazz_newMeth(C$, 'getFontRenderContext', function () {
return this.getFontMetrics$java_awt_Font(this.getFont()).getFontRenderContext();
});

Clazz_newMeth(C$, 'setPaintMode', function () {
this.setComposite$java_awt_Composite((I$[14]||$incl$(14)).SrcOver);
});

Clazz_newMeth(C$, 'setXORMode$java_awt_Color', function (c) {
if (c == null ) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["null XORColor"]);
this.setComposite$java_awt_Composite((I$[14]||$incl$(14)).Xor);
});

Clazz_newMeth(C$, 'getClipBounds', function () {
return this.getClipBounds$java_awt_Rectangle(null);
});

Clazz_newMeth(C$, 'getClipBounds$java_awt_Rectangle', function (r) {
var clipRect = p$.getClipBoundsImpl.apply(this, []);
if (r == null ) {
r = clipRect;
} else {
r.x = clipRect.x;
r.y = clipRect.y;
r.width = clipRect.width;
r.height = clipRect.height;
}return r;
});

Clazz_newMeth(C$, 'getClipBoundsImpl', function () {
if (this.currentClip == null ) {
this.currentClip = Clazz_new_((I$[12]||$incl$(12)).c$$I$I$I$I,[0, 0, this.width, this.height]);
}return this.currentClip.getBounds();
});

Clazz_newMeth(C$, 'setComposite$java_awt_Composite', function (comp) {
if (comp === this.currentComposite ) return;
var newRule = 0;
var isValid = (comp == null  || this.currentComposite == null   || (Clazz_instanceOf(comp, "java.awt.AlphaComposite")) && (newRule = (comp).getRule()) != this.currentComposite.getRule()  );
if (isValid && (I$[8]||$incl$(8)).setGraphicsCompositeAlpha$swingjs_JSGraphics2D$I(this, newRule) ) {
this.currentComposite = comp;
}this.setAlpha$F(comp == null  ? 1 : (comp).getAlpha());
});

Clazz_newMeth(C$, 'getComposite', function () {
return this.currentComposite;
});

Clazz_newMeth(C$, 'drawImage$java_awt_image_BufferedImage$java_awt_image_BufferedImageOp$I$I', function (img, op, x, y) {
(I$[8]||$incl$(8)).drawImageOp$swingjs_JSGraphics2D$java_awt_image_BufferedImage$java_awt_image_BufferedImageOp$I$I(this, img, op, x, y);
});

Clazz_newMeth(C$, 'setAlpha$F', function (f) {
{
this.ctx.globalAlpha = f;
}
});

Clazz_newMeth(C$, 'getCanvas', function () {
return this.canvas;
});

Clazz_newMeth(C$, 'isBackgroundPainted', function () {
return this.backgroundPainted;
});

Clazz_newMeth(C$, 'mark', function () {
this.ctx.save();
var map = Clazz_array(java.lang.Object, [7]);
var alpha = 0;
{
alpha = this.ctx.globalAlpha;
}
map[0] = Float.$valueOf(alpha);
map[1] = this.currentComposite;
map[2] = this.currentStroke;
map[3] = this.$transform;
map[4] = this.font;
map[5] = this.currentClip;
map[6] = (this.backgroundPainted ? (I$[15]||$incl$(15)).TRUE : (I$[15]||$incl$(15)).FALSE);
this.backgroundPainted = false;
return (I$[5]||$incl$(5)).push(this.ctx, map);
});

Clazz_newMeth(C$, 'reset$I', function (n0) {
if (n0 < 1) n0 = 1;
while ((I$[5]||$incl$(5)).getSavedLevel(this.ctx) >= n0){
var map = (I$[5]||$incl$(5)).pop(this.ctx);
this.setComposite$java_awt_Composite(map[1]);
var alpha = map[0];
if (alpha != null ) this.setAlpha$F(alpha.floatValue());
this.setStroke$java_awt_Stroke(map[2]);
this.setTransform$java_awt_geom_AffineTransform(map[3]);
this.setFont$java_awt_Font(map[4]);
this.currentClip = map[5];
this.backgroundPainted = (map[6]).booleanValue();
this.ctx.restore();
}
});

Clazz_newMeth(C$, 'create$I$I$I$I', function (x, y, width, height) {
var g = this.create();
if (g == null ) return null;
g.translate$I$I(x, y);
g.clipRect$I$I$I$I(0, 0, width, height);
return g;
});

Clazz_newMeth(C$, 'create', function () {
return this.clone();
});

Clazz_newMeth(C$, 'clone', function () {
var n = this.mark();
var g = this;
{
g = Clazz_clone(this);
}
g.$transform = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_geom_AffineTransform,[this.$transform]);
if (this.hints != null ) {
g.hints = this.hints.clone();
}g.setStroke$java_awt_Stroke(this.currentStroke.clone());
g.initialState = n;
return g;
});

Clazz_newMeth(C$, 'dispose', function () {
this.reset$I(this.initialState);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:15
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.awt.GraphicsEnvironment','swingjs.api.Interface','java.awt.image.ColorModel','java.awt.image.WritableRaster','java.lang.Boolean','java.util.Hashtable','swingjs.JSUtil','java.awt.Rectangle']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSGraphicsConfiguration", null, 'java.awt.GraphicsConfiguration');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
System.out.println$S("JSGraphicsConfiguration initialized");
}, 1);

Clazz_newMeth(C$, 'getDevice', function () {
return (I$[1]||$incl$(1)).getLocalGraphicsEnvironment().getDefaultScreenDevice();
});

Clazz_newMeth(C$, 'createCompatibleImage$I$I', function (width, height) {
var cm = this.getColorModel();
var wr = cm.createCompatibleWritableRaster$I$I(width, height);
return this.newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable(cm, wr, false, null);
});

Clazz_newMeth(C$, 'newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable', function (cm, wr, alphaPremultiplied, properties) {
return (I$[2]||$incl$(2)).getInstanceWithParams$S$ClassA$OA("java.awt.image.BufferedImage", Clazz_array(java.lang.Class, -1, [Clazz_getClass((I$[3]||$incl$(3))), Clazz_getClass((I$[4]||$incl$(4))), Clazz_getClass((I$[5]||$incl$(5))), Clazz_getClass((I$[6]||$incl$(6)))]), Clazz_array(java.lang.Object, -1, [cm, wr, alphaPremultiplied ? (I$[5]||$incl$(5)).TRUE : (I$[5]||$incl$(5)).FALSE, properties]));
});

Clazz_newMeth(C$, 'getColorModel', function () {
return (I$[3]||$incl$(3)).getRGBdefault();
});

Clazz_newMeth(C$, 'getColorModel$I', function (transparency) {
return this.getColorModel();
});

Clazz_newMeth(C$, 'getDefaultTransform', function () {
return (I$[2]||$incl$(2)).getInstance$S$Z("java.awt.geom.AffineTransform", true);
});

Clazz_newMeth(C$, 'getNormalizingTransform', function () {
return this.getDefaultTransform();
});

Clazz_newMeth(C$, 'getBounds', function () {
var doc = null;
{
doc = document;
}
var d = (I$[7]||$incl$(7)).getJQuery().$(doc);
return Clazz_new_((I$[8]||$incl$(8)).c$$I$I,[d.width(), d.height()]);
});
})();
//Created 2018-05-15 01:03:15
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.awt.Font','java.awt.Toolkit','swingjs.JSUtil','java.awt.Point','java.awt.GraphicsDevice']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSGraphicsEnvironment", null, 'java.awt.GraphicsEnvironment');
C$.device = null;
C$.availableFonts = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
System.out.println$S("JSGraphicsEnvironment initialized");
}, 1);

Clazz_newMeth(C$, 'createGraphics$java_awt_image_BufferedImage', function (img) {
{
return img.getImageGraphic().create();
}
});

Clazz_newMeth(C$, 'getAllFonts', function () {
if (C$.availableFonts == null ) {
var names = this.getAvailableFontFamilyNames();
C$.availableFonts = Clazz_array((I$[1]||$incl$(1)), [names.length]);
for (var i = names.length; --i >= 0; ) C$.availableFonts[i] = Clazz_new_((I$[1]||$incl$(1)).c$$S$I$I,[names[i], 0, 1]);

}return C$.availableFonts;
});

Clazz_newMeth(C$, 'getAvailableFontFamilyNames', function () {
return (I$[2]||$incl$(2)).getDefaultToolkit().getFontList();
});

Clazz_newMeth(C$, 'getAvailableFontFamilyNames$java_util_Locale', function (l) {
return (I$[2]||$incl$(2)).getDefaultToolkit().getFontList();
});

Clazz_newMeth(C$, 'getDefaultScreenDevice', function () {
if (C$.device == null ) C$.device = (I$[3]||$incl$(3)).getInstance$S("swingjs.JSScreenDevice");
return C$.device;
});

Clazz_newMeth(C$, 'getCenterPoint', function () {
var d = (I$[2]||$incl$(2)).getDefaultToolkit().getScreenSize();
return Clazz_new_((I$[4]||$incl$(4)).c$$I$I,[(d.width/2|0), (d.height/2|0)]);
});

Clazz_newMeth(C$, 'getScreenDevices', function () {
return Clazz_array((I$[5]||$incl$(5)), -1, [this.getDefaultScreenDevice()]);
});
})();
//Created 2018-05-15 01:03:15
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['swingjs.JSUtil','swingjs.JSToolkit','java.awt.event.MouseWheelEvent','java.awt.event.MouseEvent','java.awt.Toolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSMouse");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.viewer = null;
this.jqevent = null;
this.mouse2 = null;
this.isCtrlShiftMouseDown = false;
this.wheeling = false;
this.xWhenPressed = 0;
this.yWhenPressed = 0;
this.modifiersWhenPressed10 = 0;
this.lasttime = 0;
this.lastx = 0;
this.lasty = 0;
this.clickCount = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$swingjs_JSFrameViewer', function (v) {
C$.$init$.apply(this);
this.viewer = v;
}, 1);

Clazz_newMeth(C$, 'processEvent$I$I$I$I$J$O$I', function (id, x, y, modifiers, time, jqevent, scroll) {
this.jqevent = jqevent;
if (id != 507 && id != 503 ) modifiers = C$.applyLeftMouse$I(modifiers);
switch (id) {
case 507:
this.wheeled$J$I$I$I$I(time, x, y, scroll, modifiers);
break;
case 501:
this.xWhenPressed = x;
this.yWhenPressed = y;
this.modifiersWhenPressed10 = modifiers;
p$.pressed$J$I$I$I$Z.apply(this, [time, x, y, modifiers, false]);
break;
case 506:
p$.dragged$J$I$I$I.apply(this, [time, x, y, modifiers]);
break;
case 504:
p$.entry$J$I$I$Z.apply(this, [time, x, y, false]);
break;
case 505:
p$.entry$J$I$I$Z.apply(this, [time, x, y, true]);
break;
case 503:
p$.moved$J$I$I$I.apply(this, [time, x, y, modifiers]);
break;
case 502:
p$.released$J$I$I$I.apply(this, [time, x, y, modifiers]);
if (x == this.xWhenPressed && y == this.yWhenPressed  && modifiers == this.modifiersWhenPressed10 ) {
p$.clicked$J$I$I$I$I.apply(this, [time, x, y, modifiers, 1]);
}break;
default:
return false;
}
return true;
});

Clazz_newMeth(C$, 'processTwoPointGesture$FAAA', function (touches) {
p$.getMouse2.apply(this, []).processTwoPointGesture$FAAA(touches);
});

Clazz_newMeth(C$, 'getMouse2', function () {
return (this.mouse2 == null  ? (this.mouse2 = (I$[1]||$incl$(1)).getInstance$S("swingjs.JSMouse2")).set$swingjs_JSMouse(this) : this.mouse2);
});

Clazz_newMeth(C$, 'translateXYBy$I$I', function (deltaX, deltaY) {
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent', function (e) {
p$.clicked$J$I$I$I$I.apply(this, [e.getWhen(), e.getX(), e.getY(), e.getModifiers(), e.getClickCount()]);
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent', function (e) {
p$.entry$J$I$I$Z.apply(this, [e.getWhen(), e.getX(), e.getY(), false]);
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent', function (e) {
p$.entry$J$I$I$Z.apply(this, [e.getWhen(), e.getX(), e.getY(), true]);
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent', function (e) {
p$.pressed$J$I$I$I$Z.apply(this, [e.getWhen(), e.getX(), e.getY(), e.getModifiers(), e.isPopupTrigger()]);
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent', function (e) {
p$.released$J$I$I$I.apply(this, [e.getWhen(), e.getX(), e.getY(), e.getModifiers()]);
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent', function (e) {
var modifiers = e.getModifiers();
if ((modifiers & 28) == 0) modifiers = modifiers|(16);
p$.dragged$J$I$I$I.apply(this, [e.getWhen(), e.getX(), e.getY(), modifiers]);
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent', function (e) {
p$.moved$J$I$I$I.apply(this, [e.getWhen(), e.getX(), e.getY(), e.getModifiers()]);
});

Clazz_newMeth(C$, 'mouseWheelMoved$java_awt_event_MouseWheelEvent', function (e) {
e.consume();
this.wheeled$J$I$I$I$I(e.getWhen(), 0, 0, e.getWheelRotation(), e.getModifiers());
});

Clazz_newMeth(C$, 'entry$J$I$I$Z', function (time, x, y, isExit) {
this.wheeling = false;
p$.mouseEnterExit$J$I$I$Z.apply(this, [time, x, y, isExit]);
});

Clazz_newMeth(C$, 'clicked$J$I$I$I$I', function (time, x, y, modifiers, clickCount) {
p$.mouseAction$I$J$I$I$I$I$I.apply(this, [500, time, x, y, 1, modifiers, 0]);
});

Clazz_newMeth(C$, 'moved$J$I$I$I', function (time, x, y, modifiers) {
if (this.isCtrlShiftMouseDown) p$.mouseAction$I$J$I$I$I$I$I.apply(this, [506, time, x, y, 0, C$.applyLeftMouse$I(modifiers), 0]);
 else p$.mouseAction$I$J$I$I$I$I$I.apply(this, [503, time, x, y, 0, modifiers, 0]);
});

Clazz_newMeth(C$, 'wheeled$J$I$I$I$I', function (time, x, y, rotation, modifiers) {
this.wheeling = true;
p$.mouseAction$I$J$I$I$I$I$I.apply(this, [507, time, x, y, 0, modifiers & -29 | 32, rotation]);
});

Clazz_newMeth(C$, 'pressed$J$I$I$I$Z', function (time, x, y, modifiers, isPopupTrigger) {
this.isCtrlShiftMouseDown = ((modifiers & 3) == 3);
this.wheeling = false;
p$.mouseAction$I$J$I$I$I$I$I.apply(this, [501, time, x, y, 0, modifiers, 0]);
});

Clazz_newMeth(C$, 'released$J$I$I$I', function (time, x, y, modifiers) {
this.isCtrlShiftMouseDown = false;
this.wheeling = false;
p$.mouseAction$I$J$I$I$I$I$I.apply(this, [502, time, x, y, 0, modifiers, 0]);
});

Clazz_newMeth(C$, 'dragged$J$I$I$I', function (time, x, y, modifiers) {
if (this.wheeling) return;
if ((modifiers & 20) == 20) modifiers = modifiers & -5 | 2;
p$.mouseAction$I$J$I$I$I$I$I.apply(this, [506, time, x, y, 0, modifiers, 0]);
});

Clazz_newMeth(C$, 'applyLeftMouse$I', function (modifiers) {
return ((modifiers & 28) == 0) ? (modifiers | 16) : modifiers;
}, 1);

Clazz_newMeth(C$, 'getButton$I', function (modifiers) {
switch (modifiers & 28) {
case 16:
return 1;
case 8:
return 2;
case 4:
return 3;
default:
return 0;
}
});

Clazz_newMeth(C$, 'mouseEnterExit$J$I$I$Z', function (time, x, y, isExit) {
});

Clazz_newMeth(C$, 'mouseAction$I$J$I$I$I$I$I', function (id, time, x, y, xcount, modifiers, dy) {
var extended = modifiers & 16320;
var popupTrigger = (extended == 4096 || extended == 256  || (I$[2]||$incl$(2)).isMac && extended == 1152  );
var button = p$.getButton$I.apply(this, [modifiers]);
var count = p$.updateClickCount$I$J$I$I.apply(this, [id, time, x, y]);
var source = this.viewer.top;
var e;
if (id == 507) {
e = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I,[source, id, time, modifiers, x, y, x, y, count, popupTrigger, 0, 1, dy]);
} else {
e = Clazz_new_((I$[4]||$incl$(4)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I,[source, id, time, modifiers, x, y, x, y, count, popupTrigger, button]);
}var bdata = Clazz_array(Byte.TYPE, [0]);
e.setBData$BA(bdata);
var jqevent = this.jqevent;
var c = null;

bdata.jqevent = jqevent;
c = jqevent.target["data-component"];
if (c == null ) {
(I$[5]||$incl$(5)).getDefaultToolkit().getSystemEventQueue().postEvent$java_awt_AWTEvent(e);
} else {
(e.getSource()).dispatchEvent$java_awt_AWTEvent(e);
}});

Clazz_newMeth(C$, 'updateClickCount$I$J$I$I', function (id, time, x, y) {
var reset = (time - this.lasttime > 500 || Math.abs(x - this.lastx) > 3  || Math.abs(y - this.lasty) > 3 );
this.lasttime = time;
this.lastx = x;
this.lasty = y;
var ret = this.clickCount;
switch (id) {
case 501:
ret = this.clickCount = (reset ? 1 : this.clickCount + 1);
break;
case 504:
case 505:
this.clickCount = 0;
break;
case 503:
if (reset) this.clickCount = 0;
break;
case 502:
case 506:
case -1:
break;
}
return ret;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:16
(function(){var P$=Clazz_newPackage("swingjs"),I$=[];
var C$=Clazz_newClass(P$, "JSNullComponentPeer", null, null, 'java.awt.peer.LightweightPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.target = null;
this.isNull = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.isNull = true;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component', function (target) {
C$.$init$.apply(this);
this.target = target;
}, 1);

Clazz_newMeth(C$, 'isObscured', function () {
return false;
});

Clazz_newMeth(C$, 'canDetermineObscurity', function () {
return false;
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (tm, x, y, width, height) {
});

Clazz_newMeth(C$, 'print$java_awt_Graphics', function (g) {
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I$I', function (x, y, width, height, op) {
});

Clazz_newMeth(C$, 'handleEvent$java_awt_AWTEvent', function (e) {
});

Clazz_newMeth(C$, 'coalescePaintEvent$java_awt_event_PaintEvent', function (e) {
});

Clazz_newMeth(C$, 'getLocationOnScreen', function () {
return null;
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return null;
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
return null;
});

Clazz_newMeth(C$, 'getColorModel', function () {
return null;
});

Clazz_newMeth(C$, 'getToolkit', function () {
return null;
});

Clazz_newMeth(C$, 'getGraphics', function () {
return null;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return null;
});

Clazz_newMeth(C$, 'dispose', function () {
});

Clazz_newMeth(C$, 'setForeground$java_awt_Color', function (c) {
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color', function (c) {
});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (f) {
});

Clazz_newMeth(C$, 'updateCursorImmediately', function () {
});

Clazz_newMeth(C$, 'requestFocus$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause', function (lightweightChild, temporary, focusedWindowChangeAllowed, time, cause) {
return false;
});

Clazz_newMeth(C$, 'isFocusable', function () {
return false;
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer', function (producer) {
return null;
});

Clazz_newMeth(C$, 'createImage$I$I', function (width, height) {
return null;
});

Clazz_newMeth(C$, 'createVolatileImage$I$I', function (width, height) {
return null;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
return false;
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
return 0;
});

Clazz_newMeth(C$, 'getGraphicsConfiguration', function () {
return null;
});

Clazz_newMeth(C$, 'handlesWheelScrolling', function () {
return false;
});

Clazz_newMeth(C$, 'getBackBuffer', function () {
return null;
});

Clazz_newMeth(C$, 'destroyBuffers', function () {
});

Clazz_newMeth(C$, 'reparent$java_awt_peer_ContainerPeer', function (newContainer) {
});

Clazz_newMeth(C$, 'isReparentSupported', function () {
return false;
});

Clazz_newMeth(C$, 'layout', function () {
});

Clazz_newMeth(C$, 'getBounds', function () {
return null;
});

Clazz_newMeth(C$, 'getInsets', function () {
return null;
});

Clazz_newMeth(C$, 'beginValidate', function () {
});

Clazz_newMeth(C$, 'endValidate', function () {
});

Clazz_newMeth(C$, 'beginLayout', function () {
});

Clazz_newMeth(C$, 'endLayout', function () {
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:16
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.awt.GraphicsConfiguration','swingjs.JSToolkit']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSScreenDevice", null, 'java.awt.GraphicsDevice');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
System.out.println$S("JSScreenDevice initialized");
}, 1);

Clazz_newMeth(C$, 'getType', function () {
return 0;
});

Clazz_newMeth(C$, 'getIDstring', function () {
return "swingjs.JSScreenDevice";
});

Clazz_newMeth(C$, 'getConfigurations', function () {
return Clazz_array((I$[1]||$incl$(1)), -1, [this.getDefaultConfiguration()]);
});

Clazz_newMeth(C$, 'getDefaultConfiguration', function () {
return (I$[2]||$incl$(2)).getGraphicsConfiguration();
});
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs"),I$=[];
var C$=Clazz_newClass(P$, "JSThreadGroup", null, 'ThreadGroup');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.superclazz.c$$S.apply(this, [name]);
C$.$init$.apply(this);
{
this.html5Applet = J2S._applets[name];
}
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S', function (parent, name) {
C$.superclazz.c$$ThreadGroup$S.apply(this, [parent, name]);
C$.$init$.apply(this);
{
this.html5Applet = J2S._applets[name];
}
}, 1);

Clazz_newMeth(C$, 'getHtmlApplet', function () {
return this.html5Applet;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['sun.awt.AppContext','swingjs.JSUtil','java.awt.image.ColorModel','javax.swing.UIManager','swingjs.api.Interface','Thread','javajs.util.PT','swingjs.JSNullComponentPeer','java.io.BufferedInputStream','java.io.ByteArrayInputStream','swingjs.JSToolkit$1','swingjs.api.js.DOMNode']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSToolkit", null, 'sun.awt.SunToolkit');
C$.isMac = false;
C$.defaultContext = null;
var p$=C$.prototype;
C$.uid = null;
C$.dispatchID = 0;
C$.audioPlayer = null;
C$.systemClipboard = null;
C$.hardwiredFontList = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
{
swingjs.JSToolkit.isMac = (J2S.featureDetection.os == "mac");
}
}
;
C$.dispatchID = 0;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.imageKit = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
System.out.println$S("JSToolkit initialized");
}, 1);

Clazz_newMeth(C$, 'getPostEventQueue$Z', function (isPost) {
return (isPost ? (I$[1]||$incl$(1)).getAppContext().get$O("PostEventQueue") : (I$[1]||$incl$(1)).getAppContext().get$O((I$[1]||$incl$(1)).EVENT_QUEUE_KEY));
}, 1);

Clazz_newMeth(C$, 'exit', function () {

Thread.thisThread.group.systemExited = true;
(I$[2]||$incl$(2)).getAppletViewer().exit();
}, 1);

Clazz_newMeth(C$, 'getScreenWidth', function () {
var jq = (I$[2]||$incl$(2)).getJQuery();
var w = 0;
{
w = jq.$(window).width();
}
return w;
});

Clazz_newMeth(C$, 'getScreenHeight', function () {
var jq = (I$[2]||$incl$(2)).getJQuery();
var h = 0;
{
h = jq.$(window).height();
}
return h;
});

Clazz_newMeth(C$, 'getScreenResolution', function () {
return 0;
});

Clazz_newMeth(C$, 'getColorModel', function () {
return (I$[3]||$incl$(3)).getRGBdefault();
});

Clazz_newMeth(C$, 'sync', function () {
});

Clazz_newMeth(C$, 'isModalExclusionTypeSupported$java_awt_Dialog_ModalExclusionType', function (modalExclusionType) {
return true;
});

Clazz_newMeth(C$, 'isModalityTypeSupported$java_awt_Dialog_ModalityType', function (modalityType) {
return true;
});

Clazz_newMeth(C$, 'isTraySupported', function () {
return false;
});

Clazz_newMeth(C$, 'grab$java_awt_Window', function (w) {
});

Clazz_newMeth(C$, 'ungrab$java_awt_Window', function (w) {
});

Clazz_newMeth(C$, 'getPropertyObject$O$S$O', function (t, key, def) {
return def;
}, 1);

Clazz_newMeth(C$, 'getGraphicsConfiguration', function () {
var ap = (I$[2]||$incl$(2)).getAppletViewer();
var gc = ap.graphicsConfig;
return (gc == null  ? (gc = ap.graphicsConfig = (I$[2]||$incl$(2)).getInstance$S("swingjs.JSGraphicsConfiguration")) : gc);
}, 1);

Clazz_newMeth(C$, 'isFocused$java_awt_Window', function (window) {
return false;
}, 1);

Clazz_newMeth(C$, 'getCSSFont$java_awt_Font', function (font) {
var css = "";
if (font.isItalic()) css += "font-style:italic;";
if (font.isBold()) css += "font-weight:bold;";
css += "font-size:" + font.getSize() + "px;" ;
css += "font-family:" + font.getFamily() + ";" ;
return css;
}, 1);

Clazz_newMeth(C$, 'getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S', function (context, font, text) {
if (text == null  || text.length$() == 0 ) return 0;
var fontInfo = C$.getCanvasFont$java_awt_Font(font);
if (context == null ) context = C$.getDefaultCanvasContext2d();
var w = 0;
{
context.font = fontInfo;
w = Math.ceil(context.measureText(text).width);
}
return w;
}, 1);

Clazz_newMeth(C$, 'getDefaultCanvasContext2d', function () {
{
if (this.defaultContext == null) this.defaultContext = document.createElement( 'canvas' ).getContext('2d');
}
return C$.defaultContext;
}, 1);

Clazz_newMeth(C$, 'getCSSColor$java_awt_Color', function (c) {
var s = "000000" + Integer.toHexString(c.getRGB() & 16777215);
return "#" + s.substring(s.length$() - 6);
}, 1);

Clazz_newMeth(C$, 'getLookAndFeelDefaults', function () {
if (C$.uid == null ) C$.uid = (I$[4]||$incl$(4)).getLookAndFeel().getDefaults();
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getComponentUI$javax_swing_JComponent', function (target) {
var ui = (I$[5]||$incl$(5)).getInstance$S$Z("swingjs.plaf.JS" + (target).getUIClassID(), true);
if (ui != null ) ui.set$javax_swing_JComponent(target);
return ui;
}, 1);

Clazz_newMeth(C$, 'getSwingDivId', function () {
return (I$[6]||$incl$(6)).currentThread().getName() + "_swingdiv";
}, 1);

Clazz_newMeth(C$, 'dispatchSystemEvent$Runnable', function (runnable) {
var f = null;
{
System.out.println("JST dispatchSystemEvent " + runnable.run.toString()); f = function(_JSToolkit_dispatchSystemEvent) { System.out.println("JST running " + runnable.run.toString());runnable.run()};
}
C$.dispatch$O$I$I(f, 0, 0);
}, 1);

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent$O$Z', function (event, src, andWait) {
var f = null;
var id = ++C$.dispatchID;
{
f = function() { if (src == null) event.dispatch(); else src.dispatchEvent$java_awt_AWTEvent(event);
};
}
if (andWait) C$.invokeAndWait$javajs_api_JSFunction$I(f, id);
 else C$.dispatch$O$I$I(f, 0, id);
}, 1);

Clazz_newMeth(C$, 'dispatch$O$I$I', function (f, msDelay, id) {
{
var thread = Thread.thisThread;
if (thread.group.systemExited) return;
var thread0 = thread;
var id0 = SwingJS.eventID || 0;
var ff = function(_JSToolkit_setTimeout) { SwingJS.eventID = id;
java.lang.Thread.thisThread = thread;
try { if (f.run) f.run();
else f();
} catch (e) { var s = "JSToolkit.dispatch(" + id +"): " + e + "\n" + (e.getStackTrace ? e.getStackTrace() + "\n" : "") + (!!e.stack ? e.stack : "");
System.out.println(s);
alert(s);
} SwingJS.eventID = id0;
Thread.thisThread = thread0;
};
return (msDelay == -1 ? ff() : setTimeout(ff, msDelay));
}
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$javajs_api_JSFunction$I', function (f, id) {
{
var thread = Thread.thisThread;
if (thread.group.systemExited) return;
var thread0 = thread;
(function(_JSToolkit_setTimeout) { var id0 = SwingJS.eventID || 0;
SwingJS.eventID = id;
java.lang.Thread.thisThread = thread;
if (f.run) f.run();
else f();
SwingJS.eventID = id0;
Thread.thisThread = thread0;
})();
}
}, 1);

Clazz_newMeth(C$, 'isDispatchThread', function () {
{
return (!!SwingJS.eventID);
}
}, 1);

Clazz_newMeth(C$, 'getHTML5Applet$java_awt_Component', function (c) {
return (c.getAppContext().getThreadGroup()).getHtmlApplet();
}, 1);

Clazz_newMeth(C$, 'taintUI$java_awt_Component', function (c) {
{
c.getUI && c.getUI() && c.getUI().setTainted();
}
}, 1);

Clazz_newMeth(C$, 'createComponent$java_awt_Component', function (target) {
var peer = C$.getUI$java_awt_Component$Z(target, true);
if ((I$[2]||$incl$(2)).debugging) System.out.println$S("JSToolkit creating UI-Peer for " + target.getClass().getName() + ": " + peer.getClass().getName() );
return peer;
});

Clazz_newMeth(C$, 'createDialog$java_awt_Dialog', function (target) {
var ui = target.getUI();
if (ui == null ) return null;
if ((I$[2]||$incl$(2)).debugging) System.out.println$S("JSToolkit creating Dialog Peer for " + target.getClass().getName() + ": " + target.getClass().getName() );
return (ui).setFrame$java_awt_Window$Z(target, true);
});

Clazz_newMeth(C$, 'createFrame$java_awt_Frame', function (target) {
var ui = target.getUI();
if (ui == null ) return null;
if ((I$[2]||$incl$(2)).debugging) System.out.println$S("JSToolkit creating Frame Peer for " + target.getClass().getName() + ": " + target.getClass().getName() );
return (ui).setFrame$java_awt_Window$Z(target, true);
});

Clazz_newMeth(C$, 'createWindow$java_awt_Window', function (target) {
var ui = target.getUI();
if (ui == null ) return null;
if ((I$[2]||$incl$(2)).debugging) System.out.println$S("JSToolkit creating Window Peer for " + target.getClass().getName() + ": " + target.getClass().getName() );
return (ui).setFrame$java_awt_Window$Z(target, false);
});

Clazz_newMeth(C$, 'getUI$java_awt_Component$Z', function (c, isQuiet) {
var ui = null;
{
ui = c.getUI && c.getUI();
}
if (ui == null ) {
var s = c.getClass().getName();
if (!(I$[7]||$incl$(7)).isOneOf$S$S(s, ";javax.swing.Box.Filler;")) System.out.println$S("[JSToolkit] Component " + s + " has no corresponding JSComponentUI, class " + c.getClass().getName() );
ui = Clazz_new_((I$[8]||$incl$(8)).c$$java_awt_Component,[c]);
}return ui;
}, 1);

Clazz_newMeth(C$, 'getPlainDocument$javax_swing_JComponent', function (c) {
return (I$[2]||$incl$(2)).getInstance$S("swingjs.JSPlainDocument");
}, 1);

Clazz_newMeth(C$, 'getClassNameForObject$O', function (c) {
{
return c.__CLASS_NAME__;
}
}, 1);

Clazz_newMeth(C$, 'getImagekit', function () {
return (this.imageKit == null  ? this.imageKit = (I$[5]||$incl$(5)).getInstance$S$Z("swingjs.JSImagekit", false) : this.imageKit);
});

Clazz_newMeth(C$, 'getImage$S', function (filename) {
return this.createImage$S(filename);
});

Clazz_newMeth(C$, 'getImage$java_net_URL', function (url) {
return this.createImage$java_net_URL(url);
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer', function (producer) {
var kit = (I$[5]||$incl$(5)).getInstance$S$Z("swingjs.JSImagekit", true);
producer.startProduction$java_awt_image_ImageConsumer(kit);
return kit.getCreatedImage();
});

Clazz_newMeth(C$, 'createImage$S', function (filename) {
return p$.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S((I$[2]||$incl$(2)).getSignedStreamBytes$java_io_BufferedInputStream(Clazz_new_((I$[9]||$incl$(9)).c$$java_io_InputStream,[Clazz_new_((I$[10]||$incl$(10)).c$$BA,[(I$[2]||$incl$(2)).getFileAsBytes$O(filename)])])), 0, -1, filename);
});

Clazz_newMeth(C$, 'createImage$java_net_URL', function (url) {
var b = (I$[2]||$incl$(2)).getURLInputStream$java_net_URL$Z(url, true);
return (b == null  ? null : p$.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S((I$[2]||$incl$(2)).getSignedStreamBytes$java_io_BufferedInputStream(b), 0, -1, url.toString()));
});

Clazz_newMeth(C$, 'createImage$BA$I$I', function (data, imageoffset, imagelength) {
return p$.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S(data, imageoffset, imagelength, null);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (image, width, height, observer) {
return 63;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (image, width, height, observer) {
return true;
});

Clazz_newMeth(C$, 'hasFocus$java_awt_Component', function (c) {
var ui = C$.getUI$java_awt_Component$Z(c, false);
return (ui != null  && !ui.isNull  && ui.hasFocus() );
}, 1);

Clazz_newMeth(C$, 'requestFocus$java_awt_Component', function (c) {
var ui = C$.getUI$java_awt_Component$Z(c, false);
if (ui == null  || ui.isNull  || !ui.isFocusable() ) return false;
var r = ((
(function(){var C$=Clazz_newClass(P$, "JSToolkit$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
this.$finals.ui.requestFocus$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause(null, false, false, 0, null);
});
})()
), Clazz_new_((I$[11]||$incl$(11)).$init$, [this, {ui: ui}]));
C$.dispatch$O$I$I(r, 50, 0);
return true;
}, 1);

Clazz_newMeth(C$, 'getAudioPlayer', function () {
return (C$.audioPlayer == null  ? C$.audioPlayer = (I$[2]||$incl$(2)).getInstance$S("swingjs.JSAudio") : C$.audioPlayer);
}, 1);

Clazz_newMeth(C$, 'playAudio$BA$javax_sound_sampled_AudioFormat', function (data, audioFormat) {
C$.getAudioPlayer().getAudio$BA$javax_sound_sampled_AudioFormat(data, audioFormat).play();
}, 1);

Clazz_newMeth(C$, 'getAudioClip$java_net_URL', function (url) {
return C$.getAudioPlayer().getAudioClip$java_net_URL(url);
}, 1);

Clazz_newMeth(C$, 'playAudioFile$java_net_URL', function (url) {
C$.getAudioPlayer().getAudioFileFromURL$java_net_URL(url).play();
}, 1);

Clazz_newMeth(C$, 'getAudioLine$javax_sound_sampled_Line_Info', function (info) {
return C$.getAudioPlayer().getAudioLine$javax_sound_sampled_Line_Info(info);
}, 1);

Clazz_newMeth(C$, 'getTimerQueue', function () {
return (I$[2]||$incl$(2)).getAppletViewer().getTimerQueue();
}, 1);

Clazz_newMeth(C$, 'getFileFromDialog$swingjs_api_JSFileHandler$S', function (jsFileHandler, type) {
var f = null;
{
f = function(data, fileName) { jsFileHandler.handleFileLoaded$BA$S(data, fileName) };
}
(I$[2]||$incl$(2)).J2S._getFileFromDialog(f, type);
}, 1);

Clazz_newMeth(C$, 'killDispatched$I', function (html5Id) {
{
clearTimeout(html5Id);
}
}, 1);

Clazz_newMeth(C$, 'getSystemClipboard', function () {
if (C$.systemClipboard == null ) C$.systemClipboard = (I$[2]||$incl$(2)).getInstance$S("java.awt.datatransfer.Clipboard");
return C$.systemClipboard;
});

Clazz_newMeth(C$, 'createDragSourceContextPeer$java_awt_dnd_DragGestureEvent', function (dge) {
return null;
});

Clazz_newMeth(C$, 'setCursor$java_awt_Cursor', function (c) {
var curs = null;
switch (c == null  ? 0 : c.getType()) {
case 1:
curs = "crosshair";
break;
case 3:
curs = "wait";
break;
case 2:
curs = "text";
break;
case 8:
case 9:
curs = "ns-resize";
break;
case 12:
curs = "grab";
break;
case 13:
curs = "move";
break;
case 7:
case 4:
curs = "nesw-resize";
break;
case 5:
case 6:
curs = "nwse-resize";
break;
case 11:
case 10:
curs = "ew-resize";
break;
case 0:
default:
curs = "default";
break;
}
(I$[12]||$incl$(12)).setCursor(curs);
}, 1);

Clazz_newMeth(C$, 'getFontList', function () {
if (C$.hardwiredFontList == null ) C$.hardwiredFontList = Clazz_array(java.lang.String, -1, ["Dialog", "SansSerif", "Serif", "Monospaced", "DialogInput"]);
return C$.hardwiredFontList;
});

Clazz_newMeth(C$, 'getFontFamily$java_awt_Font', function (font) {
return font.getName();
}, 1);

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return font.getFontMetrics();
});

Clazz_newMeth(C$, 'getCanvasFont$java_awt_Font', function (font) {
var strStyle = "";
if (font.isItalic()) strStyle += "italic ";
if (font.isBold()) strStyle += "bold ";
var family = font.getFamily();
if (family.equals$O("SansSerif") || family.equals$O("Dialog") || family.equals$O("DialogInput")  ) family = "Arial";
return strStyle + font.getSize() + "px " + family ;
}, 1);

Clazz_newMeth(C$, 'getDateFormat$S', function (isoType) {
var prefix = "";
var suffix = "";
{
if (isoType == null) { return ("" + (new Date())).split(" (")[0];
} if (isoType.indexOf("8824") >= 0) { var d = new Date();
var x = d.toString().split(" ");
var MM = "0" + (1 + d.getMonth()); MM = MM.substring(MM.length - 2);
var dd = "0" + d.getDate(); dd = dd.substring(dd.length - 2);
return x[3] + MM + dd + x[4].replace(/\:/g,"") + x[5].substring(3,6) + "'" + x[5].substring(6,8) + "'" } if (isoType.indexOf("8601") >= 0){ var d = new Date();
var x = d.toString().split(" ");
// Firefox now doing this?
if (x.length == 1) return x;
var MM = "0" + (1 + d.getMonth()); MM = MM.substring(MM.length - 2);
var dd = "0" + d.getDate(); dd = dd.substring(dd.length - 2);
return x[3] + '-' + MM + '-' + dd + 'T' + x[4] }
}
}, 1);

Clazz_newMeth(C$, 'beep', function () {
System.out.println$S("JSToolkit.beep");
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_util_Properties', function (frame, jobtitle, props) {
var job = (I$[2]||$incl$(2)).getInstance$S("swingjs.JSPrintJob");
job.setProperties$S$java_util_Properties(jobtitle, props);
return job;
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes', function (frame, jobtitle, jobAttributes, pageAttributes) {
var job = (I$[2]||$incl$(2)).getInstance$S("swingjs.JSPrintJob");
job.setAttributes$S$java_awt_JobAttributes$java_awt_PageAttributes(jobtitle, jobAttributes, pageAttributes);
return job;
});
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs"),I$=[['java.util.Hashtable','javajs.util.Rdr','java.net.URL','javajs.util.AU','java.io.BufferedInputStream','swingjs.api.Interface','javajs.util.PT','java.lang.Boolean','Thread','java.util.Locale','javajs.util.AjaxURLConnection']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSUtil");
C$.debugging = false;
C$.J2S = null;
C$.fileCache = null;
C$.useCache = false;
var p$=C$.prototype;
C$.zipTools = null;
C$.mapNotImpl = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
var j2sdebug = false;
var j2sself = null;
{
j2sself = self.J2S;
j2sdebug = J2S._checkLoad || J2S._debugCode
}
C$.debugging = j2sdebug;
C$.J2S = j2sself;
}
;
C$.useCache = true;
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
System.out.println$S("JSUtil initialized");
}, 1);

Clazz_newMeth(C$, 'getFileCache', function () {
if (C$.fileCache == null  && (C$.fileCache = C$.J2S._getSetJavaFileCache(null)) == null  ) {
C$.fileCache = Clazz_new_((I$[1]||$incl$(1)));
C$.J2S._getSetJavaFileCache(C$.fileCache);
}return C$.fileCache;
}, 1);

Clazz_newMeth(C$, 'getCachedFileData$S', function (path) {
return (C$.useCache && C$.fileCache != null   ? C$.fileCache.get$O(path) : null);
}, 1);

Clazz_newMeth(C$, 'getFileContents$O', function (uriOrJSFile) {
if (Clazz_instanceOf(uriOrJSFile, "java.io.File")) {
var bytes = uriOrJSFile.bytes ||null;
if (bytes != null ) return bytes;
}var uri = uriOrJSFile.toString();
var data = C$.getCachedFileData$S(uri);
if (data == null ) {


try {
data = (I$[2]||$incl$(2)).streamToUTF8String$java_io_BufferedInputStream(Clazz_new_((I$[3]||$incl$(3)).c$$S,[uri]).getContent());
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
} else {
throw e;
}
}
data = C$.J2S._getFileData(uri, null, false, false);
}return data;
}, 1);

Clazz_newMeth(C$, 'getFileAsString$S', function (filename) {
var data = C$.getFileContents$O(filename);
return C$.ensureString$O(data);
}, 1);

Clazz_newMeth(C$, 'getFileAsBytes$O', function (file) {
var data = C$.getFileContents$O(file);
var b = null;
if ((I$[4]||$incl$(4)).isAB$O(data)) b = data;
 else if (Clazz_instanceOf(data, "java.lang.String")) b = (data).getBytes();
 else if (Clazz_instanceOf(data, "javajs.util.SB")) b = (I$[2]||$incl$(2)).getBytesFromSB$javajs_util_SB(data);
 else if (Clazz_instanceOf(data, "java.io.InputStream")) try {
b = (I$[2]||$incl$(2)).getLimitedStreamBytes$java_io_InputStream$J(data, -1);
} catch (e) {
if (Clazz_exceptionOf(e, "java.io.IOException")){
} else {
throw e;
}
}
return (I$[4]||$incl$(4)).ensureSignedBytes$BA(b);
}, 1);

Clazz_newMeth(C$, 'haveCachedResource$S$Z', function (resourceName, isJavaPath) {
var path = C$.J2S._getResourcePath(resourceName, isJavaPath);
return (path != null  && C$.getCachedFileData$S(path) != null  );
}, 1);

Clazz_newMeth(C$, 'getJavaResource$S$Z$Z$Z', function (resourceName, isJavaPath, doCache, doProcess) {
System.out.println$S("JSUtil getting Java resource " + resourceName);
var path = C$.J2S._getResourcePath(resourceName, isJavaPath);
if (path == null ) return null;
var data = C$.getCachedFileData$S(path);
if (data == null  && (data = C$.J2S._getFileData(path, null, false, false)) != null   && C$.useCache  && doCache ) C$.cacheFileData$S$O(path, data);
var sdata = C$.ensureString$O(data);
var ok = (sdata != null  && sdata.indexOf("[Exception") != 0 );
System.out.println$S("Processing " + path + " [" + (ok ? "" + sdata.length$() : sdata) + "]" );
return (!ok ? null : !doProcess ? sdata : path.endsWith$S(".css") ? C$.processCSS$S$S(sdata, path) : path.endsWith$S(".js") ? C$.processJS$S(sdata) : sdata);
}, 1);

Clazz_newMeth(C$, 'cacheFileData$S$O', function (path, data) {
C$.getFileCache().put$TK$TV(path, data);
}, 1);

Clazz_newMeth(C$, 'loadJavaResourcesFromZip$ClassLoader$S$java_util_Map', function (cl, zipFileName, mapByteData) {
if (mapByteData == null ) mapByteData = C$.getFileCache();
var fileList = "";
try {
var bis = Clazz_new_((I$[5]||$incl$(5)).c$$java_io_InputStream,[cl.getResourceAsStream$S(zipFileName)]);
var prefix = C$.J2S._getResourcePath(null, true);
fileList = C$.getZipTools().cacheZipContentsStatic$java_io_BufferedInputStream$S$java_util_Map$Z(bis, prefix, mapByteData, false);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.Exception")){
System.out.println$S("JSUtil could not cache files from " + zipFileName);
return;
} else {
throw e;
}
}
if (C$.debugging) System.out.println$S("JSUtil loaded resources from " + zipFileName + ":\n" + fileList );
}, 1);

Clazz_newMeth(C$, 'getZipTools', function () {
return (C$.zipTools == null  ? (C$.zipTools = (I$[6]||$incl$(6)).getInstance$S$Z("javajs.util.ZipTools", true)) : C$.zipTools);
}, 1);

Clazz_newMeth(C$, 'loadStaticResource$S', function (file) {
var s = "alert('" + file + "' was not found)" ;
if (!C$.J2S._isResourceLoaded(file, false)) {
s = C$.getJavaResource$S$Z$Z$Z(file, true, false, true);
C$.J2S._isResourceLoaded(file, true);
}return s;
}, 1);

Clazz_newMeth(C$, 'processCSS$S$S', function (css, path) {
if (path != null  && css.indexOf("images/") >= 0 ) {
path = path.substring(0, path.lastIndexOf("/") + 1) + "images/";
css = (I$[7]||$incl$(7)).rep$S$S$S(css, "images/", path);
}var jq = C$.getJQuery();
jq.$("head").append(jq.$("<style type='text/css'>" + css + "</style>" ));
return css;
}, 1);

Clazz_newMeth(C$, 'processJS$S', function (js) {
try {
{
eval(js);
}
} catch (e) {
C$.alert$O("error processing " + js);
return null;
}
return js;
}, 1);

Clazz_newMeth(C$, 'ensureString$O', function (data) {
if (data == null ) return null;
if ((I$[4]||$incl$(4)).isAB$O(data)) return (I$[2]||$incl$(2)).bytesToUTF8String$BA(data);
if (Clazz_instanceOf(data, "java.lang.String") || Clazz_instanceOf(data, "javajs.util.SB") ) return data.toString();
if (Clazz_instanceOf(data, "java.io.InputStream")) return (I$[2]||$incl$(2)).streamToUTF8String$java_io_BufferedInputStream(Clazz_new_((I$[5]||$incl$(5)).c$$java_io_InputStream,[data]));
return null;
}, 1);

Clazz_newMeth(C$, 'getJQuery', function () {
{
if (!window.jQuery) alert( "jQuery is required for SwingJS, but window.jQuery is not defined." ); jQuery.$ || (jQuery.$ = jQuery); return(jQuery);
}
}, 1);

Clazz_newMeth(C$, 'getStackTrace$I', function (n) {
{
return Clazz._getStackTrace(n);
}
}, 1);

Clazz_newMeth(C$, 'getStackTrace', function () {
{
return Clazz._getStackTrace();
}
}, 1);

Clazz_newMeth(C$, 'notImplemented$S', function (msg) {
var s = null;
if (C$.mapNotImpl == null ) C$.mapNotImpl = Clazz_new_((I$[1]||$incl$(1)));
{
s = arguments.callee.caller;
var cl = s.claxxOwner || s.exClazz;
s = (cl ? cl.__CLASS_NAME__ + "." : "") + arguments.callee.caller.exName;
}
if (C$.mapNotImpl.containsKey$O(s)) return;
C$.mapNotImpl.put$TK$TV(s, (I$[8]||$incl$(8)).TRUE);
System.out.println$S(s + " has not been implemented in SwingJS. " + (msg == "" ? "" : (msg == null  ? "" : msg) + C$.getStackTrace$I(-5)) );
}, 1);

Clazz_newMeth(C$, 'log$S', function (msg) {
{
System.out.println(msg);
console.log(msg);
}
}, 1);

Clazz_newMeth(C$, 'getInstance$S', function (className) {
return (I$[6]||$incl$(6)).getInstance$S$Z(className, false);
}, 1);

Clazz_newMeth(C$, 'getAppletViewer', function () {
return ((I$[9]||$incl$(9)).currentThread()).appletViewer;
}, 1);

Clazz_newMeth(C$, 'readyCallback$S$S$java_awt_Container$swingjs_JSAppletViewer', function (aname, fname, applet, appletPanel) {
try {
C$.J2S._readyCallback(aname, fname, true, applet, appletPanel);
} catch (e) {
System.out.println$S("JSUtil Error running readyCallback method for " + fname + " -- check your page JavaScript" );
}
}, 1);

Clazz_newMeth(C$, 'getSignedStreamBytes$java_io_BufferedInputStream', function (bis) {
try {
return (I$[4]||$incl$(4)).ensureSignedBytes$BA((I$[2]||$incl$(2)).getStreamAsBytes$java_io_BufferedInputStream$javajs_util_OC(bis, null));
} catch (e) {
if (Clazz_exceptionOf(e, "java.io.IOException")){
return null;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'saveFile$S$O$S$S', function (fileName, data, mimeType, encoding) {
C$.J2S._saveFile(fileName, data, mimeType, encoding);
}, 1);

Clazz_newMeth(C$, 'getResourceAsStream$S', function (name) {
var cl = null;
{
cl = swingjs.JSUtil.getClassLoader();
}
return cl.getResourceAsStream$S(name);
}, 1);

Clazz_newMeth(C$, 'getResource$S', function (name) {
var cl = null;
{
cl = swingjs.JSUtil.getClassLoader();
}
return cl.getResource$S(name);
}, 1);

Clazz_newMeth(C$, 'getDefaultLocale$S', function (language) {
var region;
var country;
var variant;
if (language == null ) language = C$.J2S._getDefaultLanguage(true);
language = language.$replace("-", "_");
if (language == null  || language.length$() == 0  || language.equalsIgnoreCase$S("en") ) language = "en_US";
var i = language.indexOf("_");
if (i > 0) {
region = language.substring(i + 1);
language = language.substring(0, i);
} else {
region = "";
}region = region.toUpperCase();
i = region.indexOf("_");
if (i > 0) {
country = region.substring(0, i);
variant = region.substring(i + 1);
} else {
country = region;
variant = "";
}return Clazz_new_((I$[10]||$incl$(10)).c$$S$S$S,[language, country, variant]);
}, 1);

Clazz_newMeth(C$, 'getURLInputStream$java_net_URL$Z', function (url, andDelete) {
try {
var bis = (I$[11]||$incl$(11)).getAttachedStreamData$java_net_URL$Z(url, andDelete);
return (bis == null  ? url.openStream() : bis);
} catch (e) {
if (Clazz_exceptionOf(e, "java.io.IOException")){
} else {
throw e;
}
}
return null;
}, 1);

Clazz_newMeth(C$, 'showWebPage$java_net_URL$O', function (url, target) {
{
if (target) window.open(url.toString(), target); else window.open(url.toString());
}
}, 1);

Clazz_newMeth(C$, 'warn$S', function (msg) {
C$.alert$O(msg);
}, 1);

Clazz_newMeth(C$, 'alert$O', function (object) {
{
console.log("[JSUtil] " + object);
alert(object);
}
}, 1);

Clazz_newMeth(C$, 'confirm$S', function (msg) {
{
return confirm(msg);
}
}, 1);

Clazz_newMeth(C$, 'prompt$S$S', function (msg, defaultRet) {
{
return prompt(msg, defaultRet);
}
}, 1);
})();
//Created 2018-05-15 01:03:17
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[['swingjs.plaf.ButtonListener','.Actions'],'swingjs.plaf.LazyActionMap','javax.swing.SwingUtilities','javax.swing.plaf.ComponentInputMapUIResource','javax.swing.KeyStroke']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ButtonListener", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener', 'java.awt.event.FocusListener', 'javax.swing.event.ChangeListener', 'java.beans.PropertyChangeListener']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.ui = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'loadActionMap$swingjs_plaf_LazyActionMap', function (map) {
map.put$javax_swing_Action(Clazz_new_((I$[1]||$incl$(1)).c$$S,["pressed"]));
map.put$javax_swing_Action(Clazz_new_((I$[1]||$incl$(1)).c$$S,["released"]));
}, 1);

Clazz_newMeth(C$, 'c$$swingjs_plaf_JSButtonUI$Z', function (ui, isMenuItem) {
C$.$init$.apply(this);
this.ui = ui;
}, 1);

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (e) {
var prop = e.getPropertyName();
var b = e.getSource();
if (prop == "mnemonic") {
this.updateMnemonicBinding$javax_swing_AbstractButton(b);
} else if (prop == "contentAreaFilled") {
this.checkOpacity$javax_swing_AbstractButton(b);
} else {
this.ui.propertyChangedFromListener$S(prop);
}});

Clazz_newMeth(C$, 'checkOpacity$javax_swing_AbstractButton', function (b) {
b.setOpaque$Z(b.isContentAreaFilled());
});

Clazz_newMeth(C$, 'installKeyboardActions$javax_swing_JComponent', function (c) {
var button = c;
this.updateMnemonicBinding$javax_swing_AbstractButton(button);
(I$[2]||$incl$(2)).installLazyActionMap$javax_swing_JComponent$Class$S(c, Clazz_getClass(C$), "Button.actionMap");
var km = this.getInputMap$I$javax_swing_JComponent(0, c);
(I$[3]||$incl$(3)).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(c, 0, km);
});

Clazz_newMeth(C$, 'uninstallKeyboardActions$javax_swing_JComponent', function (c) {
(I$[3]||$incl$(3)).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(c, 2, null);
(I$[3]||$incl$(3)).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(c, 0, null);
(I$[3]||$incl$(3)).replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap(c, null);
});

Clazz_newMeth(C$, 'getInputMap$I$javax_swing_JComponent', function (condition, c) {
return null;
});

Clazz_newMeth(C$, 'updateMnemonicBinding$javax_swing_AbstractButton', function (b) {
var m = b.getMnemonic();
if (m != 0) {
var map = (I$[3]||$incl$(3)).getUIInputMap$javax_swing_JComponent$I(b, 2);
if (map == null ) {
map = Clazz_new_((I$[4]||$incl$(4)).c$$javax_swing_JComponent,[b]);
(I$[3]||$incl$(3)).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(b, 2, map);
}map.clear();
map.put$javax_swing_KeyStroke$O((I$[5]||$incl$(5)).getKeyStroke$I$I$Z(m, 8, false), "pressed");
map.put$javax_swing_KeyStroke$O((I$[5]||$incl$(5)).getKeyStroke$I$I$Z(m, 8, true), "released");
map.put$javax_swing_KeyStroke$O((I$[5]||$incl$(5)).getKeyStroke$I$I$Z(m, 0, true), "released");
} else {
var map = (I$[3]||$incl$(3)).getUIInputMap$javax_swing_JComponent$I(b, 2);
if (map != null ) {
map.clear();
}}});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
var b = e.getSource();
this.verifyButtonClick$javax_swing_AbstractButton(b);
});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent', function (e) {
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent', function (e) {
var b = e.getSource();
var model = b.getModel();
model.setArmed$Z(false);
model.setPressed$Z(false);
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent', function (e) {
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent', function (e) {
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent', function (e) {
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent', function (e) {
if ((I$[3]||$incl$(3)).isLeftMouseButton$java_awt_event_MouseEvent(e)) {
var b = e.getSource();
if (b.uiClassID == "MenuUI" && (b).isTopLevelMenu() ) (b).setPopupMenuVisible$Z(true);
}});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent', function (e) {
if ((I$[3]||$incl$(3)).isLeftMouseButton$java_awt_event_MouseEvent(e)) {
var b = e.getSource();
if (b.uiClassID == "MenuUI") {
return;
}b.doClick$I(0);
this.verifyButtonClick$javax_swing_AbstractButton(b);
}});

Clazz_newMeth(C$, 'verifyButtonClick$javax_swing_AbstractButton', function (b) {
var m = b.getModel();
var btn = this.ui.domBtn;
var state = m.isSelected();
{
setTimeout(function(){btn && (btn.checked = state)}, 0);
}
return true;
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent', function (e) {
var b = e.getSource();
var model = b.getModel();
if (b.isRolloverEnabled() && !(I$[3]||$incl$(3)).isLeftMouseButton$java_awt_event_MouseEvent(e) ) {
model.setRollover$Z(true);
}if (model.isPressed()) model.setArmed$Z(true);
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent', function (e) {
var b = e.getSource();
var model = b.getModel();
if (b.isRolloverEnabled()) {
model.setRollover$Z(false);
}model.setArmed$Z(false);
});
;
(function(){var C$=Clazz_newClass(P$.ButtonListener, "Actions", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'sun.swing.UIAction');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.superclazz.c$$S.apply(this, [name]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (e) {
var b = e.getSource();
var key = this.getName();
if (key == "pressed") {
var model = b.getModel();
model.setArmed$Z(true);
model.setPressed$Z(true);
if (!b.hasFocus()) {
b.requestFocus();
}} else if (key == "released") {
var model = b.getModel();
model.setPressed$Z(false);
model.setArmed$Z(false);
}});

Clazz_newMeth(C$, 'isEnabled$O', function (sender) {
if (sender != null  && (Clazz_instanceOf(sender, "javax.swing.AbstractButton"))  && !(sender).getModel().isEnabled() ) {
return false;
} else {
return true;
}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:19
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['javax.swing.UIDefaults','java.awt.Color','javax.swing.plaf.ColorUIResource','javax.swing.plaf.FontUIResource','javax.swing.plaf.InsetsUIResource',['javax.swing.plaf.BorderUIResource','.EtchedBorderUIResource'],'sun.swing.SwingLazyValue','javax.swing.BorderFactory',['javax.swing.DefaultListCellRenderer','.UIResource'],'swingjs.plaf.HTML5LookAndFeel$1','javax.swing.plaf.DimensionUIResource',['javax.swing.plaf.BorderUIResource','.EmptyBorderUIResource'],'java.awt.Dimension','java.lang.Boolean',['javax.swing.UIDefaults','.LazyInputMap']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "HTML5LookAndFeel", null, 'javax.swing.LookAndFeel');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'getDefaults', function () {
var table = Clazz_new_((I$[1]||$incl$(1)).c$$I$F,[610, 0.75]);
this.initClassDefaults$javax_swing_UIDefaults(table);
this.initSystemColorDefaults$javax_swing_UIDefaults(table);
this.initComponentDefaults$javax_swing_UIDefaults(table);
return table;
});

Clazz_newMeth(C$, 'initialize', function () {
});

Clazz_newMeth(C$, 'installAWTEventListener', function () {
});

Clazz_newMeth(C$, 'uninitialize', function () {
});

Clazz_newMeth(C$, 'initClassDefaults$javax_swing_UIDefaults', function (table) {
var packageName = "swingjs.plaf.";
var uiDefaults = Clazz_array(java.lang.Object, -1, ["ButtonUI", "swingjs.plaf.JSButtonUI", "CheckBoxUI", "swingjs.plaf.JSCheckBoxUI", "ColorChooserUI", "swingjs.plaf.JSColorChooserUI", "FormattedTextFieldUI", "swingjs.plaf.JSFormattedTextFieldUI", "MenuBarUI", "swingjs.plaf.JSMenuBarUI", "MenuUI", "swingjs.plaf.JSMenuUI", "MenuItemUI", "swingjs.plaf.JSMenuItemUI", "CheckBoxMenuItemUI", "swingjs.plaf.JSCheckBoxMenuItemUI", "RadioButtonMenuItemUI", "swingjs.plaf.JSRadioButtonMenuItemUI", "RadioButtonUI", "swingjs.plaf.JSRadioButtonUI", "ToggleButtonUI", "swingjs.plaf.JSToggleButtonUI", "PopupMenuUI", "swingjs.plaf.JSPopupMenuUI", "ProgressBarUI", "swingjs.plaf.JSProgressBarUI", "ScrollBarUI", "swingjs.plaf.JSScrollBarUI", "ScrollPaneUI", "swingjs.plaf.JSScrollPaneUI", "SplitPaneUI", "swingjs.plaf.JSSplitPaneUI", "SliderUI", "swingjs.plaf.JSSliderUI", "SeparatorUI", "swingjs.plaf.JSSeparatorUI", "SpinnerUI", "swingjs.plaf.JSSpinnerUI", "ToolBarSeparatorUI", "swingjs.plaf.JSToolBarSeparatorUI", "PopupMenuSeparatorUI", "swingjs.plaf.JSPopupMenuSeparatorUI", "TabbedPaneUI", "swingjs.plaf.JSTabbedPaneUI", "TextAreaUI", "swingjs.plaf.JSTextAreaUI", "TextFieldUI", "swingjs.plaf.JSTextFieldUI", "PasswordFieldUI", "swingjs.plaf.JSPasswordFieldUI", "TextPaneUI", "swingjs.plaf.JSTextPaneUI", "EditorPaneUI", "swingjs.plaf.JSEditorPaneUI", "TreeUI", "swingjs.plaf.JSTreeUI", "LabelUI", "swingjs.plaf.JSLabelUI", "ListUI", "swingjs.plaf.JSListUI", "ToolBarUI", "swingjs.plaf.JSToolBarUI", "ToolTipUI", "swingjs.plaf.JSToolTipUI", "ComboBoxUI", "swingjs.plaf.JSComboBoxUI", "TableUI", "swingjs.plaf.JSTableUI", "TableHeaderUI", "swingjs.plaf.JSTableHeaderUI", "InternalFrameUI", "swingjs.plaf.JSInternalFrameUI", "DesktopPaneUI", "swingjs.plaf.JSDesktopPaneUI", "DesktopIconUI", "swingjs.plaf.JSDesktopIconUI", "OptionPaneUI", "swingjs.plaf.JSOptionPaneUI", "PanelUI", "swingjs.plaf.JSPanelUI", "ViewportUI", "swingjs.plaf.JSViewportUI", "RootPaneUI", "swingjs.plaf.JSRootPaneUI"]);
table.putDefaults$OA(uiDefaults);
});

Clazz_newMeth(C$, 'initSystemColorDefaults$javax_swing_UIDefaults', function (table) {
var defaultSystemColors = Clazz_array(java.lang.String, -1, ["window", "#FFFFFF", "windowBorder", "#000000", "windowText", "#333333", "menu", "#C0C0C0", "menuText", "#333333", "text", "#C0C0C0", "textText", "#333333", "textHighlight", "#B8CFE5", "textHighlightText", "#000000", "textInactiveText", "#808080", "control", "#EEEEEE", "controlText", "#333333", "controlHighlight", "#C0C0C0", "controlLtHighlight", "#B8CFE5", "controlShadow", "#808080", "controlDkShadow", "#000000", "scrollbar", "#E0E0E0", "info", "#FFFFE1", "infoText", "#000000"]);
this.loadSystemColors$javax_swing_UIDefaults$SA$Z(table, defaultSystemColors, this.isNativeLookAndFeel());
});

Clazz_newMeth(C$, 'loadSystemColors$javax_swing_UIDefaults$SA$Z', function (table, systemColors, useNative) {
for (var i = 0; i < systemColors.length; i = i+(2)) {
var color = (I$[2]||$incl$(2)).black;
try {
color = (I$[2]||$incl$(2)).decode$S(systemColors[i + 1]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.NumberFormatException")){
e.printStackTrace();
} else {
throw e;
}
}
table.put$O$O(systemColors[i], Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[color]));
}
});

Clazz_newMeth(C$, 'initResourceBundle$javax_swing_UIDefaults', function (table) {
});

Clazz_newMeth(C$, 'initComponentDefaults$javax_swing_UIDefaults', function (table) {
p$.initResourceBundle$javax_swing_UIDefaults.apply(this, [table]);
var oneThousand =  new Long(1000);
var twelve =  new Integer(12);
var fontPlain =  new Integer(0);
var serifPlain12 = Clazz_new_((I$[4]||$incl$(4)).c$$S$I$I,["Serif", 0, 12]);
var sansSerifPlain12 = Clazz_new_((I$[4]||$incl$(4)).c$$S$I$I,["SansSerif", 0, 12]);
var dialogPlain12 = Clazz_new_((I$[4]||$incl$(4)).c$$S$I$I,["Dialog", 0, 12]);
var monospacedPlain12 = Clazz_new_((I$[4]||$incl$(4)).c$$S$I$I,["Monospaced", 0, 12]);
var red = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[2]||$incl$(2)).red]);
var black = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[2]||$incl$(2)).black]);
var white = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[2]||$incl$(2)).white]);
var gray = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[2]||$incl$(2)).gray]);
var darkGray = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Color,[(I$[2]||$incl$(2)).darkGray]);
var scrollBarTrack = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I,[224, 224, 224]);
var control = table.getColor$O("control");
var controlDkShadow = table.getColor$O("controlDkShadow");
var controlHighlight = table.getColor$O("controlHighlight");
var controlLtHighlight = table.getColor$O("controlLtHighlight");
var controlShadow = table.getColor$O("controlShadow");
var controlText = table.getColor$O("controlText");
var menu = table.getColor$O("menu");
var menuText = table.getColor$O("menuText");
var textHighlight = table.getColor$O("textHighlight");
var textHighlightText = table.getColor$O("textHighlightText");
var disabledTextColor = table.getColor$O("textInactiveText");
var textText = table.getColor$O("textText");
var window = table.getColor$O("window");
var zeroInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[0, 0, 0, 0]);
var twoInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[2, 2, 2, 2]);
var threeInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[3, 3, 3, 3]);
var etchedBorder = Clazz_new_((I$[6]||$incl$(6)));
var loweredBevelBorder = Clazz_new_((I$[7]||$incl$(7)).c$$S$S,["javax.swing.plaf.BorderUIResource", "getLoweredBevelBorderUIResource"]);
var buttonBorder = (I$[8]||$incl$(8)).createHTML5Border();
var listCellRendererActiveValue = ((
(function(){var C$=Clazz_newClass(P$, "HTML5LookAndFeel$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.ActiveValue']], 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults', function (table) {
return Clazz_new_((I$[9]||$incl$(9)));
});
})()
), Clazz_new_((I$[10]||$incl$(10)).$init$, [this, null]));
var optionPaneMinimumSize = Clazz_new_((I$[11]||$incl$(11)).c$$I$I,[262, 90]);
var zero =  new Integer(0);
var zeroBorder = Clazz_new_((I$[7]||$incl$(7)).c$$S$OA,["javax.swing.plaf.BorderUIResource$EmptyBorderUIResource", Clazz_array(java.lang.Object, -1, [zero, zero, zero, zero])]);
var optionPaneBorder = Clazz_new_((I$[12]||$incl$(12)).c$$I$I$I$I,[10, 10, 12, 10]);
var optionPaneButtonAreaBorder = Clazz_new_((I$[7]||$incl$(7)).c$$S$OA,["javax.swing.plaf.BorderUIResource$EmptyBorderUIResource", Clazz_array(java.lang.Object, -1, [ new Integer(6), zero, zero, zero])]);
var toolBarSeparatorSize = Clazz_new_((I$[11]||$incl$(11)).c$$I$I,[10, 10]);
var tabbedPaneTabInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[0, 4, 1, 4]);
var tabbedPaneTabPadInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[2, 2, 2, 1]);
var tabbedPaneTabAreaInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[3, 2, 0, 2]);
var tabbedPaneContentBorderInsets = Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[2, 2, 3, 3]);
var editorMargin = threeInsets;
var four =  new Integer(4);
var defaults = Clazz_array(java.lang.Object, -1, ["*.font", dialogPlain12, "*.background", control, "*.foreground", controlText, "Button.background", control, "Button.foreground", controlText, "Button.inactiveForeground", disabledTextColor, "Button.border", buttonBorder, "Button.margin", Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[2, 14, 2, 14]), "Button.textIconGap", four, "ToggleButton.background", control, "ToggleButton.foreground", controlText, "ToggleButton.highlight", controlLtHighlight, "ToggleButton.border", buttonBorder, "ToggleButton.margin", Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[2, 14, 2, 14]), "ToggleButton.textIconGap", four, "ToggleButton.textShiftOffset", zero, "RadioButton.background", control, "RadioButton.foreground", controlText, "RadioButton.border", buttonBorder, "RadioButton.margin", twoInsets, "RadioButton.textIconGap", four, "RadioButton.textShiftOffset", zero, "CheckBox.background", control, "CheckBox.foreground", controlText, "CheckBox.border", buttonBorder, "CheckBox.margin", twoInsets, "CheckBox.textIconGap", four, "CheckBox.textShiftOffset", zero, "ColorChooser.background", control, "ColorChooser.foreground", controlText, "ColorChooser.swatchesSwatchSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[10, 10]), "ColorChooser.swatchesRecentSwatchSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[10, 10]), "ColorChooser.swatchesDefaultRecentColor", control, "ComboBox.font", sansSerifPlain12, "ComboBox.background", window, "ComboBox.foreground", textText, "ComboBox.selectionBackground", textHighlight, "ComboBox.selectionForeground", textHighlightText, "ComboBox.disabledBackground", control, "ComboBox.disabledForeground", disabledTextColor, "ComboBox.timeFactor", oneThousand, "ComboBox.isEnterSelectablePopup", (I$[14]||$incl$(14)).FALSE, "FileChooser.readOnly", (I$[14]||$incl$(14)).FALSE, "Label.font", dialogPlain12, "Label.background", control, "Label.foreground", controlText, "Label.border", null, "List.background", window, "List.foreground", textText, "List.selectionBackground", textHighlight, "List.selectionForeground", textHighlightText, "List.cellRenderer", listCellRendererActiveValue, "List.timeFactor", oneThousand, "List.focusInputMap", Clazz_new_((I$[15]||$incl$(15)).c$$OA,[Clazz_array(java.lang.Object, -1, ["ctrl C", "copy", "ctrl V", "paste", "ctrl X", "cut", "COPY", "copy", "PASTE", "paste", "CUT", "cut", "control INSERT", "copy", "shift INSERT", "paste", "shift DELETE", "cut", "UP", "selectPreviousRow", "KP_UP", "selectPreviousRow", "shift UP", "selectPreviousRowExtendSelection", "shift KP_UP", "selectPreviousRowExtendSelection", "ctrl shift UP", "selectPreviousRowExtendSelection", "ctrl shift KP_UP", "selectPreviousRowExtendSelection", "ctrl UP", "selectPreviousRowChangeLead", "ctrl KP_UP", "selectPreviousRowChangeLead", "DOWN", "selectNextRow", "KP_DOWN", "selectNextRow", "shift DOWN", "selectNextRowExtendSelection", "shift KP_DOWN", "selectNextRowExtendSelection", "ctrl shift DOWN", "selectNextRowExtendSelection", "ctrl shift KP_DOWN", "selectNextRowExtendSelection", "ctrl DOWN", "selectNextRowChangeLead", "ctrl KP_DOWN", "selectNextRowChangeLead", "LEFT", "selectPreviousColumn", "KP_LEFT", "selectPreviousColumn", "shift LEFT", "selectPreviousColumnExtendSelection", "shift KP_LEFT", "selectPreviousColumnExtendSelection", "ctrl shift LEFT", "selectPreviousColumnExtendSelection", "ctrl shift KP_LEFT", "selectPreviousColumnExtendSelection", "ctrl LEFT", "selectPreviousColumnChangeLead", "ctrl KP_LEFT", "selectPreviousColumnChangeLead", "RIGHT", "selectNextColumn", "KP_RIGHT", "selectNextColumn", "shift RIGHT", "selectNextColumnExtendSelection", "shift KP_RIGHT", "selectNextColumnExtendSelection", "ctrl shift RIGHT", "selectNextColumnExtendSelection", "ctrl shift KP_RIGHT", "selectNextColumnExtendSelection", "ctrl RIGHT", "selectNextColumnChangeLead", "ctrl KP_RIGHT", "selectNextColumnChangeLead", "HOME", "selectFirstRow", "shift HOME", "selectFirstRowExtendSelection", "ctrl shift HOME", "selectFirstRowExtendSelection", "ctrl HOME", "selectFirstRowChangeLead", "END", "selectLastRow", "shift END", "selectLastRowExtendSelection", "ctrl shift END", "selectLastRowExtendSelection", "ctrl END", "selectLastRowChangeLead", "PAGE_UP", "scrollUp", "shift PAGE_UP", "scrollUpExtendSelection", "ctrl shift PAGE_UP", "scrollUpExtendSelection", "ctrl PAGE_UP", "scrollUpChangeLead", "PAGE_DOWN", "scrollDown", "shift PAGE_DOWN", "scrollDownExtendSelection", "ctrl shift PAGE_DOWN", "scrollDownExtendSelection", "ctrl PAGE_DOWN", "scrollDownChangeLead", "ctrl A", "selectAll", "ctrl SLASH", "selectAll", "ctrl BACK_SLASH", "clearSelection", "SPACE", "addToSelection", "ctrl SPACE", "toggleAndAnchor", "shift SPACE", "extendTo", "ctrl shift SPACE", "moveSelectionTo"])]), "List.focusInputMap.RightToLeft", Clazz_new_((I$[15]||$incl$(15)).c$$OA,[Clazz_array(java.lang.Object, -1, ["LEFT", "selectNextColumn", "KP_LEFT", "selectNextColumn", "shift LEFT", "selectNextColumnExtendSelection", "shift KP_LEFT", "selectNextColumnExtendSelection", "ctrl shift LEFT", "selectNextColumnExtendSelection", "ctrl shift KP_LEFT", "selectNextColumnExtendSelection", "ctrl LEFT", "selectNextColumnChangeLead", "ctrl KP_LEFT", "selectNextColumnChangeLead", "RIGHT", "selectPreviousColumn", "KP_RIGHT", "selectPreviousColumn", "shift RIGHT", "selectPreviousColumnExtendSelection", "shift KP_RIGHT", "selectPreviousColumnExtendSelection", "ctrl shift RIGHT", "selectPreviousColumnExtendSelection", "ctrl shift KP_RIGHT", "selectPreviousColumnExtendSelection", "ctrl RIGHT", "selectPreviousColumnChangeLead", "ctrl KP_RIGHT", "selectPreviousColumnChangeLead"])]), "MenuBar.font", dialogPlain12, "MenuBar.background", menu, "MenuBar.foreground", menuText, "MenuItem.font", dialogPlain12, "MenuItem.background", menu, "MenuItem.foreground", menuText, "MenuItem.margin", twoInsets, "RadioButtonMenuItem.font", dialogPlain12, "RadioButtonMenuItem.background", menu, "RadioButtonMenuItem.foreground", menuText, "RadioButtonMenuItem.margin", twoInsets, "CheckBoxMenuItem.font", dialogPlain12, "CheckBoxMenuItem.background", menu, "CheckBoxMenuItem.foreground", menuText, "CheckBoxMenuItem.margin", twoInsets, "Menu.background", menu, "Menu.foreground", menuText, "Menu.margin", twoInsets, "PopupMenu.background", menu, "PopupMenu.foreground", menuText, "PopupMenu.consumeEventOnClose", (I$[14]||$incl$(14)).FALSE, "OptionPane.yesButtonText", "Yes", "OptionPane.noButtonText", "No", "OptionPane.cancelButtonText", "Cancel", "OptionPane.okButtonText", "OK", "OptionPane.font", dialogPlain12, "OptionPane.background", control, "OptionPane.foreground", controlText, "OptionPane.messageForeground", controlText, "OptionPane.border", optionPaneBorder, "OptionPane.messageAreaBorder", zeroBorder, "OptionPane.buttonAreaBorder", optionPaneButtonAreaBorder, "OptionPane.minimumSize", optionPaneMinimumSize, "Panel.font", dialogPlain12, "Panel.background", control, "Panel.foreground", textText, "ProgressBar.cellLength",  new Integer(1), "ProgressBar.cellSpacing", zero, "ProgressBar.repaintInterval",  new Integer(50), "ProgressBar.cycleTime",  new Integer(3000), "ProgressBar.horizontalSize", Clazz_new_((I$[11]||$incl$(11)).c$$I$I,[146, 12]), "ProgressBar.verticalSize", Clazz_new_((I$[11]||$incl$(11)).c$$I$I,[12, 146]), "ScrollBar.background", scrollBarTrack, "ScrollBar.foreground", control, "ScrollBar.width",  new Integer(16), "ScrollPane.background", control, "ScrollPane.foreground", controlText, "Viewport.background", control, "Viewport.foreground", textText, "Slider.foreground", control, "Slider.background", control, "Slider.horizontalSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[200, 21]), "Slider.verticalSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[21, 200]), "Slider.minimumHorizontalSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[36, 21]), "Slider.minimumVerticalSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[21, 36]), "Spinner.font", sansSerifPlain12, "Spinner.background", control, "Spinner.foreground", control, "Spinner.arrowButtonSize", Clazz_new_((I$[13]||$incl$(13)).c$$I$I,[16, 5]), "SplitPane.background", control, "SplitPane.dividerSize",  new Integer(7), "SplitPaneDivider.draggingColor", darkGray, "TabbedPane.background", control, "TabbedPane.foreground", controlText, "TabbedPane.selected", null, "TabbedPane.textIconGap", four, "TabbedPane.tabsOverlapBorder", (I$[14]||$incl$(14)).FALSE, "TabbedPane.labelShift", new Integer(1), "TabbedPane.selectedLabelShift", new Integer(-1), "TabbedPane.tabInsets", tabbedPaneTabInsets, "TabbedPane.selectedTabPadInsets", tabbedPaneTabPadInsets, "TabbedPane.tabAreaInsets", tabbedPaneTabAreaInsets, "TabbedPane.contentBorderInsets", tabbedPaneContentBorderInsets, "TabbedPane.tabRunOverlay",  new Integer(2), "Table.font", dialogPlain12, "Table.foreground", controlText, "Table.background", window, "Table.selectionForeground", textHighlightText, "Table.selectionBackground", textHighlight, "Table.dropLineColor", controlShadow, "Table.dropLineShortColor", black, "Table.gridColor", gray, "Table.focusCellBackground", window, "Table.focusCellForeground", controlText, "Table.scrollPaneBorder", loweredBevelBorder, "Table.sortIconColor", controlShadow, "TableHeader.font", dialogPlain12, "TableHeader.foreground", controlText, "TableHeader.background", control, "TextField.font", sansSerifPlain12, "TextField.background", window, "TextField.foreground", textText, "TextField.inactiveForeground", disabledTextColor, "TextField.inactiveBackground", control, "TextField.margin", zeroInsets, "FormattedTextField.font", sansSerifPlain12, "FormattedTextField.background", window, "FormattedTextField.foreground", textText, "FormattedTextField.inactiveForeground", disabledTextColor, "FormattedTextField.inactiveBackground", control, "FormattedTextField.caretForeground", textText, "FormattedTextField.margin", zeroInsets, "PasswordField.font", monospacedPlain12, "PasswordField.background", window, "PasswordField.foreground", textText, "PasswordField.inactiveForeground", disabledTextColor, "PasswordField.inactiveBackground", control, "PasswordField.margin", zeroInsets, "PasswordField.echoChar", new Character('*'), "TextArea.font", sansSerifPlain12, "TextArea.background", window, "TextArea.foreground", textText, "TextArea.inactiveForeground", disabledTextColor, "TextArea.margin", zeroInsets, "TextPane.font", serifPlain12, "TextPane.background", white, "TextPane.foreground", textText, "TextPane.inactiveForeground", disabledTextColor, "TextPane.margin", editorMargin, "EditorPane.font", serifPlain12, "EditorPane.background", white, "EditorPane.foreground", textText, "EditorPane.inactiveForeground", disabledTextColor, "EditorPane.margin", editorMargin, "TitledBorder.titleColor", controlText, "TitledBorder.border", etchedBorder, "ToolBar.font", dialogPlain12, "ToolBar.background", control, "ToolBar.foreground", controlText, "ToolBar.shadow", controlShadow, "ToolBar.darkShadow", controlDkShadow, "ToolBar.light", controlHighlight, "ToolBar.highlight", controlLtHighlight, "ToolBar.dockingBackground", control, "ToolBar.dockingForeground", red, "ToolBar.floatingBackground", control, "ToolBar.floatingForeground", darkGray, "ToolBar.border", etchedBorder, "ToolBar.separatorSize", toolBarSeparatorSize, "Tree.paintLines", (I$[14]||$incl$(14)).TRUE, "Tree.lineTypeDashed", (I$[14]||$incl$(14)).FALSE, "Tree.background", window, "Tree.foreground", textText, "Tree.hash", gray, "Tree.textForeground", textText, "Tree.textBackground", table.get$O("text"), "Tree.selectionForeground", textHighlightText, "Tree.selectionBackground", textHighlight, "Tree.leftChildIndent",  new Integer(7), "Tree.rightChildIndent",  new Integer(13), "Tree.rowHeight",  new Integer(16), "Tree.scrollsOnExpand", (I$[14]||$incl$(14)).TRUE, "Tree.timeFactor", oneThousand]);
table.putDefaults$OA(defaults);
});

Clazz_newMeth(C$, 'getName', function () {
return "SwingJS";
});

Clazz_newMeth(C$, 'getID', function () {
return "SwingJS";
});

Clazz_newMeth(C$, 'getDescription', function () {
return "SwingJS L&F";
});

Clazz_newMeth(C$, 'isNativeLookAndFeel', function () {
return true;
});

Clazz_newMeth(C$, 'isSupportedLookAndFeel', function () {
return true;
});
})();
//Created 2018-05-15 01:03:20
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','javax.swing.BorderFactory','swingjs.plaf.JSComponentUI','swingjs.plaf.ButtonListener','javax.swing.UIManager','javax.swing.LookAndFeel','java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSButtonUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.label = null;
this.itemNode = null;
this.menuItem = null;
this.button = null;
this.isSimpleButton = false;
this.shiftOffset = 0;
this.defaultTextShiftOffset = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.shiftOffset = 0;
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
this.isSimpleButton = true;
this.allowPaintedBackground = false;
if (this.domNode == null ) {
this.domNode = this.$enableNode = this.newDOMObject$S$S$SA("button", this.id, ["type", "button"]);
(I$[1]||$incl$(1)).setStyles(this.domNode, ["lineHeight", "0.8"]);
this.iconNode = this.newDOMObject$S$S$SA("span", this.id + "_icon", []);
this.textNode = this.newDOMObject$S$S$SA("span", this.id + "_btn", []);
this.domNode.appendChild(this.iconNode);
this.domNode.appendChild(this.textNode);
this.setDataComponent$swingjs_api_js_DOMNode(this.domNode);
this.setDataComponent$swingjs_api_js_DOMNode(this.iconNode);
}this.setPadding$java_awt_Insets(this.button.getMargin());
this.setIconAndText$S$javax_swing_ImageIcon$I$S("button", this.button.getIcon(), this.button.getIconTextGap(), this.button.getText());
if (this.button.getBorder() == null  || this.button.getBorder() === (I$[2]||$incl$(2)).emptyBorder  ) (I$[1]||$incl$(1)).setStyles(this.domNode, ["border", "none"]);
 else if (this.button.getBorder() === (I$[2]||$incl$(2)).html5Border ) (I$[1]||$incl$(1)).setStyles(this.domNode, ["border", null]);
return this.domNode;
});

Clazz_newMeth(C$, 'createItem$S$swingjs_api_js_DOMNode', function (type, label) {
var text = this.button.getText();
var icon = this.button.getIcon();
var gap = this.button.getIconTextGap();
if (("|").equals$O(text) || ("-").equals$O(text) ) {
text = null;
}this.itemNode = this.newDOMObject$S$S$SA("li", this.id + type, []);
if (text == null  && icon == null  ) return this.itemNode;
var aNode = this.newDOMObject$S$S$SA("a", this.id + type + "_a" , []);
(I$[1]||$incl$(1)).setStyles(aNode, ["margin", "1px 4px 1px 4px"]);
this.itemNode.appendChild(aNode);
if (label == null ) {
if (this.iconNode == null ) this.iconNode = this.newDOMObject$S$S$SA("span", this.id + "_icon", []);
if (this.textNode == null ) this.textNode = this.newDOMObject$S$S$SA("span", this.id + "_text", []);
this.$$O(this.iconNode).attr("role", "menucloser");
this.$$O(this.textNode).attr("role", "menucloser");
this.setDataUI$swingjs_api_js_DOMNode(this.iconNode);
this.setDataUI$swingjs_api_js_DOMNode(this.textNode);
aNode.appendChild(this.iconNode);
aNode.appendChild(this.textNode);
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(aNode, this.c.getFont());
this.$enableNode = aNode;
this.setIconAndText$S$javax_swing_ImageIcon$I$S("btn", icon, gap, text);
} else {
aNode.appendChild(label);
}this.setDataUI$swingjs_api_js_DOMNode(aNode);
this.setDataComponent$swingjs_api_js_DOMNode(aNode);
this.setDataComponent$swingjs_api_js_DOMNode(this.itemNode);
return this.itemNode;
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O', function (target, eventType, jQueryEvent) {
if ((I$[3]||$incl$(3)).debugging) System.out.println$S("JSButtonUI handleJSEvent for " + (target).id);
if (this.menuItem != null  && this.domBtn == null  ) {
switch (eventType) {
case 502:
this.menuItem.doClick$I(0);
return true;
}
}return false;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.button = jc;
this.installDefaults$javax_swing_AbstractButton(this.button);
this.installListeners$javax_swing_AbstractButton(this.button);
this.installKeyboardActions$javax_swing_AbstractButton(this.button);
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
this.uninstallKeyboardActions$javax_swing_AbstractButton(this.button);
this.uninstallListeners$javax_swing_AbstractButton(this.button);
});

Clazz_newMeth(C$, 'installListeners$javax_swing_AbstractButton', function (b) {
var listener = Clazz_new_((I$[4]||$incl$(4)).c$$swingjs_plaf_JSButtonUI$Z,[this, this.isMenuItem]);
if (listener != null ) {
b.addMouseListener$java_awt_event_MouseListener(listener);
b.addMouseMotionListener$java_awt_event_MouseMotionListener(listener);
b.addFocusListener$java_awt_event_FocusListener(listener);
b.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
b.addChangeListener$javax_swing_event_ChangeListener(listener);
}});

Clazz_newMeth(C$, 'uninstallListeners$javax_swing_AbstractButton', function (b) {
var listener = this.getButtonListener$javax_swing_AbstractButton(b);
if (listener != null ) {
b.removeMouseListener$java_awt_event_MouseListener(listener);
b.removeMouseMotionListener$java_awt_event_MouseMotionListener(listener);
b.removeFocusListener$java_awt_event_FocusListener(listener);
b.removeChangeListener$javax_swing_event_ChangeListener(listener);
b.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'installKeyboardActions$javax_swing_AbstractButton', function (b) {
var listener = this.getButtonListener$javax_swing_AbstractButton(b);
if (listener != null ) {
listener.installKeyboardActions$javax_swing_JComponent(b);
}});

Clazz_newMeth(C$, 'uninstallKeyboardActions$javax_swing_AbstractButton', function (b) {
var listener = this.getButtonListener$javax_swing_AbstractButton(b);
if (listener != null ) {
listener.uninstallKeyboardActions$javax_swing_JComponent(b);
}});

Clazz_newMeth(C$, 'getButtonListener$javax_swing_AbstractButton', function (b) {
var listeners = b.getMouseMotionListeners();
if (listeners != null ) {
for (var counter = 0; counter < listeners.length; counter++) {
if (Clazz_instanceOf(listeners[counter], "swingjs.plaf.ButtonListener")) {
return listeners[counter];
}}
}return null;
});

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "Button.";
});

Clazz_newMeth(C$, 'installDefaults$javax_swing_AbstractButton', function (b) {
var pp = this.getPropertyPrefix();
this.defaultTextShiftOffset = (I$[5]||$incl$(5)).getInt$O(pp + "textShiftOffset");
if (b.getMargin() == null  || (Clazz_instanceOf(b.getMargin(), "javax.swing.plaf.UIResource")) ) {
b.setMargin$java_awt_Insets((I$[5]||$incl$(5)).getInsets$O(pp + "margin"));
}(I$[6]||$incl$(6)).installColorsAndFont$javax_swing_JComponent$S$S$S(b, pp + "background", pp + "foreground", pp + "font");
(I$[6]||$incl$(6)).installBorder$javax_swing_JComponent$S(b, pp + "border");
(I$[6]||$incl$(6)).installProperty$javax_swing_JComponent$S$O(b, "iconTextGap",  new Integer(4));
});

Clazz_newMeth(C$, 'getCSSAdjustment$Z', function (addingCSS) {
return Clazz_new_((I$[7]||$incl$(7)).c$$I$I,[(this.itemNode == null  ? 0 : 10), 0]);
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I', function (width, height) {
if (this.isSimpleButton && (this.imageNode == null  || this.button.getText() == null  ) ) (I$[1]||$incl$(1)).setSize(this.innerNode = this.domNode, width, height);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:20
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['java.awt.Color','swingjs.JSUtil','swingjs.api.js.DOMNode','swingjs.JSToolkit','javajs.util.PT','java.awt.Dimension',['java.awt.Component','.BaselineResizeBehavior'],'javax.swing.UIManager','java.awt.Point','java.awt.Toolkit','java.awt.event.FocusEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSComponentUI", null, 'javax.swing.plaf.ComponentUI', ['java.awt.peer.ContainerPeer', 'swingjs.plaf.JSEventHandler', 'java.beans.PropertyChangeListener', 'javax.swing.event.ChangeListener']);
C$.rootPaneColor = null;
C$.incr = 0;
C$.borderTest = false;
C$.debugging = false;
C$.frameZ = 0;
C$.focusedUI = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.rootPaneColor = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I,[238, 238, 238]);
C$.frameZ = 19000;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.id = null;
this.c = null;
this.jc = null;
this.outerNode = null;
this.innerNode = null;
this.domNode = null;
this.centeringNode = null;
this.imageNode = null;
this.draggable = false;
this.domBtn = null;
this.$enableNode = null;
this.enableNodes = null;
this.iconNode = null;
this.textNode = null;
this.textAlign = null;
this.valueNode = null;
this.scrollNode = null;
this.iconHeight = 0;
this.focusNode = null;
this.children = null;
this.num = 0;
this.isToolbarFixed = false;
this.isTainted = false;
this.boundsSet = false;
this.isMenuItem = false;
this.isMenu = false;
this.x = 0;
this.y = 0;
this.preferredSize = null;
this.isContainer = false;
this.isWindow = false;
this.isRootPane = false;
this.isContentPane = false;
this.parent = null;
this.currentText = null;
this.currentIcon = null;
this.currentGap = 0;
this.scrollPaneUI = null;
this.classID = null;
this.body = null;
this.document = null;
this.applet = null;
this.needPreferred = false;
this.width = 0;
this.height = 0;
this.containerNode = null;
this.isNull = false;
this.waitImage = null;
this.canAlignText = false;
this.canAlignIcon = false;
this.createMsgs = null;
this.layingOut = false;
this.isDisposed = false;
this.actualHeight = 0;
this.actualWidth = 0;
this.allowPaintedBackground = false;
this.colorUNKNOWN = null;
this.inactiveForeground = null;
this.inactiveBackground = null;
this.enabled = false;
this.jsActualWidth = 0;
this.jsActualHeight = 0;
this.dropTarget = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.isToolbarFixed = true;
this.isTainted = true;
this.boundsSet = false;
this.isMenuItem = false;
this.isMenu = false;
this.currentGap = 2147483647;
this.createMsgs = "";
this.allowPaintedBackground = true;
this.colorUNKNOWN = Clazz_new_((I$[1]||$incl$(1)));
this.inactiveForeground = this.colorUNKNOWN;
this.inactiveBackground = this.colorUNKNOWN;
this.enabled = true;
this.dropTarget = this;
}, 1);

Clazz_newMeth(C$, 'setDraggable$javajs_api_JSFunction', function (f) {
this.draggable = true;
(I$[2]||$incl$(2)).J2S._setDraggable(this.updateDOMNode(), f);
});

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'setDoc', function () {
{
this.document = document; this.body = document.body;
}
C$.debugging = (I$[2]||$incl$(2)).debugging;
});

Clazz_newMeth(C$, 'installJS', function () {
{
this.c.addChangeListener$javax_swing_event_ChangeListener && this.c.addChangeListener$javax_swing_event_ChangeListener(this);
}
this.c.addPropertyChangeListener$java_beans_PropertyChangeListener(this);
});

Clazz_newMeth(C$, 'uninstallJS', function () {
{
this.c && this.c.removeChangeListener$javax_swing_event_ChangeListener && this.c.removeChangeListener$javax_swing_event_ChangeListener(this);
this.c && this.c.removePropertyChangeListener$java_beans_PropertyChangeListener(this);
}
if (this.outerNode != null ) {
(I$[3]||$incl$(3)).remove(this.outerNode);
this.outerNode = null;
}});

Clazz_newMeth(C$, '$$O', function (node) {
return (I$[2]||$incl$(2)).getJQuery().$(node);
});

Clazz_newMeth(C$, 'set$javax_swing_JComponent', function (target) {
this.c = target;
this.jc = this.c;
this.applet = (I$[4]||$incl$(4)).getHTML5Applet$java_awt_Component(this.c);
this.newID$Z(false);
this.installUI$javax_swing_JComponent(target);
this.installJS();
if (this.needPreferred) p$.getHTMLSize.apply(this, []);
return this;
});

Clazz_newMeth(C$, 'newID$Z', function (forceNew) {
this.classID = this.c.getUIClassID();
if (this.id == null  || forceNew ) {
this.num = ++C$.incr;
this.id = this.c.getHTMLName$S(this.classID) + "_" + this.num ;
}});

Clazz_newMeth(C$, 'reInit', function () {
this.setTainted();
this.domNode = null;
this.newID$Z(true);
});

Clazz_newMeth(C$, 'setDataComponent$swingjs_api_js_DOMNode', function (button) {
(I$[3]||$incl$(3)).setAttr(button, "data-component", this.c);
});

Clazz_newMeth(C$, 'ignoreAllMouseEvents$swingjs_api_js_DOMNode', function (node) {
this.$$O(node).addClass("swingjs-ui");
});

Clazz_newMeth(C$, 'setDataUI$swingjs_api_js_DOMNode', function (node) {
(I$[3]||$incl$(3)).setAttr(node, "data-ui", this);
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O', function (target, eventType, jQueryEvent) {
return true;
});

Clazz_newMeth(C$, 'setJ2sMouseHandler$swingjs_api_js_DOMNode', function (frameNode) {
(I$[3]||$incl$(3)).setAttrs(frameNode, ["applet", this.applet, "_frameViewer", this.jc.getFrameViewer()]);
(I$[2]||$incl$(2)).J2S._jsSetMouse(frameNode, true);
});

Clazz_newMeth(C$, 'getFocusedUI', function () {
return C$.focusedUI;
});

Clazz_newMeth(C$, 'addJQueryFocusCallbacks', function () {
var node = this.$$O(this.focusNode);
var me = this;
{
node.focus(function() {me.notifyFocus$Z(true)});
node.blur(function() {me.notifyFocus$Z(false)});
}
});

Clazz_newMeth(C$, 'bindJSEvents$swingjs_api_js_DOMNode$S$I$Z', function (node, eventList, eventID, andSetCSS) {
var f = null;
var me = this;
if (andSetCSS) {
this.setDataUI$swingjs_api_js_DOMNode(node);
this.ignoreAllMouseEvents$swingjs_api_js_DOMNode(node);
}{
f = function(event) { me.handleJSEvent$O$I$O(node, eventID, event) }
}
this.$$O(node).bind(eventList, f);
});

Clazz_newMeth(C$, 'bindJSKeyEvents$swingjs_api_js_DOMNode$Z', function (node, andFocusOut) {
this.setDataUI$swingjs_api_js_DOMNode(node);
this.bindJSEvents$swingjs_api_js_DOMNode$S$I$Z(node, "keydown keypress keyup" + (andFocusOut ? " focusout" : ""), 401, false);
if (andFocusOut) this.addJQueryFocusCallbacks();
});

Clazz_newMeth(C$, 'revalidate', function () {
this.jc.revalidate();
});

Clazz_newMeth(C$, 'setTainted', function () {
this.isTainted = true;
});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
if (C$.debugging) System.out.println$S(this.id + " stateChange " + this.dumpEvent$java_util_EventObject(e) );
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (e) {
var prop = e.getPropertyName();
if (this.isDisposed && this.c.visible && prop == "ancestor"   && e.getNewValue() != null  ) this.setVisible$Z(true);
this.propertyChangedCUI$S(prop);
});

Clazz_newMeth(C$, 'propertyChangedFromListener$S', function (prop) {
this.propertyChangedCUI$S(prop);
});

Clazz_newMeth(C$, 'propertyChangedCUI$S', function (prop) {
if (!this.isMenu) this.updateDOMNode();
if (prop == "preferredSize") {
this.preferredSize = this.c.getPreferredSize();
this.getPreferredSize();
return;
}if (prop == "background") {
this.setBackground$java_awt_Color(this.c.getBackground());
return;
}if (prop == "foreground") {
this.setForeground$java_awt_Color(this.c.getForeground());
return;
}if (prop == "opaque") {
this.setBackground$java_awt_Color(this.c.getBackground());
return;
}if (prop == "inverted") {
this.updateDOMNode();
return;
}if (prop == "text") {
var val = (this.c).getText();
if (val == null  ? this.currentText != null  : !val.equals$O(this.currentText)) this.setIconAndText$S$javax_swing_ImageIcon$I$S(prop, this.currentIcon, this.currentGap, val);
return;
}if (prop == "iconTextGap") {
if (this.iconNode != null ) {
var gap = (this.c).getIconTextGap();
if (this.currentGap != gap) this.setIconAndText$S$javax_swing_ImageIcon$I$S(prop, this.currentIcon, gap, this.currentText);
}return;
}if (prop == "icon") {
if (this.iconNode != null ) {
var icon = (this.c).getIcon();
if (icon == null  ? this.currentIcon != null  : !icon.equals$O(this.currentIcon)) this.setIconAndText$S$javax_swing_ImageIcon$I$S(prop, icon, this.currentGap, this.currentText);
}return;
}if (prop == "horizontalAlignment" || prop == "verticalAlignment" ) {
p$.setAlignment.apply(this, []);
return;
}if (C$.debugging) System.out.println$S("JSComponentUI: unrecognized prop: " + this.id + " " + prop );
});

Clazz_newMeth(C$, 'setIconAndText$S$javax_swing_ImageIcon$I$S', function (prop, icon, gap, text) {
this.actualWidth = this.actualHeight = 0;
this.currentIcon = icon;
this.currentText = text;
this.currentGap = gap;
this.canAlignText = false;
this.canAlignIcon = false;
this.imageNode = null;
if (this.iconNode != null ) {
(I$[3]||$incl$(3)).setAttr(this.iconNode, "innerHTML", "");
if (icon != null ) {
this.imageNode = (I$[3]||$incl$(3)).getImageNode(icon.getImage());
(I$[3]||$incl$(3)).setStyles(this.imageNode, ["vertical-align", "middle"]);
this.iconNode.appendChild(this.imageNode);
this.iconHeight = icon.getIconHeight();
}}if (text == null  || text.length$() == 0 ) {
text = "";
if (icon != null ) this.canAlignIcon = true;
} else {
if (icon == null ) {
this.canAlignText = true;
} else {
if (gap == 2147483647) gap = this.getDefaultIconTextGap();
if (gap != 0 && text != null  ) (I$[3]||$incl$(3)).addHorizontalGap(this.iconNode, gap);
}if (text.indexOf("<html>") == 0) {
text = (I$[5]||$incl$(5)).rep$S$S$S(text.substring(6, text.length$() - 7), "</br>", "");
}}var obj = null;
if (this.textNode != null ) {
prop = "innerHTML";
obj = this.textNode;
text = (I$[5]||$incl$(5)).rep$S$S$S(text, "<", "&lt;");
} else if (this.valueNode != null ) {
prop = "value";
obj = this.valueNode;
if (this.iconNode != null ) (I$[3]||$incl$(3)).setVisible(obj, text != null );
}if (obj != null ) this.setProp$swingjs_api_js_DOMNode$S$S(obj, prop, text);
if (this.centeringNode == null ) {
p$.setBackgroundFor$swingjs_api_js_DOMNode$java_awt_Color.apply(this, [this.valueNode, this.c.getBackground()]);
} else {
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.centeringNode, this.c.getFont());
}if (!this.boundsSet) this.setHTMLSize$swingjs_api_js_DOMNode$Z(this.domNode, true);
if (this.centeringNode != null ) p$.setAlignment.apply(this, []);
if (C$.debugging) System.out.println$S("JSComponentUI: setting " + this.id + " " + prop );
});

Clazz_newMeth(C$, 'getDefaultIconTextGap', function () {
return 0;
});

Clazz_newMeth(C$, 'setAllowPaintedBackground$Z', function (TF) {
this.allowPaintedBackground = TF;
});

Clazz_newMeth(C$, 'getDOMNode', function () {
return this.updateDOMNode();
});

Clazz_newMeth(C$, 'updateDOMNode', function () {
var msg = "Swingjs WARNING: default JSComponentUI is being used for " + this.getClass().getName();
if (C$.debugging && this.createMsgs.indexOf(msg) < 0 ) {
this.createMsgs += msg;
(I$[2]||$incl$(2)).alert$O(msg);
}System.out.println$S(msg);
return (this.domNode == null  ? this.domNode = (I$[3]||$incl$(3)).createElement("div", this.id) : this.domNode);
});

Clazz_newMeth(C$, 'setCssFont$swingjs_api_js_DOMNode$java_awt_Font', function (obj, font) {
if (font != null ) {
var istyle = font.getStyle();
var name = font.getFamily();
if (name == "Dialog" || name == "SansSerif" ) name = "Arial";
(I$[3]||$incl$(3)).setStyles(obj, ["font-family", name, "font-size", font.getSize() + "px", "font-style", ((istyle & 2) == 0 ? "normal" : "italic"), "font-weight", ((istyle & 1) == 0 ? "normal" : "bold")]);
}this.enabled = !this.c.isEnabled();
this.setEnabled$Z(this.c.isEnabled());
return obj;
});

Clazz_newMeth(C$, 'newDOMObject$S$S$SA', function (key, id, attr) {
var obj = (I$[3]||$incl$(3)).createElement(key, id);
for (var i = 0; i < attr.length; ) (I$[3]||$incl$(3)).setAttr(obj, attr[i++], attr[i++]);

if (!this.c.isEnabled()) this.setEnabled$Z(false);
return obj;
});

Clazz_newMeth(C$, 'wrap$S$S$swingjs_api_js_DOMNodeA', function (type, id, elements) {
var obj = this.newDOMObject$S$S$SA(type, id + type, []);
for (var i = 0; i < elements.length; i++) {
obj.appendChild(elements[i]);
}
return obj;
});

Clazz_newMeth(C$, 'debugDump$swingjs_api_js_DOMNode', function (d) {
System.out.println$O((I$[3]||$incl$(3)).getAttr(d, "outerHTML"));
});

Clazz_newMeth(C$, 'vCenter$swingjs_api_js_DOMNode$I', function (obj, offset) {
(I$[3]||$incl$(3)).setStyles(obj, ["top", "50%", "transform", "translateY(" + offset + "%)" ]);
}, 1);

Clazz_newMeth(C$, 'setHTMLSize$swingjs_api_js_DOMNode$Z', function (obj, addCSS) {
return this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(obj, addCSS, true);
});

Clazz_newMeth(C$, 'setHTMLSize1$swingjs_api_js_DOMNode$Z$Z', function (node, addCSS, usePreferred) {
if (node == null ) return null;
addCSS = (addCSS&!this.isMenuItem);
var h;
var w;
var w0 = null;
var h0 = null;
var w0i = null;
var h0i = null;
var position = null;
var parentNode = null;
if (this.centeringNode != null  && node === this.domNode  ) node = this.centeringNode;
if (this.scrollPaneUI != null ) {
w = this.scrollPaneUI.c.getWidth();
h = this.scrollPaneUI.c.getHeight();
} else if (usePreferred && this.preferredSize != null  ) {
w = this.preferredSize.width;
h = this.preferredSize.height;
} else {
parentNode = (I$[3]||$incl$(3)).remove(node);
if (!this.isMenuItem) {
w0 = node.style.width; h0 = node.style.height; position = node.style.position;
if (node == this.centeringNode && this.innerNode) { w0i = this.innerNode.style.width; h0i = this.innerNode.style.height; }
}
(I$[3]||$incl$(3)).setStyles(node, ["position", null, "width", null, "height", null]);
if (this.innerNode != null ) (I$[3]||$incl$(3)).setStyles(this.innerNode, ["width", null, "height", null]);
var div;
if ((I$[3]||$incl$(3)).getAttr(node, "tagName") === "DIV" ) div = node;
 else div = this.wrap$S$S$swingjs_api_js_DOMNodeA("div", this.id + "_temp", [node]);
(I$[3]||$incl$(3)).setPositionAbsolute(div, -2147483648, 0);
this.$$O(this.body).after(div);
var r = div.getBoundingClientRect();
w = (Math.max(0, Math.ceil(r.width))|0);
h = (Math.max(0, Math.ceil(r.height))|0);
if (!usePreferred) {
this.actualWidth = w;
this.actualHeight = h;
}this.$$O(div).detach();
}var size = this.getCSSAdjustment$Z(addCSS);
size.width = size.width+(w);
size.height = size.height+(h);
if (addCSS) {
(I$[3]||$incl$(3)).setPositionAbsolute(node, -2147483648, 0);
(I$[3]||$incl$(3)).setSize(node, size.width, size.height);
if (node === this.centeringNode ) {
(I$[3]||$incl$(3)).setPositionAbsolute(parentNode, -2147483648, 0);
(I$[3]||$incl$(3)).setSize(parentNode, size.width, size.height);
}} else {
(I$[3]||$incl$(3)).setStyles(node, ["position", null]);
if (w0 != null ) {
(I$[3]||$incl$(3)).setStyles(node, ["width", w0, "height", h0, "position", position]);
}}if (w0i != null ) {
(I$[3]||$incl$(3)).setStyles(this.innerNode, ["width", w0i, "height", h0i]);
}if (parentNode != null ) parentNode.appendChild(node);
return size;
});

Clazz_newMeth(C$, 'getCSSAdjustment$Z', function (addingCSS) {
return Clazz_new_((I$[6]||$incl$(6)).c$$I$I,[0, 0]);
});

Clazz_newMeth(C$, 'setHTMLElement', function () {
return this.setHTMLElementCUI();
});

Clazz_newMeth(C$, 'setHTMLElementCUI', function () {
if (!this.isTainted) return this.outerNode;
this.domNode = this.updateDOMNode();
p$.checkTransparent$swingjs_api_js_DOMNode.apply(this, [this.domNode]);
var children = this.getChildren();
var n = children.length;
if (this.isMenuItem) {
this.outerNode = this.domNode;
if (n == 0) return this.outerNode;
}if (this.outerNode == null ) this.outerNode = this.wrap$S$S$swingjs_api_js_DOMNodeA("div", this.id, [this.domNode]);
{
this.outerNode.setAttribute("name", this.jc.__CLASS_NAME__);
}
p$.setOuterLocationFromComponent.apply(this, []);
if (n > 0 && this.containerNode == null  ) this.containerNode = this.outerNode;
if (this.isContainer || n > 0 ) {
if (this.isContainer && !this.isMenuItem ) {
var w = this.getContainerWidth();
var h = this.getContainerHeight();
(I$[3]||$incl$(3)).setSize(this.outerNode, w, h);
if (this.isContentPane) (I$[3]||$incl$(3)).setStyles(this.outerNode, ["overflow", "hidden"]);
}if (this.isRootPane) {
if (this.jc.getFrameViewer().isApplet) {
var cdiv = (I$[4]||$incl$(4)).getHTML5Applet$java_awt_Component(this.jc)._getContentLayer();
if (cdiv != null ) cdiv.appendChild(this.outerNode);
}(I$[3]||$incl$(3)).setStyles(this.outerNode, ["overflow", "hidden"]);
}this.addChildrenToDOM$java_awt_ComponentA(children);
if (this.isWindow) {
(I$[3]||$incl$(3)).remove(this.outerNode);
this.$$O(this.body).append(this.outerNode);
}}this.isTainted = false;
if (this.jc.getDropTarget() != null ) p$.setDropTarget.apply(this, []);
return this.outerNode;
});

Clazz_newMeth(C$, 'setOuterLocationFromComponent', function () {
if (this.outerNode != null  && !this.isMenuItem ) {
if (this.parent == null  && this.jc.getParent() != null   && (this.parent = this.jc.getParent().getUI()) != null   && this.parent.outerNode != null  ) this.parent.outerNode.appendChild(this.outerNode);
(I$[3]||$incl$(3)).setPositionAbsolute(this.outerNode, -2147483648, 0);
(I$[3]||$incl$(3)).setStyles(this.outerNode, ["left", (this.x = this.c.getX()) + "px", "top", (this.y = this.c.getY()) + "px"]);
}});

Clazz_newMeth(C$, 'getChildren', function () {
return (this.children == null  ? this.jc.getComponents() : this.children);
});

Clazz_newMeth(C$, 'addChildrenToDOM$java_awt_ComponentA', function (children) {
var n = children.length;
for (var i = 0; i < n; i++) {
var ui = (I$[4]||$incl$(4)).getUI$java_awt_Component$Z(children[i], false);
if (ui == null  || ui.isNull ) {
continue;
}ui.parent = this;
if (ui.getOuterNode() == null ) {
System.out.println$S("JSCUI could not add " + ui.c.getName() + " to " + this.c.getName() );
} else {
if (ui.domNode !== ui.outerNode  && (I$[3]||$incl$(3)).getParent(ui.domNode) == null  ) ui.outerNode.appendChild(ui.domNode);
this.containerNode.appendChild(ui.outerNode);
}}
});

Clazz_newMeth(C$, 'getContainerWidth', function () {
return this.width = this.c.getWidth();
});

Clazz_newMeth(C$, 'getContainerHeight', function () {
return this.height = this.c.getHeight();
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
var d = p$.getHTMLSize.apply(this, []);
if (C$.debugging) System.out.println$S("CUI >> getPrefSize >> " + d + " for " + this.id );
return d;
});

Clazz_newMeth(C$, 'getHTMLSize', function () {
return this.setHTMLSize$swingjs_api_js_DOMNode$Z(this.updateDOMNode(), false);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics$javax_swing_JComponent', function (g, c) {
if (C$.borderTest) {
g.setColor$java_awt_Color((I$[1]||$incl$(1)).red);
g.drawRect$I$I$I$I(0, 0, c.getWidth(), c.getHeight());
System.out.println$S("drawing " + c.getWidth() + " " + c.getHeight() );
}this.setHTMLElement();
if (c.isOpaque() && this.allowPaintedBackground ) {
g.setColor$java_awt_Color(c.getBackground());
g.fillRect$I$I$I$I(0, 0, c.getWidth(), c.getHeight());
this.setBackgroundPainted();
}this.paint$java_awt_Graphics$javax_swing_JComponent(g, c);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
this.update$java_awt_Graphics$javax_swing_JComponent(g, this.jc);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics$javax_swing_JComponent', function (g, c) {
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (tm, x, y, width, height) {
});

Clazz_newMeth(C$, 'print$java_awt_Graphics', function (g) {
(I$[2]||$incl$(2)).notImplemented$S("");
});

Clazz_newMeth(C$, 'getMinimumSize', function () {
return this.getPreferredSize();
});

Clazz_newMeth(C$, 'getMaximumSize', function () {
if (this.isToolbarFixed) {
var parent = this.jc.getParent();
var parentClass = (parent == null  ? null : parent.getUIClassID());
if ("ToolBarUI" == parentClass) return this.getPreferredSize();
}return null;
});

Clazz_newMeth(C$, 'getMinimumSize$javax_swing_JComponent', function (jc) {
return this.getMinimumSize();
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent', function (jc) {
return this.getPreferredSize();
});

Clazz_newMeth(C$, 'getMaximumSize$javax_swing_JComponent', function (jc) {
return this.getMaximumSize();
});

Clazz_newMeth(C$, 'contains$javax_swing_JComponent$I$I', function (c, x, y) {
return c.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'createUI$javax_swing_JComponent', function (c) {
return null;
}, 1);

Clazz_newMeth(C$, 'getBaseline$javax_swing_JComponent$I$I', function (c, width, height) {
if (c == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Component must be non-null"]);
}if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$javax_swing_JComponent', function (c) {
if (c == null ) {
throw Clazz_new_(Clazz_load('java.lang.NullPointerException').c$$S,["Component must be non-null"]);
}return (I$[7]||$incl$(7)).OTHER;
});

Clazz_newMeth(C$, 'getJSTextValue', function () {
return (I$[3]||$incl$(3)).getAttr(this.domNode, this.valueNode == null  ? "innerHTML" : "value");
});

Clazz_newMeth(C$, 'getOuterNode', function () {
return (this.outerNode == null  ? this.setHTMLElement() : this.outerNode);
});

Clazz_newMeth(C$, 'setProp$swingjs_api_js_DOMNode$S$S', function (obj, prop, val) {
return (I$[3]||$incl$(3)).setAttr(obj, prop, val);
});

Clazz_newMeth(C$, 'isObscured', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'canDetermineObscurity', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
var node = this.getOuterNode();
if (node == null ) node = this.domNode;
(I$[3]||$incl$(3)).setVisible(node, b);
if (b) {
if (this.isDisposed) p$.undisposeUI$swingjs_api_js_DOMNode.apply(this, [node]);
this.toFront();
}});

Clazz_newMeth(C$, 'toFront', function () {
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
if (b == this.enabled ) return;
this.enabled = b;
if (this.$enableNode != null ) p$.enableNode$swingjs_api_js_DOMNode$Z.apply(this, [this.$enableNode, b]);
 else if (this.enableNodes != null ) for (var i = 0; i < this.enableNodes.length; i++) p$.enableNode$swingjs_api_js_DOMNode$Z.apply(this, [this.enableNodes[i], b]);

});

Clazz_newMeth(C$, 'enableNode$swingjs_api_js_DOMNode$Z', function (node, b) {
if (node == null ) return;
(I$[3]||$incl$(3)).setAttr(node, "disabled", (b ? null : "TRUE"));
var pp = this.getPropertyPrefix();
if (!b && this.inactiveForeground === this.colorUNKNOWN  ) this.getDisabledColors$S(pp);
if (this.jc.isOpaque()) {
var bg = this.c.getBackground();
this.setBackground$java_awt_Color(b || !(Clazz_instanceOf(bg, "javax.swing.plaf.UIResource")) || this.inactiveBackground == null    ? bg : this.inactiveBackground);
}var fg = this.c.getForeground();
this.setForeground$java_awt_Color(b ? fg : this.getInactiveTextColor$java_awt_Color(fg));
});

Clazz_newMeth(C$, 'getInactiveTextColor$java_awt_Color', function (fg) {
return (this.inactiveForeground == null  ? fg : this.inactiveForeground);
});

Clazz_newMeth(C$, 'getDisabledColors$S', function (pp) {
this.inactiveBackground = (I$[8]||$incl$(8)).getColor$O(pp + "inactiveBackground");
this.inactiveForeground = (I$[8]||$incl$(8)).getColor$O(pp + "inactiveForeground");
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I$I', function (x, y, width, height, op) {
var isBounded = (width > 0 && height > 0 );
if (isBounded && !this.boundsSet ) {
if (this.c.visible) this.setVisible$Z(true);
this.boundsSet = true;
}if (C$.debugging) System.out.println$S("CUI << SetBounds >> [" + x + " " + y + " " + width + " " + height + "] op=" + op + " for " + this.id );
switch (op) {
case 3:
case 1:
x = this.c.getX();
y = this.c.getY();
if (this.x != x || this.y != y ) {
this.x = x;
this.y = y;
}p$.setOuterLocationFromComponent.apply(this, []);
if (op == 1) break;
case 4:
case 2:
if (this.scrollPaneUI != null ) {
width = Math.min(width, this.scrollPaneUI.c.getWidth());
height = Math.min(height, this.scrollPaneUI.c.getHeight());
}if (width > 0 && height > 0 ) p$.setSizeFromComponent$I$I$I.apply(this, [width, height, op]);
break;
}
});

Clazz_newMeth(C$, 'setSizeFromComponent$I$I$I', function (width, height, op) {
var size = this.getCSSAdjustment$Z(true);
this.width = width;
this.height = height;
if (C$.debugging) System.out.println$S(this.id + " setBounds " + this.x + " " + this.y + " " + this.width + " " + this.height + " op=" + op + " createDOM?" + (this.domNode == null ) );
if (this.domNode == null ) this.updateDOMNode();
this.setJSDimensions$I$I(width + size.width, height + size.height);
this.setInnerComponentBounds$I$I(width, height);
});

Clazz_newMeth(C$, 'setJSDimensions$I$I', function (width, height) {
if (this.jsActualWidth > 0) width = this.jsActualWidth;
if (this.jsActualHeight > 0) height = this.jsActualHeight;
(I$[3]||$incl$(3)).setSize(this.domNode, width, height);
if (this.outerNode != null ) (I$[3]||$incl$(3)).setSize(this.outerNode, width, height);
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I', function (width, height) {
p$.setAlignment.apply(this, []);
if (C$.debugging) System.out.println$S("CUI reshapeMe: need to reshape " + this.id + " w:" + this.width + "->" + width + " h:" + this.height + "->" + height );
});

Clazz_newMeth(C$, 'setAlignment', function () {
if (this.canAlignText) {
this.setVerticalAlignment$Z(true);
p$.setTextAlignment.apply(this, []);
} else if (this.canAlignIcon) {
this.setVerticalAlignment$Z(false);
p$.setTextAlignment.apply(this, []);
}});

Clazz_newMeth(C$, 'setTextAlignment', function () {
if (this.c.getWidth() == 0) return;
var type = (this.c).getHorizontalAlignment();
var prop = null;
switch (type) {
case 4:
case 11:
prop = "right";
break;
case 2:
case 10:
prop = "left";
break;
case 0:
prop = "center";
break;
default:
return;
}
(I$[3]||$incl$(3)).setStyles(this.domNode, ["width", this.c.getWidth() + "px", "text-align", this.textAlign = prop]);
if (this.jc.uiClassID == "LabelUI" && this.centeringNode != null  ) {
var left = 0;
var w = this.actualWidth;
if (w == 0) w = this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.centeringNode, false, false).width;
switch (type) {
case 2:
case 10:
break;
case 4:
case 11:
prop = "right";
left = this.c.getWidth() - w;
break;
case 0:
left = ((this.c.getWidth() - w)/2|0);
break;
default:
return;
}
(I$[3]||$incl$(3)).setStyles(this.centeringNode, ["position", "absolute", "left", left + "px"]);
}});

Clazz_newMeth(C$, 'setVerticalAlignment$Z', function (isText) {
var type = (this.c).getVerticalAlignment();
if (this.centeringNode == null  || this.c.getHeight() == 0 ) return;
var top = 0;
var h = this.actualHeight;
if (h == 0) {
if (isText) {
if (this.c.getFont() == null ) return;
h = this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.domNode, false, false).height;
h = h-((this.c.getFont().getFontMetrics().getDescent()));
} else {
h = this.iconHeight;
}}switch (type) {
case 1:
break;
case 3:
top = this.c.getHeight() - h;
break;
case 0:
top = ((this.c.getHeight() - h)/2|0);
break;
default:
return;
}
(I$[3]||$incl$(3)).setStyles(this.centeringNode, ["position", "absolute", "top", top + "px"]);
});

Clazz_newMeth(C$, 'handleEvent$java_awt_AWTEvent', function (e) {
});

Clazz_newMeth(C$, 'coalescePaintEvent$java_awt_event_PaintEvent', function (e) {
(I$[2]||$incl$(2)).notImplemented$S("");
});

Clazz_newMeth(C$, 'getLocationOnScreen', function () {
var offset = this.$$O(this.outerNode).offset();
return Clazz_new_((I$[9]||$incl$(9)).c$$I$I,[offset.left, offset.top]);
});

Clazz_newMeth(C$, 'getColorModel', function () {
return (I$[10]||$incl$(10)).getDefaultToolkit().getColorModel();
});

Clazz_newMeth(C$, 'getToolkit', function () {
return (I$[10]||$incl$(10)).getDefaultToolkit();
});

Clazz_newMeth(C$, 'getGraphics', function () {
return null;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
return this.c.getFontMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'dispose', function () {
this.isDisposed = true;
(I$[3]||$incl$(3)).remove(this.domNode);
if (this.domNode !== this.outerNode ) (I$[3]||$incl$(3)).remove(this.outerNode);
});

Clazz_newMeth(C$, 'undisposeUI$swingjs_api_js_DOMNode', function (node) {
if (this.c.getParent() != null ) {
var ui = this.c.getParent().getUI();
if (ui.containerNode != null ) ui.containerNode.appendChild(node);
}if (this.outerNode != null  && this.domNode !== this.outerNode  ) this.outerNode.appendChild(this.domNode);
this.isDisposed = false;
});

Clazz_newMeth(C$, 'setForeground$java_awt_Color', function (color) {
if (this.domNode != null ) (I$[3]||$incl$(3)).setStyles(this.domNode, ["color", (color == null  ? "rgba(0,0,0,0)" : (I$[4]||$incl$(4)).getCSSColor$java_awt_Color(color == null  ? (I$[1]||$incl$(1)).black : color))]);
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color', function (color) {
p$.setBackgroundFor$swingjs_api_js_DOMNode$java_awt_Color.apply(this, [this.domNode, color]);
});

Clazz_newMeth(C$, 'setBackgroundFor$swingjs_api_js_DOMNode$java_awt_Color', function (node, color) {
if (node == null  || this.isMenuItem ) return;
(I$[3]||$incl$(3)).setStyles(node, ["background-color", (I$[4]||$incl$(4)).getCSSColor$java_awt_Color(color == null  ? C$.rootPaneColor : color)]);
if (this.allowPaintedBackground && this.jc.selfOrParentBackgroundPainted() ) p$.setTransparent$swingjs_api_js_DOMNode.apply(this, [node]);
 else p$.checkTransparent$swingjs_api_js_DOMNode.apply(this, [node]);
});

Clazz_newMeth(C$, 'checkTransparent$swingjs_api_js_DOMNode', function (node) {
if (!this.c.isOpaque() && node != null  ) p$.setTransparent$swingjs_api_js_DOMNode.apply(this, [node]);
});

Clazz_newMeth(C$, 'setBackgroundPainted', function () {
p$.setTransparent$swingjs_api_js_DOMNode.apply(this, [this.domNode]);
});

Clazz_newMeth(C$, 'setTransparent$swingjs_api_js_DOMNode', function (node) {
(I$[3]||$incl$(3)).setStyles(node, ["background", "transparent"]);
});

Clazz_newMeth(C$, 'setFont$java_awt_Font', function (f) {
if (this.domNode != null ) this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.domNode, f);
});

Clazz_newMeth(C$, 'updateCursorImmediately', function () {
var curs;
switch (this.c.getCursor().getType()) {
case 1:
curs = "crosshair";
break;
case 3:
curs = "wait";
break;
case 8:
curs = "ns-resize";
break;
case 12:
curs = "grab";
break;
case 13:
curs = "move";
break;
default:
curs = "default";
break;
}
(I$[3]||$incl$(3)).setStyles(this.getOuterNode(), ["cursor", curs]);
this.setWaitImage$Z(curs == "wait");
});

Clazz_newMeth(C$, 'setWaitImage$Z', function (doShow) {
if (this.waitImage != null ) {
if (!doShow) return;
var path = "";
{
path = this.applet._j2sPath;
}
path += "/img/cursor_wait.gif";
if (C$.debugging) System.out.println$S("loading wait cursor " + path);
this.waitImage = this.newDOMObject$S$S$SA("image", this.id + "_waitImage", ["src", path]);
}if (doShow) this.$$O(this.waitImage).show();
 else this.$$O(this.waitImage).hide();
});

Clazz_newMeth(C$, 'requestFocus$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause', function (lightweightChild, temporary, focusedWindowChangeAllowed, time, cause) {
if (this.focusNode == null ) return false;
this.$$O(this.focusNode).focus();
if (this.textNode != null ) this.$$O(this.textNode).select();
 else if (this.valueNode != null ) this.$$O(this.valueNode).select();
return true;
});

Clazz_newMeth(C$, 'isFocusable', function () {
return (this.focusNode != null );
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer', function (producer) {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'createImage$I$I', function (width, height) {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'createVolatileImage$I$I', function (width, height) {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
(I$[2]||$incl$(2)).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver', function (img, w, h, o) {
(I$[2]||$incl$(2)).notImplemented$S("");
return 0;
});

Clazz_newMeth(C$, 'getGraphicsConfiguration', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'handlesWheelScrolling', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'getBackBuffer', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'destroyBuffers', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
});

Clazz_newMeth(C$, 'reparent$java_awt_peer_ContainerPeer', function (newContainer) {
(I$[2]||$incl$(2)).notImplemented$S("");
});

Clazz_newMeth(C$, 'isReparentSupported', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'layout', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
});

Clazz_newMeth(C$, 'getBounds', function () {
(I$[2]||$incl$(2)).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'hasFocus', function () {
return this.focusNode != null  && this.focusNode === (I$[3]||$incl$(3)).getAttr(this.document, "activeElement")  ;
});

Clazz_newMeth(C$, 'notifyFocus$Z', function (focusGained) {
var e = Clazz_new_((I$[11]||$incl$(11)).c$$java_awt_Component$I,[this.c, focusGained ? 1004 : 1005]);
if (focusGained) {
C$.focusedUI = this;
(I$[10]||$incl$(10)).getEventQueue().postEvent$java_awt_AWTEvent(e);
} else {
C$.focusedUI = null;
{
(I$[10]||$incl$(10)).getEventQueue().dispatchEventAndWait$java_awt_AWTEvent$O(e, this.c);
}}});

Clazz_newMeth(C$, 'getZIndex$S', function (what) {
var node = this.domNode;
var z = 0;
{
if (what) return this.applet._z[what];
while (node && !node.style["z-index"]) node = node.parentElement;
z = parseInt(node.style["z-index"]);
return(!z || isNaN(z) ? 100000 : z);
}
});

Clazz_newMeth(C$, 'getInsets', function () {
return null;
});

Clazz_newMeth(C$, 'beginValidate', function () {
});

Clazz_newMeth(C$, 'endValidate', function () {
});

Clazz_newMeth(C$, 'beginLayout', function () {
if (!this.boundsSet && !this.isContainer ) this.setVisible$Z(false);
this.layingOut = true;
});

Clazz_newMeth(C$, 'endLayout', function () {
this.layingOut = false;
});

Clazz_newMeth(C$, 'getId', function () {
return this.id;
});

Clazz_newMeth(C$, 'dumpEvent$java_util_EventObject', function (e) {
return e.toString();
});

Clazz_newMeth(C$, 'toCSSString$java_awt_Color', function (c) {
var opacity = c.getAlpha();
if (opacity == 255) return "#" + C$.toRGBHexString$java_awt_Color(c);
var rgb = c.getRGB();
return "rgba(" + ((rgb >> 16) & 255) + "," + ((rgb >> 8) & 255) + "," + (rgb & 255) + "," + new Float(opacity / 255.0).toString()  + ")";
}, 1);

Clazz_newMeth(C$, 'toRGBHexString$java_awt_Color', function (c) {
var rgb = c.getRGB();
if (rgb == 0) return "000000";
var r = "00" + Integer.toHexString((rgb >> 16) & 255);
r = r.substring(r.length$() - 2);
var g = "00" + Integer.toHexString((rgb >> 8) & 255);
g = g.substring(g.length$() - 2);
var b = "00" + Integer.toHexString(rgb & 255);
b = b.substring(b.length$() - 2);
return r + g + b ;
}, 1);

Clazz_newMeth(C$, 'updateSceneGraph$javax_swing_JComponent$javax_swing_JComponent$swingjs_JSGraphics2D', function (comp, owner, g) {
var node = (comp.ui).outerNode;
var x = 0;
var y = 0;
{
x = g.$transform.m02; y = g.$transform.m12;
if (x == node.lastSceneX && y == node.lastSceneY) return;
node.lastSceneX = x; node.lastSceneY = y;
}
(I$[3]||$incl$(3)).setStyles(node, ["left", x + "px", "top", y + "px"]);
{
if (node.parentElement == null) owner.ui.outerNode.appendChild(node);
}
}, 1);

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return null;
});

Clazz_newMeth(C$, 'setPadding$java_awt_Insets', function (padding) {
(I$[3]||$incl$(3)).setStyles(this.domNode, ["padding", padding == null  ? "0px" : padding.top + "px " + padding.left + "px " + padding.bottom + "px " + padding.right + "px" ]);
});

Clazz_newMeth(C$, 'addDropTarget$java_awt_dnd_DropTarget', function (t) {
this.dropTarget = t;
p$.setDropTarget.apply(this, []);
});

Clazz_newMeth(C$, 'removeTarget', function () {
if (this.dropTarget == null ) return;
this.dropTarget = null;
p$.setDropTarget.apply(this, []);
});

Clazz_newMeth(C$, 'setDropTarget', function () {
var node;
if (this.dropTarget !== this  && ((node = this.outerNode) != null  || (node = this.domNode) != null  ) ) (I$[3]||$incl$(3)).setAttr(node, "data-dropComponent", this.jc);
});
})();
//Created 2018-05-15 01:03:21
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newInterface(P$, "JSEventHandler");
})();
//Created 2018-05-15 01:03:22
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','javax.swing.LookAndFeel']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSLabelUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.label = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.newDOMObject$S$S$SA("label", this.id, []);
this.textNode = this.newDOMObject$S$S$SA("span", this.id + "_text", []);
this.iconNode = this.newDOMObject$S$S$SA("span", this.id + "_icon", []);
this.centeringNode = this.newDOMObject$S$S$SA("span", this.id + "_cntr", []);
this.centeringNode.appendChild(this.iconNode);
this.centeringNode.appendChild(this.textNode);
this.domNode.appendChild(this.centeringNode);
}this.setIconAndText$S$javax_swing_ImageIcon$I$S("label", this.label.getIcon(), this.label.getIconTextGap(), this.label.getText());
(I$[1]||$incl$(1)).setStyles(this.domNode, ["position", "absolute", "width", this.c.getWidth() + "px", "height", this.c.getHeight() + "px"]);
if (this.actualHeight > 0) (I$[1]||$incl$(1)).setStyles(this.centeringNode, ["position", "absolute", "height", this.actualHeight + "px"]);
if (this.actualWidth > 0) (I$[1]||$incl$(1)).setStyles(this.centeringNode, ["position", "absolute", "width", this.actualWidth + "px"]);
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.centeringNode, this.c.getFont());
if (this.jc.isOpaque() && this.jc.isEnabled() ) this.setBackground$java_awt_Color(this.jc.getBackground());
return this.domNode;
});

Clazz_newMeth(C$, 'setHTMLElement', function () {
this.setHTMLElementCUI();
return this.outerNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.label = jc;
(I$[2]||$incl$(2)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "Label.background", "Label.foreground", "Label.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});
})();
//Created 2018-05-15 01:03:22
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSLayeredPaneUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isContainer = true;
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.newDOMObject$S$S$SA("div", this.id, []);
}return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});
})();
//Created 2018-05-15 01:03:22
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSLightweightUI", null, 'swingjs.plaf.JSComponentUI', 'java.awt.peer.LightweightPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:22
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','java.awt.Dimension','javax.swing.LookAndFeel']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSPanelUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$frameZ = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$frameZ = 10000;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isContainer = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
var root = this.jc.getRootPane();
this.isContentPane = (root != null  && this.jc === root.getContentPane()  );
this.domNode = this.newDOMObject$S$S$SA("div", this.id, []);
if (root != null  && root.getGlassPane() === this.c  ) (I$[1]||$incl$(1)).setVisible(this.domNode, false);
}return this.domNode;
});

Clazz_newMeth(C$, 'setHTMLSize$swingjs_api_js_DOMNode$Z', function (obj, addCSS) {
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[this.c.getWidth(), this.c.getHeight()]);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
(I$[3]||$incl$(3)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "Panel.background", "Panel.foreground", "Panel.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return null;
});
})();
//Created 2018-05-15 01:03:24
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSRootPaneUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.resizer = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'setResizer$swingjs_plaf_Resizer', function (resizer) {
this.resizer = resizer;
});

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isRootPane = this.isContainer = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.newDOMObject$S$S$SA("div", this.id, []);
}return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return null;
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I', function (width, height) {
var resizer = this.jc.getFrameViewer().getResizer();
if (resizer != null ) resizer.setPosition$I$I(0, 0);
});
})();
//Created 2018-05-15 01:03:25
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.plaf.JSComponentUI','java.awt.Dimension','swingjs.api.js.DOMNode']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSScrollBarUI", null, 'swingjs.plaf.JSSliderUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.myScrollPaneUI = null;
this.isInvisible = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.isScrollBar = true;
}, 1);

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (e) {
C$.superclazz.prototype.propertyChange$java_beans_PropertyChangeEvent.apply(this, [e]);
if ((I$[1]||$incl$(1)).debugging) System.out.println$S(this.id + " propertyChange " + this.dumpEvent$java_util_EventObject(e) );
});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
C$.superclazz.prototype.stateChanged$javax_swing_event_ChangeEvent.apply(this, [e]);
if ((I$[1]||$incl$(1)).debugging) System.out.println$S(this.id + " stateChange " + this.dumpEvent$java_util_EventObject(e) );
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
var wh = (this.myScrollPaneUI == null  ? 15 : this.myScrollPaneUI.scrollBarUIDisabled ? 0 : 15);
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[wh, wh]);
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
this.isInvisible = (this.myScrollPaneUI != null  && this.myScrollPaneUI.scrollBarUIDisabled );
b = (b&!this.isInvisible);
(I$[3]||$incl$(3)).setVisible(this.getOuterNode(), b);
(I$[3]||$incl$(3)).setVisible(this.jqSlider, b);
});
})();
//Created 2018-05-15 01:03:25
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.jquery.JQueryUI','swingjs.JSUtil','swingjs.api.js.DOMNode','java.awt.Dimension','sun.swing.DefaultLookup']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSSliderUI", null, 'swingjs.plaf.JSLightweightUI', ['java.beans.PropertyChangeListener', 'javax.swing.event.ChangeListener']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
var jqueryui = Clazz_getClass((I$[1]||$incl$(1)));
(I$[2]||$incl$(2)).loadStaticResource$S("swingjs/jquery/jquery-ui-j2sslider.css");
(I$[2]||$incl$(2)).loadStaticResource$S("swingjs/jquery/jquery-ui-j2sslider.js");
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.jSlider = null;
this.min = 0;
this.max = 0;
this.val = 0;
this.majorSpacing = 0;
this.minorSpacing = 0;
this.paintTicks = false;
this.paintLabels = false;
this.snapToTicks = false;
this.labelTable = null;
this.orientation = null;
this.isScrollPaneScrollBar = false;
this.jqSlider = null;
this.z0 = 0;
this.model = null;
this.paintTrack = false;
this.isScrollBar = false;
this.jScrollBar = null;
this.sliderTrack = null;
this.sliderHandle = null;
this.disabled = 0;
this.myHeight = 0;
this.isHoriz = false;
this.isVerticalScrollBar = false;
this.isInverted = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.z0 = -2147483648;
this.paintTrack = true;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.needPreferred = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
var js = this.jc;
this.min = js.getMinimum();
this.max = js.getMaximum();
this.val = js.getValue();
if (!this.isScrollBar) {
this.minorSpacing = js.getMinorTickSpacing();
this.majorSpacing = js.getMajorTickSpacing();
this.paintTicks = js.getPaintTicks();
this.paintLabels = js.getPaintLabels();
this.paintTrack = js.getPaintTrack();
this.snapToTicks = js.getSnapToTicks();
}this.orientation = (js.getOrientation() == 1 ? "vertical" : "horizontal");
this.model = js.getModel();
var isHoriz = (this.jSlider.getOrientation() == 0);
var isVerticalScrollBar = (this.isScrollBar && !isHoriz );
var isInverted = isVerticalScrollBar || !this.isScrollBar && this.jSlider.getInverted()  ;
var isChanged = false;
if (isHoriz != this.isHoriz  || isVerticalScrollBar != this.isVerticalScrollBar   || isInverted != this.isInverted  ) {
this.isHoriz = isHoriz;
this.isVerticalScrollBar = isVerticalScrollBar;
this.isInverted = isInverted;
isChanged = true;
}var isNew = (this.domNode == null );
if (isNew) {
this.domNode = this.wrap$S$S$swingjs_api_js_DOMNodeA("div", this.id + "_wrap", [this.jqSlider = (I$[3]||$incl$(3)).createElement("div", this.id)]);
this.$$O(this.domNode).addClass("swingjs");
p$.setJQuerySliderAndEvents.apply(this, []);
this.setTainted();
} else if (isChanged) {
(I$[3]||$incl$(3)).remove(this.jqSlider);
this.domNode.appendChild(this.jqSlider = (I$[3]||$incl$(3)).createElement("div", this.id));
p$.setJQuerySliderAndEvents.apply(this, []);
this.setTainted();
this.setInnerComponentBounds$I$I(this.jc.getWidth(), this.jc.getHeight());
}p$.setup$Z.apply(this, [isNew || isChanged ]);
this.setSlider();
if (this.jc.isOpaque()) this.setBackground$java_awt_Color(this.jc.getBackground());
return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.jSlider = jc;
if (this.isScrollBar) this.jScrollBar = jc;
});

Clazz_newMeth(C$, 'setJQuerySliderAndEvents', function () {
var slider = this.$$O(this.jqSlider);
{
var me = this;
slider.j2sslider( { orientation: me.orientation, jslider: me.c, range: false, min: me.min, max: me.max, value: me.val, disabled: me.disabled, inverted: me.isInverted, change: function(jqevent, handle) { me.jqueryCallback$O$O(jqevent, handle); }, slide: function(jqevent, handle) { me.jqueryCallback$O$O(jqevent, handle); }, start: function(jqevent, handle) { me.jqueryStart$O$O(jqevent, handle); }, stop: function(jqevent, handle) { me.jqueryStop$O$O(jqevent, handle); } });
}
});

Clazz_newMeth(C$, 'jqueryStart$O$O', function (event, ui) {
this.jSlider.setValueIsAdjusting$Z(true);
});

Clazz_newMeth(C$, 'jqueryStop$O$O', function (event, ui) {
this.jSlider.setValueIsAdjusting$Z(false);
});

Clazz_newMeth(C$, 'jqueryCallback$O$O', function (event, ui) {
var value = 0;
{
value = ui.value;
}
this.jSlider.setValue$I(this.val = (value));
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
C$.superclazz.prototype.setEnabled$Z.apply(this, [b]);
p$.setSliderAttr$S$F.apply(this, ["disabled", (this.disabled = (b ? 0 : 1))]);
});

Clazz_newMeth(C$, 'setup$Z', function (isNew) {
this.sliderTrack = (I$[3]||$incl$(3)).firstChild(this.domNode);
this.sliderHandle = (I$[3]||$incl$(3)).firstChild(this.sliderTrack);
if (isNew) {
this.ignoreAllMouseEvents$swingjs_api_js_DOMNode(this.sliderHandle);
this.ignoreAllMouseEvents$swingjs_api_js_DOMNode(this.sliderTrack);
this.setDataComponent$swingjs_api_js_DOMNode(this.sliderHandle);
}});

Clazz_newMeth(C$, 'setSliderAttr$S$F', function (key, val) {
var slider = this.$$O(this.jqSlider);
{
var a = {};
a[key]= val;
slider.j2sslider(a);
}
});

Clazz_newMeth(C$, 'setSlider', function () {
p$.setSliderAttr$S$F.apply(this, ["value", this.val]);
p$.setSliderAttr$S$F.apply(this, ["min", this.min]);
p$.setSliderAttr$S$F.apply(this, ["max", this.max]);
this.myHeight = 10;
var barPlace = 40;
if (this.isHoriz && this.jSlider.getBorder() != null  ) barPlace = barPlace+(10);
var tickClass = "ui-j2sslider-tick-mark" + (this.isHoriz ? "-vert" : "-horiz");
this.$$O(this.domNode).find("." + tickClass).remove();
this.$$O(this.domNode).find(".jslider-labels").remove();
this.setHTMLSize$swingjs_api_js_DOMNode$Z(this.jqSlider, false);
if (this.majorSpacing == 0 && this.minorSpacing == 0  || !this.paintTicks && !this.paintLabels  ) return;
var margin = 10;
var length = (this.isHoriz ? this.jSlider.getWidth() : this.jSlider.getHeight());
if (length <= 0) length = (this.isHoriz ? this.getPreferredHorizontalSize().width : this.getPreferredVerticalSize().height);
if (this.isHoriz) this.actualWidth = length;
 else this.actualHeight = length;
length = length-(2 * margin);
if (this.paintTicks) {
if (this.minorSpacing == 0) this.minorSpacing = this.majorSpacing;
var check = (this.majorSpacing/this.minorSpacing|0);
var fracSpacing = this.minorSpacing * 1.0 / (this.max - this.min);
var numTicks = (((this.max - this.min)/this.minorSpacing|0)) + 1;
this.myHeight = this.myHeight+(10);
for (var i = 0; i < numTicks; i++) {
var node = (I$[3]||$incl$(3)).createElement("div", this.id + "_t" + i );
this.$$O(node).addClass("swingjs");
this.$$O(node).addClass(tickClass);
var isMajor = (i % check == 0);
var frac = (this.isHoriz == this.isInverted  ? 1 - fracSpacing * i : fracSpacing * i);
var spt = new Float((frac * length + margin)).toString() + "px";
if (isMajor) this.$$O(node).css(this.isHoriz ? "height" : "width", "10px");
this.$$O(node).css(this.isHoriz ? "left" : "top", spt).appendTo(this.domNode);
}
this.setHTMLSize$swingjs_api_js_DOMNode$Z(this.domNode, false);
}if (this.paintLabels) {
this.myHeight = this.myHeight+(20);
this.labelTable = this.jSlider.getLabelTable();
var keys = this.labelTable.keys();
while (keys.hasMoreElements()){
var key = keys.nextElement();
var n = Integer.parseInt(key.toString());
var label = this.labelTable.get$O(key);
var labelNode = (label.getUI()).getOuterNode();
var frac = (n - this.min) * 1.0 / (this.max - this.min);
if (this.isHoriz == this.isInverted ) frac = 1 - frac;
var px = (frac * length + margin);
var left;
var top;
if (this.isHoriz) {
top = 20;
left = ((px - (label.getWidth()/2|0))|0);
} else {
top = ((px - (label.getHeight()/2|0))|0);
left = 28;
}(I$[3]||$incl$(3)).setPositionAbsolute(labelNode, top, left);
this.domNode.appendChild(labelNode);
}
}if (this.paintTicks) {
if (this.isHoriz) {
(I$[3]||$incl$(3)).setStyles(this.sliderHandle, ["transform", "scaleX(0.5) rotateZ(45deg)", "top", "-8px"]);
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["height", "1px", "background", "black", "top", "10px"]);
p$.setSliderAttr$S$F.apply(this, ["scaleX", 0.5]);
} else {
(I$[3]||$incl$(3)).setStyles(this.sliderHandle, ["transform", "scaleY(0.5) rotateZ(45deg)", "left", "-10px", "margin-bottom", "-7px"]);
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["width", "1px", "left", "12px", "background", "black"]);
p$.setSliderAttr$S$F.apply(this, ["scaleY", 0.5]);
}} else {
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, [this.isHoriz ? "top" : "left", barPlace + "%"]);
}if (!this.isHoriz && !this.isScrollPaneScrollBar ) (I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["height", length + "px"]);
if (this.isScrollPaneScrollBar) this.setScrollPaneCSS();
this.setHTMLSize$swingjs_api_js_DOMNode$Z(this.domNode, false);
});

Clazz_newMeth(C$, 'setHTMLSize$swingjs_api_js_DOMNode$Z', function (obj, addCSS) {
var d = 20;
if (this.paintLabels || this.paintTicks ) d = d+(10);
if (this.jSlider.getBorder() != null ) d = d+(10);
return Clazz_new_((I$[4]||$incl$(4)).c$$I$I,[(this.isHoriz ? this.actualWidth : d), (this.isHoriz ? d : this.actualHeight)]);
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (e) {
var prop = e.getPropertyName();
if (prop == "ancestor") {
p$.setup$Z.apply(this, [false]);
}});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
var v;
if ((v = this.jSlider.getMinimum()) != this.min) p$.setSliderAttr$S$F.apply(this, ["min", this.min = v]);
if ((v = this.jSlider.getMaximum()) != this.max) p$.setSliderAttr$S$F.apply(this, ["max", this.max = v]);
if ((v = this.jSlider.getValue()) != this.val) p$.setSliderAttr$S$F.apply(this, ["value", this.val = v]);
p$.setup$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I', function (width, height) {
if (!this.paintTicks && !this.paintLabels ) {
if (this.orientation == "vertical") {
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["height", (height - 20) + "px"]);
}if (this.isScrollPaneScrollBar) this.setScrollPaneCSS();
}});

Clazz_newMeth(C$, 'setScrollPaneCSS', function () {
this.isScrollPaneScrollBar = true;
if (this.orientation == "vertical") {
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["left", "0px", "width", "12px"]);
(I$[3]||$incl$(3)).setStyles(this.sliderHandle, ["left", "-1px"]);
} else {
(I$[3]||$incl$(3)).setStyles(this.sliderTrack, ["top", "0px", "height", "12px"]);
(I$[3]||$incl$(3)).setStyles(this.sliderHandle, ["top", "-1px"]);
}});

Clazz_newMeth(C$, 'getPreferredHorizontalSize', function () {
var horizDim = (I$[5]||$incl$(5)).get$javax_swing_JComponent$javax_swing_plaf_ComponentUI$S(this.jSlider, this, "Slider.horizontalSize");
if (horizDim == null ) {
horizDim = Clazz_new_((I$[4]||$incl$(4)).c$$I$I,[200, 21]);
}return horizDim;
});

Clazz_newMeth(C$, 'getPreferredVerticalSize', function () {
var vertDim = (I$[5]||$incl$(5)).get$javax_swing_JComponent$javax_swing_plaf_ComponentUI$S(this.jSlider, this, "Slider.verticalSize");
if (vertDim == null ) {
vertDim = Clazz_new_((I$[4]||$incl$(4)).c$$I$I,[21, 200]);
}return vertDim;
});
})();
//Created 2018-05-15 01:03:25
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['javax.swing.UIManager','javax.swing.SwingUtilities']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "LazyActionMap", null, 'javax.swing.plaf.ActionMapUIResource');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this._loader = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'installLazyActionMap$javax_swing_JComponent$Class$S', function (c, loaderClass, defaultsKey) {
var map = (I$[1]||$incl$(1)).get$O(defaultsKey);
if (map == null ) {
map = Clazz_new_(C$.c$$Class,[loaderClass]);
(I$[1]||$incl$(1)).getLookAndFeelDefaults().put$O$O(defaultsKey, map);
}(I$[2]||$incl$(2)).replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap(c, map);
}, 1);

Clazz_newMeth(C$, 'getActionMap$Class$S', function (loaderClass, defaultsKey) {
var map = (I$[1]||$incl$(1)).get$O(defaultsKey);
if (map == null ) {
map = Clazz_new_(C$.c$$Class,[loaderClass]);
(I$[1]||$incl$(1)).getLookAndFeelDefaults().put$O$O(defaultsKey, map);
}return map;
}, 1);

Clazz_newMeth(C$, 'c$$Class', function (loader) {
Clazz_super_(C$, this,1);
this._loader = loader;
}, 1);

Clazz_newMeth(C$, 'put$javax_swing_Action', function (action) {
this.put$O$javax_swing_Action(action.getValue$S("Name"), action);
});

Clazz_newMeth(C$, 'put$O$javax_swing_Action', function (key, action) {
p$.loadIfNecessary.apply(this, []);
C$.superclazz.prototype.put$O$javax_swing_Action.apply(this, [key, action]);
});

Clazz_newMeth(C$, 'get$O', function (key) {
p$.loadIfNecessary.apply(this, []);
return C$.superclazz.prototype.get$O.apply(this, [key]);
});

Clazz_newMeth(C$, 'remove$O', function (key) {
p$.loadIfNecessary.apply(this, []);
C$.superclazz.prototype.remove$O.apply(this, [key]);
});

Clazz_newMeth(C$, 'clear', function () {
p$.loadIfNecessary.apply(this, []);
C$.superclazz.prototype.clear.apply(this, []);
});

Clazz_newMeth(C$, 'keys', function () {
p$.loadIfNecessary.apply(this, []);
return C$.superclazz.prototype.keys.apply(this, []);
});

Clazz_newMeth(C$, 'size', function () {
p$.loadIfNecessary.apply(this, []);
return C$.superclazz.prototype.size.apply(this, []);
});

Clazz_newMeth(C$, 'allKeys', function () {
p$.loadIfNecessary.apply(this, []);
return C$.superclazz.prototype.allKeys.apply(this, []);
});

Clazz_newMeth(C$, 'setParent$javax_swing_ActionMap', function (map) {
p$.loadIfNecessary.apply(this, []);
C$.superclazz.prototype.setParent$javax_swing_ActionMap.apply(this, [map]);
});

Clazz_newMeth(C$, 'loadIfNecessary', function () {
if (this._loader != null ) {
var loader = this._loader;
this._loader = null;
{
loader.$clazz$.loadActionMap$swingjs_plaf_LazyActionMap(this);
}
}});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:28
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','swingjs.JSUtil','javajs.api.JSFunction','java.awt.Rectangle','java.awt.Color','java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Resizer");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.rootPane = null;
this.resizer = null;
this.rootNode = null;
this.rubberBand = null;
this.jframe = null;
this.offsetx = 0;
this.offsety = 0;
this.minSize = 0;
this.rpc = null;
this.titleHeight = 0;
this.enabled = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.offsetx = -4;
this.offsety = -4;
this.minSize = 10;
this.enabled = true;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'set$swingjs_JSFrameViewer', function (viewer) {
this.rpc = viewer.top;
this.rootPane = this.rpc.getRootPane();
this.titleHeight = viewer.getInsets().top;
if (viewer.isApplet) {
this.rootNode = viewer.getDiv$S("appletdiv");
} else {
this.jframe = this.rpc;
this.rootNode = (this.jframe.getUI()).domNode;
}return (this.rootNode == null  ? null : this);
});

Clazz_newMeth(C$, 'show', function () {
if (this.resizer == null ) p$.createAndShowResizer.apply(this, []);
 else p$.$$swingjs_api_js_DOMNode.apply(this, [this.resizer]).show();
this.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, 'hide', function () {
p$.$$swingjs_api_js_DOMNode.apply(this, [this.resizer]).hide();
});

Clazz_newMeth(C$, 'setMin$I', function (min) {
this.minSize = min;
});

Clazz_newMeth(C$, 'createAndShowResizer', function () {
var id = this.rootPane.htmlName + "_resizer";
this.resizer = (I$[1]||$incl$(1)).createElement("div", id);
(I$[1]||$incl$(1)).setSize(this.resizer, 10, 10);
(I$[1]||$incl$(1)).setStyles(this.resizer, ["background-color", "red", "opacity", "0", "cursor", "nwse-resize"]);
p$.$$swingjs_api_js_DOMNode.apply(this, [this.resizer]).addClass("swingjs-resizer");
this.rubberBand = (I$[1]||$incl$(1)).createElement("div", id + "_rb");
(I$[1]||$incl$(1)).setStyles(this.rubberBand, ["border", "1px dashed #FF00FF", "z-index", "100000", "position", "absolute", "left", "0px", "top", "0px", "display", "none"]);
this.rootNode.appendChild(this.resizer);
this.rootNode.appendChild(this.rubberBand);
var fHandleResizer = null;
var fHandleDOMResize = null;
var me = this;
{
fHandleResizer = function(xyev,type){me.fHandleResizer$I$I$I( xyev.dx, xyev.dy,type)};
}
(I$[2]||$incl$(2)).J2S._setDraggable(this.resizer, Clazz_array((I$[3]||$incl$(3)), -1, [fHandleResizer]));
p$.$$swingjs_api_js_DOMNode.apply(this, [this.rootNode]).resize(fHandleDOMResize);
});

Clazz_newMeth(C$, 'setPosition$I$I', function (dw, dh) {
var r = p$.getFrameOffset$I$I.apply(this, [dw, dh]);
(I$[1]||$incl$(1)).setPositionAbsolute(this.resizer, r.height + this.offsety, r.width + this.offsetx);
(I$[1]||$incl$(1)).setSize(this.rubberBand, r.width, r.height);
});

Clazz_newMeth(C$, 'getDOMNode', function () {
return this.resizer;
});

Clazz_newMeth(C$, 'fHandleResizer$I$I$I', function (dx, dy, type) {
if (!this.enabled) return;
switch (type) {
case 501:
(I$[1]||$incl$(1)).setStyles(this.resizer, ["background-color", "green"]);
(I$[1]||$incl$(1)).setVisible(this.rubberBand, true);
(I$[1]||$incl$(1)).setCursor("nwse-resize");
break;
case 506:
this.setPosition$I$I(dx, dy);
break;
case 502:
(I$[1]||$incl$(1)).setStyles(this.resizer, ["background-color", "red"]);
(I$[1]||$incl$(1)).setVisible(this.rubberBand, false);
(I$[1]||$incl$(1)).setCursor("auto");
this.fHandleDOMResize$O$I$I(null, dx, dy);
}
});

Clazz_newMeth(C$, 'fHandleDOMResize$O$I$I', function (event, dw, dh) {
var r;
if (!this.enabled) return;
if (event == null ) {
r = p$.getFrameOffset$I$I.apply(this, [dw, dh]);
} else {
(I$[1]||$incl$(1)).getRectangle(this.rootNode, r = Clazz_new_((I$[4]||$incl$(4))));
}if (this.jframe == null ) {
this.rootPane.getGraphics().setColor$java_awt_Color((I$[5]||$incl$(5)).WHITE);
this.rootPane.getGraphics().fillRect$I$I$I$I(0, 0, r.width, r.height);
(this.rootPane.getParent()).resizeHTML$I$I(r.width, r.height);
} else {
this.jframe.setPreferredSize$java_awt_Dimension(Clazz_new_((I$[6]||$incl$(6)).c$$I$I,[r.width, r.height]));
this.jframe.invalidate();
this.jframe.repackContainer();
this.jframe.toFront();
}this.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, '$$swingjs_api_js_DOMNode', function (node) {
return (I$[2]||$incl$(2)).getJQuery().$(node);
});

Clazz_newMeth(C$, 'getFrameOffset$I$I', function (dw, dh) {
var r = (this.rpc).getBounds();
if (r.width + dw > this.minSize) r.width = r.width+(dw);
if (r.height + dh > this.minSize) r.height = r.height+(dh);
return r;
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
this.enabled = b;
});
})();
//Created 2018-05-15 01:03:29
(function(){var P$=Clazz_newPackage("java.awt.color"),I$=[];
var C$=Clazz_newClass(P$, "ColorSpace");
C$.sRGBspace = null;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.type = 0;
this.numComponents = 0;
this.compName = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.compName = null;
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (type, numcomponents) {
C$.$init$.apply(this);
this.type = type;
this.numComponents = numcomponents;
}, 1);

Clazz_newMeth(C$, 'getInstance$I', function (colorspace) {
var theColorSpace;
switch (colorspace) {
default:
case 1000:
if (C$.sRGBspace == null ) {
C$.sRGBspace = Clazz_new_(C$.c$$I$I,[5, 3]);
}theColorSpace = C$.sRGBspace;
break;
}
return theColorSpace;
}, 1);

Clazz_newMeth(C$, 'isCS_sRGB', function () {
return (this === C$.sRGBspace );
});

Clazz_newMeth(C$, 'toRGB$FA', function (colorvalue) {
return colorvalue;
});

Clazz_newMeth(C$, 'fromRGB$FA', function (rgbvalue) {
return rgbvalue;
});

Clazz_newMeth(C$, 'getType', function () {
return this.type;
});

Clazz_newMeth(C$, 'getNumComponents', function () {
return this.numComponents;
});

Clazz_newMeth(C$, 'getName$I', function (idx) {
if ((idx < 0) || (idx > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Component index out of range: " + idx]);
}if (this.compName == null ) {
switch (this.type) {
case 0:
this.compName = Clazz_array(java.lang.String, -1, ["X", "Y", "Z"]);
break;
case 1:
this.compName = Clazz_array(java.lang.String, -1, ["L", "a", "b"]);
break;
case 2:
this.compName = Clazz_array(java.lang.String, -1, ["L", "u", "v"]);
break;
case 3:
this.compName = Clazz_array(java.lang.String, -1, ["Y", "Cb", "Cr"]);
break;
case 4:
this.compName = Clazz_array(java.lang.String, -1, ["Y", "x", "y"]);
break;
case 5:
this.compName = Clazz_array(java.lang.String, -1, ["Red", "Green", "Blue"]);
break;
case 6:
this.compName = Clazz_array(java.lang.String, -1, ["Gray"]);
break;
case 7:
this.compName = Clazz_array(java.lang.String, -1, ["Hue", "Saturation", "Value"]);
break;
case 8:
this.compName = Clazz_array(java.lang.String, -1, ["Hue", "Lightness", "Saturation"]);
break;
case 9:
this.compName = Clazz_array(java.lang.String, -1, ["Cyan", "Magenta", "Yellow", "Black"]);
break;
case 11:
this.compName = Clazz_array(java.lang.String, -1, ["Cyan", "Magenta", "Yellow"]);
break;
default:
var tmp = Clazz_array(java.lang.String, [this.numComponents]);
for (var i = 0; i < tmp.length; i++) {
tmp[i] = "Unnamed color component(" + i + ")" ;
}
this.compName = tmp;
}
}return this.compName[idx];
});

Clazz_newMeth(C$, 'getMinValue$I', function (component) {
if ((component < 0) || (component > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Component index out of range: " + component]);
}return 0.0;
});

Clazz_newMeth(C$, 'getMaxValue$I', function (component) {
if ((component < 0) || (component > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Component index out of range: " + component]);
}return 1.0;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:54
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "Cursor");
C$.predefined = null;
C$.predefinedPrivate = null;
C$.cursorProperties = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.predefined = Clazz_array(C$, [14]);
C$.predefinedPrivate = Clazz_array(C$, [14]);
C$.cursorProperties = Clazz_array(java.lang.String, -2, [Clazz_array(java.lang.String, -1, ["AWT.DefaultCursor", "Default Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.CrosshairCursor", "Crosshair Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.TextCursor", "Text Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.WaitCursor", "Wait Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.SWResizeCursor", "Southwest Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.SEResizeCursor", "Southeast Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.NWResizeCursor", "Northwest Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.NEResizeCursor", "Northeast Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.NResizeCursor", "North Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.SResizeCursor", "South Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.WResizeCursor", "West Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.EResizeCursor", "East Resize Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.HandCursor", "Hand Cursor"]), Clazz_array(java.lang.String, -1, ["AWT.MoveCursor", "Move Cursor"])]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.type = 0;
this.name = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.type = 0;
}, 1);

Clazz_newMeth(C$, 'getPredefinedCursor$I', function (type) {
if (type < 0 || type > 13 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal cursor type"]);
}var c = C$.predefinedPrivate[type];
if (c == null ) {
C$.predefinedPrivate[type] = c = Clazz_new_(C$.c$$I,[type]);
}if (C$.predefined[type] == null ) {
C$.predefined[type] = c;
}return c;
}, 1);

Clazz_newMeth(C$, 'getSystemCustomCursor$S', function (name) {
return null;
}, 1);

Clazz_newMeth(C$, 'getDefaultCursor', function () {
return C$.getPredefinedCursor$I(0);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (type) {
C$.$init$.apply(this);
if (type < 0 || type > 13 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal cursor type"]);
}this.type = type;
this.name = "TODO_CURSOR";
}, 1);

Clazz_newMeth(C$, 'c$$S', function (name) {
C$.$init$.apply(this);
this.type = -1;
this.name = name;
}, 1);

Clazz_newMeth(C$, 'getType', function () {
return this.type;
});

Clazz_newMeth(C$, 'getName', function () {
return this.name;
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[" + this.getName() + "]" ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:49
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.util.ArrayList',['java.awt.Dialog','.ModalityType'],'java.awt.Toolkit','java.awt.Window','java.awt.event.ComponentEvent',['java.awt.Dialog','.ModalExclusionType']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Dialog", null, 'java.awt.Window');
C$.modalDialogs = null;
C$.DEFAULT_MODALITY_TYPE = null;
C$.$nameCounter = 0;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.modalDialogs = Clazz_new_((I$[1]||$incl$(1)));
C$.DEFAULT_MODALITY_TYPE = (I$[2]||$incl$(2)).APPLICATION_MODAL;
C$.$nameCounter = 0;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.blockedWindows = null;
this.resizable = false;
this.undecorated = false;
this.initialized = false;
this.modal = false;
this.modalityType = null;
this.title = null;
this.modalFilter = null;
this.isInHide = false;
this.isInDispose = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.blockedWindows = Clazz_new_((I$[1]||$incl$(1)));
this.resizable = true;
this.undecorated = false;
this.initialized = false;
this.isInHide = false;
this.isInDispose = false;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame', function (owner) {
C$.c$$java_awt_Frame$S$Z.apply(this, [owner, "", false]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame$Z', function (owner, modal) {
C$.c$$java_awt_Frame$S$Z.apply(this, [owner, "", modal]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame$S', function (owner, title) {
C$.c$$java_awt_Frame$S$Z.apply(this, [owner, title, false]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame$S$Z', function (owner, title, modal) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType.apply(this, [owner, title, modal ? C$.DEFAULT_MODALITY_TYPE : (I$[2]||$incl$(2)).MODELESS]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame$S$Z$java_awt_GraphicsConfiguration', function (owner, title, modal, gc) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType$java_awt_GraphicsConfiguration.apply(this, [owner, title, modal ? C$.DEFAULT_MODALITY_TYPE : (I$[2]||$incl$(2)).MODELESS, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dialog', function (owner) {
C$.c$$java_awt_Dialog$S$Z.apply(this, [owner, "", false]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dialog$S', function (owner, title) {
C$.c$$java_awt_Dialog$S$Z.apply(this, [owner, title, false]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dialog$S$Z', function (owner, title, modal) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType.apply(this, [owner, title, modal ? C$.DEFAULT_MODALITY_TYPE : (I$[2]||$incl$(2)).MODELESS]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dialog$S$Z$java_awt_GraphicsConfiguration', function (owner, title, modal, gc) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType$java_awt_GraphicsConfiguration.apply(this, [owner, title, modal ? C$.DEFAULT_MODALITY_TYPE : (I$[2]||$incl$(2)).MODELESS, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window', function (owner) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType.apply(this, [owner, null, (I$[2]||$incl$(2)).MODELESS]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$S', function (owner, title) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType.apply(this, [owner, title, (I$[2]||$incl$(2)).MODELESS]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$java_awt_Dialog_ModalityType', function (owner, modalityType) {
C$.c$$java_awt_Window$S$java_awt_Dialog_ModalityType.apply(this, [owner, null, modalityType]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$S$java_awt_Dialog_ModalityType', function (owner, title, modalityType) {
C$.superclazz.c$$java_awt_Window.apply(this, [owner]);
C$.$init$.apply(this);
if ((owner != null ) && !(Clazz_instanceOf(owner, "java.awt.Frame")) && !(Clazz_instanceOf(owner, "java.awt.Dialog"))  ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Wrong parent window"]);
}this.title = title;
this.setModalityType$java_awt_Dialog_ModalityType(modalityType);
this.initialized = true;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$S$java_awt_Dialog_ModalityType$java_awt_GraphicsConfiguration', function (owner, title, modalityType, gc) {
C$.superclazz.c$$java_awt_Window$java_awt_GraphicsConfiguration.apply(this, [owner, gc]);
C$.$init$.apply(this);
if ((owner != null ) && !(Clazz_instanceOf(owner, "java.awt.Frame")) && !(Clazz_instanceOf(owner, "java.awt.Dialog"))  ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["wrong owner window"]);
}this.title = title;
this.setModalityType$java_awt_Dialog_ModalityType(modalityType);
this.initialized = true;
}, 1);

Clazz_newMeth(C$, 'constructComponentName', function () {
return "dialog" + C$.$nameCounter++;
});

Clazz_newMeth(C$, 'addNotify', function () {
{
this.getOrCreatePeer();
if (this.parent != null ) {
this.parent.addNotify();
}C$.superclazz.prototype.addNotify.apply(this, []);
}});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer = this.getToolkit().createDialog$java_awt_Dialog(this)) : this.peer);
});

Clazz_newMeth(C$, 'isModal', function () {
return this.isModal_NoClientCode();
});

Clazz_newMeth(C$, 'isModal_NoClientCode', function () {
return this.modalityType !== (I$[2]||$incl$(2)).MODELESS ;
});

Clazz_newMeth(C$, 'setModal$Z', function (modal) {
this.modal = modal;
this.setModalityType$java_awt_Dialog_ModalityType(modal ? C$.DEFAULT_MODALITY_TYPE : (I$[2]||$incl$(2)).MODELESS);
});

Clazz_newMeth(C$, 'getModalityType', function () {
return this.modalityType;
});

Clazz_newMeth(C$, 'setModalityType$java_awt_Dialog_ModalityType', function (type) {
if (type == null ) {
type = (I$[2]||$incl$(2)).MODELESS;
}if (!(I$[3]||$incl$(3)).getDefaultToolkit().isModalityTypeSupported$java_awt_Dialog_ModalityType(type)) {
type = (I$[2]||$incl$(2)).MODELESS;
}if (this.modalityType === type ) {
return;
}p$.checkModalityPermission$java_awt_Dialog_ModalityType.apply(this, [type]);
this.modalityType = type;
this.modal = (this.modalityType !== (I$[2]||$incl$(2)).MODELESS );
});

Clazz_newMeth(C$, 'getTitle', function () {
return this.title;
});

Clazz_newMeth(C$, 'setTitle$S', function (title) {
var oldTitle = this.title;
{
this.title = title;
var peer = this.peer;
if (peer != null ) {
peer.setTitle$S(title);
}}this.firePropertyChange$S$O$O("title", oldTitle, title);
});

Clazz_newMeth(C$, 'conditionalShow$java_awt_Component$Long', function (toFocus, time) {
var retval;
P$.Window.closeSplashScreen();
this.validate();
if (this.visible) {
this.toFront();
retval = false;
} else {
retval = true;
C$.superclazz.prototype.show.apply(this, []);
if (toFocus != null  && time != null   && this.isFocusable()  && this.isEnabled()  && !this.isModalBlocked() ) {
}if (this.isModalBlocked()) {
this.modalBlocker.toFront();
}for (var i = 0; i < this.ownedWindowList.size(); i++) {
var child = this.ownedWindowList.elementAt$I(i);
if ((child != null ) && child.showWithParent ) {
child.show();
child.showWithParent = false;
}}
(I$[4]||$incl$(4)).updateChildFocusableWindowState$java_awt_Window(this);
this.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, this, this.parent, 4, (I$[3]||$incl$(3)).enabledOnToolkit$J(32768));
if (this.componentListener != null  || (this.eventMask & 1) != 0  || (I$[3]||$incl$(3)).enabledOnToolkit$J(1) ) {
var e = Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I,[this, 102]);
(I$[3]||$incl$(3)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}}if (retval && (this.state & 1) == 0 ) {
this.postWindowEvent$I(200);
this.state = this.state|(1);
}return retval;
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
});

Clazz_newMeth(C$, 'show', function () {
if (!this.initialized) {
throw Clazz_new_(Clazz_load('java.lang.IllegalStateException').c$$S,["The dialog component has not been initialized properly"]);
}this.beforeFirstShow = false;
if (!this.isModal()) {
p$.conditionalShow$java_awt_Component$Long.apply(this, [null, null]);
} else {
p$.conditionalShow$java_awt_Component$Long.apply(this, [null, null]);
}});

Clazz_newMeth(C$, 'modalityPushed', function () {
});

Clazz_newMeth(C$, 'modalityPopped', function () {
});

Clazz_newMeth(C$, 'interruptBlocking', function () {
if (this.isModal()) {
this.disposeImpl();
} else if (this.windowClosingException != null ) {
this.windowClosingException.fillInStackTrace();
this.windowClosingException.printStackTrace();
this.windowClosingException = null;
}});

Clazz_newMeth(C$, 'hideAndDisposePreHandler', function () {
this.isInHide = true;
this.modalHide();
if (this.modalFilter != null ) {
this.modalFilter.disable();
}C$.modalDialogs.remove$O(this);
});

Clazz_newMeth(C$, 'hideAndDisposeHandler', function () {
this.isInHide = false;
});

Clazz_newMeth(C$, 'hide', function () {
p$.hideAndDisposePreHandler.apply(this, []);
C$.superclazz.prototype.hide.apply(this, []);
if (!this.isInDispose) {
p$.hideAndDisposeHandler.apply(this, []);
}});

Clazz_newMeth(C$, 'doDispose', function () {
this.isInDispose = true;
C$.superclazz.prototype.doDispose.apply(this, []);
p$.hideAndDisposeHandler.apply(this, []);
this.isInDispose = false;
});

Clazz_newMeth(C$, 'toBack', function () {
C$.superclazz.prototype.toBack.apply(this, []);
});

Clazz_newMeth(C$, 'isResizable', function () {
return this.resizable;
});

Clazz_newMeth(C$, 'setResizable$Z', function (resizable) {
var testvalid = false;
{
this.resizable = resizable;
var peer = this.peer;
if (peer != null ) {
peer.setResizable$Z(resizable);
testvalid = true;
}}if (testvalid) {
this.invalidateIfValid();
}});

Clazz_newMeth(C$, 'setUndecorated$Z', function (undecorated) {
{
if (this.isDisplayable()) {
throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["The dialog is displayable."]);
}this.undecorated = undecorated;
}});

Clazz_newMeth(C$, 'isUndecorated', function () {
return this.undecorated;
});

Clazz_newMeth(C$, 'paramString', function () {
var str = C$.superclazz.prototype.paramString.apply(this, []) + "," + this.modalityType ;
if (this.title != null ) {
str += ",title=" + this.title;
}return str;
});

Clazz_newMeth(C$, 'modalShow', function () {
});

Clazz_newMeth(C$, 'modalHide', function () {
var save = Clazz_new_((I$[1]||$incl$(1)));
var blockedWindowsCount = this.blockedWindows.size();
for (var i = 0; i < blockedWindowsCount; i++) {
var w = this.blockedWindows.get$I(0);
save.add$TE(w);
this.unblockWindow$java_awt_Window(w);
}
for (var i = 0; i < blockedWindowsCount; i++) {
var w = save.get$I(i);
if ((Clazz_instanceOf(w, "java.awt.Dialog")) && (w).isModal_NoClientCode() ) {
var d = w;
d.modalShow();
} else {
C$.checkShouldBeBlocked$java_awt_Window(w);
}}
});

Clazz_newMeth(C$, 'shouldBlock$java_awt_Window', function (w) {
if (!this.isVisible_NoClientCode() || (!w.isVisible_NoClientCode() && !w.isInShow ) || this.isInHide || (w === this ) || !this.isModal_NoClientCode()  ) {
return false;
}if ((Clazz_instanceOf(w, "java.awt.Dialog")) && (w).isInHide ) {
return false;
}var blockerToCheck = this;
while (blockerToCheck != null ){
var c = w;
while ((c != null ) && (c !== blockerToCheck ) ){
c = c.getParent_NoClientCode();
}
if (c === blockerToCheck ) {
return false;
}blockerToCheck = blockerToCheck.getModalBlocker();
}
switch (this.modalityType) {
case (I$[2]||$incl$(2)).MODELESS:
return false;
case (I$[2]||$incl$(2)).DOCUMENT_MODAL:
if (w.isModalExcluded$java_awt_Dialog_ModalExclusionType((I$[6]||$incl$(6)).APPLICATION_EXCLUDE)) {
var c = this;
while ((c != null ) && (c !== w ) ){
c = c.getParent_NoClientCode();
}
return c === w ;
} else {
return this.getDocumentRoot() === w.getDocumentRoot() ;
}case (I$[2]||$incl$(2)).APPLICATION_MODAL:
return !w.isModalExcluded$java_awt_Dialog_ModalExclusionType((I$[6]||$incl$(6)).APPLICATION_EXCLUDE) && (this.appContext === w.appContext ) ;
case (I$[2]||$incl$(2)).TOOLKIT_MODAL:
return !w.isModalExcluded$java_awt_Dialog_ModalExclusionType((I$[6]||$incl$(6)).TOOLKIT_EXCLUDE);
}
return false;
});

Clazz_newMeth(C$, 'blockWindow$java_awt_Window', function (w) {
if (!w.isModalBlocked()) {
w.setModalBlocked$java_awt_Dialog$Z$Z(this, true, true);
this.blockedWindows.add$TE(w);
}});

Clazz_newMeth(C$, 'blockWindows$java_util_List', function (toBlock) {
var dpeer = this.peer;
if (dpeer == null ) {
return;
}var it = toBlock.iterator();
while (it.hasNext()){
var w = it.next();
if (!w.isModalBlocked()) {
w.setModalBlocked$java_awt_Dialog$Z$Z(this, true, false);
} else {
it.remove();
}}
dpeer.blockWindows$java_util_List(toBlock);
this.blockedWindows.addAll$java_util_Collection(toBlock);
});

Clazz_newMeth(C$, 'unblockWindow$java_awt_Window', function (w) {
if (w.isModalBlocked() && this.blockedWindows.contains$O(w) ) {
this.blockedWindows.remove$O(w);
w.setModalBlocked$java_awt_Dialog$Z$Z(this, false, true);
}});

Clazz_newMeth(C$, 'checkShouldBeBlocked$java_awt_Window', function (w) {
{
for (var i = 0; i < C$.modalDialogs.size(); i++) {
var modalDialog = C$.modalDialogs.get$I(i);
if (modalDialog.shouldBlock$java_awt_Window(w)) {
modalDialog.blockWindow$java_awt_Window(w);
break;
}}
}}, 1);

Clazz_newMeth(C$, 'checkModalityPermission$java_awt_Dialog_ModalityType', function (mt) {
});
;
(function(){var C$=Clazz_newClass(P$.Dialog, "ModalityType", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "MODELESS", 0, []);
Clazz_newEnumConst($vals, C$.c$, "DOCUMENT_MODAL", 1, []);
Clazz_newEnumConst($vals, C$.c$, "APPLICATION_MODAL", 2, []);
Clazz_newEnumConst($vals, C$.c$, "TOOLKIT_MODAL", 3, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()
;
(function(){var C$=Clazz_newClass(P$.Dialog, "ModalExclusionType", null, 'Enum');

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "NO_EXCLUDE", 0, []);
Clazz_newEnumConst($vals, C$.c$, "APPLICATION_EXCLUDE", 1, []);
Clazz_newEnumConst($vals, C$.c$, "TOOLKIT_EXCLUDE", 2, []);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:50
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newClass(P$, "AdjustmentEvent", null, 'java.awt.AWTEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.adjustable = null;
this.value = 0;
this.adjustmentType = 0;
this.isAdjusting = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Adjustable$I$I$I', function (source, id, type, value) {
C$.c$$java_awt_Adjustable$I$I$I$Z.apply(this, [source, id, type, value, false]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Adjustable$I$I$I$Z', function (source, id, type, value, isAdjusting) {
C$.superclazz.c$$O$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.adjustable = source;
this.adjustmentType = type;
this.value = value;
this.isAdjusting = isAdjusting;
}, 1);

Clazz_newMeth(C$, 'getAdjustable', function () {
return this.adjustable;
});

Clazz_newMeth(C$, 'getValue', function () {
return this.value;
});

Clazz_newMeth(C$, 'getAdjustmentType', function () {
return this.adjustmentType;
});

Clazz_newMeth(C$, 'getValueIsAdjusting', function () {
return this.isAdjusting;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
switch (this.id) {
case 601:
typeStr = "ADJUSTMENT_VALUE_CHANGED";
break;
default:
typeStr = "unknown type";
}
var adjTypeStr;
switch (this.adjustmentType) {
case 1:
adjTypeStr = "UNIT_INCREMENT";
break;
case 2:
adjTypeStr = "UNIT_DECREMENT";
break;
case 4:
adjTypeStr = "BLOCK_INCREMENT";
break;
case 3:
adjTypeStr = "BLOCK_DECREMENT";
break;
case 5:
adjTypeStr = "TRACK";
break;
default:
adjTypeStr = "unknown type";
}
return typeStr + ",adjType=" + adjTypeStr + ",value=" + this.value + ",isAdjusting=" + this.isAdjusting ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:56
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[['sun.awt.SunToolkit','sun.awt.AppContext']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "FocusEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.temporary = false;
this.opposite = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$Z$java_awt_Component', function (source, id, temporary, opposite) {
C$.superclazz.c$$java_awt_Component$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.temporary = temporary;
this.opposite = opposite;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$Z', function (source, id, temporary) {
C$.c$$java_awt_Component$I$Z$java_awt_Component.apply(this, [source, id, temporary, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I', function (source, id) {
C$.c$$java_awt_Component$I$Z.apply(this, [source, id, false]);
}, 1);

Clazz_newMeth(C$, 'isTemporary', function () {
return this.temporary;
});

Clazz_newMeth(C$, 'getOppositeComponent', function () {
if (this.opposite == null ) {
return null;
}return ((I$[1]||$incl$(1)).targetToAppContext$O(this.opposite) === (I$[2]||$incl$(2)).getAppContext() ) ? this.opposite : null;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
switch (this.id) {
case 1004:
typeStr = "FOCUS_GAINED";
break;
case 1005:
typeStr = "FOCUS_LOST";
break;
default:
typeStr = "unknown type";
}
return typeStr + (this.temporary ? ",temporary" : ",permanent") + ",opposite=" + this.getOppositeComponent() ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newClass(P$, "ItemEvent", null, 'java.awt.AWTEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.item = null;
this.stateChange = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_ItemSelectable$I$O$I', function (source, id, item, stateChange) {
C$.superclazz.c$$O$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.item = item;
this.stateChange = stateChange;
}, 1);

Clazz_newMeth(C$, 'getItemSelectable', function () {
return this.source;
});

Clazz_newMeth(C$, 'getItem', function () {
return this.item;
});

Clazz_newMeth(C$, 'getStateChange', function () {
return this.stateChange;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
switch (this.id) {
case 701:
typeStr = "ITEM_STATE_CHANGED";
break;
default:
typeStr = "unknown type";
}
var stateStr;
switch (this.stateChange) {
case 1:
stateStr = "SELECTED";
break;
case 2:
stateStr = "DESELECTED";
break;
default:
stateStr = "unknown type";
}
return typeStr + ",item=" + this.item + ",stateChange=" + stateStr ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:57
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
var C$=Clazz_newClass(P$, "WindowAdapter", null, null, ['java.awt.event.WindowListener', 'java.awt.event.WindowStateListener', 'java.awt.event.WindowFocusListener']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowStateChanged$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowGainedFocus$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$, 'windowLostFocus$java_awt_event_WindowEvent', function (e) {
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[['sun.awt.SunToolkit','sun.awt.AppContext']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "WindowEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.opposite = null;
this.oldState = 0;
this.newState = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I$java_awt_Window$I$I', function (source, id, opposite, oldState, newState) {
C$.superclazz.c$$java_awt_Component$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.opposite = opposite;
this.oldState = oldState;
this.newState = newState;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I$java_awt_Window', function (source, id, opposite) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, opposite, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I$I$I', function (source, id, oldState, newState) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, null, oldState, newState]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I', function (source, id) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, null, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'getWindow', function () {
return (Clazz_instanceOf(this.source, "java.awt.Window")) ? this.source : null;
});

Clazz_newMeth(C$, 'getOppositeWindow', function () {
if (this.opposite == null ) {
return null;
}return ((I$[1]||$incl$(1)).targetToAppContext$O(this.opposite) === (I$[2]||$incl$(2)).getAppContext() ) ? this.opposite : null;
});

Clazz_newMeth(C$, 'getOldState', function () {
return this.oldState;
});

Clazz_newMeth(C$, 'getNewState', function () {
return this.newState;
});

Clazz_newMeth(C$, 'paramString', function () {
var typeStr;
switch (this.id) {
case 200:
typeStr = "WINDOW_OPENED";
break;
case 201:
typeStr = "WINDOW_CLOSING";
break;
case 202:
typeStr = "WINDOW_CLOSED";
break;
case 203:
typeStr = "WINDOW_ICONIFIED";
break;
case 204:
typeStr = "WINDOW_DEICONIFIED";
break;
case 205:
typeStr = "WINDOW_ACTIVATED";
break;
case 206:
typeStr = "WINDOW_DEACTIVATED";
break;
case 207:
typeStr = "WINDOW_GAINED_FOCUS";
break;
case 208:
typeStr = "WINDOW_LOST_FOCUS";
break;
case 209:
typeStr = "WINDOW_STATE_CHANGED";
break;
default:
typeStr = "unknown type";
}
typeStr += ",opposite=" + this.getOppositeWindow() + ",oldState=" + this.oldState + ",newState=" + this.newState ;
return typeStr;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:58
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Cursor','java.awt.Window']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Frame", null, 'java.awt.Window');
C$.$nameCounter = 0;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.$nameCounter = 0;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.maximizedBounds = null;
this.title = null;
this.resizable = false;
this.undecorated = false;
this.mbManagement = false;
this.$state = 0;
this.ownedWindows = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.title = "Untitled";
this.resizable = true;
this.undecorated = false;
this.mbManagement = false;
this.$state = 0;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.initTitleGC$S$java_awt_GraphicsConfiguration(null, null);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration', function (gc) {
Clazz_super_(C$, this,1);
this.initTitleGC$S$java_awt_GraphicsConfiguration(null, gc);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (title) {
Clazz_super_(C$, this,1);
this.initTitleGC$S$java_awt_GraphicsConfiguration(title, null);
}, 1);

Clazz_newMeth(C$, 'c$$S$java_awt_GraphicsConfiguration', function (title, gc) {
Clazz_super_(C$, this,1);
this.initTitleGC$S$java_awt_GraphicsConfiguration(title, gc);
}, 1);

Clazz_newMeth(C$, 'initTitleGC$S$java_awt_GraphicsConfiguration', function (title, gc) {
this.title = (title == null  ? "" : title);
this.initWinGC$java_awt_Window$java_awt_GraphicsConfiguration(null, gc);
});

Clazz_newMeth(C$, 'constructComponentName', function () {
{
return "frame" + C$.$nameCounter++;
}});

Clazz_newMeth(C$, 'addNotify', function () {
this.getOrCreatePeer();
var p = this.peer;
if (p != null ) p.setMaximizedBounds$java_awt_Rectangle(this.maximizedBounds);
C$.superclazz.prototype.addNotify.apply(this, []);
});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer = this.getToolkit().createFrame$java_awt_Frame(this)) : this.peer);
});

Clazz_newMeth(C$, 'getTitle', function () {
return this.title;
});

Clazz_newMeth(C$, 'setTitle$S', function (title) {
var oldTitle = this.title;
if (title == null ) {
title = "";
}{
this.title = title;
var peer = this.peer;
if (peer != null ) {
peer.setTitle$S(title);
}}this.firePropertyChange$S$O$O("title", oldTitle, title);
});

Clazz_newMeth(C$, 'getIconImage', function () {
var icons = this.icons;
if (icons != null ) {
if (icons.size() > 0) {
return icons.get$I(0);
}}return null;
});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image', function (image) {
C$.superclazz.prototype.setIconImage$java_awt_Image.apply(this, [image]);
});

Clazz_newMeth(C$, 'isResizable', function () {
return this.resizable;
});

Clazz_newMeth(C$, 'setResizable$Z', function (resizable) {
var oldResizable = this.resizable;
{
this.resizable = resizable;
}this.firePropertyChange$S$Z$Z("resizable", oldResizable, resizable);
});

Clazz_newMeth(C$, 'setState$I', function (state) {
var current = this.getExtendedState();
if (state == 1 && (current & 1) == 0 ) {
this.setExtendedState$I(current | 1);
} else if (state == 0 && (current & 1) != 0 ) {
this.setExtendedState$I(current & -2);
}});

Clazz_newMeth(C$, 'setExtendedState$I', function (state) {
if (!p$.isFrameStateSupported$I.apply(this, [state])) {
return;
}this.$state = state;
});

Clazz_newMeth(C$, 'isFrameStateSupported$I', function (state) {
if (!this.getToolkit().isFrameStateSupported$I(state)) {
if (((state & 1) != 0) && !this.getToolkit().isFrameStateSupported$I(1) ) {
return false;
} else {
state = state&(-2);
}return this.getToolkit().isFrameStateSupported$I(state);
}return true;
});

Clazz_newMeth(C$, 'getState', function () {
return (this.getExtendedState() & 1) != 0 ? 1 : 0;
});

Clazz_newMeth(C$, 'getExtendedState', function () {
return this.$state;
});

Clazz_newMeth(C$, 'setMaximizedBounds$java_awt_Rectangle', function (bounds) {
this.maximizedBounds = bounds;
});

Clazz_newMeth(C$, 'getMaximizedBounds', function () {
return this.maximizedBounds;
});

Clazz_newMeth(C$, 'setUndecorated$Z', function (undecorated) {
{
if (this.isDisplayable()) {
throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["The frame is displayable."]);
}this.undecorated = undecorated;
}});

Clazz_newMeth(C$, 'isUndecorated', function () {
return this.undecorated;
});

Clazz_newMeth(C$, 'removeNotify', function () {
C$.superclazz.prototype.removeNotify.apply(this, []);
});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent', function (e) {
C$.superclazz.prototype.postProcessKeyEvent$java_awt_event_KeyEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'paramString', function () {
var str = C$.superclazz.prototype.paramString.apply(this, []);
if (this.title != null ) {
str += ",title=" + this.title;
}if (this.resizable) {
str += ",resizable";
}this.getExtendedState();
if (this.$state == 0) {
str += ",normal";
} else {
if ((this.$state & 1) != 0) {
str += ",iconified";
}if ((this.$state & 6) == 6) {
str += ",maximized";
} else if ((this.$state & 2) != 0) {
str += ",maximized_horiz";
} else if ((this.$state & 4) != 0) {
str += ",maximized_vert";
}}return str;
});

Clazz_newMeth(C$, 'setCursor$I', function (cursorType) {
if (cursorType < 0 || cursorType > 13 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["illegal cursor type"]);
}this.setCursor$java_awt_Cursor((I$[1]||$incl$(1)).getPredefinedCursor$I(cursorType));
});

Clazz_newMeth(C$, 'getCursorType', function () {
return (this.getCursor().getType());
});

Clazz_newMeth(C$, 'getFrames', function () {
var allWindows = (I$[2]||$incl$(2)).getWindows();
var frameCount = 0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=$$w[$w]),1);$w++) {
if (Clazz_instanceOf(w, "java.awt.Frame")) {
frameCount++;
}}
var frames = Clazz_array(C$, [frameCount]);
var c = 0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=$$w[$w]),1);$w++) {
if (Clazz_instanceOf(w, "java.awt.Frame")) {
frames[c++] = w;
}}
return frames;
}, 1);
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[['java.lang.InternalError']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Point2D", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'Cloneable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setLocation$java_awt_geom_Point2D', function (p) {
this.setLocation$D$D(p.getX(), p.getY());
});

Clazz_newMeth(C$, 'distanceSq$D$D$D$D', function (x1, y1, x2, y2) {
x1 -= x2;
y1 -= y2;
return (x1 * x1 + y1 * y1);
}, 1);

Clazz_newMeth(C$, 'distance$D$D$D$D', function (x1, y1, x2, y2) {
x1 -= x2;
y1 -= y2;
return Math.sqrt(x1 * x1 + y1 * y1);
}, 1);

Clazz_newMeth(C$, 'distanceSq$D$D', function (px, py) {
px -= this.getX();
py -= this.getY();
return (px * px + py * py);
});

Clazz_newMeth(C$, 'distanceSq$java_awt_geom_Point2D', function (pt) {
var px = pt.getX() - this.getX();
var py = pt.getY() - this.getY();
return (px * px + py * py);
});

Clazz_newMeth(C$, 'distance$D$D', function (px, py) {
px -= this.getX();
py -= this.getY();
return Math.sqrt(px * px + py * py);
});

Clazz_newMeth(C$, 'distance$java_awt_geom_Point2D', function (pt) {
var px = pt.getX() - this.getX();
var py = pt.getY() - this.getY();
return Math.sqrt(px * px + py * py);
});

Clazz_newMeth(C$, 'hashCode', function () {
var bits = java.lang.Double.doubleToLongBits(this.getX());
bits = bits^(java.lang.Double.doubleToLongBits(this.getY()) * 31);
return (((bits|0)) ^ (((bits >> 32)|0)));
});

Clazz_newMeth(C$, 'clone', function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
throw Clazz_new_((I$[1]||$incl$(1)));
} else {
throw e;
}
}
});
;
(function(){var C$=Clazz_newClass(P$.Point2D, "Float", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Point2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'c$$F$F', function (x, y) {
Clazz_super_(C$, this,1);
this.x = x;
this.y = y;
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'setLocation$D$D', function (x, y) {
this.x = x;
this.y = y;
});

Clazz_newMeth(C$, 'setLocation$F$F', function (x, y) {
this.x = x;
this.y = y;
});

Clazz_newMeth(C$, 'toString', function () {
return "Point2D.Float[" + new Float(this.x).toString() + ", " + new Float(this.y).toString() + "]" ;
});
})()
;
(function(){var C$=Clazz_newClass(P$.Point2D, "Double", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Point2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'c$$D$D', function (x, y) {
Clazz_super_(C$, this,1);
this.x = x;
this.y = y;
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'setLocation$D$D', function (x, y) {
this.x = x;
this.y = y;
});

Clazz_newMeth(C$, 'toString', function () {
return "Point2D.Double[" + new Double(this.x).toString() + ", " + new Double(this.y).toString() + "]" ;
});
})()
})();
//Created 2018-05-15 01:02:00
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "GraphicsCallback", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'sun.awt.SunGraphicsCallback');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);
;
(function(){var C$=Clazz_newClass(P$.GraphicsCallback, "PaintCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');
C$.instance = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.instance = Clazz_new_(C$);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics', function (comp, cg) {
comp.paint$java_awt_Graphics(cg);
});

Clazz_newMeth(C$, 'getInstance', function () {
return C$.instance;
}, 1);
})()
;
(function(){var C$=Clazz_newClass(P$.GraphicsCallback, "PaintAllCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');
C$.instance = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.instance = Clazz_new_(C$);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics', function (comp, cg) {
comp.paintAll$java_awt_Graphics(cg);
});

Clazz_newMeth(C$, 'getInstance', function () {
return C$.instance;
}, 1);
})()
;
(function(){var C$=Clazz_newClass(P$.GraphicsCallback, "PaintHeavyweightComponentsCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');
C$.instance = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.instance = Clazz_new_(C$);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics', function (comp, cg) {
if (comp.isLightweight()) {
comp.paintHeavyweightComponents$java_awt_Graphics(cg);
} else {
comp.paintAll$java_awt_Graphics(cg);
}});

Clazz_newMeth(C$, 'getInstance', function () {
return C$.instance;
}, 1);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:01:51
(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
var C$=Clazz_newInterface(P$, "FramePeer", null, null, 'java.awt.peer.WindowPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:02
(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
var C$=Clazz_newInterface(P$, "WindowPeer", null, null, 'java.awt.peer.ContainerPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:03
(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
var C$=Clazz_newClass(P$, "Point", null, 'java.awt.geom.Point2D');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.x = 0;
this.y = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point', function (p) {
C$.c$$I$I.apply(this, [p.x, p.y]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (x, y) {
Clazz_super_(C$, this,1);
this.x = x;
this.y = y;
}, 1);

Clazz_newMeth(C$, 'getX', function () {
return this.x;
});

Clazz_newMeth(C$, 'getY', function () {
return this.y;
});

Clazz_newMeth(C$, 'getLocation', function () {
return Clazz_new_(C$.c$$I$I,[this.x, this.y]);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point', function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'setLocation$I$I', function (x, y) {
this.move$I$I(x, y);
});

Clazz_newMeth(C$, 'setLocation$D$D', function (x, y) {
this.x = (Math.floor(x + 0.5)|0);
this.y = (Math.floor(y + 0.5)|0);
});

Clazz_newMeth(C$, 'move$I$I', function (x, y) {
this.x = x;
this.y = y;
});

Clazz_newMeth(C$, 'translate$I$I', function (dx, dy) {
this.x = this.x+(dx);
this.y = this.y+(dy);
});

Clazz_newMeth(C$, 'equals$O', function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Point")) {
var pt = obj;
return (this.x == pt.x) && (this.y == pt.y) ;
}return C$.superclazz.prototype.equals$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[x=" + this.x + ",y=" + this.y + "]" ;
});
})();
//Created 2018-05-15 01:01:53
(function(){var P$=Clazz_newPackage("java.awt"),I$=[['java.awt.Color','java.util.Vector','java.awt.Cursor','java.awt.BorderLayout',['java.awt.Dialog','.ModalExclusionType'],'java.util.ArrayList','swingjs.JSUtil','java.awt.Toolkit','java.awt.event.WindowEvent','java.awt.Window$1','java.util.Locale','java.util.Arrays','sun.awt.AppContext','java.awt.AWTEventMulticaster','java.awt.event.WindowListener','java.awt.event.WindowFocusListener','java.awt.event.WindowStateListener','swingjs.JSToolkit','java.awt.ComponentOrientation','java.util.ResourceBundle','java.awt.GraphicsEnvironment','java.awt.Point']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Window", null, 'java.awt.Container');
C$.systemSyncLWRequests = false;
C$.nameCounter = 0;
var p$=C$.prototype;
C$.TRANSPARENT_BACKGROUND_COLOR = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.systemSyncLWRequests = false;
C$.nameCounter = 0;
C$.TRANSPARENT_BACKGROUND_COLOR = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I$I,[0, 0, 0, 0]);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.warningString = null;
this.icons = null;
this.temporaryLostComponent = null;
this.syncLWRequests = false;
this.beforeFirstShow = false;
this.state = 0;
this.alwaysOnTop = false;
this.ownedWindowList = null;
this.showWithParent = false;
this.modalBlocker = null;
this.modalExclusionType = null;
this.windowListener = null;
this.windowStateListener = null;
this.windowFocusListener = null;
this.focusableWindowState = false;
this.isInShow = false;
this.opacity = 0;
this.shape = null;
this.isTrayIconWindow = false;
this.opaque = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.syncLWRequests = false;
this.beforeFirstShow = true;
this.ownedWindowList = Clazz_new_((I$[2]||$incl$(2)));
this.focusableWindowState = true;
this.isInShow = false;
this.opacity = 1.0;
this.shape = null;
this.isTrayIconWindow = false;
this.opaque = true;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.initWinGC$java_awt_Window$java_awt_GraphicsConfiguration(null, null);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration', function (gc) {
Clazz_super_(C$, this,1);
this.initWinGC$java_awt_Window$java_awt_GraphicsConfiguration(null, gc);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window', function (owner) {
Clazz_super_(C$, this,1);
this.initWinGC$java_awt_Window$java_awt_GraphicsConfiguration(owner, null);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$java_awt_GraphicsConfiguration', function (owner, gc) {
Clazz_super_(C$, this,1);
this.initWinGC$java_awt_Window$java_awt_GraphicsConfiguration(owner, gc);
}, 1);

Clazz_newMeth(C$, 'initWinGC$java_awt_Window$java_awt_GraphicsConfiguration', function (owner, gc) {
this.setAppContext();
this.parent = owner;
if (owner != null ) owner.addOwnedWindow$java_awt_Window(this);
this.syncLWRequests = C$.systemSyncLWRequests;
p$.addToWindowList.apply(this, []);
this.cursor = (I$[3]||$incl$(3)).getPredefinedCursor$I(0);
this.visible = false;
this.setLayout$java_awt_LayoutManager(Clazz_new_((I$[4]||$incl$(4))));
this.modalExclusionType = (I$[5]||$incl$(5)).NO_EXCLUDE;
});

Clazz_newMeth(C$, 'constructComponentName', function () {
{
return "win" + C$.nameCounter++;
}});

Clazz_newMeth(C$, 'getIconImages', function () {
var icons = this.icons;
if (icons == null  || icons.size() == 0 ) {
return Clazz_new_((I$[6]||$incl$(6)));
}return Clazz_new_((I$[6]||$incl$(6)).c$$java_util_Collection,[icons]);
});

Clazz_newMeth(C$, 'setIconImages$java_util_List', function (icons) {
this.icons = (icons == null ) ? Clazz_new_((I$[6]||$incl$(6))) : Clazz_new_((I$[6]||$incl$(6)).c$$java_util_Collection,[icons]);
this.firePropertyChange$S$O$O("iconImage", null, null);
});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image', function (image) {
var imageList = Clazz_new_((I$[6]||$incl$(6)));
if (image != null ) {
imageList.add$TE(image);
}this.setIconImages$java_util_List(imageList);
});

Clazz_newMeth(C$, 'addNotify', function () {
var parent = this.parent;
if (parent != null  && parent.getPeer() == null  ) parent.addNotify();
this.getOrCreatePeer();
(I$[7]||$incl$(7)).getAppletViewer().addWindow$java_awt_Window(this);
C$.superclazz.prototype.addNotify.apply(this, []);
});

Clazz_newMeth(C$, 'getOrCreatePeer', function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer = this.getToolkit().createWindow$java_awt_Window(this)) : this.peer);
});

Clazz_newMeth(C$, 'removeNotify', function () {
(I$[7]||$incl$(7)).getAppletViewer().allWindows.removeObj$O(this);
C$.superclazz.prototype.removeNotify.apply(this, []);
});

Clazz_newMeth(C$, 'pack', function () {
var parent = this.parent;
if (parent != null  && parent.getPeer() == null  ) {
parent.addNotify();
}if (this.peer == null ) {
this.addNotify();
}if (this.beforeFirstShow) {
this.isPacked = true;
}this.repackContainer();
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension', function (minimumSize) {
{
C$.superclazz.prototype.setMinimumSize$java_awt_Dimension.apply(this, [minimumSize]);
var size = this.getSize();
if (this.isMinimumSizeSet()) {
if (size.width < minimumSize.width || size.height < minimumSize.height ) {
var nw = Math.max(this.width, minimumSize.width);
var nh = Math.max(this.height, minimumSize.height);
this.setSize$I$I(nw, nh);
}}}});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension', function (d) {
C$.superclazz.prototype.setSize$java_awt_Dimension.apply(this, [d]);
});

Clazz_newMeth(C$, 'setSize$I$I', function (width, height) {
C$.superclazz.prototype.setSize$I$I.apply(this, [width, height]);
});

Clazz_newMeth(C$, 'reshape$I$I$I$I', function (x, y, width, height) {
if (this.isMinimumSizeSet()) {
var minSize = this.getMinimumSize();
if (width < minSize.width) {
width = minSize.width;
}if (height < minSize.height) {
height = minSize.height;
}}C$.superclazz.prototype.reshape$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'closeSplashScreen', function () {
}, 1);

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
if (b) this.repaint();
});

Clazz_newMeth(C$, 'show', function () {
this.validate();
this.isInShow = true;
if (this.visible) {
this.toFront();
} else {
this.beforeFirstShow = false;
C$.closeSplashScreen();
C$.superclazz.prototype.show.apply(this, []);
for (var i = 0; i < this.ownedWindowList.size(); i++) {
var child = this.ownedWindowList.elementAt$I(i);
if ((child != null ) && child.showWithParent ) {
child.show();
child.showWithParent = false;
}}
if (Clazz_instanceOf(this, "java.awt.Frame") || Clazz_instanceOf(this, "java.awt.Dialog") ) {
C$.updateChildFocusableWindowState$java_awt_Window(this);
}}this.isInShow = false;
if ((this.state & 1) == 0) {
this.repaint();
this.postWindowEvent$I(200);
this.state = this.state|(1);
}});

Clazz_newMeth(C$, 'updateChildFocusableWindowState$java_awt_Window', function (w) {
for (var i = 0; i < w.ownedWindowList.size(); i++) {
var child = w.ownedWindowList.elementAt$I(i);
if (child != null ) {
C$.updateChildFocusableWindowState$java_awt_Window(child);
}}
}, 1);

Clazz_newMeth(C$, 'postWindowEvent$I', function (id) {
if (this.windowListener != null  || (this.eventMask & 64) != 0  || (I$[8]||$incl$(8)).enabledOnToolkit$J(64) ) {
var e = Clazz_new_((I$[9]||$incl$(9)).c$$java_awt_Window$I,[this, id]);
(I$[8]||$incl$(8)).getEventQueue().postEvent$java_awt_AWTEvent(e);
}});

Clazz_newMeth(C$, 'hide', function () {
{
for (var i = 0; i < this.ownedWindowList.size(); i++) {
var child = this.ownedWindowList.elementAt$I(i);
if ((child != null ) && child.visible ) {
child.hide();
child.showWithParent = true;
}}
}C$.superclazz.prototype.hide.apply(this, []);
});

Clazz_newMeth(C$, 'clearMostRecentFocusOwnerOnHide', function () {
});

Clazz_newMeth(C$, 'dispose', function () {
this.doDispose();
});

Clazz_newMeth(C$, 'disposeImpl', function () {
this.dispose();
});

Clazz_newMeth(C$, 'doDispose', function () {
var me = this;
var action = ((
(function(){var C$=Clazz_newClass(P$, "Window$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'run', function () {
(this.$finals.me).getUI().uninstallUI$javax_swing_JComponent(null);
(this.$finals.me).getUI().uninstallJS();
var ownedWindowArray;
{
ownedWindowArray = Clazz_array(java.lang.Object, [this.b$['java.awt.Window'].ownedWindowList.size()]);
this.b$['java.awt.Window'].ownedWindowList.copyInto$OA(ownedWindowArray);
}for (var i = 0; i < ownedWindowArray.length; i++) {
var child = ownedWindowArray[i];
if (child != null ) child.disposeImpl();
}
this.b$['java.awt.Window'].hide();
this.b$['java.awt.Window'].beforeFirstShow = true;
this.b$['java.awt.Window'].removeNotify();
this.b$['java.awt.Window'].clearCurrentFocusCycleRootOnHide();
});
})()
), Clazz_new_((I$[10]||$incl$(10)).$init$, [this, {me: me}]));
action.run();
this.postWindowEvent$I(202);
});

Clazz_newMeth(C$, 'adjustListeningChildrenOnParent$J$I', function (mask, num) {
});

Clazz_newMeth(C$, 'adjustDecendantsOnParent$I', function (num) {
});

Clazz_newMeth(C$, 'toFront', function () {
this.toFront_NoClientCode();
});

Clazz_newMeth(C$, 'toFront_NoClientCode', function () {
if (this.visible) {
var peer = this.peer;
if (peer != null ) {
peer.toFront();
}if (this.isModalBlocked()) {
this.modalBlocker.toFront_NoClientCode();
}}});

Clazz_newMeth(C$, 'toBack', function () {
this.toBack_NoClientCode();
});

Clazz_newMeth(C$, 'toBack_NoClientCode', function () {
if (this.isAlwaysOnTop()) {
try {
this.setAlwaysOnTop$Z(false);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.SecurityException")){
} else {
throw e;
}
}
}if (this.visible) {
}});

Clazz_newMeth(C$, 'getToolkit', function () {
return (I$[8]||$incl$(8)).getDefaultToolkit();
});

Clazz_newMeth(C$, 'getWarningString', function () {
return this.warningString;
});

Clazz_newMeth(C$, 'getLocale', function () {
if (this.locale == null ) {
return (I$[11]||$incl$(11)).getDefault();
}return this.locale;
});

Clazz_newMeth(C$, 'setCursor$java_awt_Cursor', function (cursor) {
if (cursor == null ) {
cursor = (I$[3]||$incl$(3)).getPredefinedCursor$I(0);
}C$.superclazz.prototype.setCursor$java_awt_Cursor.apply(this, [cursor]);
});

Clazz_newMeth(C$, 'getOwner', function () {
return this.getOwner_NoClientCode();
});

Clazz_newMeth(C$, 'getOwner_NoClientCode', function () {
return this.parent;
});

Clazz_newMeth(C$, 'getOwnedWindows', function () {
return this.getOwnedWindows_NoClientCode();
});

Clazz_newMeth(C$, 'getOwnedWindows_NoClientCode', function () {
var realCopy;
{
var fullSize = this.ownedWindowList.size();
var realSize = 0;
var fullCopy = Clazz_array(C$, [fullSize]);
for (var i = 0; i < fullSize; i++) {
fullCopy[realSize] = this.ownedWindowList.elementAt$I(i);
if (fullCopy[realSize] != null ) {
realSize++;
}}
if (fullSize != realSize) {
realCopy = (I$[12]||$incl$(12)).copyOf$TTA$I(fullCopy, realSize);
} else {
realCopy = fullCopy;
}}return realCopy;
});

Clazz_newMeth(C$, 'isModalBlocked', function () {
return this.modalBlocker != null ;
});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_Dialog$Z$Z', function (blocker, blocked, peerCall) {
});

Clazz_newMeth(C$, 'getModalBlocker', function () {
return this.modalBlocker;
});

Clazz_newMeth(C$, 'getAllWindows', function () {
var v = Clazz_new_((I$[6]||$incl$(6)));
v.addAll$java_util_Collection((I$[7]||$incl$(7)).getAppletViewer().allWindows);
return v;
}, 1);

Clazz_newMeth(C$, 'getAllUnblockedWindows', function () {
var allWindows = (I$[7]||$incl$(7)).getAppletViewer().allWindows;
var unblocked = Clazz_new_((I$[6]||$incl$(6)));
for (var i = 0; i < allWindows.size(); i++) {
var w = allWindows.get$I(i);
if (!w.isModalBlocked()) {
unblocked.add$TE(w);
}}
return unblocked;
}, 1);

Clazz_newMeth(C$, 'getWindows$sun_awt_AppContext', function (appContext) {
{
var realCopy;
var windowList = appContext.get$O(Clazz_getClass(C$));
if (windowList != null ) {
var fullSize = windowList.size();
var realSize = 0;
var fullCopy = Clazz_array(C$, [fullSize]);
for (var i = 0; i < fullSize; i++) {
var w = windowList.get$I(i);
if (w != null ) {
fullCopy[realSize++] = w;
}}
if (fullSize != realSize) {
realCopy = (I$[12]||$incl$(12)).copyOf$TTA$I(fullCopy, realSize);
} else {
realCopy = fullCopy;
}} else {
realCopy = Clazz_array(C$, [0]);
}return realCopy;
}}, 1);

Clazz_newMeth(C$, 'getWindows', function () {
return C$.getWindows$sun_awt_AppContext((I$[13]||$incl$(13)).getAppContext());
}, 1);

Clazz_newMeth(C$, 'getOwnerlessWindows', function () {
var allWindows = C$.getWindows();
var ownerlessCount = 0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=$$w[$w]),1);$w++) {
if (w.getOwner() == null ) {
ownerlessCount++;
}}
var ownerless = Clazz_array(C$, [ownerlessCount]);
var c = 0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=$$w[$w]),1);$w++) {
if (w.getOwner() == null ) {
ownerless[c++] = w;
}}
return ownerless;
}, 1);

Clazz_newMeth(C$, 'getDocumentRoot', function () {
{
var w = this;
while (w.getOwner() != null ){
w = w.getOwner();
}
return w;
}});

Clazz_newMeth(C$, 'setModalExclusionType$java_awt_Dialog_ModalExclusionType', function (exclusionType) {
if (exclusionType == null ) {
exclusionType = (I$[5]||$incl$(5)).NO_EXCLUDE;
}if (!(I$[8]||$incl$(8)).getDefaultToolkit().isModalExclusionTypeSupported$java_awt_Dialog_ModalExclusionType(exclusionType)) {
exclusionType = (I$[5]||$incl$(5)).NO_EXCLUDE;
}if (this.modalExclusionType === exclusionType ) {
return;
}this.modalExclusionType = exclusionType;
});

Clazz_newMeth(C$, 'getModalExclusionType', function () {
return this.modalExclusionType;
});

Clazz_newMeth(C$, 'isModalExcluded$java_awt_Dialog_ModalExclusionType', function (exclusionType) {
if ((this.modalExclusionType != null ) && this.modalExclusionType.compareTo$TE(exclusionType) >= 0 ) {
return true;
}var owner = this.getOwner_NoClientCode();
return (owner != null ) && owner.isModalExcluded$java_awt_Dialog_ModalExclusionType(exclusionType) ;
});

Clazz_newMeth(C$, 'addWindowListener$java_awt_event_WindowListener', function (l) {
if (l == null ) {
return;
}this.newEventsOnly = true;
this.windowListener = (I$[14]||$incl$(14)).add$java_awt_event_WindowListener$java_awt_event_WindowListener(this.windowListener, l);
});

Clazz_newMeth(C$, 'addWindowStateListener$java_awt_event_WindowStateListener', function (l) {
if (l == null ) {
return;
}this.windowStateListener = (I$[14]||$incl$(14)).add$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener(this.windowStateListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'addWindowFocusListener$java_awt_event_WindowFocusListener', function (l) {
if (l == null ) {
return;
}this.windowFocusListener = (I$[14]||$incl$(14)).add$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener(this.windowFocusListener, l);
this.newEventsOnly = true;
});

Clazz_newMeth(C$, 'removeWindowListener$java_awt_event_WindowListener', function (l) {
if (l == null ) {
return;
}this.windowListener = (I$[14]||$incl$(14)).remove$java_awt_event_WindowListener$java_awt_event_WindowListener(this.windowListener, l);
});

Clazz_newMeth(C$, 'removeWindowStateListener$java_awt_event_WindowStateListener', function (l) {
if (l == null ) {
return;
}this.windowStateListener = (I$[14]||$incl$(14)).remove$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener(this.windowStateListener, l);
});

Clazz_newMeth(C$, 'removeWindowFocusListener$java_awt_event_WindowFocusListener', function (l) {
if (l == null ) {
return;
}this.windowFocusListener = (I$[14]||$incl$(14)).remove$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener(this.windowFocusListener, l);
});

Clazz_newMeth(C$, 'getWindowListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[15]||$incl$(15)),['windowActivated$java_awt_event_WindowEvent','windowClosed$java_awt_event_WindowEvent','windowClosing$java_awt_event_WindowEvent','windowDeactivated$java_awt_event_WindowEvent','windowDeiconified$java_awt_event_WindowEvent','windowIconified$java_awt_event_WindowEvent','windowOpened$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getWindowFocusListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[16]||$incl$(16)),['windowGainedFocus$java_awt_event_WindowEvent','windowLostFocus$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getWindowStateListeners', function () {
return (this.getListeners$Class(Clazz_getClass((I$[17]||$incl$(17)),['windowStateChanged$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
var l = null;
if (listenerType === Clazz_getClass((I$[16]||$incl$(16)),['windowGainedFocus$java_awt_event_WindowEvent','windowLostFocus$java_awt_event_WindowEvent']) ) {
l = this.windowFocusListener;
} else if (listenerType === Clazz_getClass((I$[17]||$incl$(17)),['windowStateChanged$java_awt_event_WindowEvent']) ) {
l = this.windowStateListener;
} else if (listenerType === Clazz_getClass((I$[15]||$incl$(15)),['windowActivated$java_awt_event_WindowEvent','windowClosed$java_awt_event_WindowEvent','windowClosing$java_awt_event_WindowEvent','windowDeactivated$java_awt_event_WindowEvent','windowDeiconified$java_awt_event_WindowEvent','windowIconified$java_awt_event_WindowEvent','windowOpened$java_awt_event_WindowEvent']) ) {
l = this.windowListener;
} else {
return C$.superclazz.prototype.getListeners$Class.apply(this, [listenerType]);
}return (I$[14]||$incl$(14)).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent', function (e) {
switch (e.id) {
case 200:
case 201:
case 202:
case 203:
case 204:
case 205:
case 206:
if ((this.eventMask & 64) != 0 || this.windowListener != null  ) {
return true;
}return false;
case 207:
case 208:
if ((this.eventMask & 524288) != 0 || this.windowFocusListener != null  ) {
return true;
}return false;
case 209:
if ((this.eventMask & 262144) != 0 || this.windowStateListener != null  ) {
return true;
}return false;
default:
break;
}
return C$.superclazz.prototype.eventEnabled$java_awt_AWTEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent', function (e) {
if (Clazz_instanceOf(e, "java.awt.event.WindowEvent")) {
switch (e.getID()) {
case 200:
case 201:
case 202:
case 203:
case 204:
case 205:
case 206:
this.processWindowEvent$java_awt_event_WindowEvent(e);
break;
case 207:
case 208:
this.processWindowFocusEvent$java_awt_event_WindowEvent(e);
break;
case 209:
this.processWindowStateEvent$java_awt_event_WindowEvent(e);
default:
break;
}
return;
}this.processEventCont$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processWindowEvent$java_awt_event_WindowEvent', function (e) {
var listener = this.windowListener;
if (listener != null ) {
switch (e.getID()) {
case 200:
listener.windowOpened$java_awt_event_WindowEvent(e);
break;
case 201:
listener.windowClosing$java_awt_event_WindowEvent(e);
break;
case 202:
listener.windowClosed$java_awt_event_WindowEvent(e);
break;
case 203:
listener.windowIconified$java_awt_event_WindowEvent(e);
break;
case 204:
listener.windowDeiconified$java_awt_event_WindowEvent(e);
break;
case 205:
listener.windowActivated$java_awt_event_WindowEvent(e);
break;
case 206:
listener.windowDeactivated$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'processWindowFocusEvent$java_awt_event_WindowEvent', function (e) {
var listener = this.windowFocusListener;
if (listener != null ) {
switch (e.getID()) {
case 207:
listener.windowGainedFocus$java_awt_event_WindowEvent(e);
break;
case 208:
listener.windowLostFocus$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'processWindowStateEvent$java_awt_event_WindowEvent', function (e) {
var listener = this.windowStateListener;
if (listener != null ) {
switch (e.getID()) {
case 209:
listener.windowStateChanged$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'preProcessKeyEvent$java_awt_event_KeyEvent', function (e) {
});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent', function (e) {
});

Clazz_newMeth(C$, 'setAlwaysOnTop$Z', function (alwaysOnTop) {
var oldAlwaysOnTop;
{
oldAlwaysOnTop = this.alwaysOnTop;
this.alwaysOnTop = alwaysOnTop;
}if (oldAlwaysOnTop != alwaysOnTop ) {
if (this.isAlwaysOnTopSupported()) {
}this.firePropertyChange$S$Z$Z("alwaysOnTop", oldAlwaysOnTop, alwaysOnTop);
}});

Clazz_newMeth(C$, 'isAlwaysOnTopSupported', function () {
return (I$[8]||$incl$(8)).getDefaultToolkit().isAlwaysOnTopSupported();
});

Clazz_newMeth(C$, 'isAlwaysOnTop', function () {
return this.alwaysOnTop;
});

Clazz_newMeth(C$, 'isActive', function () {
return false;
});

Clazz_newMeth(C$, 'isFocused', function () {
return (I$[18]||$incl$(18)).isFocused$java_awt_Window(this);
});

Clazz_newMeth(C$, 'getFocusTraversalKeys$I', function (id) {
return null;
});

Clazz_newMeth(C$, 'setFocusCycleRoot$Z', function (focusCycleRoot) {
});

Clazz_newMeth(C$, 'isFocusCycleRoot', function () {
return true;
});

Clazz_newMeth(C$, 'getFocusCycleRootAncestor', function () {
return null;
});

Clazz_newMeth(C$, 'isFocusableWindow', function () {
if (!this.getFocusableWindowState()) {
return false;
}if (Clazz_instanceOf(this, "java.awt.Frame") || Clazz_instanceOf(this, "java.awt.Dialog") ) {
return true;
}for (var owner = this.getOwner(); owner != null ; owner = owner.getOwner()) {
if (Clazz_instanceOf(owner, "java.awt.Frame") || Clazz_instanceOf(owner, "java.awt.Dialog") ) {
return owner.isShowing();
}}
return false;
});

Clazz_newMeth(C$, 'getFocusableWindowState', function () {
return this.focusableWindowState;
});

Clazz_newMeth(C$, 'setFocusableWindowState$Z', function (focusableWindowState) {
var oldFocusableWindowState;
{
oldFocusableWindowState = this.focusableWindowState;
this.focusableWindowState = focusableWindowState;
}this.firePropertyChange$S$Z$Z("focusableWindowState", oldFocusableWindowState, focusableWindowState);
if (oldFocusableWindowState && !focusableWindowState && this.isFocused()  ) {
for (var owner = this.getOwner(); owner != null ; owner = owner.getOwner()) {
}
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener', function (listener) {
C$.superclazz.prototype.addPropertyChangeListener$java_beans_PropertyChangeListener.apply(this, [listener]);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener', function (propertyName, listener) {
C$.superclazz.prototype.addPropertyChangeListener$S$java_beans_PropertyChangeListener.apply(this, [propertyName, listener]);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent', function (e) {
if (e.getID() == 101) {
this.invalidate();
this.validate();
}C$.superclazz.prototype.dispatchEventImpl$java_awt_AWTEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'postEvent$java_awt_Event', function (e) {
if (this.handleEvent$java_awt_Event(e)) {
e.consume();
return true;
}return false;
});

Clazz_newMeth(C$, 'isShowing', function () {
return this.visible;
});

Clazz_newMeth(C$, 'applyResourceBundle$java_util_ResourceBundle', function (rb) {
this.applyComponentOrientation$java_awt_ComponentOrientation((I$[19]||$incl$(19)).getOrientation$java_util_ResourceBundle(rb));
});

Clazz_newMeth(C$, 'applyResourceBundle$S', function (rbName) {
this.applyResourceBundle$java_util_ResourceBundle((I$[20]||$incl$(20)).getBundle$S(rbName));
});

Clazz_newMeth(C$, 'addOwnedWindow$java_awt_Window', function (weakWindow) {
if (weakWindow != null ) {
{
if (!this.ownedWindowList.contains$O(weakWindow)) {
this.ownedWindowList.addElement$TE(weakWindow);
}}}});

Clazz_newMeth(C$, 'removeOwnedWindow$java_awt_Window', function (weakWindow) {
if (weakWindow != null ) {
this.ownedWindowList.removeElement$O(weakWindow);
}});

Clazz_newMeth(C$, 'connectOwnedWindow$java_awt_Window', function (child) {
child.parent = this;
this.addOwnedWindow$java_awt_Window(child);
});

Clazz_newMeth(C$, 'addToWindowList', function () {
var windowList = this.appContext.get$O(Clazz_getClass(C$));
if (windowList == null ) {
windowList = Clazz_new_((I$[2]||$incl$(2)));
this.appContext.put$O$O(Clazz_getClass(C$), windowList);
}windowList.add$TE(this);
});

Clazz_newMeth(C$, 'getGraphicsConfiguration', function () {
if (this.graphicsConfig == null ) this.graphicsConfig = (I$[18]||$incl$(18)).getGraphicsConfiguration();
return this.graphicsConfig;
});

Clazz_newMeth(C$, 'resetGC', function () {
});

Clazz_newMeth(C$, 'setLocationRelativeTo$java_awt_Component', function (c) {
var root = null;
if (c != null ) {
if (Clazz_instanceOf(c, "java.awt.Window") || Clazz_instanceOf(c, "java.applet.Applet") ) {
root = c;
} else {
var parent;
for (parent = c.getParent(); parent != null ; parent = parent.getParent()) {
if (Clazz_instanceOf(parent, "java.awt.Window") || Clazz_instanceOf(parent, "java.applet.Applet") ) {
root = parent;
break;
}}
}}if ((c != null  && !c.isShowing() ) || root == null   || !root.isShowing() ) {
var paneSize = this.getSize();
var centerPoint = (I$[21]||$incl$(21)).getLocalGraphicsEnvironment().getCenterPoint();
this.setLocation$I$I(centerPoint.x - (paneSize.width/2|0), centerPoint.y - (paneSize.height/2|0));
} else {
var invokerSize = c.getSize();
var invokerScreenLocation = c.getLocationOnScreen();
var windowBounds = this.getBounds();
var dx = invokerScreenLocation.x + ((invokerSize.width - windowBounds.width) >> 1);
var dy = invokerScreenLocation.y + ((invokerSize.height - windowBounds.height) >> 1);
var ss = root.getGraphicsConfiguration().getBounds();
if (dy + windowBounds.height > ss.y + ss.height) {
dy = ss.y + ss.height - windowBounds.height;
if (invokerScreenLocation.x - ss.x + (invokerSize.width/2|0) < (ss.width/2|0)) {
dx = invokerScreenLocation.x + invokerSize.width;
} else {
dx = invokerScreenLocation.x - windowBounds.width;
}}if (dx + windowBounds.width > ss.x + ss.width) {
dx = ss.x + ss.width - windowBounds.width;
}if (dx < ss.x) dx = ss.x;
if (dy < ss.y) dy = ss.y;
this.setLocation$I$I(dx, dy);
}});

Clazz_newMeth(C$, 'deliverMouseWheelToAncestor$java_awt_event_MouseWheelEvent', function (e) {
});

Clazz_newMeth(C$, 'dispatchMouseWheelToAncestor$java_awt_event_MouseWheelEvent', function (e) {
return false;
});

Clazz_newMeth(C$, 'getTemporaryLostComponent', function () {
return this.temporaryLostComponent;
});

Clazz_newMeth(C$, 'setTemporaryLostComponent$java_awt_Component', function (component) {
var previousComp = this.temporaryLostComponent;
if (component == null  || component.canBeFocusOwner() ) {
this.temporaryLostComponent = component;
} else {
this.temporaryLostComponent = null;
}return previousComp;
});

Clazz_newMeth(C$, 'canContainFocusOwner$java_awt_Component', function (focusOwnerCandidate) {
return C$.superclazz.prototype.canContainFocusOwner$java_awt_Component.apply(this, [focusOwnerCandidate]) && this.isFocusableWindow() ;
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I', function (x, y, width, height) {
C$.superclazz.prototype.setBounds$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle', function (r) {
this.setBounds$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'isRecursivelyVisible', function () {
return this.visible;
});

Clazz_newMeth(C$, 'getOpacity', function () {
{
return this.opacity;
}});

Clazz_newMeth(C$, 'setOpacity$F', function (opacity) {
{
if (opacity < 0.0  || opacity > 1.0  ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["The value of opacity should be in the range [0.0f .. 1.0f]."]);
}this.opacity = opacity;
}});

Clazz_newMeth(C$, 'getShape', function () {
{
return this.shape;
}});

Clazz_newMeth(C$, 'setShape$java_awt_Shape', function (shape) {
{
this.shape = shape;
}});

Clazz_newMeth(C$, 'setOpaque$Z', function (opaque) {
{
C$.setLayersOpaque$java_awt_Component$Z(this, opaque);
this.opaque = opaque;
var peer = this.getPeer();
if (peer != null ) {
peer.setOpaque$Z(opaque);
}}});

Clazz_newMeth(C$, 'setLayersOpaque$java_awt_Component$Z', function (component, isOpaque) {
if (Clazz_instanceOf(component, "javax.swing.RootPaneContainer")) {
var rpc = component;
var root = rpc.getRootPane();
var lp = root.getLayeredPane();
var c = root.getContentPane();
var content = (Clazz_instanceOf(c, "javax.swing.JComponent")) ? c : null;
lp.setOpaque$Z(isOpaque);
root.setOpaque$Z(isOpaque);
root.setDoubleBuffered$Z(isOpaque);
if (content != null ) {
content.setOpaque$Z(isOpaque);
content.setDoubleBuffered$Z(isOpaque);
var numChildren = content.getComponentCount();
if (numChildren > 0) {
var child = content.getComponent$I(0);
if (Clazz_instanceOf(child, "javax.swing.RootPaneContainer")) {
C$.setLayersOpaque$java_awt_Component$Z(child, isOpaque);
}}}}var bg = component.getBackground();
var hasTransparentBg = C$.TRANSPARENT_BACKGROUND_COLOR.equals$O(bg);
var container = null;
if (Clazz_instanceOf(component, "java.awt.Container")) {
container = component;
}if (isOpaque) {
if (hasTransparentBg) {
var newColor = null;
if (container != null  && container.preserveBackgroundColor != null  ) {
newColor = container.preserveBackgroundColor;
} else {
newColor = Clazz_new_((I$[1]||$incl$(1)).c$$I$I$I,[255, 255, 255]);
}component.setBackground$java_awt_Color(newColor);
}} else {
if (!hasTransparentBg && container != null  ) {
container.preserveBackgroundColor = bg;
}component.setBackground$java_awt_Color(C$.TRANSPARENT_BACKGROUND_COLOR);
}}, 1);

Clazz_newMeth(C$, 'getContainer', function () {
return null;
});

Clazz_newMeth(C$, 'mixOnReshaping', function () {
});

Clazz_newMeth(C$, 'getLocationOnWindow', function () {
return Clazz_new_((I$[22]||$incl$(22)).c$$I$I,[0, 0]);
});
})();
//Created 2018-05-15 01:01:54
(function(){var P$=java.util,I$=[];
var C$=Clazz_newClass(P$, "Random", null, null, 'java.io.Serializable');

C$.$clinit$ = function() {Clazz_load(C$, 1);
{

(function (pool, math, width, chunks, significance, overflow, startdenom) { var copyright = "Copyright 2010 David Bau, all rights reserved. (BSD)" //
// seedrandom()
// This is the seedrandom function described above.
//
math['seedrandom'] = function seedrandom(seed, use_entropy) { var key = [];
var arc4;
// Flatten the seed string or build one from local entropy if needed.
seed = mixkey(flatten( use_entropy ? [seed, pool] : arguments.length ? seed : [new Date().getTime(), pool, window], 3), key);
// Use the seed to initialize an ARC4 generator.
arc4 = new ARC4(key);
// Mix the randomness into accumulated entropy.
mixkey(arc4.S, pool);
// Override Math.random
// This function returns a random double in [0, 1) that contains
// randomness in every bit of the mantissa of the IEEE 754 value.
math['random'] = function random() {  // Closure to return a random double:
var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48
var d = startdenom;                 //   and denominator d = 2 ^ 48.
var x = 0;                          //   and no 'extra last byte'.
while (n < significance) {          // Fill up all significant digits by
n = (n + x) * width;              //   shifting numerator and
d *= width;                       //   denominator and generating a
x = arc4.g(1);                    //   new least-significant-byte.
} while (n >= overflow) {             // To avoid rounding up, before adding
n /= 2;                           //   last byte, shift everything
d /= 2;                           //   right using integer math until
x >>>= 1;                         //   we have exactly the desired bits.
} return (n + x) / d;                 // Form the number within [0, 1).
};
// Return the seed that was used
return seed;
};
//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function ARC4(key) { var t, u, me = this, keylen = key.length;
var i = 0, j = me.i = me.j = me.m = 0;
me.S = [];
me.c = [];
// The empty key [] is treated as [0].
if (!keylen) { key = [keylen++]; } // Set up S using the standard key scheduling algorithm.
while (i < width) { me.S[i] = i++; } for (i = 0; i < width; i++) { t = me.S[i];
j = lowbits(j + t + key[i % keylen]);
u = me.S[j];
me.S[i] = u;
me.S[j] = t;
} // The "g" method returns the next (count) outputs as one number.
me.g = function getnext(count) { var s = me.S;
var i = lowbits(me.i + 1); var t = s[i];
var j = lowbits(me.j + t); var u = s[j];
s[i] = u;
s[j] = t;
var r = s[lowbits(t + u)];
while (--count) { i = lowbits(i + 1); t = s[i];
j = lowbits(j + t); u = s[j];
s[i] = u;
s[j] = t;
r = r * width + s[lowbits(t + u)];
} me.i = i;
me.j = j;
return r;
};
// For robust unpredictability discard an initial batch of values.
// See http://www.rsa.com/rsalabs/node.asp?id=2009
me.g(width);
} //
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj, depth, result, prop) { result = [];
if (depth && typeof(obj) == 'object') { for (prop in obj) { if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)
try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {} } } } return result.length ? result : '' + obj;
} //
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed, key, smear, j) { seed += '';                         // Ensure the seed is a string
smear = 0;
for (j = 0; j < seed.length; j++) { key[lowbits(j)] = lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
} seed = '';
for (j in key) { seed += String.fromCharCode(key[j]); } return seed;
} //
// lowbits()
// A quick "n mod width" for width a power of 2.
//
function lowbits(n) { return n & (width - 1); } //
// The following constants are related to IEEE 754 limits.
//
startdenom = math.pow(width, chunks);
significance = math.pow(2, significance);
overflow = significance * 2;
//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to intefere with determinstic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);
// End anonymous scope, and pass initial values.
})( [],   // pool: entropy pool starts empty
Math, // math: package containing random, pow, and seedrandom
256,  // width: each RC4 output is 0 <= x < 256
6,    // chunks: at least six RC4 outputs for each double
52    // significance: there are 52 significant digits in a double
);
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.haveNextNextGaussian = false;
this.seed = 0;
this.nextNextGaussian = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.haveNextNextGaussian = false;
this.nextNextGaussian = 0;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.setSeed$J(System.currentTimeMillis());
}, 1);

Clazz_newMeth(C$, 'c$$J', function (seed) {
C$.$init$.apply(this);
this.setSeed$J(seed);
}, 1);

Clazz_newMeth(C$, 'next$I', function (bits) {
this.seed = (this.seed * 25214903917 + 11) & 281474976710655;
return ((this.seed >>> (48 - bits))|0);
});

Clazz_newMeth(C$, 'nextBoolean', function () {

return Math.random () > 0.5;
});

Clazz_newMeth(C$, 'nextBytes$BA', function (buf) {

for (var i = 0; i < bytes.length; i++) { bytes[i] = Math.round (0x100 * Math.random ());
}
});

Clazz_newMeth(C$, 'nextDouble', function () {

return Math.random ();
});

Clazz_newMeth(C$, 'nextFloat', function () {

return Math.random ();
});

Clazz_newMeth(C$, 'nextGaussian', function () {
if (this.haveNextNextGaussian) {
this.haveNextNextGaussian = false;
return this.nextNextGaussian;
}var v1;
var v2;
var s;
do {
v1 = 2 * this.nextDouble() - 1;
v2 = 2 * this.nextDouble() - 1;
s = v1 * v1 + v2 * v2;
} while (s >= 1 );
var norm = Math.sqrt(-2 * Math.log(s) / s);
this.nextNextGaussian = v2 * norm;
this.haveNextNextGaussian = true;
return v1 * norm;
});

Clazz_newMeth(C$, 'nextInt', function () {

return Math.ceil (0xffff * Math.random ()) - 0x8000;
});

Clazz_newMeth(C$, 'nextInt$I', function (n) {


if (n > 0) {
n = Math.min(n, 31);
return (Math.floor((2 << (n - 1)) * Math.random())|0);
}throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
});

Clazz_newMeth(C$, 'nextLong', function () {

return Math.ceil (0xffffffff * Math.random ()) - 0x80000000;
});

Clazz_newMeth(C$, 'setSeed$J', function (seed) {

Math.seedrandom(seed);
});
})();
//Created 2018-05-15 01:02:14
(function(){var P$=java.util,I$=[['java.util.Vector$1','java.util.Arrays',['java.util.Collections','.SynchronizedRandomAccessList'],'java.lang.reflect.Array','java.lang.StringBuffer']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "Vector", null, 'java.util.AbstractList', ['java.util.List', 'java.util.RandomAccess', 'Cloneable', 'java.io.Serializable']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.elementCount = 0;
this.elementData = null;
this.capacityIncrement = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I$I.apply(this, [10, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (capacity) {
C$.c$$I$I.apply(this, [capacity, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I', function (capacity, capacityIncrement) {
Clazz_super_(C$, this,1);
this.elementCount = 0;
try {
this.elementData = p$.newElementArray$I.apply(this, [capacity]);
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.NegativeArraySizeException")){
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException'));
} else {
throw e;
}
}
this.capacityIncrement = capacityIncrement;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection', function (collection) {
C$.c$$I$I.apply(this, [collection.size(), 0]);
var it = collection.iterator();
while (it.hasNext()){
this.elementData[this.elementCount++] = it.next();
}
}, 1);

Clazz_newMeth(C$, 'newElementArray$I', function (size) {
return Clazz_array(java.lang.Object, [size]);
});

Clazz_newMeth(C$, 'add$I$TE', function (location, object) {
this.insertElementAt$TE$I(object, location);
});

Clazz_newMeth(C$, ['add$TE'], function (object) {
this.addElement$TE(object);
return true;
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection', function (location, collection) {
if (0 <= location && location <= this.elementCount ) {
var size = collection.size();
if (size == 0) {
return false;
}var required = size - (this.elementData.length - this.elementCount);
if (required > 0) {
p$.growBy$I.apply(this, [required]);
}var count = this.elementCount - location;
if (count > 0) {
System.arraycopy(this.elementData, location, this.elementData, location + size, count);
}var it = collection.iterator();
while (it.hasNext()){
this.elementData[location++] = it.next();
}
this.elementCount = this.elementCount+(size);
this.modCount++;
return true;
}throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
});

Clazz_newMeth(C$, 'addAll$java_util_Collection', function (collection) {
return this.addAll$I$java_util_Collection(this.elementCount, collection);
});

Clazz_newMeth(C$, ['addElement$TE'], function (object) {
if (this.elementCount == this.elementData.length) {
p$.growByOne.apply(this, []);
}this.elementData[this.elementCount++] = object;
this.modCount++;
});

Clazz_newMeth(C$, 'capacity', function () {
return this.elementData.length;
});

Clazz_newMeth(C$, 'clear', function () {
this.removeAllElements();
});

Clazz_newMeth(C$, 'clone', function () {
try {
var vector = Clazz_clone(this);
vector.elementData = this.elementData.clone();
return vector;
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.CloneNotSupportedException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'contains$O', function (object) {
return this.indexOf$O$I(object, 0) != -1;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection', function (collection) {
return C$.superclazz.prototype.containsAll$java_util_Collection.apply(this, [collection]);
});

Clazz_newMeth(C$, 'copyInto$OA', function (elements) {
System.arraycopy(this.elementData, 0, elements, 0, this.elementCount);
});

Clazz_newMeth(C$, 'elementAt$I', function (location) {
if (location < this.elementCount) {
return this.elementData[location];
}throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
});

Clazz_newMeth(C$, 'elements', function () {
return ((
(function(){var C$=Clazz_newClass(P$, "Vector$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.pos = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.pos = 0;
}, 1);

Clazz_newMeth(C$, 'hasMoreElements', function () {
return this.pos < this.b$['java.util.Vector'].elementCount;
});

Clazz_newMeth(C$, 'nextElement', function () {
{
if (this.pos < this.b$['java.util.Vector'].elementCount) {
return this.b$['java.util.Vector'].elementData[this.pos++];
}}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});
})()
), Clazz_new_((I$[1]||$incl$(1)).$init$, [this, null]));
});

Clazz_newMeth(C$, 'ensureCapacity$I', function (minimumCapacity) {
if (this.elementData.length < minimumCapacity) {
var next = (this.capacityIncrement <= 0 ? this.elementData.length : this.capacityIncrement) + this.elementData.length;
p$.grow$I.apply(this, [minimumCapacity > next ? minimumCapacity : next]);
}});

Clazz_newMeth(C$, 'equals$O', function (object) {
if (this === object ) {
return true;
}if (Clazz_instanceOf(object, "java.util.List")) {
var list = object;
if (list.size() != this.size()) {
return false;
}var index = 0;
var it = list.iterator();
while (it.hasNext()){
var e1 = this.elementData[index++];
var e2 = it.next();
if (!(e1 == null  ? e2 == null  : e1.equals$O(e2))) {
return false;
}}
return true;
}return false;
});

Clazz_newMeth(C$, 'firstElement', function () {
if (this.elementCount > 0) {
return this.elementData[0];
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'get$I', function (location) {
return this.elementAt$I(location);
});

Clazz_newMeth(C$, 'grow$I', function (newCapacity) {
var newData = p$.newElementArray$I.apply(this, [newCapacity]);
Clazz_assert(C$, this, function(){return this.elementCount <= newCapacity});
System.arraycopy(this.elementData, 0, newData, 0, this.elementCount);
this.elementData = newData;
});

Clazz_newMeth(C$, 'growByOne', function () {
var adding = 0;
if (this.capacityIncrement <= 0) {
if ((adding = this.elementData.length) == 0) {
adding = 1;
}} else {
adding = this.capacityIncrement;
}var newData = p$.newElementArray$I.apply(this, [this.elementData.length + adding]);
System.arraycopy(this.elementData, 0, newData, 0, this.elementCount);
this.elementData = newData;
});

Clazz_newMeth(C$, 'growBy$I', function (required) {
var adding = 0;
if (this.capacityIncrement <= 0) {
if ((adding = this.elementData.length) == 0) {
adding = required;
}while (adding < required){
adding = adding+(adding);
}
} else {
adding = ((required/this.capacityIncrement|0)) * this.capacityIncrement;
if (adding < required) {
adding = adding+(this.capacityIncrement);
}}var newData = p$.newElementArray$I.apply(this, [this.elementData.length + adding]);
System.arraycopy(this.elementData, 0, newData, 0, this.elementCount);
this.elementData = newData;
});

Clazz_newMeth(C$, 'hashCode', function () {
var result = 1;
for (var i = 0; i < this.elementCount; i++) {
result = (31 * result) + (this.elementData[i] == null  ? 0 : this.elementData[i].hashCode());
}
return result;
});

Clazz_newMeth(C$, 'indexOf$O', function (object) {
return this.indexOf$O$I(object, 0);
});

Clazz_newMeth(C$, 'indexOf$O$I', function (object, location) {
if (object != null ) {
for (var i = location; i < this.elementCount; i++) {
if (object.equals$O(this.elementData[i])) {
return i;
}}
} else {
for (var i = location; i < this.elementCount; i++) {
if (this.elementData[i] == null ) {
return i;
}}
}return -1;
});

Clazz_newMeth(C$, ['insertElementAt$TE$I'], function (object, location) {
if (0 <= location && location <= this.elementCount ) {
if (this.elementCount == this.elementData.length) {
p$.growByOne.apply(this, []);
}var count = this.elementCount - location;
if (count > 0) {
System.arraycopy(this.elementData, location, this.elementData, location + 1, count);
}this.elementData[location] = object;
this.elementCount++;
this.modCount++;
} else {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
}});

Clazz_newMeth(C$, 'isEmpty', function () {
return this.elementCount == 0;
});

Clazz_newMeth(C$, 'lastElement', function () {
try {
return this.elementData[this.elementCount - 1];
} catch (e) {
if (Clazz_exceptionOf(e, "java.lang.IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'lastIndexOf$O', function (object) {
return this.lastIndexOf$O$I(object, this.elementCount - 1);
});

Clazz_newMeth(C$, 'lastIndexOf$O$I', function (object, location) {
if (location < this.elementCount) {
if (object != null ) {
for (var i = location; i >= 0; i--) {
if (object.equals$O(this.elementData[i])) {
return i;
}}
} else {
for (var i = location; i >= 0; i--) {
if (this.elementData[i] == null ) {
return i;
}}
}return -1;
}throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
});

Clazz_newMeth(C$, 'remove$I', function (location) {
if (location < this.elementCount) {
var result = this.elementData[location];
this.elementCount--;
var size = this.elementCount - location;
if (size > 0) {
System.arraycopy(this.elementData, location + 1, this.elementData, location, size);
}this.elementData[this.elementCount] = null;
this.modCount++;
return result;
}throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
});

Clazz_newMeth(C$, 'remove$O', function (object) {
return this.removeElement$O(object);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection', function (collection) {
return C$.superclazz.prototype.removeAll$java_util_Collection.apply(this, [collection]);
});

Clazz_newMeth(C$, 'removeAllElements', function () {
(I$[2]||$incl$(2)).fill$OA$I$I$O(this.elementData, 0, this.elementCount, null);
this.modCount++;
this.elementCount = 0;
});

Clazz_newMeth(C$, 'removeElement$O', function (object) {
var index;
if ((index = this.indexOf$O$I(object, 0)) == -1) {
return false;
}this.removeElementAt$I(index);
return true;
});

Clazz_newMeth(C$, 'removeElementAt$I', function (location) {
if (0 <= location && location < this.elementCount ) {
this.elementCount--;
var size = this.elementCount - location;
if (size > 0) {
System.arraycopy(this.elementData, location + 1, this.elementData, location, size);
}this.elementData[this.elementCount] = null;
this.modCount++;
} else {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
}});

Clazz_newMeth(C$, 'removeRange$I$I', function (start, end) {
if (start >= 0 && start <= end  && end <= this.size() ) {
if (start == end) {
return;
}if (end != this.elementCount) {
System.arraycopy(this.elementData, end, this.elementData, start, this.elementCount - end);
var newCount = this.elementCount - (end - start);
(I$[2]||$incl$(2)).fill$OA$I$I$O(this.elementData, newCount, this.elementCount, null);
this.elementCount = newCount;
} else {
(I$[2]||$incl$(2)).fill$OA$I$I$O(this.elementData, start, this.elementCount, null);
this.elementCount = start;
}this.modCount++;
} else {
throw Clazz_new_(Clazz_load('java.lang.IndexOutOfBoundsException'));
}});

Clazz_newMeth(C$, 'retainAll$java_util_Collection', function (collection) {
return C$.superclazz.prototype.retainAll$java_util_Collection.apply(this, [collection]);
});

Clazz_newMeth(C$, 'set$I$TE', function (location, object) {
if (location < this.elementCount) {
var result = this.elementData[location];
this.elementData[location] = object;
return result;
}throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
});

Clazz_newMeth(C$, ['setElementAt$TE$I'], function (object, location) {
if (location < this.elementCount) {
this.elementData[location] = object;
} else {
throw Clazz_new_(Clazz_load('java.lang.ArrayIndexOutOfBoundsException').c$$I,[location]);
}});

Clazz_newMeth(C$, 'setSize$I', function (length) {
if (length == this.elementCount) {
return;
}this.ensureCapacity$I(length);
if (this.elementCount > length) {
(I$[2]||$incl$(2)).fill$OA$I$I$O(this.elementData, length, this.elementCount, null);
}this.elementCount = length;
this.modCount++;
});

Clazz_newMeth(C$, 'size', function () {
return this.elementCount;
});

Clazz_newMeth(C$, 'subList$I$I', function (start, end) {
return Clazz_new_((I$[3]||$incl$(3)).c$$java_util_List$O,[C$.superclazz.prototype.subList$I$I.apply(this, [start, end]), this]);
});

Clazz_newMeth(C$, 'toArray', function () {
var result = Clazz_array(java.lang.Object, [this.elementCount]);
System.arraycopy(this.elementData, 0, result, 0, this.elementCount);
return result;
});

Clazz_newMeth(C$, 'toArray$TTA', function (contents) {
if (this.elementCount > contents.length) {
var ct = contents.getClass().getComponentType();
contents = Clazz_array(ct, this.elementCount);
}System.arraycopy(this.elementData, 0, contents, 0, this.elementCount);
if (this.elementCount < contents.length) {
contents[this.elementCount] = null;
}return contents;
});

Clazz_newMeth(C$, 'toString', function () {
if (this.elementCount == 0) {
return "[]";
}var length = this.elementCount - 1;
var buffer = Clazz_new_((I$[5]||$incl$(5)).c$$I,[this.size() * 16]);
buffer.append$C("[");
for (var i = 0; i < length; i++) {
if (this.elementData[i] === this ) {
buffer.append$S("(this Collection)");
} else {
buffer.append$O(this.elementData[i]);
}buffer.append$S(", ");
}
if (this.elementData[length] === this ) {
buffer.append$S("(this Collection)");
} else {
buffer.append$O(this.elementData[length]);
}buffer.append$C("]");
return buffer.toString();
});

Clazz_newMeth(C$, 'trimToSize', function () {
if (this.elementData.length != this.elementCount) {
p$.grow$I.apply(this, [this.elementCount]);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream', function (stream) {
stream.defaultWriteObject();
});
C$.$_ASSERT_ENABLED_ = ClassLoader.$getClassAssertionStatus(C$);
})();
//Created 2018-05-15 01:02:15
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.event.EventListenerList','javax.swing.event.ListDataListener','javax.swing.event.ListDataEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AbstractListModel", null, null, 'javax.swing.ListModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.listenerList = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.listenerList = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'addListDataListener$javax_swing_event_ListDataListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']), l);
});

Clazz_newMeth(C$, 'removeListDataListener$javax_swing_event_ListDataListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']), l);
});

Clazz_newMeth(C$, 'getListDataListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']));
});

Clazz_newMeth(C$, 'fireContentsChanged$O$I$I', function (source, index0, index1) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']) ) {
if (e == null ) {
e = Clazz_new_((I$[3]||$incl$(3)).c$$O$I$I$I,[source, 0, index0, index1]);
}(listeners[i + 1]).contentsChanged$javax_swing_event_ListDataEvent(e);
}}
});

Clazz_newMeth(C$, 'fireIntervalAdded$O$I$I', function (source, index0, index1) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']) ) {
if (e == null ) {
e = Clazz_new_((I$[3]||$incl$(3)).c$$O$I$I$I,[source, 1, index0, index1]);
}(listeners[i + 1]).intervalAdded$javax_swing_event_ListDataEvent(e);
}}
});

Clazz_newMeth(C$, 'fireIntervalRemoved$O$I$I', function (source, index0, index1) {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['contentsChanged$javax_swing_event_ListDataEvent','intervalAdded$javax_swing_event_ListDataEvent','intervalRemoved$javax_swing_event_ListDataEvent']) ) {
if (e == null ) {
e = Clazz_new_((I$[3]||$incl$(3)).c$$O$I$I$I,[source, 2, index0, index1]);
}(listeners[i + 1]).intervalRemoved$javax_swing_event_ListDataEvent(e);
}}
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:22
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.event.EventListenerList','javax.swing.event.AncestorListener','javax.swing.event.AncestorEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "AncestorNotifier", null, null, ['java.awt.event.ComponentListener', 'java.beans.PropertyChangeListener']);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.firstInvisibleAncestor = null;
this.listenerList = null;
this.root = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.listenerList = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JComponent', function (root) {
C$.$init$.apply(this);
this.root = root;
this.addListeners$java_awt_Component$Z(root, true);
}, 1);

Clazz_newMeth(C$, 'addAncestorListener$javax_swing_event_AncestorListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']), l);
});

Clazz_newMeth(C$, 'removeAncestorListener$javax_swing_event_AncestorListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']), l);
});

Clazz_newMeth(C$, 'getAncestorListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']));
});

Clazz_newMeth(C$, 'fireAncestorAdded$javax_swing_JComponent$I$java_awt_Container$java_awt_Container', function (source, id, ancestor, ancestorParent) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']) ) {
var ancestorEvent = Clazz_new_((I$[3]||$incl$(3)).c$$javax_swing_JComponent$I$java_awt_Container$java_awt_Container,[source, id, ancestor, ancestorParent]);
(listeners[i + 1]).ancestorAdded$javax_swing_event_AncestorEvent(ancestorEvent);
}}
});

Clazz_newMeth(C$, 'fireAncestorRemoved$javax_swing_JComponent$I$java_awt_Container$java_awt_Container', function (source, id, ancestor, ancestorParent) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']) ) {
var ancestorEvent = Clazz_new_((I$[3]||$incl$(3)).c$$javax_swing_JComponent$I$java_awt_Container$java_awt_Container,[source, id, ancestor, ancestorParent]);
(listeners[i + 1]).ancestorRemoved$javax_swing_event_AncestorEvent(ancestorEvent);
}}
});

Clazz_newMeth(C$, 'fireAncestorMoved$javax_swing_JComponent$I$java_awt_Container$java_awt_Container', function (source, id, ancestor, ancestorParent) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']) ) {
var ancestorEvent = Clazz_new_((I$[3]||$incl$(3)).c$$javax_swing_JComponent$I$java_awt_Container$java_awt_Container,[source, id, ancestor, ancestorParent]);
(listeners[i + 1]).ancestorMoved$javax_swing_event_AncestorEvent(ancestorEvent);
}}
});

Clazz_newMeth(C$, 'removeAllListeners', function () {
this.removeListeners$java_awt_Component(this.root);
});

Clazz_newMeth(C$, 'addListeners$java_awt_Component$Z', function (ancestor, addToFirst) {
var a;
this.firstInvisibleAncestor = null;
for (a = ancestor; this.firstInvisibleAncestor == null ; a = a.getParent()) {
if (addToFirst || a !== ancestor  ) {
a.addComponentListener$java_awt_event_ComponentListener(this);
if (Clazz_instanceOf(a, "javax.swing.JComponent")) {
var jAncestor = a;
jAncestor.addPropertyChangeListener$java_beans_PropertyChangeListener(this);
}}if (!a.isVisible() || a.getParent() == null   || Clazz_instanceOf(a, "java.awt.Window") ) {
this.firstInvisibleAncestor = a;
}}
if (Clazz_instanceOf(this.firstInvisibleAncestor, "java.awt.Window") && this.firstInvisibleAncestor.isVisible() ) {
this.firstInvisibleAncestor = null;
}});

Clazz_newMeth(C$, 'removeListeners$java_awt_Component', function (ancestor) {
var a;
for (a = ancestor; a != null ; a = a.getParent()) {
a.removeComponentListener$java_awt_event_ComponentListener(this);
if (Clazz_instanceOf(a, "javax.swing.JComponent")) {
var jAncestor = a;
jAncestor.removePropertyChangeListener$java_beans_PropertyChangeListener(this);
}if (a === this.firstInvisibleAncestor  || Clazz_instanceOf(a, "java.awt.Window") ) {
break;
}}
});

Clazz_newMeth(C$, 'componentResized$java_awt_event_ComponentEvent', function (e) {
});

Clazz_newMeth(C$, 'componentMoved$java_awt_event_ComponentEvent', function (e) {
var source = e.getComponent();
this.fireAncestorMoved$javax_swing_JComponent$I$java_awt_Container$java_awt_Container(this.root, 3, source, source.getParent());
});

Clazz_newMeth(C$, 'componentShown$java_awt_event_ComponentEvent', function (e) {
var ancestor = e.getComponent();
if (ancestor === this.firstInvisibleAncestor ) {
this.addListeners$java_awt_Component$Z(ancestor, false);
if (this.firstInvisibleAncestor == null ) {
this.fireAncestorAdded$javax_swing_JComponent$I$java_awt_Container$java_awt_Container(this.root, 1, ancestor, ancestor.getParent());
}}});

Clazz_newMeth(C$, 'componentHidden$java_awt_event_ComponentEvent', function (e) {
var ancestor = e.getComponent();
var needsNotify = this.firstInvisibleAncestor == null ;
if (!(Clazz_instanceOf(ancestor, "java.awt.Window"))) {
this.removeListeners$java_awt_Component(ancestor.getParent());
}this.firstInvisibleAncestor = ancestor;
if (needsNotify) {
this.fireAncestorRemoved$javax_swing_JComponent$I$java_awt_Container$java_awt_Container(this.root, 2, ancestor, ancestor.getParent());
}});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (evt) {
var s = evt.getPropertyName();
if (s != null  && (s.equals$O("parent") || s.equals$O("ancestor") ) ) {
var component = evt.getSource();
if (evt.getNewValue() != null ) {
if (component === this.firstInvisibleAncestor ) {
this.addListeners$java_awt_Component$Z(component, false);
if (this.firstInvisibleAncestor == null ) {
this.fireAncestorAdded$javax_swing_JComponent$I$java_awt_Container$java_awt_Container(this.root, 1, component, component.getParent());
}}} else {
var needsNotify = this.firstInvisibleAncestor == null ;
var oldParent = evt.getOldValue();
this.removeListeners$java_awt_Component(oldParent);
this.firstInvisibleAncestor = component;
if (needsNotify) {
this.fireAncestorRemoved$javax_swing_JComponent$I$java_awt_Container$java_awt_Container(this.root, 2, component, oldParent);
}}}});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:22
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.awt.AWTError','java.awt.Dimension','javax.swing.SizeRequirements']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "BoxLayout", null, null, 'java.awt.LayoutManager2');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.axis = 0;
this.target = null;
this.xChildren = null;
this.yChildren = null;
this.xTotal = null;
this.yTotal = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Container$I', function (target, axis) {
C$.$init$.apply(this);
if (axis != 0 && axis != 1  && axis != 2  && axis != 3 ) {
throw Clazz_new_((I$[1]||$incl$(1)).c$$S,["Invalid axis"]);
}this.axis = axis;
this.target = target;
}, 1);

Clazz_newMeth(C$, 'getTarget', function () {
return this.target;
});

Clazz_newMeth(C$, 'getAxis', function () {
return this.axis;
});

Clazz_newMeth(C$, 'invalidateLayout$java_awt_Container', function (target) {
this.checkContainer$java_awt_Container(target);
this.xChildren = null;
this.yChildren = null;
this.xTotal = null;
this.yTotal = null;
});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component', function (name, comp) {
this.invalidateLayout$java_awt_Container(comp.getParent());
});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component', function (comp) {
this.invalidateLayout$java_awt_Container(comp.getParent());
});

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O', function (comp, constraints) {
this.invalidateLayout$java_awt_Container(comp.getParent());
});

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container', function (target) {
var size;
{
this.checkContainer$java_awt_Container(target);
this.checkRequests();
size = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[this.xTotal.preferred, this.yTotal.preferred]);
}var insets = target.getInsets();
size.width = (Math.min(size.width + insets.left + insets.right , 2147483647)|0);
size.height = (Math.min(size.height + insets.top + insets.bottom , 2147483647)|0);
return size;
});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container', function (target) {
var size;
{
this.checkContainer$java_awt_Container(target);
this.checkRequests();
size = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[this.xTotal.minimum, this.yTotal.minimum]);
}var insets = target.getInsets();
size.width = (Math.min(size.width + insets.left + insets.right , 2147483647)|0);
size.height = (Math.min(size.height + insets.top + insets.bottom , 2147483647)|0);
return size;
});

Clazz_newMeth(C$, 'maximumLayoutSize$java_awt_Container', function (target) {
var size;
{
this.checkContainer$java_awt_Container(target);
this.checkRequests();
size = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[this.xTotal.maximum, this.yTotal.maximum]);
}var insets = target.getInsets();
size.width = (Math.min(size.width + insets.left + insets.right , 2147483647)|0);
size.height = (Math.min(size.height + insets.top + insets.bottom , 2147483647)|0);
return size;
});

Clazz_newMeth(C$, 'getLayoutAlignmentX$java_awt_Container', function (target) {
this.checkContainer$java_awt_Container(target);
this.checkRequests();
return this.xTotal.alignment;
});

Clazz_newMeth(C$, 'getLayoutAlignmentY$java_awt_Container', function (target) {
this.checkContainer$java_awt_Container(target);
this.checkRequests();
return this.yTotal.alignment;
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container', function (target) {
this.checkContainer$java_awt_Container(target);
var nChildren = target.getComponentCount();
var xOffsets = Clazz_array(Integer.TYPE, [nChildren]);
var xSpans = Clazz_array(Integer.TYPE, [nChildren]);
var yOffsets = Clazz_array(Integer.TYPE, [nChildren]);
var ySpans = Clazz_array(Integer.TYPE, [nChildren]);
var alloc = target.getSize();
var $in = target.getInsets();
alloc.width = alloc.width-($in.left + $in.right);
alloc.height = alloc.height-($in.top + $in.bottom);
var o = target.getComponentOrientation();
var absoluteAxis = p$.resolveAxis$I$java_awt_ComponentOrientation.apply(this, [this.axis, o]);
var ltr = (absoluteAxis != this.axis) ? o.isLeftToRight() : true;
{
this.checkRequests();
if (absoluteAxis == 0) {
(I$[3]||$incl$(3)).calcTiled$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(alloc.width, this.xTotal, this.xChildren, xOffsets, xSpans, ltr);
(I$[3]||$incl$(3)).calcAligned$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(alloc.height, this.yTotal, this.yChildren, yOffsets, ySpans, true);
} else {
(I$[3]||$incl$(3)).calcAligned$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(alloc.width, this.xTotal, this.xChildren, xOffsets, xSpans, ltr);
(I$[3]||$incl$(3)).calcTiled$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(alloc.height, this.yTotal, this.yChildren, yOffsets, ySpans, true);
}}for (var i = 0; i < nChildren; i++) {
var c = target.getComponent$I(i);
c.setBounds$I$I$I$I((Math.min($in.left + xOffsets[i], 2147483647)|0), (Math.min($in.top + yOffsets[i], 2147483647)|0), xSpans[i], ySpans[i]);
}
});

Clazz_newMeth(C$, 'checkContainer$java_awt_Container', function (target) {
if (this.target !== target ) {
throw Clazz_new_((I$[1]||$incl$(1)).c$$S,["BoxLayout can\'t be shared"]);
}});

Clazz_newMeth(C$, 'checkRequests', function () {
if (this.xChildren == null  || this.yChildren == null  ) {
var n = this.target.getComponentCount();
this.xChildren = Clazz_array((I$[3]||$incl$(3)), [n]);
this.yChildren = Clazz_array((I$[3]||$incl$(3)), [n]);
for (var i = 0; i < n; i++) {
var c = this.target.getComponent$I(i);
if (!c.isVisible()) {
this.xChildren[i] = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$F,[0, 0, 0, c.getAlignmentX()]);
this.yChildren[i] = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$F,[0, 0, 0, c.getAlignmentY()]);
continue;
}var min = c.getMinimumSize();
var typ = c.getPreferredSize();
var max = c.getMaximumSize();
this.xChildren[i] = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$F,[min.width, typ.width, max.width, c.getAlignmentX()]);
this.yChildren[i] = Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$F,[min.height, typ.height, max.height, c.getAlignmentY()]);
}
var absoluteAxis = p$.resolveAxis$I$java_awt_ComponentOrientation.apply(this, [this.axis, this.target.getComponentOrientation()]);
if (absoluteAxis == 0) {
this.xTotal = (I$[3]||$incl$(3)).getTiledSizeRequirements$javax_swing_SizeRequirementsA(this.xChildren);
this.yTotal = (I$[3]||$incl$(3)).getAlignedSizeRequirements$javax_swing_SizeRequirementsA(this.yChildren);
} else {
this.xTotal = (I$[3]||$incl$(3)).getAlignedSizeRequirements$javax_swing_SizeRequirementsA(this.xChildren);
this.yTotal = (I$[3]||$incl$(3)).getTiledSizeRequirements$javax_swing_SizeRequirementsA(this.yChildren);
}}});

Clazz_newMeth(C$, 'resolveAxis$I$java_awt_ComponentOrientation', function (axis, o) {
var absoluteAxis;
if (axis == 2) {
absoluteAxis = o.isHorizontal() ? 0 : 1;
} else if (axis == 3) {
absoluteAxis = o.isHorizontal() ? 1 : 0;
} else {
absoluteAxis = axis;
}return absoluteAxis;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.Vector']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "ButtonGroup");

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.buttons = null;
this.selection = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.buttons = Clazz_new_((I$[1]||$incl$(1)));
this.selection = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'add$javax_swing_AbstractButton', function (b) {
if (b == null ) {
return;
}this.buttons.addElement$TE(b);
if (b.isSelected()) {
if (this.selection == null ) {
this.selection = b.getModel();
} else {
b.setSelected$Z(false);
}}b.getModel().setGroup$javax_swing_ButtonGroup(this);
});

Clazz_newMeth(C$, 'remove$javax_swing_AbstractButton', function (b) {
if (b == null ) {
return;
}this.buttons.removeElement$O(b);
if (b.getModel() === this.selection ) {
this.selection = null;
}b.getModel().setGroup$javax_swing_ButtonGroup(null);
});

Clazz_newMeth(C$, 'clearSelection', function () {
if (this.selection != null ) {
var oldSelection = this.selection;
this.selection = null;
oldSelection.setSelected$Z(false);
}});

Clazz_newMeth(C$, 'getElements', function () {
return this.buttons.elements();
});

Clazz_newMeth(C$, 'getSelection', function () {
return this.selection;
});

Clazz_newMeth(C$, 'setSelected$javax_swing_ButtonModel$Z', function (m, b) {
if (b && m != null   && m !== this.selection  ) {
var oldSelection = this.selection;
this.selection = m;
if (oldSelection != null ) {
oldSelection.setSelected$Z(false);
}m.setSelected$Z(true);
}});

Clazz_newMeth(C$, 'isSelected$javax_swing_ButtonModel', function (m) {
return (m === this.selection );
});

Clazz_newMeth(C$, 'getButtonCount', function () {
if (this.buttons == null ) {
return 0;
} else {
return this.buttons.size();
}});
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newClass(P$, "ClientPropertyKey", null, 'Enum');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_INPUT_VERIFIER", 0, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_TRANSFER_HANDLER", 1, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_ANCESTOR_NOTIFIER", 2, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "PopupFactory_FORCE_HEAVYWEIGHT_POPUP", 3, [true]);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$Z.apply(this, [false]);
}, 1);

Clazz_newMeth(C$, 'c$$Z', function (reportValueNotSerializable) {
C$.$init$.apply(this);
}, 1);
var $vals=[];
Clazz_newMeth(C$, 'values', function() { return $vals }, 1);
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "ComboBoxModel", null, null, 'javax.swing.ListModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:23
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.Vector']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DefaultComboBoxModel", null, 'javax.swing.AbstractListModel', 'javax.swing.MutableComboBoxModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.objects = null;
this.selectedObject = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.objects = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'c$$OA', function (items) {
Clazz_super_(C$, this,1);
this.objects = Clazz_new_((I$[1]||$incl$(1)));
this.objects.ensureCapacity$I(items.length);
var i;
var c;
for (i = 0, c = items.length; i < c; i++) this.objects.addElement$TE(items[i]);

if (this.getSize() > 0) {
this.selectedObject = this.getElementAt$I(0);
}}, 1);

Clazz_newMeth(C$, 'c$$java_util_Vector', function (v) {
Clazz_super_(C$, this,1);
this.objects = v;
if (this.getSize() > 0) {
this.selectedObject = this.getElementAt$I(0);
}}, 1);

Clazz_newMeth(C$, 'setSelectedItem$O', function (anObject) {
if ((this.selectedObject != null  && !this.selectedObject.equals$O(anObject) ) || this.selectedObject == null  && anObject != null   ) {
this.selectedObject = anObject;
this.fireContentsChanged$O$I$I(this, -1, -1);
}});

Clazz_newMeth(C$, 'getSelectedItem', function () {
return this.selectedObject;
});

Clazz_newMeth(C$, 'getSize', function () {
return this.objects.size();
});

Clazz_newMeth(C$, 'getElementAt$I', function (index) {
if (index >= 0 && index < this.objects.size() ) return this.objects.elementAt$I(index);
 else return null;
});

Clazz_newMeth(C$, 'getIndexOf$O', function (anObject) {
return this.objects.indexOf$O(anObject);
});

Clazz_newMeth(C$, 'addElement$O', function (anObject) {
this.objects.addElement$TE(anObject);
this.fireIntervalAdded$O$I$I(this, this.objects.size() - 1, this.objects.size() - 1);
if (this.objects.size() == 1 && this.selectedObject == null   && anObject != null  ) {
this.setSelectedItem$O(anObject);
}});

Clazz_newMeth(C$, 'insertElementAt$O$I', function (anObject, index) {
this.objects.insertElementAt$TE$I(anObject, index);
this.fireIntervalAdded$O$I$I(this, index, index);
});

Clazz_newMeth(C$, 'removeElementAt$I', function (index) {
if (this.getElementAt$I(index) === this.selectedObject ) {
if (index == 0) {
this.setSelectedItem$O(this.getSize() == 1 ? null : this.getElementAt$I(index + 1));
} else {
this.setSelectedItem$O(this.getElementAt$I(index - 1));
}}this.objects.removeElementAt$I(index);
this.fireIntervalRemoved$O$I$I(this, index, index);
});

Clazz_newMeth(C$, 'removeElement$O', function (anObject) {
var index = this.objects.indexOf$O(anObject);
if (index != -1) {
this.removeElementAt$I(index);
}});

Clazz_newMeth(C$, 'removeAllElements', function () {
if (this.objects.size() > 0) {
var firstIndex = 0;
var lastIndex = this.objects.size() - 1;
this.objects.removeAllElements();
this.selectedObject = null;
this.fireIntervalRemoved$O$I$I(this, firstIndex, lastIndex);
} else {
this.selectedObject = null;
}});
})();
//Created 2018-05-15 01:02:24
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.event.EventListenerList','javax.swing.event.ChangeListener','javax.swing.event.ChangeEvent']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DefaultSingleSelectionModel", null, null, 'javax.swing.SingleSelectionModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.changeEvent = null;
this.listenerList = null;
this.index = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.changeEvent = null;
this.listenerList = Clazz_new_((I$[1]||$incl$(1)));
this.index = -1;
}, 1);

Clazz_newMeth(C$, 'getSelectedIndex', function () {
return this.index;
});

Clazz_newMeth(C$, 'setSelectedIndex$I', function (index) {
if (this.index != index) {
this.index = index;
this.fireStateChanged();
}});

Clazz_newMeth(C$, 'clearSelection', function () {
this.setSelectedIndex$I(-1);
});

Clazz_newMeth(C$, 'isSelected', function () {
var ret = false;
if (this.getSelectedIndex() != -1) {
ret = true;
}return ret;
});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']));
});

Clazz_newMeth(C$, 'fireStateChanged', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[2]||$incl$(2)),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) this.changeEvent = Clazz_new_((I$[3]||$incl$(3)).c$$O,[this]);
(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'getListeners$Class', function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:24
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newClass(P$, "AncestorEvent", null, 'java.awt.AWTEvent');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.ancestor = null;
this.ancestorParent = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JComponent$I$java_awt_Container$java_awt_Container', function (source, id, ancestor, ancestorParent) {
C$.superclazz.c$$O$I.apply(this, [source, id]);
C$.$init$.apply(this);
this.ancestor = ancestor;
this.ancestorParent = ancestorParent;
}, 1);

Clazz_newMeth(C$, 'getAncestor', function () {
return this.ancestor;
});

Clazz_newMeth(C$, 'getAncestorParent', function () {
return this.ancestorParent;
});

Clazz_newMeth(C$, 'getComponent', function () {
return this.getSource();
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newClass(P$, "ChangeEvent", null, 'java.util.EventObject');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$O', function (source) {
C$.superclazz.c$.apply(this, [source]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newClass(P$, "ListDataEvent", null, 'java.util.EventObject');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.type = 0;
this.index0 = 0;
this.index1 = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'getType', function () {
return this.type;
});

Clazz_newMeth(C$, 'getIndex0', function () {
return this.index0;
});

Clazz_newMeth(C$, 'getIndex1', function () {
return this.index1;
});

Clazz_newMeth(C$, 'c$$O$I$I$I', function (source, type, index0, index1) {
C$.superclazz.c$.apply(this, [source]);
C$.$init$.apply(this);
this.type = type;
this.index0 = Math.min(index0, index1);
this.index1 = Math.max(index0, index1);
}, 1);

Clazz_newMeth(C$, 'toString', function () {
return this.getClass().getName() + "[type=" + this.type + ",index0=" + this.index0 + ",index1=" + this.index1 + "]" ;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
var C$=Clazz_newInterface(P$, "ListDataListener", null, null, 'java.util.EventListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:45
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.lang.Boolean']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JCheckBox", null, 'javax.swing.JToggleButton');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.flat = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.flat = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon$Z', function (icon, selected) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, selected]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.c$.apply(this, []);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (text, selected) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, selected]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$Z', function (text, icon, selected) {
C$.superclazz.c$$S$javax_swing_Icon$Z$S.apply(this, [text, icon, selected, "CheckBoxUI"]);
C$.$init$.apply(this);
this.setUIProperty$S$O("borderPainted", (I$[1]||$incl$(1)).FALSE);
this.setHorizontalAlignment$I(10);
}, 1);

Clazz_newMeth(C$, 'setBorderPaintedFlat$Z', function (b) {
var oldValue = this.flat;
this.flat = b;
this.firePropertyChange$S$Z$Z("borderPaintedFlat", oldValue, this.flat);
if (b != oldValue ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'isBorderPaintedFlat', function () {
return this.flat;
});

Clazz_newMeth(C$, 'setIconFromAction$javax_swing_Action', function (a) {
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});
})();
//Created 2018-05-15 01:02:26
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[['javax.swing.JToggleButton','.ToggleButtonModel']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JCheckBoxMenuItem", null, 'javax.swing.JMenuItem', 'javax.swing.SwingConstants');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.c$.apply(this, []);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (text, b) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, b]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$Z', function (text, icon, b) {
C$.superclazz.c$$S$javax_swing_Icon$S.apply(this, [text, icon, "CheckBoxMenuItemUI"]);
C$.$init$.apply(this);
this.setModel$javax_swing_ButtonModel(Clazz_new_((I$[1]||$incl$(1))));
this.setSelected$Z(b);
this.setFocusable$Z(false);
}, 1);

Clazz_newMeth(C$, 'getState', function () {
return this.isSelected();
});

Clazz_newMeth(C$, 'setState$Z', function (b) {
this.setSelected$Z(b);
});

Clazz_newMeth(C$, 'getSelectedObjects', function () {
if (this.isSelected() == false ) return null;
var selectedObjects = Clazz_array(java.lang.Object, [1]);
selectedObjects[0] = this.getText();
return selectedObjects;
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});

Clazz_newMeth(C$, 'shouldUpdateSelectedStateFromAction', function () {
return true;
});
})();
//Created 2018-05-15 01:02:26
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.AbstractAction','javax.swing.JPopupMenu','javax.swing.DefaultComboBoxModel','javax.swing.JComboBox$1','javax.swing.SwingUtilities','java.awt.event.ItemListener','java.awt.event.ActionListener','javax.swing.event.PopupMenuListener','javax.swing.event.PopupMenuEvent',['javax.swing.JComboBox','.ComboBoxActionPropertyChangeListener'],'java.awt.EventQueue','java.awt.event.ActionEvent','java.awt.event.ItemEvent',['javax.swing.JComboBox','.DefaultKeySelectionManager']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JComboBox", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent', ['java.awt.ItemSelectable', 'javax.swing.event.ListDataListener', 'java.awt.event.ActionListener']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{

this.c$$TEA = C$.c$$OA;
this.prototype.setPrototypeDisplayValue$TE = p$.setPrototypeDisplayValue$O;
this.prototype.addItem$TE = p$.addItem$O;
this.prototype.insertItemAt$TE$I =  p$.insertItemAt$O$I;
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.dataModel = null;
this.renderer = null;
this.editor = null;
this.maximumRowCount = 0;
this.$isEditable = false;
this.keySelectionManager = null;
this.actionCommand = null;
this.lightWeightPopupEnabled = false;
this.selectedItemReminder = null;
this.prototypeDisplayValue = null;
this.firingActionEvent = false;
this.selectingItem = false;
this.$action = null;
this.actionPropertyChangeListener = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.maximumRowCount = 8;
this.$isEditable = false;
this.keySelectionManager = null;
this.actionCommand = "comboBoxChanged";
this.lightWeightPopupEnabled = (I$[2]||$incl$(2)).getDefaultLightWeightPopupEnabled();
this.selectedItemReminder = null;
this.firingActionEvent = false;
this.selectingItem = false;
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_ComboBoxModel', function (aModel) {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.setModel$javax_swing_ComboBoxModel(aModel);
p$.initComboBox.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$OA', function (items) {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.setModel$javax_swing_ComboBoxModel(Clazz_new_((I$[3]||$incl$(3)).c$$OA,[items]));
p$.initComboBox.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Vector', function (items) {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.setModel$javax_swing_ComboBoxModel(Clazz_new_((I$[3]||$incl$(3)).c$$java_util_Vector,[items]));
p$.initComboBox.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.setModel$javax_swing_ComboBoxModel(Clazz_new_((I$[3]||$incl$(3))));
p$.initComboBox.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'initComboBox', function () {
this.installAncestorListener();
this.uiClassID = "ComboBoxUI";
this.setUIProperty$S$O("opaque", new Boolean(true));
this.updateUI();
});

Clazz_newMeth(C$, 'installAncestorListener', function () {
this.addAncestorListener$javax_swing_event_AncestorListener(((
(function(){var C$=Clazz_newClass(P$, "JComboBox$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'javax.swing.event.AncestorListener', 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'ancestorAdded$javax_swing_event_AncestorEvent', function (event) {
this.b$['javax.swing.JComboBox'].hidePopup();
});

Clazz_newMeth(C$, 'ancestorRemoved$javax_swing_event_AncestorEvent', function (event) {
this.b$['javax.swing.JComboBox'].hidePopup();
});

Clazz_newMeth(C$, 'ancestorMoved$javax_swing_event_AncestorEvent', function (event) {
if (event.getSource() !== this.b$['javax.swing.JComboBox'] ) this.b$['javax.swing.JComboBox'].hidePopup();
});
})()
), Clazz_new_((I$[4]||$incl$(4)).$init$, [this, null])));
});

Clazz_newMeth(C$, 'updateUI', function () {
C$.superclazz.prototype.updateUI.apply(this, []);
var renderer = this.getRenderer();
if (Clazz_instanceOf(renderer, "java.awt.Component")) {
(I$[5]||$incl$(5)).updateComponentTreeUI$java_awt_Component(renderer);
}});

Clazz_newMeth(C$, 'setModel$javax_swing_ComboBoxModel', function (aModel) {
var oldModel = this.dataModel;
if (oldModel != null ) {
oldModel.removeListDataListener$javax_swing_event_ListDataListener(this);
}this.dataModel = aModel;
this.dataModel.addListDataListener$javax_swing_event_ListDataListener(this);
this.selectedItemReminder = this.dataModel.getSelectedItem();
this.firePropertyChange$S$O$O("model", oldModel, this.dataModel);
});

Clazz_newMeth(C$, 'getModel', function () {
return this.dataModel;
});

Clazz_newMeth(C$, 'setLightWeightPopupEnabled$Z', function (aFlag) {
var oldFlag = this.lightWeightPopupEnabled;
this.lightWeightPopupEnabled = aFlag;
this.firePropertyChange$S$Z$Z("lightWeightPopupEnabled", oldFlag, this.lightWeightPopupEnabled);
});

Clazz_newMeth(C$, 'isLightWeightPopupEnabled', function () {
return this.lightWeightPopupEnabled;
});

Clazz_newMeth(C$, 'setEditable$Z', function (aFlag) {
var oldFlag = this.$isEditable;
this.$isEditable = aFlag;
this.firePropertyChange$S$Z$Z("editable", oldFlag, this.$isEditable);
});

Clazz_newMeth(C$, 'isEditable', function () {
return this.$isEditable;
});

Clazz_newMeth(C$, 'setMaximumRowCount$I', function (count) {
var oldCount = this.maximumRowCount;
this.maximumRowCount = count;
this.firePropertyChange$S$I$I("maximumRowCount", oldCount, this.maximumRowCount);
});

Clazz_newMeth(C$, 'getMaximumRowCount', function () {
return this.maximumRowCount;
});

Clazz_newMeth(C$, 'setRenderer$javax_swing_ListCellRenderer', function (aRenderer) {
var oldRenderer = this.renderer;
this.renderer = aRenderer;
this.firePropertyChange$S$O$O("renderer", oldRenderer, this.renderer);
this.invalidate();
});

Clazz_newMeth(C$, 'getRenderer', function () {
return this.renderer;
});

Clazz_newMeth(C$, 'setEditor$javax_swing_ComboBoxEditor', function (anEditor) {
var oldEditor = this.editor;
if (this.editor != null ) {
this.editor.removeActionListener$java_awt_event_ActionListener(this);
}this.editor = anEditor;
if (this.editor != null ) {
this.editor.addActionListener$java_awt_event_ActionListener(this);
}this.firePropertyChange$S$O$O("editor", oldEditor, this.editor);
});

Clazz_newMeth(C$, 'getEditor', function () {
return this.editor;
});

Clazz_newMeth(C$, 'setSelectedItem$O', function (anObject) {
var oldSelection = this.selectedItemReminder;
var objectToSelect = anObject;
if (oldSelection == null  || !oldSelection.equals$O(anObject) ) {
if (anObject != null  && !this.isEditable() ) {
var found = false;
for (var i = 0; i < this.dataModel.getSize(); i++) {
var element = this.dataModel.getElementAt$I(i);
if (anObject.equals$O(element)) {
found = true;
objectToSelect = element;
break;
}}
if (!found) {
return;
}}this.selectingItem = true;
this.dataModel.setSelectedItem$O(objectToSelect);
this.selectingItem = false;
if (this.selectedItemReminder !== this.dataModel.getSelectedItem() ) {
this.selectedItemChanged();
}}this.fireActionEvent();
});

Clazz_newMeth(C$, 'getSelectedItem', function () {
return this.dataModel.getSelectedItem();
});

Clazz_newMeth(C$, 'setSelectedIndex$I', function (anIndex) {
var size = this.dataModel.getSize();
if (anIndex == -1) {
this.setSelectedItem$O(null);
} else if (anIndex < -1 || anIndex >= size ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["setSelectedIndex: " + anIndex + " out of bounds" ]);
} else {
this.setSelectedItem$O(this.dataModel.getElementAt$I(anIndex));
}});

Clazz_newMeth(C$, 'getSelectedIndex', function () {
var sObject = this.dataModel.getSelectedItem();
var i;
var c;
var obj;
for (i = 0, c = this.dataModel.getSize(); i < c; i++) {
obj = this.dataModel.getElementAt$I(i);
if (obj != null  && obj.equals$O(sObject) ) return i;
}
return -1;
});

Clazz_newMeth(C$, 'getPrototypeDisplayValue', function () {
return this.prototypeDisplayValue;
});

Clazz_newMeth(C$, 'setPrototypeDisplayValue$O', function (prototypeDisplayValue) {
var oldValue = this.prototypeDisplayValue;
this.prototypeDisplayValue = prototypeDisplayValue;
this.firePropertyChange$S$O$O("prototypeDisplayValue", oldValue, prototypeDisplayValue);
});

Clazz_newMeth(C$, 'addItem$O', function (anObject) {
this.checkMutableComboBoxModel();
(this.dataModel).addElement$O(anObject);
});

Clazz_newMeth(C$, 'insertItemAt$O$I', function (anObject, index) {
this.checkMutableComboBoxModel();
(this.dataModel).insertElementAt$O$I(anObject, index);
});

Clazz_newMeth(C$, 'removeItem$O', function (anObject) {
this.checkMutableComboBoxModel();
(this.dataModel).removeElement$O(anObject);
});

Clazz_newMeth(C$, 'removeItemAt$I', function (anIndex) {
this.checkMutableComboBoxModel();
(this.dataModel).removeElementAt$I(anIndex);
});

Clazz_newMeth(C$, 'removeAllItems', function () {
this.checkMutableComboBoxModel();
var model = this.dataModel;
var size = model.getSize();
if (Clazz_instanceOf(model, "javax.swing.DefaultComboBoxModel")) {
(model).removeAllElements();
} else {
for (var i = 0; i < size; ++i) {
var element = model.getElementAt$I(0);
model.removeElement$O(element);
}
}this.selectedItemReminder = null;
if (this.isEditable()) {
this.editor.setItem$O(null);
}});

Clazz_newMeth(C$, 'checkMutableComboBoxModel', function () {
if (!(Clazz_instanceOf(this.dataModel, "javax.swing.MutableComboBoxModel"))) throw Clazz_new_(Clazz_load('java.lang.RuntimeException').c$$S,["Cannot use this method with a non-Mutable data model."]);
});

Clazz_newMeth(C$, 'showPopup', function () {
this.setPopupVisible$Z(true);
});

Clazz_newMeth(C$, 'hidePopup', function () {
this.setPopupVisible$Z(false);
});

Clazz_newMeth(C$, 'setPopupVisible$Z', function (v) {
(this.getUI()).setPopupVisible$javax_swing_JComboBox$Z(this, v);
});

Clazz_newMeth(C$, 'isPopupVisible', function () {
return (this.getUI()).isPopupVisible$javax_swing_JComboBox(this);
});

Clazz_newMeth(C$, 'addItemListener$java_awt_event_ItemListener', function (aListener) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[6]||$incl$(6)),['itemStateChanged$java_awt_event_ItemEvent']), aListener);
});

Clazz_newMeth(C$, 'removeItemListener$java_awt_event_ItemListener', function (aListener) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[6]||$incl$(6)),['itemStateChanged$java_awt_event_ItemEvent']), aListener);
});

Clazz_newMeth(C$, 'getItemListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[6]||$incl$(6)),['itemStateChanged$java_awt_event_ItemEvent']));
});

Clazz_newMeth(C$, 'addActionListener$java_awt_event_ActionListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['actionPerformed$java_awt_event_ActionEvent']), l);
});

Clazz_newMeth(C$, 'removeActionListener$java_awt_event_ActionListener', function (l) {
if ((l != null ) && (this.getAction() === l ) ) {
this.setAction$javax_swing_Action(null);
} else {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['actionPerformed$java_awt_event_ActionEvent']), l);
}});

Clazz_newMeth(C$, 'getActionListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[7]||$incl$(7)),['actionPerformed$java_awt_event_ActionEvent']));
});

Clazz_newMeth(C$, 'addPopupMenuListener$javax_swing_event_PopupMenuListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']), l);
});

Clazz_newMeth(C$, 'removePopupMenuListener$javax_swing_event_PopupMenuListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']), l);
});

Clazz_newMeth(C$, 'getPopupMenuListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']));
});

Clazz_newMeth(C$, 'firePopupMenuWillBecomeVisible', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[9]||$incl$(9)).c$$O,[this]);
(listeners[i + 1]).popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'firePopupMenuWillBecomeInvisible', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[9]||$incl$(9)).c$$O,[this]);
(listeners[i + 1]).popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'firePopupMenuCanceled', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[9]||$incl$(9)).c$$O,[this]);
(listeners[i + 1]).popupMenuCanceled$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'setActionCommand$S', function (aCommand) {
this.actionCommand = aCommand;
});

Clazz_newMeth(C$, 'getActionCommand', function () {
return this.actionCommand;
});

Clazz_newMeth(C$, 'setAction$javax_swing_Action', function (a) {
var oldValue = this.getAction();
if (this.$action == null  || !this.$action.equals$O(a) ) {
this.$action = a;
if (oldValue != null ) {
this.removeActionListener$java_awt_event_ActionListener(oldValue);
oldValue.removePropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
this.actionPropertyChangeListener = null;
}this.configurePropertiesFromAction$javax_swing_Action(this.$action);
if (this.$action != null ) {
if (!p$.isListener$Class$java_awt_event_ActionListener.apply(this, [Clazz_getClass((I$[7]||$incl$(7)),['actionPerformed$java_awt_event_ActionEvent']), this.$action])) {
this.addActionListener$java_awt_event_ActionListener(this.$action);
}this.actionPropertyChangeListener = this.createActionPropertyChangeListener$javax_swing_Action(this.$action);
this.$action.addPropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
}this.firePropertyChange$S$O$O("action", oldValue, this.$action);
}});

Clazz_newMeth(C$, 'isListener$Class$java_awt_event_ActionListener', function (c, a) {
var isListener = false;
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === c  && listeners[i + 1] === a  ) {
isListener = true;
}}
return isListener;
});

Clazz_newMeth(C$, 'getAction', function () {
return this.$action;
});

Clazz_newMeth(C$, 'configurePropertiesFromAction$javax_swing_Action', function (a) {
(I$[1]||$incl$(1)).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
(I$[1]||$incl$(1)).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
p$.setActionCommandFromAction$javax_swing_Action.apply(this, [a]);
});

Clazz_newMeth(C$, 'createActionPropertyChangeListener$javax_swing_Action', function (a) {
return Clazz_new_((I$[10]||$incl$(10)).c$$javax_swing_JComboBox$javax_swing_Action,[this, a]);
});

Clazz_newMeth(C$, 'actionPropertyChanged$javax_swing_Action$S', function (action, propertyName) {
if (propertyName == "ActionCommandKey") {
p$.setActionCommandFromAction$javax_swing_Action.apply(this, [action]);
} else if (propertyName == "enabled") {
(I$[1]||$incl$(1)).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
} else if ("ShortDescription" == propertyName) {
(I$[1]||$incl$(1)).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
}});

Clazz_newMeth(C$, 'setActionCommandFromAction$javax_swing_Action', function (a) {
this.setActionCommand$S((a != null ) ? a.getValue$S("ActionCommandKey") : null);
});

Clazz_newMeth(C$, 'fireItemStateChanged$java_awt_event_ItemEvent', function (e) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[6]||$incl$(6)),['itemStateChanged$java_awt_event_ItemEvent']) ) {
(listeners[i + 1]).itemStateChanged$java_awt_event_ItemEvent(e);
}}
});

Clazz_newMeth(C$, 'fireActionEvent', function () {
if (!this.firingActionEvent) {
this.firingActionEvent = true;
var e = null;
var listeners = this.listenerList.getListenerList();
var mostRecentEventTime = (I$[11]||$incl$(11)).getMostRecentEventTime();
var modifiers = 0;
var currentEvent = (I$[11]||$incl$(11)).getCurrentEvent();
if (Clazz_instanceOf(currentEvent, "java.awt.event.InputEvent")) {
modifiers = (currentEvent).getModifiers();
} else if (Clazz_instanceOf(currentEvent, "java.awt.event.ActionEvent")) {
modifiers = (currentEvent).getModifiers();
}for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['actionPerformed$java_awt_event_ActionEvent']) ) {
if (e == null ) e = Clazz_new_((I$[12]||$incl$(12)).c$$O$I$S$J$I,[this, 1001, this.getActionCommand(), mostRecentEventTime, modifiers]);
(listeners[i + 1]).actionPerformed$java_awt_event_ActionEvent(e);
}}
this.firingActionEvent = false;
}});

Clazz_newMeth(C$, 'selectedItemChanged', function () {
if (this.selectedItemReminder != null ) {
this.fireItemStateChanged$java_awt_event_ItemEvent(Clazz_new_((I$[13]||$incl$(13)).c$$java_awt_ItemSelectable$I$O$I,[this, 701, this.selectedItemReminder, 2]));
}this.selectedItemReminder = this.dataModel.getSelectedItem();
if (this.selectedItemReminder != null ) {
this.fireItemStateChanged$java_awt_event_ItemEvent(Clazz_new_((I$[13]||$incl$(13)).c$$java_awt_ItemSelectable$I$O$I,[this, 701, this.selectedItemReminder, 1]));
}});

Clazz_newMeth(C$, 'getSelectedObjects', function () {
var selectedObject = this.getSelectedItem();
if (selectedObject == null ) return Clazz_array(java.lang.Object, [0]);
 else {
var result = Clazz_array(java.lang.Object, [1]);
result[0] = selectedObject;
return result;
}});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent', function (e) {
var newItem = this.getEditor().getItem();
this.setPopupVisible$Z(false);
this.getModel().setSelectedItem$O(newItem);
var oldCommand = this.getActionCommand();
this.setActionCommand$S("comboBoxEdited");
this.fireActionEvent();
this.setActionCommand$S(oldCommand);
});

Clazz_newMeth(C$, 'contentsChanged$javax_swing_event_ListDataEvent', function (e) {
var oldSelection = this.selectedItemReminder;
var newSelection = this.dataModel.getSelectedItem();
if (oldSelection == null  || !oldSelection.equals$O(newSelection) ) {
this.selectedItemChanged();
if (!this.selectingItem) {
this.fireActionEvent();
}}});

Clazz_newMeth(C$, 'intervalAdded$javax_swing_event_ListDataEvent', function (e) {
if (this.selectedItemReminder !== this.dataModel.getSelectedItem() ) {
this.selectedItemChanged();
}});

Clazz_newMeth(C$, 'intervalRemoved$javax_swing_event_ListDataEvent', function (e) {
this.contentsChanged$javax_swing_event_ListDataEvent(e);
});

Clazz_newMeth(C$, 'selectWithKeyChar$C', function (keyChar) {
var index;
if (this.keySelectionManager == null ) this.keySelectionManager = this.createDefaultKeySelectionManager();
index = this.keySelectionManager.selectionForKey$C$javax_swing_ComboBoxModel(keyChar, this.getModel());
if (index != -1) {
this.setSelectedIndex$I(index);
return true;
} else return false;
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
C$.superclazz.prototype.setEnabled$Z.apply(this, [b]);
this.firePropertyChange$S$Z$Z("enabled", !this.isEnabled(), this.isEnabled());
});

Clazz_newMeth(C$, 'configureEditor$javax_swing_ComboBoxEditor$O', function (anEditor, anItem) {
anEditor.setItem$O(anItem);
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent', function (e) {
if (e.getKeyCode() == 9) {
this.hidePopup();
}C$.superclazz.prototype.processKeyEvent$java_awt_event_KeyEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'setKeySelectionManager$javax_swing_JComboBox_KeySelectionManager', function (aManager) {
this.keySelectionManager = aManager;
});

Clazz_newMeth(C$, 'getKeySelectionManager', function () {
return this.keySelectionManager;
});

Clazz_newMeth(C$, 'getItemCount', function () {
return this.dataModel.getSize();
});

Clazz_newMeth(C$, 'getItemAt$I', function (index) {
return this.dataModel.getElementAt$I(index);
});

Clazz_newMeth(C$, 'createDefaultKeySelectionManager', function () {
return Clazz_new_((I$[14]||$incl$(14)), [this, null]);
});

Clazz_newMeth(C$, 'paramString', function () {
var selectedItemReminderString = (this.selectedItemReminder != null  ? this.selectedItemReminder.toString() : "");
var isEditableString = (this.$isEditable ? "true" : "false");
var lightWeightPopupEnabledString = (this.lightWeightPopupEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",isEditable=" + isEditableString + ",lightWeightPopupEnabled=" + lightWeightPopupEnabledString + ",maximumRowCount=" + this.maximumRowCount + ",selectedItemReminder=" + selectedItemReminderString ;
});
;
(function(){var C$=Clazz_newClass(P$.JComboBox, "ComboBoxActionPropertyChangeListener", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.ActionPropertyChangeListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JComboBox$javax_swing_Action', function (b, a) {
C$.superclazz.c$$TT$javax_swing_Action.apply(this, [b, a]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['actionPropertyChanged$javax_swing_JComboBox$javax_swing_Action$java_beans_PropertyChangeEvent','actionPropertyChanged$TT$javax_swing_Action$java_beans_PropertyChangeEvent'], function (cb, action, e) {
if ((I$[1]||$incl$(1)).shouldReconfigure$java_beans_PropertyChangeEvent(e)) {
cb.configurePropertiesFromAction$javax_swing_Action(action);
} else {
cb.actionPropertyChanged$javax_swing_Action$S(action, e.getPropertyName());
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newInterface(P$.JComboBox, "KeySelectionManager", function(){
});
})()
;
(function(){var C$=Clazz_newClass(P$.JComboBox, "DefaultKeySelectionManager", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, [['javax.swing.JComboBox','javax.swing.JComboBox.KeySelectionManager']]);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'selectionForKey$C$javax_swing_ComboBoxModel', function (aKey, aModel) {
var i;
var c;
var currentSelection = -1;
var selectedItem = aModel.getSelectedItem();
var v;
var pattern;
if (selectedItem != null ) {
for (i = 0, c = aModel.getSize(); i < c; i++) {
if (selectedItem === aModel.getElementAt$I(i) ) {
currentSelection = i;
break;
}}
}pattern = ("" + aKey).toLowerCase();
aKey = pattern.charAt(0);
for (i = ++currentSelection, c = aModel.getSize(); i < c; i++) {
var elem = aModel.getElementAt$I(i);
if (elem != null  && elem.toString() != null  ) {
v = elem.toString().toLowerCase();
if (v.length$() > 0 && v.charAt(0) == aKey ) return i;
}}
for (i = 0; i < currentSelection; i++) {
var elem = aModel.getElementAt$I(i);
if (elem != null  && elem.toString() != null  ) {
v = elem.toString().toLowerCase();
if (v.length$() > 0 && v.charAt(0) == aKey ) return i;
}}
return -1;
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:26
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.JComponent','javax.swing.UIManager','javax.swing.JRootPane','javax.swing.SwingUtilities','javax.swing.RepaintManager','java.lang.Boolean']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JFrame", null, 'java.awt.Frame', ['javax.swing.WindowConstants', 'javax.swing.RootPaneContainer']);
C$.defaultLookAndFeelDecoratedKey = null;
C$.frameCount = 0;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.defaultLookAndFeelDecoratedKey =  Clazz_new_();
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.defaultCloseOperation = 0;
this.transferHandler = null;
this.rootPane = null;
this.rootPaneCheckingEnabled = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.defaultCloseOperation = 1;
this.rootPaneCheckingEnabled = false;
}, 1);

Clazz_newMeth(C$, 'add$java_awt_Component$O', function (comp, constraints) {
if (Clazz_instanceOf(comp, "javax.swing.JApplet")) {
this.isAppletFrame = true;
(comp).getLayeredPane().isFramedApplet = true;
}C$.superclazz.prototype.add$java_awt_Component$O.apply(this, [comp, constraints]);
});

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration', function (gc) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (title) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [title, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$java_awt_GraphicsConfiguration', function (title, gc) {
Clazz_super_(C$, this,1);
this.initTitleGC$S$java_awt_GraphicsConfiguration(title, gc);
this.enableEvents$J(72);
this.setLocale$java_util_Locale((I$[1]||$incl$(1)).getDefaultLocale());
this.uiClassID = "FrameUI";
this.setRootPane$javax_swing_JRootPane(this.createRootPane());
this.rootPane.setFrameViewer$swingjs_JSFrameViewer(this.setFrameViewer$swingjs_JSFrameViewer(null));
this.setBackground$java_awt_Color((I$[2]||$incl$(2)).getColor$O("control"));
this.setRootPaneCheckingEnabled$Z(true);
if (C$.isDefaultLookAndFeelDecorated()) {
var supportsWindowDecorations = (I$[2]||$incl$(2)).getLookAndFeel().getSupportsWindowDecorations();
if (supportsWindowDecorations) {
this.setUndecorated$Z(true);
this.getRootPane().setWindowDecorationStyle$I(1);
}}this.updateUI();
this.addNotify();
this.rootPane.addNotify();
}, 1);

Clazz_newMeth(C$, 'createRootPane', function () {
var rp = Clazz_new_((I$[3]||$incl$(3)).c$$S$Z,["_Frame" + (++C$.frameCount), false]);
rp.setOpaque$Z(true);
return rp;
});

Clazz_newMeth(C$, 'processWindowEvent$java_awt_event_WindowEvent', function (e) {
C$.superclazz.prototype.processWindowEvent$java_awt_event_WindowEvent.apply(this, [e]);
if (e.getID() == 201) {
switch (this.defaultCloseOperation) {
case 1:
this.setVisible$Z(false);
break;
case 2:
this.dispose();
break;
case 0:
default:
break;
case 3:
System.exit(0);
break;
}
}});

Clazz_newMeth(C$, 'setDefaultCloseOperation$I', function (operation) {
if (operation != 0 && operation != 1  && operation != 2  && operation != 3 ) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["defaultCloseOperation must be one of: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, DISPOSE_ON_CLOSE, or EXIT_ON_CLOSE"]);
}if (this.defaultCloseOperation != operation) {
if (operation == 3) {
var security = System.getSecurityManager();
if (security != null ) {
security.checkExit$I(0);
}}var oldValue = this.defaultCloseOperation;
this.defaultCloseOperation = operation;
this.firePropertyChange$S$I$I("defaultCloseOperation", oldValue, operation);
}});

Clazz_newMeth(C$, 'getDefaultCloseOperation', function () {
return this.defaultCloseOperation;
});

Clazz_newMeth(C$, 'setTransferHandler$javax_swing_TransferHandler', function (newHandler) {
var oldHandler = this.transferHandler;
this.transferHandler = newHandler;
(I$[4]||$incl$(4)).installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler(this, this.transferHandler);
this.firePropertyChange$S$O$O("transferHandler", oldHandler, newHandler);
});

Clazz_newMeth(C$, 'getTransferHandler', function () {
return this.transferHandler;
});

Clazz_newMeth(C$, 'update$java_awt_Graphics', function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics', function (g) {
(g).setBackground$java_awt_Color(this.getBackground());
(g).setColor$java_awt_Color(this.getForeground());
C$.superclazz.prototype.paint$java_awt_Graphics.apply(this, [g]);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar', function (menubar) {
this.getRootPane().setMenuBar$javax_swing_JMenuBar(menubar);
});

Clazz_newMeth(C$, 'getJMenuBar', function () {
return this.getRootPane().getMenuBar();
});

Clazz_newMeth(C$, 'isRootPaneCheckingEnabled', function () {
return this.rootPaneCheckingEnabled;
});

Clazz_newMeth(C$, 'setRootPaneCheckingEnabled$Z', function (enabled) {
this.rootPaneCheckingEnabled = enabled;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I', function (comp, constraints, index) {
if (this.isRootPaneCheckingEnabled()) {
return this.getContentPane().add$java_awt_Component$O$I(comp, constraints, index);
}return this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'remove$java_awt_Component', function (comp) {
if (comp === this.rootPane ) {
C$.superclazz.prototype.remove$java_awt_Component.apply(this, [comp]);
} else {
this.getContentPane().remove$java_awt_Component(comp);
}});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager', function (manager) {
if (this.isRootPaneCheckingEnabled()) {
this.getContentPane().setLayout$java_awt_LayoutManager(manager);
} else {
C$.superclazz.prototype.setLayout$java_awt_LayoutManager.apply(this, [manager]);
}});

Clazz_newMeth(C$, 'getRootPane', function () {
return this.rootPane;
});

Clazz_newMeth(C$, 'setRootPane$javax_swing_JRootPane', function (root) {
if (this.rootPane != null ) {
this.remove$java_awt_Component(this.rootPane);
}this.rootPane = root;
if (this.rootPane != null ) {
var checkingEnabled = this.isRootPaneCheckingEnabled();
try {
this.setRootPaneCheckingEnabled$Z(false);
this.add$java_awt_Component$O(this.rootPane, "Center");
} finally {
this.setRootPaneCheckingEnabled$Z(checkingEnabled);
}
}});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image', function (image) {
C$.superclazz.prototype.setIconImage$java_awt_Image.apply(this, [image]);
});

Clazz_newMeth(C$, 'getContentPane', function () {
return this.getRootPane().getContentPane();
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container', function (contentPane) {
this.getRootPane().setContentPane$java_awt_Container(contentPane);
});

Clazz_newMeth(C$, 'getLayeredPane', function () {
return this.getRootPane().getLayeredPane();
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane', function (layeredPane) {
this.getRootPane().setLayeredPane$javax_swing_JLayeredPane(layeredPane);
});

Clazz_newMeth(C$, 'getGlassPane', function () {
return this.getRootPane().getGlassPane();
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component', function (glassPane) {
this.getRootPane().setGlassPane$java_awt_Component(glassPane);
});

Clazz_newMeth(C$, 'getGraphics', function () {
(I$[1]||$incl$(1)).getGraphicsInvoked$java_awt_Component(this);
return C$.superclazz.prototype.getGraphics.apply(this, []);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I', function (time, x, y, width, height) {
if ((I$[5]||$incl$(5)).HANDLE_TOP_LEVEL_PAINT) {
(I$[5]||$incl$(5)).currentManager$java_awt_Component(this).addDirtyRegion$java_awt_Window$I$I$I$I(this, x, y, width, height);
} else {
C$.superclazz.prototype.repaint$J$I$I$I$I.apply(this, [time, x, y, width, height]);
}});

Clazz_newMeth(C$, 'setDefaultLookAndFeelDecorated$Z', function (defaultLookAndFeelDecorated) {
if (defaultLookAndFeelDecorated) {
(I$[4]||$incl$(4)).appContextPut$O$O(C$.defaultLookAndFeelDecoratedKey, (I$[6]||$incl$(6)).TRUE);
} else {
(I$[4]||$incl$(4)).appContextPut$O$O(C$.defaultLookAndFeelDecoratedKey, (I$[6]||$incl$(6)).FALSE);
}}, 1);

Clazz_newMeth(C$, 'isDefaultLookAndFeelDecorated', function () {
var defaultLookAndFeelDecorated = (I$[4]||$incl$(4)).appContextGet$O(C$.defaultLookAndFeelDecoratedKey);
if (defaultLookAndFeelDecorated == null ) {
defaultLookAndFeelDecorated = (I$[6]||$incl$(6)).FALSE;
}return defaultLookAndFeelDecorated.booleanValue();
}, 1);

Clazz_newMeth(C$, 'paramString', function () {
var defaultCloseOperationString;
if (this.defaultCloseOperation == 1) {
defaultCloseOperationString = "HIDE_ON_CLOSE";
} else if (this.defaultCloseOperation == 2) {
defaultCloseOperationString = "DISPOSE_ON_CLOSE";
} else if (this.defaultCloseOperation == 0) {
defaultCloseOperationString = "DO_NOTHING_ON_CLOSE";
} else if (this.defaultCloseOperation == 3) {
defaultCloseOperationString = "EXIT_ON_CLOSE";
} else defaultCloseOperationString = "";
var rootPaneString = (this.rootPane != null  ? this.rootPane.toString() : "");
var rootPaneCheckingEnabledString = (this.rootPaneCheckingEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",defaultCloseOperation=" + defaultCloseOperationString + ",rootPane=" + rootPaneString + ",rootPaneCheckingEnabled=" + rootPaneCheckingEnabledString ;
});
})();
//Created 2018-05-15 01:02:29
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.UIManager','java.awt.Toolkit','java.awt.Rectangle','javax.swing.SwingUtilities','java.awt.Point','javax.swing.JPopupMenu','javax.swing.JMenuItem',['javax.swing.JPopupMenu','.Separator'],'java.lang.Error','java.awt.Component','javax.swing.event.MenuListener','javax.swing.event.MenuEvent',['javax.swing.JMenu','.MenuChangeListener'],['javax.swing.JMenu','.WinListener'],'javax.swing.MenuElement','javax.swing.MenuSelectionManager','java.util.Vector']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JMenu", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JMenuItem', 'javax.swing.MenuElement');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.$popupMenu = null;
this.menuChangeListener = null;
this.menuEvent = null;
this.delay = 0;
this.customMenuLocation = null;
this.popupListener = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.menuChangeListener = null;
this.menuEvent = null;
this.customMenuLocation = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$$S$javax_swing_Icon$I$S.apply(this, ["", null, -2147483648, "MenuUI"]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (s) {
C$.superclazz.c$$S$javax_swing_Icon$I$S.apply(this, [s, null, -2147483648, "MenuUI"]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.superclazz.c$$S$javax_swing_Icon$I$S.apply(this, ["", null, -2147483648, "MenuUI"]);
C$.$init$.apply(this);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (s, b) {
C$.superclazz.c$$S$javax_swing_Icon$I$S.apply(this, [s, null, -2147483648, "MenuUI"]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'initFocusability', function () {
});

Clazz_newMeth(C$, 'updateUI', function () {
C$.superclazz.prototype.updateUI.apply(this, []);
if (this.$popupMenu != null ) {
this.$popupMenu.setUI$javax_swing_plaf_ComponentUI((I$[1]||$incl$(1)).getUI$java_awt_Component(this.$popupMenu));
}});

Clazz_newMeth(C$, 'setModel$javax_swing_ButtonModel', function (newModel) {
var oldModel = this.getModel();
C$.superclazz.prototype.setModel$javax_swing_ButtonModel.apply(this, [newModel]);
if (oldModel != null  && this.menuChangeListener != null  ) {
oldModel.removeChangeListener$javax_swing_event_ChangeListener(this.menuChangeListener);
this.menuChangeListener = null;
}this.model = newModel;
if (newModel != null ) {
this.menuChangeListener = p$.createMenuChangeListener.apply(this, []);
newModel.addChangeListener$javax_swing_event_ChangeListener(this.menuChangeListener);
}});

Clazz_newMeth(C$, 'isSelected', function () {
return this.getModel().isSelected();
});

Clazz_newMeth(C$, 'setSelected$Z', function (b) {
var model = this.getModel();
if (b != model.isSelected() ) {
this.getModel().setSelected$Z(b);
}});

Clazz_newMeth(C$, 'isPopupMenuVisible', function () {
p$.ensurePopupMenuCreated.apply(this, []);
return this.$popupMenu.isVisible();
});

Clazz_newMeth(C$, 'setPopupMenuVisible$Z', function (b) {
var isVisible = this.isPopupMenuVisible();
if (b != isVisible  && (this.isEnabled() || !b ) ) {
p$.ensurePopupMenuCreated.apply(this, []);
if ((b == true ) && this.isShowing() ) {
var p = p$.getCustomMenuLocation.apply(this, []);
if (p == null ) {
p = this.getPopupMenuOrigin();
}this.getPopupMenu().show$java_awt_Component$I$I(this, p.x, p.y);
} else {
this.getPopupMenu().setVisible$Z(false);
}}});

Clazz_newMeth(C$, 'getPopupMenuOrigin', function () {
var x = 0;
var y = 0;
var pm = this.getPopupMenu();
var s = this.getSize();
var pmSize = pm.getSize();
if (pmSize.width == 0) {
pmSize = pm.getPreferredSize();
}var position = this.getLocationOnScreen();
var toolkit = (I$[2]||$incl$(2)).getDefaultToolkit();
var gc = this.getGraphicsConfiguration();
var screenBounds = Clazz_new_((I$[3]||$incl$(3)).c$$java_awt_Dimension,[toolkit.getScreenSize()]);
if (gc != null ) {
screenBounds = gc.getBounds();
var screenInsets = toolkit.getScreenInsets$java_awt_GraphicsConfiguration(gc);
screenBounds.width = screenBounds.width-(Math.abs(screenInsets.left + screenInsets.right));
screenBounds.height = screenBounds.height-(Math.abs(screenInsets.top + screenInsets.bottom));
position.x = position.x-(Math.abs(screenInsets.left));
position.y = position.y-(Math.abs(screenInsets.top));
}var parent = this.getParent();
if (Clazz_instanceOf(parent, "javax.swing.JPopupMenu")) {
var xOffset = (I$[1]||$incl$(1)).getInt$O("Menu.submenuPopupOffsetX");
var yOffset = (I$[1]||$incl$(1)).getInt$O("Menu.submenuPopupOffsetY");
if ((I$[4]||$incl$(4)).isLeftToRight$java_awt_Component(this)) {
x = s.width + xOffset;
if (position.x + x + pmSize.width  >= screenBounds.width + screenBounds.x && screenBounds.width - s.width < 2 * (position.x - screenBounds.x) ) {
x = 0 - xOffset - pmSize.width ;
}} else {
x = 0 - xOffset - pmSize.width ;
if (position.x + x < screenBounds.x && screenBounds.width - s.width > 2 * (position.x - screenBounds.x) ) {
x = s.width + xOffset;
}}y = yOffset;
if (position.y + y + pmSize.height  >= screenBounds.height + screenBounds.y && screenBounds.height - s.height < 2 * (position.y - screenBounds.y) ) {
y = s.height - yOffset - pmSize.height ;
}} else {
var xOffset = (I$[1]||$incl$(1)).getInt$O("Menu.menuPopupOffsetX");
var yOffset = (I$[1]||$incl$(1)).getInt$O("Menu.menuPopupOffsetY");
if ((I$[4]||$incl$(4)).isLeftToRight$java_awt_Component(this)) {
x = xOffset;
if (position.x + x + pmSize.width  >= screenBounds.width + screenBounds.x && screenBounds.width - s.width < 2 * (position.x - screenBounds.x) ) {
x = s.width - xOffset - pmSize.width ;
}} else {
x = s.width - xOffset - pmSize.width ;
if (position.x + x < screenBounds.x && screenBounds.width - s.width > 2 * (position.x - screenBounds.x) ) {
x = xOffset;
}}y = s.height + yOffset;
if (position.y + y + pmSize.height  >= screenBounds.height && screenBounds.height - s.height < 2 * (position.y - screenBounds.y) ) {
y = 0 - yOffset - pmSize.height ;
}}return Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[x, y]);
});

Clazz_newMeth(C$, 'getDelay', function () {
return this.delay;
});

Clazz_newMeth(C$, 'setDelay$I', function (d) {
if (d < 0) throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["Delay must be a positive integer"]);
this.delay = d;
});

Clazz_newMeth(C$, 'ensurePopupMenuCreated', function () {
if (this.$popupMenu == null ) {
this.$popupMenu = Clazz_new_((I$[6]||$incl$(6)));
this.$popupMenu.setInvoker$java_awt_Component(this);
this.popupListener = this.createWinListener$javax_swing_JPopupMenu(this.$popupMenu);
}});

Clazz_newMeth(C$, 'getCustomMenuLocation', function () {
return this.customMenuLocation;
});

Clazz_newMeth(C$, 'setMenuLocation$I$I', function (x, y) {
this.customMenuLocation = Clazz_new_((I$[5]||$incl$(5)).c$$I$I,[x, y]);
if (this.$popupMenu != null ) this.$popupMenu.setLocation$I$I(x, y);
});

Clazz_newMeth(C$, 'add$javax_swing_JMenuItem', function (menuItem) {
p$.ensurePopupMenuCreated.apply(this, []);
return this.$popupMenu.add$javax_swing_JMenuItem(menuItem);
});

Clazz_newMeth(C$, 'add$java_awt_Component', function (c) {
p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.add$java_awt_Component(c);
return c;
});

Clazz_newMeth(C$, 'add$java_awt_Component$I', function (c, index) {
p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.add$java_awt_Component$I(c, index);
return c;
});

Clazz_newMeth(C$, 'add$S', function (s) {
return this.add$javax_swing_JMenuItem(Clazz_new_((I$[7]||$incl$(7)).c$$S,[s]));
});

Clazz_newMeth(C$, 'add$javax_swing_Action', function (a) {
var mi = this.createActionComponent$javax_swing_Action(a);
mi.setAction$javax_swing_Action(a);
this.add$javax_swing_JMenuItem(mi);
return mi;
});

Clazz_newMeth(C$, 'createActionComponent$javax_swing_Action', function (a) {
var mi = ((
(function(){var C$=Clazz_newClass(P$, "JMenu$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.JMenuItem'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'createActionPropertyChangeListener$javax_swing_Action', function (a) {
var pcl = this.b$['javax.swing.JMenu'].createActionChangeListener$javax_swing_JMenuItem(this);
if (pcl == null ) {
pcl = C$.superclazz.prototype.createActionPropertyChangeListener$javax_swing_Action.apply(this, [a]);
}return pcl;
});
})()
), Clazz_new_((I$[7]||$incl$(7)), [this, null],P$.JMenu$1));
mi.setHorizontalTextPosition$I(11);
mi.setVerticalTextPosition$I(0);
return mi;
});

Clazz_newMeth(C$, 'createActionChangeListener$javax_swing_JMenuItem', function (b) {
return b.createActionPropertyChangeListener0$javax_swing_Action(b.getAction());
});

Clazz_newMeth(C$, 'addSeparator', function () {
p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.addSeparator();
});

Clazz_newMeth(C$, 'insert$S$I', function (s, pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.insert$java_awt_Component$I(Clazz_new_((I$[7]||$incl$(7)).c$$S,[s]), pos);
});

Clazz_newMeth(C$, 'insert$javax_swing_JMenuItem$I', function (mi, pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.insert$java_awt_Component$I(mi, pos);
return mi;
});

Clazz_newMeth(C$, 'insert$javax_swing_Action$I', function (a, pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}p$.ensurePopupMenuCreated.apply(this, []);
var mi = Clazz_new_((I$[7]||$incl$(7)).c$$javax_swing_Action,[a]);
mi.setHorizontalTextPosition$I(11);
mi.setVerticalTextPosition$I(0);
this.$popupMenu.insert$java_awt_Component$I(mi, pos);
return mi;
});

Clazz_newMeth(C$, 'insertSeparator$I', function (index) {
if (index < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}p$.ensurePopupMenuCreated.apply(this, []);
this.$popupMenu.insert$java_awt_Component$I(Clazz_new_((I$[8]||$incl$(8))), index);
});

Clazz_newMeth(C$, 'getItem$I', function (pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}var c = this.getMenuComponent$I(pos);
if (Clazz_instanceOf(c, "javax.swing.JMenuItem")) {
var mi = c;
return mi;
}return null;
});

Clazz_newMeth(C$, 'getItemCount', function () {
return this.getMenuComponentCount();
});

Clazz_newMeth(C$, 'isTearOff', function () {
throw Clazz_new_((I$[9]||$incl$(9)).c$$S,["boolean isTearOff() {} not yet implemented"]);
});

Clazz_newMeth(C$, 'remove$javax_swing_JMenuItem', function (item) {
this.remove$java_awt_Component(item);
});

Clazz_newMeth(C$, 'remove$I', function (pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}if (pos > this.getItemCount()) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index greater than the number of items."]);
}if (this.$popupMenu != null ) this.$popupMenu.remove$I(pos);
});

Clazz_newMeth(C$, 'remove$java_awt_Component', function (c) {
if (Clazz_instanceOf(c, "javax.swing.JMenuItem")) if (this.$popupMenu != null ) this.$popupMenu.remove$java_awt_Component(c);
if (this.$popupMenu != null ) this.$popupMenu.remove$java_awt_Component(c);
});

Clazz_newMeth(C$, 'removeAll', function () {
if (this.$popupMenu != null ) this.$popupMenu.removeAll();
});

Clazz_newMeth(C$, 'getMenuComponentCount', function () {
var componentCount = 0;
if (this.$popupMenu != null ) componentCount = this.$popupMenu.getComponentCount();
return componentCount;
});

Clazz_newMeth(C$, 'getMenuComponent$I', function (n) {
if (this.$popupMenu != null ) return this.$popupMenu.getComponent$I(n);
return null;
});

Clazz_newMeth(C$, 'getMenuComponents', function () {
if (this.$popupMenu != null ) return this.$popupMenu.getComponents();
return Clazz_array((I$[10]||$incl$(10)), [0]);
});

Clazz_newMeth(C$, 'isTopLevelMenu', function () {
if (Clazz_instanceOf(this.getParent(), "javax.swing.JMenuBar")) return true;
return false;
});

Clazz_newMeth(C$, 'isMenuComponent$java_awt_Component', function (c) {
if (c === this ) return true;
if (Clazz_instanceOf(c, "javax.swing.JPopupMenu")) {
var comp = c;
if (comp === this.getPopupMenu() ) return true;
}var ncomponents = this.getMenuComponentCount();
var component = this.getMenuComponents();
for (var i = 0; i < ncomponents; i++) {
var comp = component[i];
if (comp === c ) return true;
if (Clazz_instanceOf(comp, "javax.swing.JMenu")) {
var subMenu = comp;
if (subMenu.isMenuComponent$java_awt_Component(c)) return true;
}}
return false;
});

Clazz_newMeth(C$, 'getPopupMenu', function () {
p$.ensurePopupMenuCreated.apply(this, []);
return this.$popupMenu;
});

Clazz_newMeth(C$, 'addMenuListener$javax_swing_event_MenuListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']), l);
});

Clazz_newMeth(C$, 'removeMenuListener$javax_swing_event_MenuListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']), l);
});

Clazz_newMeth(C$, 'getMenuListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']));
});

Clazz_newMeth(C$, 'fireMenuSelected', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']) ) {
if (listeners[i + 1] == null ) {
throw Clazz_new_((I$[9]||$incl$(9)).c$$S,[this.getText() + " has a NULL Listener!! " + i ]);
} else {
if (this.menuEvent == null ) this.menuEvent = Clazz_new_((I$[12]||$incl$(12)).c$$O,[this]);
(listeners[i + 1]).menuSelected$javax_swing_event_MenuEvent(this.menuEvent);
}}}
});

Clazz_newMeth(C$, 'fireMenuDeselected', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']) ) {
if (listeners[i + 1] == null ) {
throw Clazz_new_((I$[9]||$incl$(9)).c$$S,[this.getText() + " has a NULL Listener!! " + i ]);
} else {
if (this.menuEvent == null ) this.menuEvent = Clazz_new_((I$[12]||$incl$(12)).c$$O,[this]);
(listeners[i + 1]).menuDeselected$javax_swing_event_MenuEvent(this.menuEvent);
}}}
});

Clazz_newMeth(C$, 'fireMenuCanceled', function () {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['menuCanceled$javax_swing_event_MenuEvent','menuDeselected$javax_swing_event_MenuEvent','menuSelected$javax_swing_event_MenuEvent']) ) {
if (listeners[i + 1] == null ) {
throw Clazz_new_((I$[9]||$incl$(9)).c$$S,[this.getText() + " has a NULL Listener!! " + i ]);
} else {
if (this.menuEvent == null ) this.menuEvent = Clazz_new_((I$[12]||$incl$(12)).c$$O,[this]);
(listeners[i + 1]).menuCanceled$javax_swing_event_MenuEvent(this.menuEvent);
}}}
});

Clazz_newMeth(C$, 'configureAcceleratorFromAction$javax_swing_Action', function (a) {
});

Clazz_newMeth(C$, 'createMenuChangeListener', function () {
return Clazz_new_((I$[13]||$incl$(13)), [this, null]);
});

Clazz_newMeth(C$, 'createWinListener$javax_swing_JPopupMenu', function (p) {
return Clazz_new_((I$[14]||$incl$(14)).c$$javax_swing_JPopupMenu, [this, null, p]);
});

Clazz_newMeth(C$, 'menuSelectionChanged$Z', function (isIncluded) {
this.setSelected$Z(isIncluded);
});

Clazz_newMeth(C$, 'getSubElements', function () {
if (this.$popupMenu == null ) return Clazz_array((I$[15]||$incl$(15)), [0]);
 else {
var result = Clazz_array((I$[15]||$incl$(15)), [1]);
result[0] = this.$popupMenu;
return result;
}});

Clazz_newMeth(C$, 'getComponent', function () {
return this;
});

Clazz_newMeth(C$, 'applyComponentOrientation$java_awt_ComponentOrientation', function (o) {
C$.superclazz.prototype.applyComponentOrientation$java_awt_ComponentOrientation.apply(this, [o]);
if (this.$popupMenu != null ) {
var ncomponents = this.getMenuComponentCount();
for (var i = 0; i < ncomponents; ++i) {
this.getMenuComponent$I(i).applyComponentOrientation$java_awt_ComponentOrientation(o);
}
this.$popupMenu.setComponentOrientation$java_awt_ComponentOrientation(o);
}});

Clazz_newMeth(C$, 'setComponentOrientation$java_awt_ComponentOrientation', function (o) {
C$.superclazz.prototype.setComponentOrientation$java_awt_ComponentOrientation.apply(this, [o]);
if (this.$popupMenu != null ) {
this.$popupMenu.setComponentOrientation$java_awt_ComponentOrientation(o);
}});

Clazz_newMeth(C$, 'setAccelerator$javax_swing_KeyStroke', function (keyStroke) {
throw Clazz_new_((I$[9]||$incl$(9)).c$$S,["setAccelerator() is not defined for JMenu.  Use setMnemonic() instead."]);
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent', function (evt) {
(I$[16]||$incl$(16)).defaultManager().processKeyEvent$java_awt_event_KeyEvent(evt);
if (evt.isConsumed()) return;
C$.superclazz.prototype.processKeyEvent$java_awt_event_KeyEvent.apply(this, [evt]);
});

Clazz_newMeth(C$, 'doClick$I', function (pressTime) {
var me = p$.buildMenuElementArray$javax_swing_JMenu.apply(this, [this]);
if (me == null ) return;
(I$[16]||$incl$(16)).defaultManager().setSelectedPath$javax_swing_MenuElementA(me);
});

Clazz_newMeth(C$, 'buildMenuElementArray$javax_swing_JMenu', function (leaf) {
var elements = Clazz_new_((I$[17]||$incl$(17)));
var current = leaf.getPopupMenu();
var pop;
var menu;
var bar;
while (true){
if (Clazz_instanceOf(current, "javax.swing.JPopupMenu")) {
pop = current;
elements.insertElementAt$TE$I(pop, 0);
current = pop.getInvoker();
} else if (Clazz_instanceOf(current, "javax.swing.JMenu")) {
menu = current;
elements.insertElementAt$TE$I(menu, 0);
current = menu.getParent();
} else if (Clazz_instanceOf(current, "javax.swing.JMenuBar")) {
bar = current;
elements.insertElementAt$TE$I(bar, 0);
var me = Clazz_array((I$[15]||$incl$(15)), [elements.size()]);
elements.copyInto$OA(me);
return me;
} else {
return null;
}}
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});
;
(function(){var C$=Clazz_newClass(P$.JMenu, "MenuChangeListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.ChangeListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.isSelected = false;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.isSelected = false;
}, 1);

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent', function (e) {
var model = e.getSource();
var modelSelected = model.isSelected();
if (modelSelected != this.isSelected ) {
if (modelSelected == true ) {
this.this$0.fireMenuSelected();
} else {
this.this$0.fireMenuDeselected();
}this.isSelected = modelSelected;
}});

Clazz_newMeth(C$);
})()
;
(function(){var C$=Clazz_newClass(P$.JMenu, "WinListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.awt.event.WindowAdapter');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.popupMenu = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JPopupMenu', function (p) {
Clazz_super_(C$, this,1);
this.popupMenu = p;
}, 1);

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent', function (e) {
this.this$0.setSelected$Z(false);
});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:30
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.DefaultSingleSelectionModel','java.lang.Error','java.awt.Insets','java.util.Vector','javax.swing.MenuElement','javax.swing.KeyboardManager']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JMenuBar", null, 'javax.swing.JComponent', 'javax.swing.MenuElement');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.selectionModel = null;
this.$paintBorder = false;
this.margin = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.$paintBorder = false;
this.margin = null;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.setSelectionModel$javax_swing_SingleSelectionModel(Clazz_new_((I$[1]||$incl$(1))));
this.uiClassID = "MenuBarUI";
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'getSelectionModel', function () {
return this.selectionModel;
});

Clazz_newMeth(C$, 'setSelectionModel$javax_swing_SingleSelectionModel', function (model) {
var oldValue = this.selectionModel;
this.selectionModel = model;
this.firePropertyChange$S$O$O("selectionModel", oldValue, this.selectionModel);
});

Clazz_newMeth(C$, 'add$javax_swing_JMenu', function (c) {
C$.superclazz.prototype.add$java_awt_Component.apply(this, [c]);
return c;
});

Clazz_newMeth(C$, 'getMenu$I', function (index) {
var c = this.getComponentAtIndex$I(index);
if (Clazz_instanceOf(c, "javax.swing.JMenu")) return c;
return null;
});

Clazz_newMeth(C$, 'getMenuCount', function () {
return this.getComponentCount();
});

Clazz_newMeth(C$, 'setHelpMenu$javax_swing_JMenu', function (menu) {
throw Clazz_new_((I$[2]||$incl$(2)).c$$S,["setHelpMenu() not yet implemented."]);
});

Clazz_newMeth(C$, 'getHelpMenu', function () {
throw Clazz_new_((I$[2]||$incl$(2)).c$$S,["getHelpMenu() not yet implemented."]);
});

Clazz_newMeth(C$, 'getComponentAtIndex$I', function (i) {
if (i < 0 || i >= this.getComponentCount() ) {
return null;
}return this.getComponent$I(i);
});

Clazz_newMeth(C$, 'getComponentIndex$java_awt_Component', function (c) {
var ncomponents = this.getComponentCount();
var component = this.getComponents();
for (var i = 0; i < ncomponents; i++) {
var comp = component[i];
if (comp === c ) return i;
}
return -1;
});

Clazz_newMeth(C$, 'setSelected$java_awt_Component', function (sel) {
var model = this.getSelectionModel();
var index = this.getComponentIndex$java_awt_Component(sel);
model.setSelectedIndex$I(index);
});

Clazz_newMeth(C$, 'isSelected', function () {
return this.selectionModel.isSelected();
});

Clazz_newMeth(C$, 'isBorderPainted', function () {
return this.$paintBorder;
});

Clazz_newMeth(C$, 'setBorderPainted$Z', function (b) {
{

}
});

Clazz_newMeth(C$, 'paintBorder$java_awt_Graphics', function (g) {
if (this.isBorderPainted()) {
C$.superclazz.prototype.paintBorder$java_awt_Graphics.apply(this, [g]);
}});

Clazz_newMeth(C$, 'setMargin$java_awt_Insets', function (m) {
var old = this.margin;
this.margin = m;
this.firePropertyChange$S$O$O("margin", old, m);
if (old == null  || !old.equals$O(m) ) {
this.revalidate();
this.repaint();
}});

Clazz_newMeth(C$, 'getMargin', function () {
if (this.margin == null ) {
return Clazz_new_((I$[3]||$incl$(3)).c$$I$I$I$I,[0, 0, 0, 0]);
} else {
return this.margin;
}});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (event, path, manager) {
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (e, path, manager) {
});

Clazz_newMeth(C$, 'menuSelectionChanged$Z', function (isIncluded) {
});

Clazz_newMeth(C$, 'getSubElements', function () {
var result;
var tmp = Clazz_new_((I$[4]||$incl$(4)));
var c = this.getComponentCount();
var i;
var m;
for (i = 0; i < c; i++) {
m = this.getComponent$I(i);
if (Clazz_instanceOf(m, "javax.swing.MenuElement")) tmp.addElement$TE(m);
}
result = Clazz_array((I$[5]||$incl$(5)), [tmp.size()]);
for (i = 0, c = tmp.size(); i < c; i++) result[i] = tmp.elementAt$I(i);

return result;
});

Clazz_newMeth(C$, 'getComponent', function () {
return this;
});

Clazz_newMeth(C$, 'paramString', function () {
var paintBorderString = (this.$paintBorder ? "true" : "false");
var marginString = (this.margin != null  ? this.margin.toString() : "");
return C$.superclazz.prototype.paramString.apply(this, []) + ",margin=" + marginString + ",paintBorder=" + paintBorderString ;
});

Clazz_newMeth(C$, 'processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z', function (ks, e, condition, pressed) {
var retValue = C$.superclazz.prototype.processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z.apply(this, [ks, e, condition, pressed]);
if (!retValue) {
var subElements = this.getSubElements();
for (var i = 0; i < subElements.length; i++) {
if (C$.processBindingForKeyStrokeRecursive$javax_swing_MenuElement$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(subElements[i], ks, e, condition, pressed)) {
return true;
}}
}return retValue;
});

Clazz_newMeth(C$, 'processBindingForKeyStrokeRecursive$javax_swing_MenuElement$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z', function (elem, ks, e, condition, pressed) {
if (elem == null ) {
return false;
}var c = elem.getComponent();
if (!(c.isVisible() || (Clazz_instanceOf(c, "javax.swing.JPopupMenu")) ) || !c.isEnabled() ) {
return false;
}if (c != null  && Clazz_instanceOf(c, "javax.swing.JComponent")  && (c).processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, condition, pressed) ) {
return true;
}var subElements = elem.getSubElements();
for (var i = 0; i < subElements.length; i++) {
if (C$.processBindingForKeyStrokeRecursive$javax_swing_MenuElement$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(subElements[i], ks, e, condition, pressed)) {
return true;
}}
return false;
}, 1);

Clazz_newMeth(C$, 'addNotify', function () {
C$.superclazz.prototype.addNotify.apply(this, []);
(I$[6]||$incl$(6)).getCurrentManager().registerMenuBar$javax_swing_JMenuBar(this);
});

Clazz_newMeth(C$, 'removeNotify', function () {
C$.superclazz.prototype.removeNotify.apply(this, []);
(I$[6]||$incl$(6)).getCurrentManager().unregisterMenuBar$javax_swing_JMenuBar(this);
});
})();
//Created 2018-05-15 01:02:30
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.DefaultButtonModel',['javax.swing.JMenuItem','.MenuItemFocusListener'],'java.lang.Boolean','javax.swing.UIManager','javax.swing.event.MenuDragMouseEvent','javax.swing.event.MenuKeyEvent','javax.swing.event.MenuDragMouseListener','javax.swing.event.MenuKeyListener','javax.swing.MenuElement']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JMenuItem", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.AbstractButton', 'javax.swing.MenuElement');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.isMouseDragged = false;
this.accelerator = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.isMouseDragged = false;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [null, null, -2147483648, "MenuItemUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [null, icon, -2147483648, "MenuItemUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [text, null, -2147483648, "MenuItemUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [null, null, -2147483648, "MenuItemUI"]);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [text, icon, -2147483648, "MenuItemUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$S$I', function (text, mnemonic) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [text, null, mnemonic, "MenuItemUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$S', function (text, icon, uid) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [text, icon, 0, uid]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$I$S', function (text, icon, mnemonic, uid) {
Clazz_super_(C$, this,1);
p$.init0$S$javax_swing_Icon$I$S.apply(this, [text, icon, mnemonic, uid]);
}, 1);

Clazz_newMeth(C$, 'init0$S$javax_swing_Icon$I$S', function (text, icon, mnemonic, uid) {
this.setModel$javax_swing_ButtonModel(Clazz_new_((I$[1]||$incl$(1))));
this.init$S$javax_swing_Icon$S(text, icon, uid);
if (mnemonic >= 0) this.setMnemonic$I(mnemonic);
this.initFocusability();
});

Clazz_newMeth(C$, 'init$S$javax_swing_Icon$S', function (text, icon, uid) {
this.uiClassID = uid;
this.updateUI();
if (text != null ) this.setText$S(text);
if (icon != null ) this.setIcon$javax_swing_Icon(icon);
this.addFocusListener$java_awt_event_FocusListener(Clazz_new_((I$[2]||$incl$(2))));
this.setUIProperty$S$O("borderPainted", (I$[3]||$incl$(3)).FALSE);
this.setOpaque$Z(true);
this.setFocusPainted$Z(false);
this.setHorizontalTextPosition$I(11);
this.setHorizontalAlignment$I(10);
});

Clazz_newMeth(C$, 'setModel$javax_swing_ButtonModel', function (newModel) {
C$.superclazz.prototype.setModel$javax_swing_ButtonModel.apply(this, [newModel]);
if (Clazz_instanceOf(newModel, "javax.swing.DefaultButtonModel")) {
(newModel).setMenuItem$Z(true);
}});

Clazz_newMeth(C$, 'initFocusability', function () {
this.setFocusable$Z(false);
});

Clazz_newMeth(C$, 'setArmed$Z', function (b) {
var model = this.getModel();
if (model.isArmed() != b ) {
model.setArmed$Z(b);
}});

Clazz_newMeth(C$, 'isArmed', function () {
var model = this.getModel();
return model.isArmed();
});

Clazz_newMeth(C$, 'setEnabled$Z', function (b) {
if (!b && !(I$[4]||$incl$(4)).getBoolean$O("MenuItem.disabledAreNavigable") ) {
this.setArmed$Z(false);
}C$.superclazz.prototype.setEnabled$Z.apply(this, [b]);
});

Clazz_newMeth(C$, 'alwaysOnTop', function () {
return true;
});

Clazz_newMeth(C$, 'setAccelerator$javax_swing_KeyStroke', function (keyStroke) {
var oldAccelerator = this.accelerator;
this.accelerator = keyStroke;
this.repaint();
this.revalidate();
this.firePropertyChange$S$O$O("accelerator", oldAccelerator, this.accelerator);
});

Clazz_newMeth(C$, 'getAccelerator', function () {
return this.accelerator;
});

Clazz_newMeth(C$, 'configurePropertiesFromAction$javax_swing_Action', function (a) {
C$.superclazz.prototype.configurePropertiesFromAction$javax_swing_Action.apply(this, [a]);
this.configureAcceleratorFromAction$javax_swing_Action(a);
});

Clazz_newMeth(C$, 'setIconFromAction$javax_swing_Action', function (a) {
var icon = null;
if (a != null ) {
icon = a.getValue$S("SmallIcon");
}this.setIcon$javax_swing_Icon(icon);
});

Clazz_newMeth(C$, 'largeIconChanged$javax_swing_Action', function (a) {
});

Clazz_newMeth(C$, 'smallIconChanged$javax_swing_Action', function (a) {
this.setIconFromAction$javax_swing_Action(a);
});

Clazz_newMeth(C$, 'configureAcceleratorFromAction$javax_swing_Action', function (a) {
var ks = (a == null ) ? null : a.getValue$S("AcceleratorKey");
this.setAccelerator$javax_swing_KeyStroke(ks);
});

Clazz_newMeth(C$, 'actionPropertyChanged$javax_swing_Action$S', function (action, propertyName) {
if (propertyName == "AcceleratorKey") {
this.configureAcceleratorFromAction$javax_swing_Action(action);
} else {
C$.superclazz.prototype.actionPropertyChanged$javax_swing_Action$S.apply(this, [action, propertyName]);
}});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (e, path, manager) {
this.processMenuDragMouseEvent$javax_swing_event_MenuDragMouseEvent(Clazz_new_((I$[5]||$incl$(5)).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$javax_swing_MenuElementA$javax_swing_MenuSelectionManager,[e.getComponent(), e.getID(), e.getWhen(), e.getModifiers(), e.getX(), e.getY(), e.getXOnScreen(), e.getYOnScreen(), e.getClickCount(), e.isPopupTrigger(), path, manager]));
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (e, path, manager) {
var mke = Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Component$I$J$I$I$C$javax_swing_MenuElementA$javax_swing_MenuSelectionManager,[e.getComponent(), e.getID(), e.getWhen(), e.getModifiers(), e.getKeyCode(), e.getKeyChar(), path, manager]);
this.processMenuKeyEvent$javax_swing_event_MenuKeyEvent(mke);
if (mke.isConsumed()) {
e.consume();
}});

Clazz_newMeth(C$, 'processMenuDragMouseEvent$javax_swing_event_MenuDragMouseEvent', function (e) {
switch (e.getID()) {
case 504:
this.isMouseDragged = false;
this.fireMenuDragMouseEntered$javax_swing_event_MenuDragMouseEvent(e);
break;
case 505:
this.isMouseDragged = false;
this.fireMenuDragMouseExited$javax_swing_event_MenuDragMouseEvent(e);
break;
case 506:
this.isMouseDragged = true;
this.fireMenuDragMouseDragged$javax_swing_event_MenuDragMouseEvent(e);
break;
case 502:
if (this.isMouseDragged) this.fireMenuDragMouseReleased$javax_swing_event_MenuDragMouseEvent(e);
break;
default:
break;
}
});

Clazz_newMeth(C$, 'processMenuKeyEvent$javax_swing_event_MenuKeyEvent', function (e) {
switch (e.getID()) {
case 401:
this.fireMenuKeyPressed$javax_swing_event_MenuKeyEvent(e);
break;
case 402:
this.fireMenuKeyReleased$javax_swing_event_MenuKeyEvent(e);
break;
case 400:
this.fireMenuKeyTyped$javax_swing_event_MenuKeyEvent(e);
break;
default:
break;
}
});

Clazz_newMeth(C$, 'fireMenuDragMouseEntered$javax_swing_event_MenuDragMouseEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']) ) {
(listeners[i + 1]).menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuDragMouseExited$javax_swing_event_MenuDragMouseEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']) ) {
(listeners[i + 1]).menuDragMouseExited$javax_swing_event_MenuDragMouseEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuDragMouseDragged$javax_swing_event_MenuDragMouseEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']) ) {
(listeners[i + 1]).menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuDragMouseReleased$javax_swing_event_MenuDragMouseEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']) ) {
(listeners[i + 1]).menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuKeyPressed$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyPressed$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuKeyReleased$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyReleased$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuKeyTyped$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyTyped$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'menuSelectionChanged$Z', function (isIncluded) {
this.setArmed$Z(isIncluded);
});

Clazz_newMeth(C$, 'getSubElements', function () {
return Clazz_array((I$[9]||$incl$(9)), [0]);
});

Clazz_newMeth(C$, 'getComponent', function () {
return this;
});

Clazz_newMeth(C$, 'addMenuDragMouseListener$javax_swing_event_MenuDragMouseListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']), l);
});

Clazz_newMeth(C$, 'removeMenuDragMouseListener$javax_swing_event_MenuDragMouseListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']), l);
});

Clazz_newMeth(C$, 'getMenuDragMouseListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[7]||$incl$(7)),['menuDragMouseDragged$javax_swing_event_MenuDragMouseEvent','menuDragMouseEntered$javax_swing_event_MenuDragMouseEvent','menuDragMouseExited$javax_swing_event_MenuDragMouseEvent','menuDragMouseReleased$javax_swing_event_MenuDragMouseEvent']));
});

Clazz_newMeth(C$, 'addMenuKeyListener$javax_swing_event_MenuKeyListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']), l);
});

Clazz_newMeth(C$, 'removeMenuKeyListener$javax_swing_event_MenuKeyListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']), l);
});

Clazz_newMeth(C$, 'getMenuKeyListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[8]||$incl$(8)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']));
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});
;
(function(){var C$=Clazz_newClass(P$.JMenuItem, "MenuItemFocusListener", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.awt.event.FocusListener');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent', function (event) {
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent', function (event) {
var mi = event.getSource();
if (mi.isFocusPainted()) {
mi.repaint();
}});

Clazz_newMeth(C$);
})()
})();
//Created 2018-05-15 01:02:30
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['javax.swing.SwingUtilities','Boolean','java.lang.Boolean','javax.swing.DefaultSingleSelectionModel','javax.swing.MenuSelectionManager','javax.swing.JMenuItem','java.awt.Point','java.awt.GraphicsEnvironment',['javax.swing.JPopupMenu','.Separator'],'java.util.Vector','javax.swing.event.PopupMenuListener','javax.swing.event.MenuKeyListener','javax.swing.event.PopupMenuEvent','javax.swing.PopupFactory','java.awt.Dimension','java.awt.Insets','javax.swing.event.MenuKeyEvent','javax.swing.MenuElement']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JPopupMenu", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent', 'javax.swing.MenuElement');
C$.defaultLWPopupEnabledKey = null;
C$.popupPostionFixDisabled = false;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.defaultLWPopupEnabledKey =  Clazz_new_();
C$.popupPostionFixDisabled = false;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.invoker = null;
this.popup = null;
this.frame = null;
this.desiredLocationX = 0;
this.desiredLocationY = 0;
this.label = null;
this.$paintBorder = false;
this.margin = null;
this.lightWeightPopup = false;
this.selectionModel = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.label = null;
this.$paintBorder = true;
this.margin = null;
this.lightWeightPopup = true;
}, 1);

Clazz_newMeth(C$, 'setDefaultLightWeightPopupEnabled$Z', function (aFlag) {
(I$[1]||$incl$(1)).appContextPut$O$O(C$.defaultLWPopupEnabledKey, (I$[2]||$incl$(2)).$valueOf(aFlag));
}, 1);

Clazz_newMeth(C$, 'getDefaultLightWeightPopupEnabled', function () {
var b = (I$[1]||$incl$(1)).appContextGet$O(C$.defaultLWPopupEnabledKey);
if (b == null ) {
(I$[1]||$incl$(1)).appContextPut$O$O(C$.defaultLWPopupEnabledKey, (I$[3]||$incl$(3)).TRUE);
return true;
}return b.booleanValue();
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S.apply(this, [null]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (label) {
Clazz_super_(C$, this,1);
this.label = label;
this.lightWeightPopup = C$.getDefaultLightWeightPopupEnabled();
this.setSelectionModel$javax_swing_SingleSelectionModel(Clazz_new_((I$[4]||$incl$(4))));
this.enableEvents$J(16);
this.setOpaque$Z(true);
this.uiClassID = "PopupMenuUI";
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'processFocusEvent$java_awt_event_FocusEvent', function (evt) {
C$.superclazz.prototype.processFocusEvent$java_awt_event_FocusEvent.apply(this, [evt]);
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent', function (evt) {
(I$[5]||$incl$(5)).defaultManager().processKeyEvent$java_awt_event_KeyEvent(evt);
if (evt.isConsumed()) {
return;
}C$.superclazz.prototype.processKeyEvent$java_awt_event_KeyEvent.apply(this, [evt]);
});

Clazz_newMeth(C$, 'getSelectionModel', function () {
return this.selectionModel;
});

Clazz_newMeth(C$, 'setSelectionModel$javax_swing_SingleSelectionModel', function (model) {
this.selectionModel = model;
});

Clazz_newMeth(C$, 'add$javax_swing_JMenuItem', function (menuItem) {
C$.superclazz.prototype.add$java_awt_Component.apply(this, [menuItem]);
return menuItem;
});

Clazz_newMeth(C$, 'add$S', function (s) {
return this.add$javax_swing_JMenuItem(Clazz_new_((I$[6]||$incl$(6)).c$$S,[s]));
});

Clazz_newMeth(C$, 'add$javax_swing_Action', function (a) {
var mi = this.createActionComponent$javax_swing_Action(a);
mi.setAction$javax_swing_Action(a);
this.add$javax_swing_JMenuItem(mi);
return mi;
});

Clazz_newMeth(C$, 'adjustPopupLocationToFitScreen$I$I', function (xposition, yposition) {
var p = Clazz_new_((I$[7]||$incl$(7)).c$$I$I,[xposition, yposition]);
if (C$.popupPostionFixDisabled == true  || (I$[8]||$incl$(8)).isHeadless() ) return p;
return p;
});

Clazz_newMeth(C$, 'createActionComponent$javax_swing_Action', function (a) {
var mi = ((
(function(){var C$=Clazz_newClass(P$, "JPopupMenu$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.JMenuItem'), null, 1);

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'createActionPropertyChangeListener$javax_swing_Action', function (a) {
var pcl = this.b$['javax.swing.JPopupMenu'].createActionChangeListener$javax_swing_JMenuItem(this);
if (pcl == null ) {
pcl = C$.superclazz.prototype.createActionPropertyChangeListener$javax_swing_Action.apply(this, [a]);
}return pcl;
});
})()
), Clazz_new_((I$[6]||$incl$(6)), [this, null],P$.JPopupMenu$1));
mi.setHorizontalTextPosition$I(11);
mi.setVerticalTextPosition$I(0);
return mi;
});

Clazz_newMeth(C$, 'createActionChangeListener$javax_swing_JMenuItem', function (b) {
return b.createActionPropertyChangeListener0$javax_swing_Action(b.getAction());
});

Clazz_newMeth(C$, 'remove$I', function (pos) {
if (pos < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}if (pos > this.getComponentCount() - 1) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index greater than the number of items."]);
}C$.superclazz.prototype.remove$I.apply(this, [pos]);
});

Clazz_newMeth(C$, 'setLightWeightPopupEnabled$Z', function (aFlag) {
this.lightWeightPopup = aFlag;
});

Clazz_newMeth(C$, 'isLightWeightPopupEnabled', function () {
return this.lightWeightPopup;
});

Clazz_newMeth(C$, 'getLabel', function () {
return this.label;
});

Clazz_newMeth(C$, 'setLabel$S', function (label) {
var oldValue = this.label;
this.label = label;
this.firePropertyChange$S$O$O("label", oldValue, label);
this.invalidate();
this.repaint();
});

Clazz_newMeth(C$, 'addSeparator', function () {
this.add$java_awt_Component(Clazz_new_((I$[9]||$incl$(9))));
});

Clazz_newMeth(C$, 'insert$javax_swing_Action$I', function (a, index) {
var mi = this.createActionComponent$javax_swing_Action(a);
mi.setAction$javax_swing_Action(a);
this.insert$java_awt_Component$I(mi, index);
});

Clazz_newMeth(C$, 'insert$java_awt_Component$I', function (component, index) {
if (index < 0) {
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["index less than zero."]);
}var nitems = this.getComponentCount();
var tempItems = Clazz_new_((I$[10]||$incl$(10)));
for (var i = index; i < nitems; i++) {
tempItems.addElement$TE(this.getComponent$I(index));
this.remove$I(index);
}
this.add$java_awt_Component(component);
for (var i = 0; i < tempItems.size(); i++) {
this.add$java_awt_Component(tempItems.elementAt$I(i));
}
});

Clazz_newMeth(C$, 'addPopupMenuListener$javax_swing_event_PopupMenuListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']), l);
});

Clazz_newMeth(C$, 'removePopupMenuListener$javax_swing_event_PopupMenuListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']), l);
});

Clazz_newMeth(C$, 'getPopupMenuListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']));
});

Clazz_newMeth(C$, 'addMenuKeyListener$javax_swing_event_MenuKeyListener', function (l) {
this.listenerList.add$Class$TT(Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']), l);
});

Clazz_newMeth(C$, 'removeMenuKeyListener$javax_swing_event_MenuKeyListener', function (l) {
this.listenerList.remove$Class$TT(Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']), l);
});

Clazz_newMeth(C$, 'getMenuKeyListeners', function () {
return this.listenerList.getListeners$Class(Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']));
});

Clazz_newMeth(C$, 'firePopupMenuWillBecomeVisible', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[13]||$incl$(13)).c$$O,[this]);
(listeners[i + 1]).popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'firePopupMenuWillBecomeInvisible', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[13]||$incl$(13)).c$$O,[this]);
(listeners[i + 1]).popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'firePopupMenuCanceled', function () {
var listeners = this.listenerList.getListenerList();
var e = null;
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[11]||$incl$(11)),['popupMenuCanceled$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeInvisible$javax_swing_event_PopupMenuEvent','popupMenuWillBecomeVisible$javax_swing_event_PopupMenuEvent']) ) {
if (e == null ) e = Clazz_new_((I$[13]||$incl$(13)).c$$O,[this]);
(listeners[i + 1]).popupMenuCanceled$javax_swing_event_PopupMenuEvent(e);
}}
});

Clazz_newMeth(C$, 'alwaysOnTop', function () {
return true;
});

Clazz_newMeth(C$, 'pack', function () {
if (this.popup != null ) {
var pref = this.getPreferredSize();
if (pref == null  || pref.width != this.getWidth()  || pref.height != this.getHeight() ) {
this.popup = p$.getPopup.apply(this, []);
} else {
this.validate();
}}});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
if (b == this.isVisible() ) return;
this.getUI().setVisible$Z(true);
{

}
});

Clazz_newMeth(C$, 'getPopup', function () {
var oldPopup = this.popup;
if (oldPopup != null ) {
oldPopup.hide();
}var popupFactory = (I$[14]||$incl$(14)).getSharedInstance();
if (this.isLightWeightPopupEnabled()) {
popupFactory.setPopupType$I(0);
} else {
popupFactory.setPopupType$I(1);
}var p = this.adjustPopupLocationToFitScreen$I$I(this.desiredLocationX, this.desiredLocationY);
this.desiredLocationX = p.x;
this.desiredLocationY = p.y;
var newPopup = (this.getUI()).getPopup$javax_swing_JPopupMenu$I$I(this, this.desiredLocationX, this.desiredLocationY);
popupFactory.setPopupType$I(0);
newPopup.show();
return newPopup;
});

Clazz_newMeth(C$, 'isVisible', function () {
if (this.popup != null ) return true;
 else return false;
});

Clazz_newMeth(C$, 'setLocation$I$I', function (x, y) {
var oldX = this.desiredLocationX;
var oldY = this.desiredLocationY;
this.desiredLocationX = x;
this.desiredLocationY = y;
if (this.popup != null  && (x != oldX || y != oldY ) ) {
this.popup = p$.getPopup.apply(this, []);
}});

Clazz_newMeth(C$, 'isPopupMenu', function () {
return ((this.invoker != null ) && !(Clazz_instanceOf(this.invoker, "javax.swing.JMenu")) );
});

Clazz_newMeth(C$, 'getInvoker', function () {
return this.invoker;
});

Clazz_newMeth(C$, 'setInvoker$java_awt_Component', function (invoker) {
var oldInvoker = this.invoker;
this.invoker = invoker;
if ((oldInvoker !== this.invoker ) && (this.ui != null ) ) {
this.ui.uninstallUI$javax_swing_JComponent(this);
this.ui.uninstallJS();
this.ui.installJS();
this.ui.installUI$javax_swing_JComponent(this);
}this.invalidate();
});

Clazz_newMeth(C$, 'show$java_awt_Component$I$I', function (invoker, x, y) {
this.setInvoker$java_awt_Component(invoker);
var invokerOrigin;
if (invoker != null ) {
invokerOrigin = invoker.getLocationOnScreen();
var lx;
var ly;
lx = (invokerOrigin.x) + (x);
ly = (invokerOrigin.y) + (y);
if (lx > 2147483647) lx = 2147483647;
if (lx < -2147483648) lx = -2147483648;
if (ly > 2147483647) ly = 2147483647;
if (ly < -2147483648) ly = -2147483648;
this.setLocation$I$I((lx|0), (ly|0));
} else {
this.setLocation$I$I(x, y);
}this.setVisible$Z(true);
});

Clazz_newMeth(C$, 'getRootPopupMenu', function () {
var mp = this;
while ((mp != null ) && (mp.isPopupMenu() != true ) && (mp.getInvoker() != null ) && (mp.getInvoker().getParent() != null ) && (Clazz_instanceOf(mp.getInvoker().getParent(), "javax.swing.JPopupMenu"))  ){
mp = mp.getInvoker().getParent();
}
return mp;
});

Clazz_newMeth(C$, 'getComponentAtIndex$I', function (i) {
return this.getComponent$I(i);
});

Clazz_newMeth(C$, 'getComponentIndex$java_awt_Component', function (c) {
var ncomponents = this.getComponentCount();
var component = this.getComponents();
for (var i = 0; i < ncomponents; i++) {
var comp = component[i];
if (comp === c ) return i;
}
return -1;
});

Clazz_newMeth(C$, 'setPopupSize$java_awt_Dimension', function (d) {
var oldSize = this.getPreferredSize();
this.setPreferredSize$java_awt_Dimension(d);
if (this.popup != null ) {
var newSize = this.getPreferredSize();
if (!oldSize.equals$O(newSize)) {
this.popup = p$.getPopup.apply(this, []);
}}});

Clazz_newMeth(C$, 'setPopupSize$I$I', function (width, height) {
this.setPopupSize$java_awt_Dimension(Clazz_new_((I$[15]||$incl$(15)).c$$I$I,[width, height]));
});

Clazz_newMeth(C$, 'setSelected$java_awt_Component', function (sel) {
var model = this.getSelectionModel();
var index = this.getComponentIndex$java_awt_Component(sel);
model.setSelectedIndex$I(index);
});

Clazz_newMeth(C$, 'isBorderPainted', function () {
return this.$paintBorder;
});

Clazz_newMeth(C$, 'setBorderPainted$Z', function (b) {
this.$paintBorder = b;
this.repaint();
});

Clazz_newMeth(C$, 'paintBorder$java_awt_Graphics', function (g) {
if (this.isBorderPainted()) {
C$.superclazz.prototype.paintBorder$java_awt_Graphics.apply(this, [g]);
}});

Clazz_newMeth(C$, 'getMargin', function () {
if (this.margin == null ) {
return Clazz_new_((I$[16]||$incl$(16)).c$$I$I$I$I,[0, 0, 0, 0]);
} else {
return this.margin;
}});

Clazz_newMeth(C$, 'isSubPopupMenu$javax_swing_JPopupMenu', function (popup) {
var ncomponents = this.getComponentCount();
var component = this.getComponents();
for (var i = 0; i < ncomponents; i++) {
var comp = component[i];
if (Clazz_instanceOf(comp, "javax.swing.JMenu")) {
var menu = comp;
var subPopup = menu.getPopupMenu();
if (subPopup === popup ) return true;
if (subPopup.isSubPopupMenu$javax_swing_JPopupMenu(popup)) return true;
}}
return false;
});

Clazz_newMeth(C$, 'paramString', function () {
var labelString = (this.label != null  ? this.label : "");
var paintBorderString = (this.$paintBorder ? "true" : "false");
var marginString = (this.margin != null  ? this.margin.toString() : "");
var lightWeightPopupEnabledString = (this.isLightWeightPopupEnabled() ? "true" : "false");
return C$.superclazz.prototype.paramString.apply(this, []) + ",desiredLocationX=" + this.desiredLocationX + ",desiredLocationY=" + this.desiredLocationY + ",label=" + labelString + ",lightWeightPopupEnabled=" + lightWeightPopupEnabledString + ",margin=" + marginString + ",paintBorder=" + paintBorderString ;
});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (event, path, manager) {
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent$javax_swing_MenuElementA$javax_swing_MenuSelectionManager', function (e, path, manager) {
var mke = Clazz_new_((I$[17]||$incl$(17)).c$$java_awt_Component$I$J$I$I$C$javax_swing_MenuElementA$javax_swing_MenuSelectionManager,[e.getComponent(), e.getID(), e.getWhen(), e.getModifiers(), e.getKeyCode(), e.getKeyChar(), path, manager]);
p$.processMenuKeyEvent$javax_swing_event_MenuKeyEvent.apply(this, [mke]);
if (mke.isConsumed()) {
e.consume();
}});

Clazz_newMeth(C$, 'processMenuKeyEvent$javax_swing_event_MenuKeyEvent', function (e) {
switch (e.getID()) {
case 401:
p$.fireMenuKeyPressed$javax_swing_event_MenuKeyEvent.apply(this, [e]);
break;
case 402:
p$.fireMenuKeyReleased$javax_swing_event_MenuKeyEvent.apply(this, [e]);
break;
case 400:
p$.fireMenuKeyTyped$javax_swing_event_MenuKeyEvent.apply(this, [e]);
break;
default:
break;
}
});

Clazz_newMeth(C$, 'fireMenuKeyPressed$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyPressed$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuKeyReleased$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyReleased$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'fireMenuKeyTyped$javax_swing_event_MenuKeyEvent', function (event) {
var listeners = this.listenerList.getListenerList();
for (var i = listeners.length - 2; i >= 0; i = i-(2)) {
if (listeners[i] === Clazz_getClass((I$[12]||$incl$(12)),['menuKeyPressed$javax_swing_event_MenuKeyEvent','menuKeyReleased$javax_swing_event_MenuKeyEvent','menuKeyTyped$javax_swing_event_MenuKeyEvent']) ) {
(listeners[i + 1]).menuKeyTyped$javax_swing_event_MenuKeyEvent(event);
}}
});

Clazz_newMeth(C$, 'menuSelectionChanged$Z', function (isIncluded) {
});

Clazz_newMeth(C$, 'getSubElements', function () {
var result;
var tmp = Clazz_new_((I$[10]||$incl$(10)));
var c = this.getComponentCount();
var i;
var m;
for (i = 0; i < c; i++) {
m = this.getComponent$I(i);
if (Clazz_instanceOf(m, "javax.swing.MenuElement")) tmp.addElement$TE(m);
}
result = Clazz_array((I$[18]||$incl$(18)), [tmp.size()]);
for (i = 0, c = tmp.size(); i < c; i++) result[i] = tmp.elementAt$I(i);

return result;
});

Clazz_newMeth(C$, 'getComponent', function () {
return this;
});

Clazz_newMeth(C$, 'isPopupTrigger$java_awt_event_MouseEvent', function (e) {
return (this.getUI()).isPopupTrigger$java_awt_event_MouseEvent(e);
});
;
(function(){var C$=Clazz_newClass(P$.JPopupMenu, "Separator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.JSeparator');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$$I$S.apply(this, [0, "PopupMenuSeparatorUI"]);
C$.$init$.apply(this);
}, 1);
})()
})();
//Created 2018-05-15 01:02:31
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[['javax.swing.JToggleButton','.ToggleButtonModel']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JRadioButtonMenuItem", null, 'javax.swing.JMenuItem');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.c$.apply(this, []);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (text, selected) {
C$.c$$S.apply(this, [text]);
this.setSelected$Z(selected);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon$Z', function (icon, selected) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, selected]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$Z', function (text, icon, selected) {
C$.superclazz.c$$S$javax_swing_Icon$S.apply(this, [text, icon, "RadioButtonMenuItemUI"]);
C$.$init$.apply(this);
this.setModel$javax_swing_ButtonModel(Clazz_new_((I$[1]||$incl$(1))));
this.setSelected$Z(selected);
this.setFocusable$Z(false);
}, 1);

Clazz_newMeth(C$, 'shouldUpdateSelectedStateFromAction', function () {
return true;
});
})();
//Created 2018-05-15 01:02:32
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newClass(P$, "JSeparator", null, 'javax.swing.JComponent', 'javax.swing.SwingConstants');
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.orientation = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.orientation = 0;
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$I.apply(this, [0]);
}, 1);

Clazz_newMeth(C$, 'c$$I', function (orientation) {
C$.c$$I$S.apply(this, [orientation, "SeparatorUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$I$S', function (orientation, sid) {
Clazz_super_(C$, this,1);
p$.checkOrientation$I.apply(this, [orientation]);
this.orientation = orientation;
this.setFocusable$Z(false);
this.uiClassID = sid;
this.updateUI();
}, 1);

Clazz_newMeth(C$, 'getOrientation', function () {
return this.orientation;
});

Clazz_newMeth(C$, 'setOrientation$I', function (orientation) {
if (this.orientation == orientation) {
return;
}var oldValue = this.orientation;
p$.checkOrientation$I.apply(this, [orientation]);
this.orientation = orientation;
this.firePropertyChange$S$I$I("orientation", oldValue, orientation);
this.revalidate();
this.repaint();
});

Clazz_newMeth(C$, 'checkOrientation$I', function (orientation) {
switch (orientation) {
case 1:
case 0:
break;
default:
throw Clazz_new_(Clazz_load('java.lang.IllegalArgumentException').c$$S,["orientation must be one of: VERTICAL, HORIZONTAL"]);
}
});

Clazz_newMeth(C$, 'paramString', function () {
var orientationString = (this.orientation == 0 ? "HORIZONTAL" : "VERTICAL");
return C$.superclazz.prototype.paramString.apply(this, []) + ",orientation=" + orientationString ;
});
})();
//Created 2018-05-15 01:02:33
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.awt.event.ItemEvent','java.awt.EventQueue','java.awt.event.ActionEvent',['javax.swing.JToggleButton','.ToggleButtonModel']]],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JToggleButton", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.AbstractButton');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon', function (icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon$Z', function (icon, selected) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [null, icon, selected]);
}, 1);

Clazz_newMeth(C$, 'c$$S', function (text) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$Z', function (text, selected) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, null, selected]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Action', function (a) {
C$.c$.apply(this, []);
this.setAction$javax_swing_Action(a);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon', function (text, icon) {
C$.c$$S$javax_swing_Icon$Z.apply(this, [text, icon, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$Z', function (text, icon, selected) {
C$.c$$S$javax_swing_Icon$Z$S.apply(this, [text, icon, selected, "ToggleButtonUI"]);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon$Z$S', function (text, icon, selected, uid) {
Clazz_super_(C$, this,1);
this.setModel$javax_swing_ButtonModel(Clazz_new_((I$[4]||$incl$(4))));
this.model.setSelected$Z(selected);
this.init$S$javax_swing_Icon$S(text, icon, uid);
this.setOpaque$Z(true);
}, 1);

Clazz_newMeth(C$, 'shouldUpdateSelectedStateFromAction', function () {
return true;
});

Clazz_newMeth(C$, 'paramString', function () {
return C$.superclazz.prototype.paramString.apply(this, []);
});
;
(function(){var C$=Clazz_newClass(P$.JToggleButton, "ToggleButtonModel", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.DefaultButtonModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
}, 1);

Clazz_newMeth(C$, 'isSelected', function () {
return (this.stateMask & 2) != 0;
});

Clazz_newMeth(C$, 'setSelected$Z', function (b) {
var group = this.getGroup();
if (group != null ) {
group.setSelected$javax_swing_ButtonModel$Z(this, b);
b = group.isSelected$javax_swing_ButtonModel(this);
}if (this.isSelected() == b ) {
return;
}if (b) {
this.stateMask = this.stateMask|(2);
} else {
this.stateMask = this.stateMask&(-3);
}this.fireStateChanged();
this.fireItemStateChanged$java_awt_event_ItemEvent(Clazz_new_((I$[1]||$incl$(1)).c$$java_awt_ItemSelectable$I$O$I,[this, 701, this, this.isSelected() ? 1 : 2]));
});

Clazz_newMeth(C$, 'setPressed$Z', function (b) {
if ((this.isPressed() == b ) || !this.isEnabled() ) {
return;
}if (b == false  && this.isArmed() ) {
this.setSelected$Z(!this.isSelected());
}if (b) {
this.stateMask = this.stateMask|(4);
} else {
this.stateMask = this.stateMask&(-5);
}this.fireStateChanged();
if (!this.isPressed() && this.isArmed() ) {
var modifiers = 0;
var currentEvent = (I$[2]||$incl$(2)).getCurrentEvent();
if (Clazz_instanceOf(currentEvent, "java.awt.event.InputEvent")) {
modifiers = (currentEvent).getModifiers();
} else if (Clazz_instanceOf(currentEvent, "java.awt.event.ActionEvent")) {
modifiers = (currentEvent).getModifiers();
}this.fireActionPerformed$java_awt_event_ActionEvent(Clazz_new_((I$[3]||$incl$(3)).c$$O$I$S$J$I,[this, 1001, this.getActionCommand(), (I$[2]||$incl$(2)).getMostRecentEventTime(), modifiers]));
}});
})()
})();
//Created 2018-05-15 01:02:35
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[['java.util.Hashtable','java.util.Vector','Thread',['javax.swing.KeyboardManager','.ComponentKeyStrokePair'],'javax.swing.KeyStroke','javax.swing.JMenuBar']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "KeyboardManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.currentManager = null;
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
C$.currentManager = Clazz_new_(C$);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.containerMap = null;
this.componentKeyStrokeMap = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.containerMap = Clazz_new_((I$[1]||$incl$(1)));
this.componentKeyStrokeMap = Clazz_new_((I$[1]||$incl$(1)));
}, 1);

Clazz_newMeth(C$, 'getCurrentManager', function () {
return C$.currentManager;
}, 1);

Clazz_newMeth(C$, 'setCurrentManager$javax_swing_KeyboardManager', function (km) {
C$.currentManager = km;
}, 1);

Clazz_newMeth(C$, 'registerKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent', function (k, c) {
var topContainer = C$.getTopAncestor$javax_swing_JComponent(c);
if (topContainer == null ) {
return;
}var keyMap = this.containerMap.get$O(topContainer);
if (keyMap == null ) {
keyMap = this.registerNewTopContainer$java_awt_Container(topContainer);
}var tmp = keyMap.get$O(k);
if (tmp == null ) {
keyMap.put$TK$TV(k, c);
} else if (Clazz_instanceOf(tmp, "java.util.Vector")) {
var v = tmp;
if (!v.contains$O(c)) {
v.addElement$TE(c);
}} else if (Clazz_instanceOf(tmp, "javax.swing.JComponent")) {
if (tmp !== c ) {
var v = Clazz_new_((I$[2]||$incl$(2)));
v.addElement$TE(tmp);
v.addElement$TE(c);
keyMap.put$TK$TV(k, v);
}} else {
System.out.println$S("Unexpected condition in registerKeyStroke");
(I$[3]||$incl$(3)).dumpStack();
}this.componentKeyStrokeMap.put$TK$TV(Clazz_new_((I$[4]||$incl$(4)).c$$O$O, [this, null, c, k]), topContainer);
});

Clazz_newMeth(C$, 'getTopAncestor$javax_swing_JComponent', function (c) {
for (var p = c.getParent(); p != null ; p = p.getParent()) {
if (Clazz_instanceOf(p, "java.awt.Window") && (p).isFocusableWindow()  || Clazz_instanceOf(p, "java.applet.Applet") ) {
return p;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'unregisterKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent', function (ks, c) {
var ckp = Clazz_new_((I$[4]||$incl$(4)).c$$O$O, [this, null, c, ks]);
var topContainer = this.componentKeyStrokeMap.get$O(ckp);
if (topContainer == null ) {
return;
}var keyMap = this.containerMap.get$O(topContainer);
if (keyMap == null ) {
(I$[3]||$incl$(3)).dumpStack();
return;
}var tmp = keyMap.get$O(ks);
if (tmp == null ) {
(I$[3]||$incl$(3)).dumpStack();
return;
}if (Clazz_instanceOf(tmp, "javax.swing.JComponent") && tmp === c  ) {
keyMap.remove$O(ks);
} else if (Clazz_instanceOf(tmp, "java.util.Vector")) {
var v = tmp;
v.removeElement$O(c);
if (v.isEmpty()) {
keyMap.remove$O(ks);
}}if (keyMap.isEmpty()) {
this.containerMap.remove$O(topContainer);
}this.componentKeyStrokeMap.remove$O(ckp);
});

Clazz_newMeth(C$, 'fireKeyboardAction$java_awt_event_KeyEvent$Z$java_awt_Container', function (e, pressed, topAncestor) {
if (e.isConsumed()) {
System.out.println$S("Aquired pre-used event!");
(I$[3]||$incl$(3)).dumpStack();
}var ks;
if (e.getID() == 400) {
ks = (I$[5]||$incl$(5)).getKeyStroke$C(e.getKeyChar());
} else {
ks = (I$[5]||$incl$(5)).getKeyStroke$I$I$Z(e.getKeyCode(), e.getModifiers(), !pressed);
}var keyMap = this.containerMap.get$O(topAncestor);
if (keyMap != null ) {
var tmp = keyMap.get$O(ks);
if (tmp == null ) {
} else if (Clazz_instanceOf(tmp, "javax.swing.JComponent")) {
var c = tmp;
if (c.isShowing() && c.isEnabled() ) {
this.fireBinding$javax_swing_JComponent$javax_swing_KeyStroke$java_awt_event_KeyEvent$Z(c, ks, e, pressed);
}} else if (Clazz_instanceOf(tmp, "java.util.Vector")) {
var v = tmp;
for (var counter = v.size() - 1; counter >= 0; counter--) {
var c = v.elementAt$I(counter);
if (c.isShowing() && c.isEnabled() ) {
this.fireBinding$javax_swing_JComponent$javax_swing_KeyStroke$java_awt_event_KeyEvent$Z(c, ks, e, pressed);
if (e.isConsumed()) return true;
}}
} else {
System.out.println$S("Unexpected condition in fireKeyboardAction " + tmp);
(I$[3]||$incl$(3)).dumpStack();
}}if (e.isConsumed()) {
return true;
}if (keyMap != null ) {
var v = keyMap.get$O(Clazz_getClass((I$[6]||$incl$(6))));
if (v != null ) {
var iter = v.elements();
while (iter.hasMoreElements()){
var mb = iter.nextElement();
if (mb.isShowing() && mb.isEnabled() ) {
this.fireBinding$javax_swing_JComponent$javax_swing_KeyStroke$java_awt_event_KeyEvent$Z(mb, ks, e, pressed);
if (e.isConsumed()) {
return true;
}}}
}}return e.isConsumed();
});

Clazz_newMeth(C$, 'fireBinding$javax_swing_JComponent$javax_swing_KeyStroke$java_awt_event_KeyEvent$Z', function (c, ks, e, pressed) {
if (c.processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, 2, pressed)) {
e.consume();
}});

Clazz_newMeth(C$, 'registerMenuBar$javax_swing_JMenuBar', function (mb) {
var top = C$.getTopAncestor$javax_swing_JComponent(mb);
if (top == null ) {
return;
}var keyMap = this.containerMap.get$O(top);
if (keyMap == null ) {
keyMap = this.registerNewTopContainer$java_awt_Container(top);
}var menuBars = keyMap.get$O(Clazz_getClass((I$[6]||$incl$(6))));
if (menuBars == null ) {
menuBars = Clazz_new_((I$[2]||$incl$(2)));
keyMap.put$TK$TV(Clazz_getClass((I$[6]||$incl$(6))), menuBars);
}if (!menuBars.contains$O(mb)) {
menuBars.addElement$TE(mb);
}});

Clazz_newMeth(C$, 'unregisterMenuBar$javax_swing_JMenuBar', function (mb) {
var topContainer = C$.getTopAncestor$javax_swing_JComponent(mb);
if (topContainer == null ) {
return;
}var keyMap = this.containerMap.get$O(topContainer);
if (keyMap != null ) {
var v = keyMap.get$O(Clazz_getClass((I$[6]||$incl$(6))));
if (v != null ) {
v.removeElement$O(mb);
if (v.isEmpty()) {
keyMap.remove$O(Clazz_getClass((I$[6]||$incl$(6))));
if (keyMap.isEmpty()) {
this.containerMap.remove$O(topContainer);
}}}}});

Clazz_newMeth(C$, 'registerNewTopContainer$java_awt_Container', function (topContainer) {
var keyMap = Clazz_new_((I$[1]||$incl$(1)));
this.containerMap.put$TK$TV(topContainer, keyMap);
return keyMap;
});
;
(function(){var C$=Clazz_newClass(P$.KeyboardManager, "ComponentKeyStrokePair", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.component = null;
this.keyStroke = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$O$O', function (comp, key) {
C$.$init$.apply(this);
this.component = comp;
this.keyStroke = key;
}, 1);

Clazz_newMeth(C$, 'equals$O', function (o) {
if (!(Clazz_instanceOf(o, "javax.swing.KeyboardManager.ComponentKeyStrokePair"))) {
return false;
}var ckp = o;
return ((this.component.equals$O(ckp.component)) && (this.keyStroke.equals$O(ckp.keyStroke)) );
});

Clazz_newMeth(C$, 'hashCode', function () {
return this.component.hashCode() * this.keyStroke.hashCode();
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:02:37
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "ListModel");
})();
//Created 2018-05-15 01:02:37
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "MenuElement");
})();
//Created 2018-05-15 01:02:38
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "MutableComboBoxModel", null, null, 'javax.swing.ComboBoxModel');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}
})();
//Created 2018-05-15 01:02:38
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "SingleSelectionModel");
})();
//Created 2018-05-15 01:02:40
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newClass(P$, "SizeRequirements");
var p$=C$.prototype;

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.minimum = 0;
this.preferred = 0;
this.maximum = 0;
this.alignment = 0;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.$init$.apply(this);
this.minimum = 0;
this.preferred = 0;
this.maximum = 0;
this.alignment = 0.5;
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$F', function (min, pref, max, a) {
C$.$init$.apply(this);
this.minimum = min;
this.preferred = pref;
this.maximum = max;
this.alignment = a > 1.0  ? 1.0 : a < 0.0  ? 0.0 : a;
}, 1);

Clazz_newMeth(C$, 'toString', function () {
return "[" + this.minimum + "," + this.preferred + "," + this.maximum + "]@" + new Float(this.alignment).toString() ;
});

Clazz_newMeth(C$, 'getTiledSizeRequirements$javax_swing_SizeRequirementsA', function (children) {
var total = Clazz_new_(C$);
for (var i = 0; i < children.length; i++) {
var req = children[i];
total.minimum = (Math.min(total.minimum + req.minimum, 2147483647)|0);
total.preferred = (Math.min(total.preferred + req.preferred, 2147483647)|0);
total.maximum = (Math.min(total.maximum + req.maximum, 2147483647)|0);
}
return total;
}, 1);

Clazz_newMeth(C$, 'getAlignedSizeRequirements$javax_swing_SizeRequirementsA', function (children) {
var totalAscent = Clazz_new_(C$);
var totalDescent = Clazz_new_(C$);
for (var i = 0; i < children.length; i++) {
var req = children[i];
var ascent = ((req.alignment * req.minimum)|0);
var descent = req.minimum - ascent;
totalAscent.minimum = Math.max(ascent, totalAscent.minimum);
totalDescent.minimum = Math.max(descent, totalDescent.minimum);
ascent = ((req.alignment * req.preferred)|0);
descent = req.preferred - ascent;
totalAscent.preferred = Math.max(ascent, totalAscent.preferred);
totalDescent.preferred = Math.max(descent, totalDescent.preferred);
ascent = ((req.alignment * req.maximum)|0);
descent = req.maximum - ascent;
totalAscent.maximum = Math.max(ascent, totalAscent.maximum);
totalDescent.maximum = Math.max(descent, totalDescent.maximum);
}
var min = (Math.min(totalAscent.minimum + totalDescent.minimum, 2147483647)|0);
var pref = (Math.min(totalAscent.preferred + totalDescent.preferred, 2147483647)|0);
var max = (Math.min(totalAscent.maximum + totalDescent.maximum, 2147483647)|0);
var alignment = 0.0;
if (min > 0) {
alignment = totalAscent.minimum / min;
alignment = alignment > 1.0  ? 1.0 : alignment < 0.0  ? 0.0 : alignment;
}return Clazz_new_(C$.c$$I$I$I$F,[min, pref, max, alignment]);
}, 1);

Clazz_newMeth(C$, 'calculateTiledPositions$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA', function (allocated, total, children, offsets, spans) {
C$.calcTiled$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, total, children, offsets, spans, true);
}, 1);

Clazz_newMeth(C$, 'calculateTiledPositions$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, total, children, offsets, spans, forward) {
C$.calcTiled$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, total, children, offsets, spans, forward);
}, 1);

Clazz_newMeth(C$, 'calcTiled$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, total, children, offsets, spans, forward) {
var min = 0;
var pref = 0;
var max = 0;
for (var i = 0; i < children.length; i++) {
min = min+(children[i].minimum);
pref = pref+(children[i].preferred);
max = max+(children[i].maximum);
}
if (allocated >= pref) {
C$.expandedTile$I$J$J$J$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, min, pref, max, children, offsets, spans, forward);
} else {
C$.compressedTile$I$J$J$J$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, min, pref, max, children, offsets, spans, forward);
}}, 1);

Clazz_newMeth(C$, 'compressedTile$I$J$J$J$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, min, pref, max, request, offsets, spans, forward) {
var totalPlay = Math.min(pref - allocated, pref - min);
var factor = (pref - min == 0) ? 0.0 : totalPlay / (pref - min);
var totalOffset;
if (forward) {
totalOffset = 0;
for (var i = 0; i < spans.length; i++) {
offsets[i] = totalOffset;
var req = request[i];
var play = factor * (req.preferred - req.minimum);
spans[i] = ((req.preferred - play)|0);
totalOffset = (Math.min(totalOffset + spans[i], 2147483647)|0);
}
} else {
totalOffset = allocated;
for (var i = 0; i < spans.length; i++) {
var req = request[i];
var play = factor * (req.preferred - req.minimum);
spans[i] = ((req.preferred - play)|0);
offsets[i] = totalOffset - spans[i];
totalOffset = (Math.max(totalOffset - spans[i], 0)|0);
}
}}, 1);

Clazz_newMeth(C$, 'expandedTile$I$J$J$J$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, min, pref, max, request, offsets, spans, forward) {
var totalPlay = Math.min(allocated - pref, max - pref);
var factor = (max - pref == 0) ? 0.0 : totalPlay / (max - pref);
var totalOffset;
if (forward) {
totalOffset = 0;
for (var i = 0; i < spans.length; i++) {
offsets[i] = totalOffset;
var req = request[i];
var play = ((factor * (req.maximum - req.preferred))|0);
spans[i] = (Math.min(req.preferred + play, 2147483647)|0);
totalOffset = (Math.min(totalOffset + spans[i], 2147483647)|0);
}
} else {
totalOffset = allocated;
for (var i = 0; i < spans.length; i++) {
var req = request[i];
var play = ((factor * (req.maximum - req.preferred))|0);
spans[i] = (Math.min(req.preferred + play, 2147483647)|0);
offsets[i] = totalOffset - spans[i];
totalOffset = (Math.max(totalOffset - spans[i], 0)|0);
}
}}, 1);

Clazz_newMeth(C$, 'calculateAlignedPositions$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA', function (allocated, total, children, offsets, spans) {
C$.calcAligned$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, total, children, offsets, spans, true);
}, 1);

Clazz_newMeth(C$, 'calcAligned$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, total, children, offsets, spans, normal) {
var totalAlignment = normal ? total.alignment : 1.0 - total.alignment;
var totalAscent = ((allocated * totalAlignment)|0);
var totalDescent = allocated - totalAscent;
for (var i = 0; i < children.length; i++) {
var req = children[i];
var alignment = normal ? req.alignment : 1.0 - req.alignment;
var maxAscent = ((req.maximum * alignment)|0);
var maxDescent = req.maximum - maxAscent;
var ascent = Math.min(totalAscent, maxAscent);
var descent = Math.min(totalDescent, maxDescent);
offsets[i] = totalAscent - ascent;
spans[i] = (Math.min(ascent + descent, 2147483647)|0);
}
}, 1);

Clazz_newMeth(C$, 'calculateAlignedPositions$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z', function (allocated, total, children, offsets, spans, normal) {
C$.calcAligned$I$javax_swing_SizeRequirements$javax_swing_SizeRequirementsA$IA$IA$Z(allocated, total, children, offsets, spans, normal);
}, 1);

Clazz_newMeth(C$, 'adjustSizes$I$javax_swing_SizeRequirementsA', function (delta, children) {
return Clazz_array(Integer.TYPE, [0]);
}, 1);
})();
//Created 2018-05-15 01:02:40
(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
var C$=Clazz_newInterface(P$, "WindowConstants");
})();
//Created 2018-05-15 01:02:42
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "DefaultMenuLayout", null, 'javax.swing.BoxLayout', 'javax.swing.plaf.UIResource');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Container$I', function (target, axis) {
C$.superclazz.c$$java_awt_Container$I.apply(this, [target, axis]);
C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container', function (target) {
if (Clazz_instanceOf(target, "javax.swing.JPopupMenu")) {
var popupMenu = target;
if (popupMenu.getComponentCount() == 0) {
return Clazz_new_((I$[1]||$incl$(1)).c$$I$I,[0, 0]);
}}C$.superclazz.prototype.invalidateLayout$java_awt_Container.apply(this, [target]);
return C$.superclazz.prototype.preferredLayoutSize$java_awt_Container.apply(this, [target]);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:19
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSCheckBoxMenuItemUI", null, 'swingjs.plaf.JSCheckBoxUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.isMenuItem = true;
}, 1);

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "CheckBoxMenuItem.";
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.menuItem = jc;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
});
})();
//Created 2018-05-15 01:03:20
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSCheckBoxUI", null, 'swingjs.plaf.JSRadioButtonUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
return this.updateButton$S("checkBox");
});

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "CheckBox.";
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:20
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','javajs.util.PT','swingjs.plaf.JSComponentUI','javax.swing.LookAndFeel','javax.swing.UIManager']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSComboBoxUI", null, 'swingjs.plaf.JSLightweightUI', ['java.beans.PropertyChangeListener', 'java.awt.event.ItemListener', 'javax.swing.event.ListDataListener']);
var p$=C$.prototype;

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.comboBox = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isContainer = true;
this.allowPaintedBackground = false;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.focusNode = (I$[1]||$incl$(1)).setStyles(this.newDOMObject$S$S$SA("select", this.id, []), ["padding", "0px 0px", "lineHeight", "0.8", "box-sizing", "border-box"]);
this.ignoreAllMouseEvents$swingjs_api_js_DOMNode(this.domNode);
(I$[1]||$incl$(1)).addJqueryHandledEvent(this, this.domNode, "change");
this.addJQueryFocusCallbacks();
}p$.populateList.apply(this, []);
return this.domNode;
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O', function (target, eventType, jQueryEvent) {
switch (eventType) {
case -1:
var index = (I$[2]||$incl$(2)).parseInt$S("" + (I$[1]||$incl$(1)).getAttr(this.domNode, "selectedIndex"));
this.comboBox.setSelectedIndex$I(index);
break;
}
return true;
});

Clazz_newMeth(C$, 'populateList', function () {
this.$$O(this.domNode).empty();
var n = this.comboBox.getItemCount();
var iselect = this.comboBox.getSelectedIndex();
for (var i = 0; i < n; i++) {
var item = this.comboBox.getItemAt$I(i).toString();
var option = (I$[1]||$incl$(1)).createElement("option", this.id + "_" + (++(I$[3]||$incl$(3)).incr) );
(I$[1]||$incl$(1)).setAttr(option, "innerHTML", item);
if (i == iselect) (I$[1]||$incl$(1)).setAttr(option, "selected", "true");
this.domNode.appendChild(option);
}
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.comboBox = jc;
this.installListeners();
(I$[4]||$incl$(4)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "ComboBox.background", "ComboBox.foreground", "ComboBox.font");
});

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "ComboBox.";
});

Clazz_newMeth(C$, 'getDisabledColors$S', function (pp) {
this.inactiveBackground = (I$[5]||$incl$(5)).getColor$O(pp + "disabledBackground");
this.inactiveForeground = (I$[5]||$incl$(5)).getColor$O(pp + "disabledForeground");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
this.uninstallListeners();
});

Clazz_newMeth(C$, 'installListeners', function () {
this.comboBox.addItemListener$java_awt_event_ItemListener(this);
if (this.comboBox.getModel() != null ) {
this.comboBox.getModel().addListDataListener$javax_swing_event_ListDataListener(this);
}});

Clazz_newMeth(C$, 'uninstallListeners', function () {
this.comboBox.removeItemListener$java_awt_event_ItemListener(this);
if (this.comboBox.getModel() != null ) this.comboBox.getModel().removeListDataListener$javax_swing_event_ListDataListener(this);
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (evt) {
if ((I$[3]||$incl$(3)).debugging) System.out.println$S("JSComboBoxUI propertychange " + evt);
});

Clazz_newMeth(C$, 'contains$javax_swing_JComponent$I$I', function (c, x, y) {
return true;
});

Clazz_newMeth(C$, 'setPopupVisible$javax_swing_JComboBox$Z', function (c, v) {
});

Clazz_newMeth(C$, 'isPopupVisible$javax_swing_JComboBox', function (c) {
return false;
});

Clazz_newMeth(C$, 'isFocusTraversable$javax_swing_JComboBox', function (c) {
return true;
});

Clazz_newMeth(C$, 'intervalAdded$javax_swing_event_ListDataEvent', function (e) {
this.revalidate();
});

Clazz_newMeth(C$, 'intervalRemoved$javax_swing_event_ListDataEvent', function (e) {
this.revalidate();
});

Clazz_newMeth(C$, 'contentsChanged$javax_swing_event_ListDataEvent', function (e) {
this.revalidate();
});

Clazz_newMeth(C$, 'itemStateChanged$java_awt_event_ItemEvent', function (e) {
});
})();
//Created 2018-05-15 01:03:21
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.plaf.JSComponentUI','swingjs.api.js.DOMNode','java.awt.Toolkit','java.awt.Color','swingjs.JSUtil','java.awt.event.ComponentEvent','java.awt.event.WindowEvent','javax.swing.LookAndFeel','java.awt.Rectangle']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSFrameUI", null, 'swingjs.plaf.JSWindowUI', 'java.awt.peer.FramePeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.frame = null;
this.title = null;
this.state = 0;
this.resizeable = false;
this.closerWrap = null;
this.isModal = false;
this.zModal = 0;
this.bounds = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
(I$[1]||$incl$(1)).frameZ = (I$[1]||$incl$(1)).frameZ+(1000);
this.z = (I$[1]||$incl$(1)).frameZ;
this.isContainer = true;
this.defaultHeight = 500;
this.defaultWidth = 500;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.frameNode = this.newDOMObject$S$S$SA("div", this.id + "_frame", []);
(I$[2]||$incl$(2)).setStyles(this.frameNode, ["box-shadow", "0px 0px 10px gray", "box-sizing", "content-box"]);
this.setWindowClass$swingjs_api_js_DOMNode(this.frameNode);
var w = this.c.getWidth();
var h = this.c.getHeight();
if (w == 0) w = this.defaultWidth;
if (h == 0) h = this.defaultHeight;
(I$[2]||$incl$(2)).setSize(this.frameNode, w, h);
(I$[2]||$incl$(2)).setAttr(this.frameNode, "ui", this);
(I$[2]||$incl$(2)).setPositionAbsolute(this.frameNode, 0, 0);
this.setJ2sMouseHandler$swingjs_api_js_DOMNode(this.frameNode);
this.titleBarNode = this.newDOMObject$S$S$SA("div", this.id + "_titlebar", []);
(I$[2]||$incl$(2)).setPositionAbsolute(this.titleBarNode, 0, 0);
(I$[2]||$incl$(2)).setStyles(this.titleBarNode, ["background-color", "#E0E0E0", "height", "20px", "font-size", "14px", "font-family", "sans-serif", "font-weight", "bold"]);
this.titleNode = this.newDOMObject$S$S$SA("label", this.id + "_title", []);
(I$[2]||$incl$(2)).setPositionAbsolute(this.titleNode, 2, 4);
(I$[2]||$incl$(2)).setStyles(this.titleNode, ["height", "20px"]);
this.closerWrap = this.newDOMObject$S$S$SA("div", this.id + "_closerwrap", []);
(I$[2]||$incl$(2)).setPositionAbsolute(this.closerWrap, 0, 0);
(I$[2]||$incl$(2)).setStyles(this.closerWrap, ["text-align", "right"]);
this.closerNode = this.newDOMObject$S$S$SA("label", this.id + "_closer", ["innerHTML", "X"]);
(I$[2]||$incl$(2)).setStyles(this.closerNode, ["width", "20px", "height", "20px", "position", "absolute", "text-align", "center", "right", "0px"]);
(I$[2]||$incl$(2)).addJqueryHandledEvent(this, this.closerNode, "click mouseenter mouseout");
this.frameNode.appendChild(this.titleBarNode);
if (this.isModal) {
this.modalNode = (I$[2]||$incl$(2)).createElement("div", this.id + "_modaldiv");
var screen = (I$[3]||$incl$(3)).getDefaultToolkit().getScreenSize();
(I$[2]||$incl$(2)).setStyles(this.modalNode, ["background", P$.JSComponentUI.toCSSString$java_awt_Color(Clazz_new_((I$[4]||$incl$(4)).c$$I$I$I$I,[100, 100, 100, 100]))]);
(I$[2]||$incl$(2)).setPositionAbsolute(this.modalNode, 0, 0);
(I$[2]||$incl$(2)).setSize(this.modalNode, screen.width, screen.height);
}var fnode = this.frameNode;
var fGetFrameParent = null;
{
var me = this; fGetFrameParent = function(){me.notifyFrameMoved();return $(fnode).parent()}
}
(I$[5]||$incl$(5)).J2S._setDraggable(this.titleBarNode, fGetFrameParent);
this.titleBarNode.appendChild(this.titleNode);
this.titleBarNode.appendChild(this.closerWrap);
this.closerWrap.appendChild(this.closerNode);
var s = this.getInsets();
(I$[2]||$incl$(2)).setPositionAbsolute(this.frameNode, 0, 0);
(I$[2]||$incl$(2)).setAttrs(this.frameNode, ["width", "" + this.frame.getWidth() + s.left + s.right , "height", "" + this.frame.getHeight() + s.top + s.bottom ]);
this.containerNode = this.frameNode;
}var strColor = P$.JSComponentUI.toCSSString$java_awt_Color(this.c.getBackground());
(I$[2]||$incl$(2)).setStyles(this.domNode, ["background-color", strColor]);
(I$[2]||$incl$(2)).setStyles(this.frameNode, ["background", strColor]);
(I$[2]||$incl$(2)).setStyles(this.frameNode, ["color", P$.JSComponentUI.toCSSString$java_awt_Color(this.c.getForeground())]);
(I$[2]||$incl$(2)).setStyles(this.closerNode, ["background-color", strColor]);
this.setInnerComponentBounds$I$I(this.width, this.height);
this.setTitle$S(this.frame.getTitle());
return this.domNode;
});

Clazz_newMeth(C$, 'notifyFrameMoved', function () {
this.toFront();
(I$[3]||$incl$(3)).getEventQueue().postEvent$java_awt_AWTEvent(Clazz_new_((I$[6]||$incl$(6)).c$$java_awt_Component$I,[this.frame, 100]));
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O', function (target, eventType, jQueryEvent) {
var type = "";
if (target === this.closerNode ) {
{
type = jQueryEvent.type;
}
if (eventType == -1) {
if (type == "click") {
var tbar = this.titleBarNode;
{
J2S._setDraggable(tbar, false);
}
this.frame.dispatchEvent$java_awt_AWTEvent(Clazz_new_((I$[7]||$incl$(7)).c$$java_awt_Window$I,[this.frame, 201]));
return true;
} else if (type.equals$O("mouseout")) {
(I$[2]||$incl$(2)).setStyles(this.closerNode, ["background-color", P$.JSComponentUI.toCSSString$java_awt_Color(this.c.getBackground())]);
return true;
} else if (type.equals$O("mouseenter")) {
(I$[2]||$incl$(2)).setStyles(this.closerNode, ["background-color", "red"]);
return true;
}}}return false;
});

Clazz_newMeth(C$, 'closeFrame', function () {
(I$[5]||$incl$(5)).J2S._jsUnsetMouse(this.frameNode);
this.$$O(this.frameNode).remove();
this.$$O(this.outerNode).remove();
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I', function (width, height) {
(I$[2]||$incl$(2)).setStyles(this.closerWrap, ["text-align", "right", "width", width + "px"]);
(I$[2]||$incl$(2)).setStyles(this.titleNode, ["width", width + "px", "height", "20px"]);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.frame = this.c;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
(I$[8]||$incl$(8)).installColors$javax_swing_JComponent$S$S(jc, "Frame.background", "Frame.foreground");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
this.closeFrame();
});

Clazz_newMeth(C$, 'setTitle$S', function (title) {
this.title = title;
if (this.titleNode != null ) (I$[2]||$incl$(2)).setAttr(this.titleNode, "innerHTML", title);
});

Clazz_newMeth(C$, 'setMenuBar$O', function (mb) {
});

Clazz_newMeth(C$, 'setResizable$Z', function (resizeable) {
this.resizeable = resizeable;
});

Clazz_newMeth(C$, 'setState$I', function (state) {
this.state = state;
});

Clazz_newMeth(C$, 'getState', function () {
return this.state;
});

Clazz_newMeth(C$, 'setMaximizedBounds$java_awt_Rectangle', function (bounds) {
});

Clazz_newMeth(C$, 'setBoundsPrivate$I$I$I$I', function (x, y, width, height) {
this.bounds = Clazz_new_((I$[9]||$incl$(9)).c$$I$I$I$I,[x, y, width, height]);
});

Clazz_newMeth(C$, 'getBoundsPrivate', function () {
return this.bounds;
});

Clazz_newMeth(C$, 'getInsets', function () {
return this.jc.getFrameViewer().getInsets();
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent', function (e) {
if (e.getPropertyName().equals$O("resizable")) {
var resizable = (e.getNewValue()).booleanValue();
if (this.jc.getFrameViewer().isResizable() == resizable ) return;
this.jc.getFrameViewer().setResizable$Z(resizable);
}C$.superclazz.prototype.propertyChange$java_beans_PropertyChangeEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
if (this.isModal) {
if (b) {
this.$$O(this.body).after(this.modalNode);
var z = this.getZIndex$S(null) - 1;
(I$[2]||$incl$(2)).setStyles(this.modalNode, ["z-index", "" + z]);
}(I$[2]||$incl$(2)).setVisible(this.modalNode, b);
}});
})();
//Created 2018-05-15 01:03:22
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','swingjs.plaf.DefaultMenuLayout','javax.swing.LookAndFeel','java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSMenuBarUI", null, 'swingjs.plaf.JSPanelUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.menuBar = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isContainer = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.containerNode = this.domNode = this.newDOMObject$S$S$SA("div", this.id, []);
(I$[1]||$incl$(1)).setPositionAbsolute(this.domNode, 0, 0);
}return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.menuBar = jc;
if (this.menuBar.getLayout() == null  || Clazz_instanceOf(this.menuBar.getLayout(), "javax.swing.plaf.UIResource") ) {
this.menuBar.setLayout$java_awt_LayoutManager(Clazz_new_((I$[2]||$incl$(2)).c$$java_awt_Container$I,[this.menuBar, 2]));
}(I$[3]||$incl$(3)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "MenuBar.background", "MenuBar.foreground", "MenuBar.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'getContainerHeight', function () {
return this.height = 25;
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
var d = Clazz_new_((I$[4]||$incl$(4)).c$$I$I,[0, 25]);
return d;
});
})();
//Created 2018-05-15 01:03:23
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','java.awt.Dimension','javax.swing.LookAndFeel']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSMenuItemUI", null, 'swingjs.plaf.JSButtonUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.isMenuItem = true;
this.allowPaintedBackground = false;
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.createItem$S$swingjs_api_js_DOMNode("_item", null);
}(I$[1]||$incl$(1)).setVisible(this.domNode, this.jc.isVisible());
return this.domNode;
});

Clazz_newMeth(C$, 'getContainerHeight', function () {
return this.height = 25;
});

Clazz_newMeth(C$, 'getCSSAdjustment$Z', function (addingCSS) {
return Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[5, 0]);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.menuItem = jc;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
(I$[3]||$incl$(3)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "MenuItem.background", "MenuItem.foreground", "MenuItem.font");
});
})();
//Created 2018-05-15 01:03:23
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','java.awt.Component']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSMenuUI", null, 'swingjs.plaf.JSMenuItemUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.jm = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
this.isMenu = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.isMenuItem = !(this.jc).isTopLevelMenu();
if (this.isMenuItem) {
this.containerNode = this.domNode = this.createItem$S$swingjs_api_js_DOMNode("_menu", null);
} else {
this.domNode = this.createItem$S$swingjs_api_js_DOMNode("_item", null);
}}this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.domNode, this.c.getFont());
(I$[1]||$incl$(1)).setVisible(this.domNode, this.jc.isVisible());
return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.jm = jc;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
});

Clazz_newMeth(C$, 'getChildren', function () {
return (this.isMenuItem ? Clazz_array((I$[2]||$incl$(2)), -1, [this.jm.getPopupMenu()]) : this.jm.getComponents());
});

Clazz_newMeth(C$, 'getMaximumSize', function () {
return this.getPreferredSize();
});
})();
//Created 2018-05-15 01:03:23
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSPopupMenuSeparatorUI", null, 'swingjs.plaf.JSSeparatorUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.isMenuItem = true;
this.allowPaintedBackground = false;
}, 1);
})();
//Created 2018-05-15 01:03:24
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.jquery.JQueryUI','swingjs.JSUtil','javax.swing.LookAndFeel','swingjs.api.js.DOMNode']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSPopupMenuUI", null, 'swingjs.plaf.JSPanelUI');
C$.j2sSwingMenu = null;

C$.$clinit$ = function() {Clazz_load(C$, 1);
{
var jqueryui = Clazz_getClass((I$[1]||$incl$(1)));
}
;
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.menu = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
Clazz_super_(C$, this,1);
if (C$.j2sSwingMenu == null ) {
(I$[2]||$incl$(2)).loadStaticResource$S("swingjs/jquery/j2sMenu.js");
C$.j2sSwingMenu = (I$[2]||$incl$(2)).J2S._getSwing();
}this.isContainer = true;
this.isMenuItem = true;
this.setDoc();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.containerNode = this.newDOMObject$S$S$SA("ul", this.id, []);
}return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
(I$[3]||$incl$(3)).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "PopupMenu.background", "PopupMenu.foreground", "PopupMenu.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent', function (jc) {
});

Clazz_newMeth(C$, 'getPopup', function () {
return null;
});

Clazz_newMeth(C$, 'setVisible$Z', function (b) {
if (this.menu == null ) {
this.menu = this.jc;
C$.j2sSwingMenu.setMenu(this.menu);
}if (b) {
this.jc.addNotify();
this.getOuterNode();
var x = 0;
var y = 0;
{
x = this.menu.desiredLocationX;
y = this.menu.desiredLocationY;
}
C$.j2sSwingMenu.showMenu(this.menu, x, y);
} else {
C$.j2sSwingMenu.hideMenu(this.menu);
}});

Clazz_newMeth(C$, 'dispose', function () {
(I$[4]||$incl$(4)).remove(this.domNode);
(I$[4]||$incl$(4)).remove(this.outerNode);
C$.j2sSwingMenu.disposeMenu(this.menu);
});

Clazz_newMeth(C$, 'getPreferredSize', function () {
return null;
});
})();
//Created 2018-05-15 01:03:24
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSRadioButtonMenuItemUI", null, 'swingjs.plaf.JSRadioButtonUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'c$', function () {
C$.superclazz.c$.apply(this, []);
C$.$init$.apply(this);
this.isMenuItem = true;
this.allowPaintedBackground = false;
}, 1);

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "RadioButtonMenuItem.";
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent', function (jc) {
this.menuItem = jc;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
});
})();
//Created 2018-05-15 01:03:24
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.api.js.DOMNode','java.awt.Dimension']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSRadioButtonUI", null, 'swingjs.plaf.JSButtonUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
return this.updateButton$S("radio");
});

Clazz_newMeth(C$, 'getPropertyPrefix', function () {
return "RadioButton.";
});

Clazz_newMeth(C$, 'updateButton$S', function (myType) {
var b = this.jc;
var isNew = false;
var doAll = false;
if (this.domNode == null ) {
doAll = true;
var name = this.id;
this.domBtn = this.$enableNode = this.newDOMObject$S$S$SA("input", this.id, ["type", myType, "name", name]);
this.iconNode = this.newDOMObject$S$S$SA("span", this.id + "_icon", []);
this.textNode = this.newDOMObject$S$S$SA("label", this.id + "l1", []);
this.label = this.newDOMObject$S$S$SA("label", this.id + "l2", ["htmlFor", this.id]);
this.setDataComponent$swingjs_api_js_DOMNode(this.label);
this.setDataComponent$swingjs_api_js_DOMNode(this.iconNode);
this.setDataComponent$swingjs_api_js_DOMNode(this.domBtn);
this.setDataComponent$swingjs_api_js_DOMNode(this.textNode);
this.setEnabled$Z(this.c.isEnabled());
if (this.isMenuItem) {
this.domNode = this.createItem$S$swingjs_api_js_DOMNode("_item", this.label);
} else {
this.domNode = this.newDOMObject$S$S$SA("div", this.id + "_0", []);
this.centeringNode = this.newDOMObject$S$S$SA("div", this.id + "_ctr", []);
this.centeringNode.appendChild(this.label);
this.domNode.appendChild(this.centeringNode);
}}if (b.isSelected() || isNew ) (I$[1]||$incl$(1)).setAttr(this.domBtn, "checked", "true");
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.textNode, this.c.getFont());
this.setIconAndText$S$javax_swing_ImageIcon$I$S("radio", this.button.getIcon(), this.button.getIconTextGap(), this.button.getText());
(I$[1]||$incl$(1)).setStyles(this.centeringNode, ["position", null]);
(I$[1]||$incl$(1)).setStyles(this.iconNode, ["position", null]);
(I$[1]||$incl$(1)).setStyles(this.domBtn, ["position", null]);
(I$[1]||$incl$(1)).setStyles(this.textNode, ["position", null]);
var dobj = null;
if (!this.isMenuItem) {
var wBtn = this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.domBtn, false, false).width - 1;
var wIcon = Math.max(0, this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.iconNode, false, false).width - 1);
dobj = this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.wrap$S$S$swingjs_api_js_DOMNodeA("div", "", [this.iconNode, this.domBtn, this.textNode]), false, false);
(I$[1]||$incl$(1)).setStyles(this.textNode, ["left", wBtn + wIcon + "px" ]);
P$.JSComponentUI.vCenter$swingjs_api_js_DOMNode$I(this.domBtn, -75);
P$.JSComponentUI.vCenter$swingjs_api_js_DOMNode$I(this.iconNode, -15);
P$.JSComponentUI.vCenter$swingjs_api_js_DOMNode$I(this.textNode, -50);
(I$[1]||$incl$(1)).setPositionAbsolute(this.domBtn, -2147483648, 0);
(I$[1]||$incl$(1)).setPositionAbsolute(this.iconNode, -2147483648, 0);
(I$[1]||$incl$(1)).setPositionAbsolute(this.textNode, -2147483648, 0);
(I$[1]||$incl$(1)).setPositionAbsolute(this.label, -2147483648, 0);
}this.label.appendChild(this.iconNode);
this.label.appendChild(this.domBtn);
this.label.appendChild(this.textNode);
if (doAll && !this.isMenuItem ) (I$[1]||$incl$(1)).setPositionAbsolute(this.domNode, -2147483648, 0);
if (!this.isMenuItem) {
(I$[1]||$incl$(1)).setSize(this.label, dobj.width, dobj.height);
(I$[1]||$incl$(1)).setSize(this.centeringNode, dobj.width, dobj.height);
}return this.domNode;
});

Clazz_newMeth(C$, 'setHTMLSize$swingjs_api_js_DOMNode$Z', function (obj, addCSS) {
(I$[1]||$incl$(1)).setStyles(this.label, ["position", null, "width", null, "height", null]);
(I$[1]||$incl$(1)).setStyles(this.domBtn, ["position", null, "width", null, "height", null]);
(I$[1]||$incl$(1)).setStyles(this.textNode, ["position", null, "width", null, "height", null]);
var d;
if (this.isMenuItem) {
d = Clazz_new_((I$[2]||$incl$(2)).c$$I$I,[20, 20]);
} else {
d = this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(obj, addCSS, false);
(I$[1]||$incl$(1)).setPositionAbsolute(this.domBtn, -2147483648, 0);
(I$[1]||$incl$(1)).setPositionAbsolute(this.textNode, -2147483648, 0);
(I$[1]||$incl$(1)).setPositionAbsolute(this.label, -2147483648, 0);
if (this.centeringNode != null ) (I$[1]||$incl$(1)).setPositionAbsolute(this.centeringNode, -2147483648, 0);
(I$[1]||$incl$(1)).setStyles(this.label, ["width", d.width + "px", "height", d.height + "px"]);
}return d;
});

Clazz_newMeth(C$, 'handleDOMEvent$O', function (e) {
(this.c).doClick$I(0);
});

Clazz_newMeth(C$, 'getDefaultIconTextGap', function () {
return 4;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:24
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
var C$=Clazz_newClass(P$, "JSSeparatorUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init$', function () {
}, 1);

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.domNode = this.newDOMObject$S$S$SA("label", this.id, []);
}return this.domNode;
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:25
(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[['swingjs.JSUtil','swingjs.api.js.DOMNode','java.awt.Toolkit','swingjs.plaf.JSComponentUI','java.awt.Insets']],$incl$=function(i){return I$[i]=Clazz_load(I$[0][i-1])};
var C$=Clazz_newClass(P$, "JSWindowUI", null, 'swingjs.plaf.JSComponentUI', 'java.awt.peer.WindowPeer');

C$.$clinit$ = function() {Clazz_load(C$, 1);
}

Clazz_newMeth(C$, '$init0$', function () {
var c;if((c = C$.superclazz) && (c = c.$init0$))c.apply(this);
this.frameNode = null;
this.titleBarNode = null;
this.titleNode = null;
this.closerNode = null;
this.layerNode = null;
this.w = null;
this.z = 0;
this.defaultWidth = 0;
this.defaultHeight = 0;
this.isFrame = false;
this.isDialog = false;
this.window = null;
this.font = null;
this.modalNode = null;
this.graphics = null;
}, 1);

Clazz_newMeth(C$, '$init$', function () {
this.defaultWidth = 400;
this.defaultHeight = 400;
}, 1);

Clazz_newMeth(C$, 'setFrame$java_awt_Window$Z', function (target, isFrame) {
this.window = target;
this.w = this.window;
this.isFrame = isFrame;
this.isContainer = this.isWindow = true;
var jc = this;
var viewer = (I$[1]||$incl$(1)).getAppletViewer();
this.applet = viewer.html5Applet;
this.graphics = jc.getGraphics();
return this;
});

Clazz_newMeth(C$, 'updateDOMNode', function () {
if (this.domNode == null ) {
this.containerNode = this.domNode = this.newDOMObject$S$S$SA("div", this.id, []);
this.setWindowClass$swingjs_api_js_DOMNode(this.domNode);
}return this.domNode;
});

Clazz_newMeth(C$, 'setWindowClass$swingjs_api_js_DOMNode', function (windowNode) {
(I$[2]||$incl$(2)).setZ(windowNode, this.z);
this.$$O(windowNode).addClass("swingjs-window");
});

Clazz_newMeth(C$, 'getToolkit', function () {
return (I$[3]||$incl$(3)).getDefaultToolkit();
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font', function (font) {
if (!font.equals$O(this.font)) this.window.setFont$java_awt_Font(this.font = font);
return this.graphics.getFontMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'toFront', function () {
if ((I$[4]||$incl$(4)).debugging) System.out.println$S("window to front for " + this.id);
this.z = (I$[1]||$incl$(1)).J2S._setWindowZIndex(this.domNode, 2147483647);
});

Clazz_newMeth(C$, 'toBack', function () {
System.out.println$S("window to back for " + this.id);
this.z = (I$[1]||$incl$(1)).J2S._setWindowZIndex(this.domNode, -2147483648);
});

Clazz_newMeth(C$, 'updateAlwaysOnTopState', function () {
});

Clazz_newMeth(C$, 'updateFocusableWindowState', function () {
});

Clazz_newMeth(C$, 'requestWindowFocus', function () {
return false;
});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_Dialog$Z', function (blocker, blocked) {
});

Clazz_newMeth(C$, 'updateMinimumSize', function () {
});

Clazz_newMeth(C$, 'updateIconImages', function () {
});

Clazz_newMeth(C$, 'setOpacity$F', function (opacity) {
});

Clazz_newMeth(C$, 'setOpaque$Z', function (isOpaque) {
});

Clazz_newMeth(C$, 'updateWindow$java_awt_image_BufferedImage', function (backBuffer) {
});

Clazz_newMeth(C$, 'repositionSecurityWarning', function () {
});

Clazz_newMeth(C$, 'dispose', function () {
(I$[1]||$incl$(1)).J2S._jsUnsetMouse(this.domNode);
(I$[2]||$incl$(2)).remove(this.outerNode);
if (this.modalNode != null ) (I$[2]||$incl$(2)).remove(this.modalNode);
});

Clazz_newMeth(C$, 'getInsets', function () {
return Clazz_new_((I$[5]||$incl$(5)).c$$I$I$I$I,[0, 0, 0, 0]);
});

Clazz_newMeth(C$);
})();
//Created 2018-05-15 01:03:28
})(Clazz,Clazz.array,Clazz.assert,Clazz.clone,Clazz.exceptionOf,Clazz.forName,Clazz.getClass,Clazz.instanceOf,Clazz.load,Clazz.new_,Clazz.newClass,Clazz.newEnumConst,Clazz.newInstance,Clazz.newInterface,Clazz.newMeth,Clazz.newPackage,Clazz.super_);
